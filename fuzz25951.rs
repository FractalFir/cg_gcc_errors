#![recursion_limit = "1024"]
#![feature(custom_mir, core_intrinsics, lazy_get)]
#![allow(unused_parens, unused_assignments, overflowing_literals)]
extern crate core;
use core::intrinsics::mir::*;
use std::fmt::Debug;

#[inline(never)]
fn dump_var(
    f: usize,
    var0: usize,
    val0: impl Debug,
    var1: usize,
    val1: impl Debug,
    var2: usize,
    val2: impl Debug,
    var3: usize,
    val3: impl Debug,
) {
    println!(
        "fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}"
    );
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(
    mut _1: bool,
    mut _2: u64,
    mut _3: isize,
    mut _4: i8,
    mut _5: i16,
    mut _6: i32,
    mut _7: i64,
    mut _8: u128,
    mut _9: usize,
    mut _10: u8,
    mut _11: u16,
    mut _12: u32,
) -> isize {
    mir! {
    type RET = isize;
    let _13: *const (&'static mut i32, isize, bool, i32);
    let _14: u128;
    let _15: u32;
    let _16: isize;
    let _17: usize;
    let _18: &'static [i8; 5];
    let _19: char;
    let _20: f32;
    let _21: *const (i32, isize);
    let _22: [i16; 1];
    let _23: (&'static mut i32, isize, bool, i32);
    let _24: i16;
    let _25: ();
    let _26: ();
    {
    _1 = true;
    _11 = !5612_u16;
    _2 = 1908342817667397374_u64 >> _11;
    _6 = -828822627_i32;
    _5 = (-16315_i16) >> _2;
    _6 = !(-352345247_i32);
    _14 = 74125838553624970798551549306790062083_u128 - 167654228481222258092222726376556279822_u128;
    _1 = false & false;
    _10 = 751120587_u32 as u8;
    _6 = !(-1665458549_i32);
    Goto(bb1)
    }
    bb1 = {
    _12 = 687071697_u32;
    RET = !(-9223372036854775808_isize);
    _7 = (-2182030363411943960_i64) * 6643411214912548461_i64;
    _1 = _10 <= _10;
    _3 = RET | RET;
    _12 = !1655620051_u32;
    _2 = 16049865800947730943_u64;
    _16 = _3 >> _5;
    _10 = _2 as u8;
    _9 = 7_usize;
    RET = _3 * _16;
    _4 = (-49_i8);
    _12 = 1236139815_u32 + 3773149231_u32;
    _8 = _6 as u128;
    Call(_19 = fn1(_9, _10, _11, _4), ReturnTo(bb2), UnwindUnreachable())
    }
    bb2 = {
    _11 = 21722_u16;
    _9 = 3514078206906798521_usize;
    _14 = _8 + _8;
    _3 = RET;
    _1 = !false;
    _2 = _7 as u64;
    _7 = -(-8422259771100249773_i64);
    _17 = _9 - _9;
    _1 = _9 >= _17;
    _15 = _10 as u32;
    _20 = _4 as f32;
    Goto(bb3)
    }
    bb3 = {
    RET = _1 as isize;
    _2 = !10090026221257086518_u64;
    _20 = _11 as f32;
    _15 = !_12;
    RET = _16 * _16;
    _12 = !_15;
    _10 = (-32354833958346523612892308155733324_i128) as u8;
    _7 = (-8938135305174862556_i64) * (-4681597648719054171_i64);
    _10 = 144_u8 << _12;
    _14 = _4 as u128;
    _16 = !_3;
    _4 = (-103_i8);
    match _4 {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    5 => bb9,
    6 => bb10,
    340282366920938463463374607431768211353 => bb12,
    _ => bb11
    }
    }
    bb4 = {
    _11 = 21722_u16;
    _9 = 3514078206906798521_usize;
    _14 = _8 + _8;
    _3 = RET;
    _1 = !false;
    _2 = _7 as u64;
    _7 = -(-8422259771100249773_i64);
    _17 = _9 - _9;
    _1 = _9 >= _17;
    _15 = _10 as u32;
    _20 = _4 as f32;
    Goto(bb3)
    }
    bb5 = {
    _12 = 687071697_u32;
    RET = !(-9223372036854775808_isize);
    _7 = (-2182030363411943960_i64) * 6643411214912548461_i64;
    _1 = _10 <= _10;
    _3 = RET | RET;
    _12 = !1655620051_u32;
    _2 = 16049865800947730943_u64;
    _16 = _3 >> _5;
    _10 = _2 as u8;
    _9 = 7_usize;
    RET = _3 * _16;
    _4 = (-49_i8);
    _12 = 1236139815_u32 + 3773149231_u32;
    _8 = _6 as u128;
    Call(_19 = fn1(_9, _10, _11, _4), ReturnTo(bb2), UnwindUnreachable())
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    Return()
    }
    bb11 = {
    Return()
    }
    bb12 = {
    _7 = -2425430469540941223_i64;
    _12 = _15;
    _5 = 22751_i16 & (-31925_i16);
    _5 = -26205_i16;
    _22 = [_5];
    _3 = RET >> RET;
    _8 = _4 as u128;
    _9 = _4 as usize;
    _10 = 88_u8;
    _20 = _5 as f32;
    _19 = '\u{a3493}';
    Call(_12 = core::intrinsics::bswap(_15), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    _1 = false;
    _9 = _11 as usize;
    _6 = -1394900388_i32;
    _12 = _15;
    _22 = [_5];
    _23.1 = _20 as isize;
    _4 = 71_i8 ^ (-55_i8);
    _14 = _8;
    _1 = false;
    _4 = (-95_i8) | 2_i8;
    _3 = -RET;
    _9 = _17 >> RET;
    _23.2 = _1 & _1;
    _23.2 = _3 > _23.1;
    _20 = _4 as f32;
    _16 = _3 & RET;
    RET = _16 + _3;
    _24 = _5;
    _2 = 16910612719286213195_u64 + 1632113478104984790_u64;
    _7 = 1312307252411293419_i64;
    Goto(bb14)
    }
    bb14 = {
    Call(_25 = dump_var(0_usize, 24_usize, Move(_24), 7_usize, Move(_7), 17_usize, Move(_17), 11_usize, Move(_11)), ReturnTo(bb15), UnwindUnreachable())
    }
    bb15 = {
    Call(_25 = dump_var(0_usize, 22_usize, Move(_22), 4_usize, Move(_4), 15_usize, Move(_15), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
    }
    bb16 = {
    Call(_25 = dump_var(0_usize, 8_usize, Move(_8), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
    }
    bb17 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: usize, mut _2: u8, mut _3: u16, mut _4: i8) -> char {
    mir! {
    type RET = char;
    let _5: bool;
    let _6: f32;
    let _7: char;
    let _8: f64;
    let _9: &'static mut (u32, &'static mut i32);
    let _10: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _11: i128;
    let _12: &'static [i8; 5];
    let _13: *const (i32, isize);
    let _14: &'static *mut isize;
    let _15: &'static [i8; 2];
    let _16: &'static [i8; 5];
    let _17: char;
    let _18: isize;
    let _19: bool;
    let _20: Adt53;
    let _21: *mut [i128; 1];
    let _22: &'static u16;
    let _23: [i32; 7];
    let _24: &'static mut i32;
    let _25: u16;
    let _26: i16;
    let _27: i32;
    let _28: [usize; 4];
    let _29: char;
    let _30: isize;
    let _31: char;
    let _32: u16;
    let _33: (u32, &'static mut i32);
    let _34: bool;
    let _35: i8;
    let _36: f64;
    let _37: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _38: *const (u32, &'static mut i32);
    let _39: [u64; 1];
    let _40: char;
    let _41: *const [char; 1];
    let _42: i16;
    let _43: f64;
    let _44: ((i32, u128, *const u128, [i64; 8]), *const u128, ((f32, &'static i64), usize, [usize; 6], &'static mut i32));
    let _45: *const [char; 1];
    let _46: &'static [i8; 5];
    let _47: i16;
    let _48: f32;
    let _49: (i32, u128, *const u128, [i64; 8]);
    let _50: bool;
    let _51: isize;
    let _52: bool;
    let _53: [i16; 7];
    let _54: ((f32, &'static i64), i128, i8);
    let _55: f64;
    let _56: (i32, u128, *const u128, [i64; 8]);
    let _57: &'static *mut isize;
    let _58: f64;
    let _59: i32;
    let _60: *const u128;
    let _61: f32;
    let _62: ((i32, u128, *const u128, [i64; 8]), *const u128, ((f32, &'static i64), usize, [usize; 6], &'static mut i32));
    let _63: &'static mut (u32, &'static mut i32);
    let _64: i32;
    let _65: &'static i64;
    let _66: *mut [i128; 1];
    let _67: ([usize; 4], i32);
    let _68: &'static u16;
    let _69: (char, Adt23);
    let _70: &'static mut [i128; 6];
    let _71: isize;
    let _72: u128;
    let _73: (i64, f64, u64, f64);
    let _74: f32;
    let _75: f32;
    let _76: char;
    let _77: bool;
    let _78: *mut isize;
    let _79: char;
    let _80: Adt23;
    let _81: *const u128;
    let _82: Adt23;
    let _83: bool;
    let _84: f64;
    let _85: &'static mut [i128; 6];
    let _86: f32;
    let _87: *const i16;
    let _88: f64;
    let _89: [i16; 1];
    let _90: &'static mut i32;
    let _91: i32;
    let _92: &'static i64;
    let _93: u16;
    let _94: i128;
    let _95: f64;
    let _96: (i64, f64, u64, f64);
    let _97: char;
    let _98: &'static [i8; 5];
    let _99: ();
    let _100: ();
    {
    _2 = !47_u8;
    _3 = !12143_u16;
    _1 = 6_usize * 7_usize;
    _4 = (-17_i8) << _1;
    _4 = 108_i8 * (-20_i8);
    _1 = 16289018928111036221_usize - 4_usize;
    _1 = 9447310193094640953_usize;
    _2 = 171_u8 & 195_u8;
    _5 = false ^ false;
    _3 = 62444_u16;
    _2 = 85_u8 << _1;
    _5 = !true;
    _7 = '\u{c1a4b}';
    _5 = !false;
    RET = _7;
    _3 = 19360_u16 - 35173_u16;
    _7 = RET;
    match _1 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    9447310193094640953 => bb7,
    _ => bb6
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _4 = 15_i8 ^ 66_i8;
    _4 = 1829806982_u32 as i8;
    _6 = (-1833384326078571852_i64) as f32;
    _3 = 39538_u16;
    _6 = 3215072573_u32 as f32;
    _6 = _1 as f32;
    RET = _7;
    _10.2 = [_1,_1,_1,_1,_1,_1];
    _7 = RET;
    _6 = 1843394791_u32 as f32;
    _10.0.0 = -_6;
    Goto(bb8)
    }
    bb8 = {
    _11 = 31956153068012458353448586993352025277_u128 as i128;
    RET = _7;
    _3 = 34597_u16;
    _1 = 17784318555397460533_usize - 6_usize;
    _2 = 116_isize as u8;
    _8 = _11 as f64;
    _10.1 = _1 << _1;
    _2 = _4 as u8;
    _8 = _10.1 as f64;
    _8 = 21608_i16 as f64;
    _4 = !95_i8;
    RET = _7;
    _7 = RET;
    _10.1 = _6 as usize;
    _10.0.0 = _6 - _6;
    _2 = 16_u8 + 62_u8;
    _8 = 9223372036854775807_isize as f64;
    _10.0.0 = 5198122497061909002_u64 as f32;
    Call(_7 = fn2(_10.0.0, _5), ReturnTo(bb9), UnwindUnreachable())
    }
    bb9 = {
    _7 = RET;
    _7 = RET;
    _10.0.0 = _6;
    _10.1 = _1;
    _10.2 = [_1,_10.1,_1,_1,_1,_1];
    _10.0.0 = 1060769582_i32 as f32;
    _10.0.0 = _6 + _6;
    _10.0.0 = _6 + _6;
    _10.0.0 = _6;
    _5 = _2 == _2;
    _10.1 = !_1;
    _7 = RET;
    _10.2 = [_1,_1,_1,_10.1,_1,_1];
    _3 = !58189_u16;
    _8 = (-2448749630625357786_i64) as f64;
    _11 = 55989351730978238003781119330206515750_i128 - (-162145162423236196577302591264473157021_i128);
    _10.0.0 = _6 + _6;
    RET = _7;
    RET = _7;
    _10.0.0 = _6 * _6;
    _2 = !131_u8;
    _1 = !_10.1;
    _19 = _3 > _3;
    Goto(bb10)
    }
    bb10 = {
    _3 = 41024_u16 ^ 37551_u16;
    Goto(bb11)
    }
    bb11 = {
    _7 = RET;
    _3 = 36512_u16;
    _18 = 29_isize * 2_isize;
    _4 = (-82_i8) >> _11;
    _7 = RET;
    _17 = _7;
    _17 = _7;
    _19 = RET >= RET;
    _11 = 17312427255813334175819394042248650875_i128;
    _3 = 55228_u16 << _4;
    _2 = 69_u8;
    _4 = 67_i8 + 78_i8;
    _10.2 = [_1,_1,_10.1,_10.1,_10.1,_10.1];
    _10.1 = _1 ^ _1;
    _22 = &_3;
    _5 = _19;
    _23 = [(-1279743959_i32),(-891690321_i32),(-579011310_i32),960552693_i32,(-370872751_i32),2121022701_i32,161528642_i32];
    _4 = 71_i8;
    _2 = 215_u8 >> (*_22);
    _10.2 = [_10.1,_10.1,_10.1,_1,_10.1,_10.1];
    _10.1 = _1 ^ _1;
    _2 = !135_u8;
    _17 = _7;
    _5 = !_19;
    Goto(bb12)
    }
    bb12 = {
    RET = _17;
    RET = _7;
    _4 = 74_i8 + 44_i8;
    _1 = _10.1 - _10.1;
    _10.2 = [_10.1,_1,_1,_1,_10.1,_1];
    _5 = _19;
    _8 = _4 as f64;
    _1 = 3793331356_u32 as usize;
    _25 = (*_22) << (*_22);
    _5 = (*_22) <= (*_22);
    _18 = _8 as isize;
    _10.1 = _1 - _1;
    _22 = &_25;
    _11 = (-120171667538356341748665149004188450633_i128);
    _4 = RET as i8;
    _19 = !_5;
    _10.1 = _1 | _1;
    _7 = _17;
    _26 = 7807_i16 ^ (-9601_i16);
    _8 = _18 as f64;
    Goto(bb13)
    }
    bb13 = {
    _10.0.0 = _6;
    _3 = (*_22) ^ (*_22);
    _23 = [1351622597_i32,(-2055397065_i32),2003644104_i32,(-569725393_i32),780455974_i32,(-1951442379_i32),479481936_i32];
    _22 = &_3;
    _28 = [_1,_1,_10.1,_10.1];
    _4 = 49_i8 & 6_i8;
    _10.1 = !_1;
    _25 = (*_22) & (*_22);
    _3 = _25 & _25;
    _30 = _18 >> _3;
    _5 = _3 == _3;
    _23 = [1011630803_i32,1956027272_i32,(-1498264510_i32),(-119674016_i32),244955014_i32,1467165508_i32,(-405676305_i32)];
    _4 = 101_i8 & 95_i8;
    RET = _17;
    _11 = (-79799474494989596501660843196510044029_i128) ^ (-101688224414031616096021048815596877730_i128);
    Goto(bb14)
    }
    bb14 = {
    _29 = _17;
    _28 = [_10.1,_1,_10.1,_10.1];
    _29 = _7;
    _19 = _5 >= _5;
    _10.0.0 = _6;
    _25 = _4 as u16;
    RET = _7;
    _25 = _3 | _3;
    _31 = RET;
    _17 = RET;
    _25 = _3 | _3;
    _27 = !1643100561_i32;
    Goto(bb15)
    }
    bb15 = {
    _17 = _7;
    _10.0.0 = 9561679763581616418_u64 as f32;
    _10.3 = &mut _27;
    _2 = 20_u8;
    _25 = _3;
    _6 = -_10.0.0;
    _23 = [(-1490037254_i32),(-24477305_i32),2093535506_i32,(-1237311401_i32),(-1213882227_i32),218645659_i32,(-1539738049_i32)];
    _8 = 326283436_u32 as f64;
    _2 = !144_u8;
    _33 = (1948341376_u32, Move(_10.3));
    _22 = &_25;
    _34 = _3 <= (*_22);
    _5 = (*_22) < (*_22);
    _1 = _10.1 - _10.1;
    _29 = _7;
    _11 = _26 as i128;
    _30 = _4 as isize;
    _2 = 72_u8 & 75_u8;
    _11 = (-159528423582309103536064404527622084044_i128) >> (*_22);
    _32 = _11 as u16;
    _22 = &_3;
    _28 = [_1,_1,_1,_1];
    Goto(bb16)
    }
    bb16 = {
    _6 = _10.0.0 + _10.0.0;
    _25 = _32 - (*_22);
    _31 = _29;
    _18 = 1022628232_i32 as isize;
    _33.0 = 939229989_u32;
    _34 = (*_22) <= (*_22);
    _31 = _7;
    _19 = !_34;
    _19 = _5 ^ _5;
    _26 = 1092_i16 - (-8375_i16);
    RET = _29;
    match _33.0 {
    0 => bb17,
    1 => bb18,
    2 => bb19,
    3 => bb20,
    939229989 => bb22,
    _ => bb21
    }
    }
    bb17 = {
    _4 = 15_i8 ^ 66_i8;
    _4 = 1829806982_u32 as i8;
    _6 = (-1833384326078571852_i64) as f32;
    _3 = 39538_u16;
    _6 = 3215072573_u32 as f32;
    _6 = _1 as f32;
    RET = _7;
    _10.2 = [_1,_1,_1,_1,_1,_1];
    _7 = RET;
    _6 = 1843394791_u32 as f32;
    _10.0.0 = -_6;
    Goto(bb8)
    }
    bb18 = {
    _3 = 41024_u16 ^ 37551_u16;
    Goto(bb11)
    }
    bb19 = {
    _10.0.0 = _6;
    _3 = (*_22) ^ (*_22);
    _23 = [1351622597_i32,(-2055397065_i32),2003644104_i32,(-569725393_i32),780455974_i32,(-1951442379_i32),479481936_i32];
    _22 = &_3;
    _28 = [_1,_1,_10.1,_10.1];
    _4 = 49_i8 & 6_i8;
    _10.1 = !_1;
    _25 = (*_22) & (*_22);
    _3 = _25 & _25;
    _30 = _18 >> _3;
    _5 = _3 == _3;
    _23 = [1011630803_i32,1956027272_i32,(-1498264510_i32),(-119674016_i32),244955014_i32,1467165508_i32,(-405676305_i32)];
    _4 = 101_i8 & 95_i8;
    RET = _17;
    _11 = (-79799474494989596501660843196510044029_i128) ^ (-101688224414031616096021048815596877730_i128);
    Goto(bb14)
    }
    bb20 = {
    _7 = RET;
    _7 = RET;
    _10.0.0 = _6;
    _10.1 = _1;
    _10.2 = [_1,_10.1,_1,_1,_1,_1];
    _10.0.0 = 1060769582_i32 as f32;
    _10.0.0 = _6 + _6;
    _10.0.0 = _6 + _6;
    _10.0.0 = _6;
    _5 = _2 == _2;
    _10.1 = !_1;
    _7 = RET;
    _10.2 = [_1,_1,_1,_10.1,_1,_1];
    _3 = !58189_u16;
    _8 = (-2448749630625357786_i64) as f64;
    _11 = 55989351730978238003781119330206515750_i128 - (-162145162423236196577302591264473157021_i128);
    _10.0.0 = _6 + _6;
    RET = _7;
    RET = _7;
    _10.0.0 = _6 * _6;
    _2 = !131_u8;
    _1 = !_10.1;
    _19 = _3 > _3;
    Goto(bb10)
    }
    bb21 = {
    Return()
    }
    bb22 = {
    _18 = _30 * _30;
    _4 = !(-39_i8);
    _29 = _7;
    _30 = !_18;
    _36 = -_8;
    _33.0 = 2275385595_u32 - 2803589341_u32;
    _29 = _7;
    _37.0 = [_26];
    _22 = &_32;
    _29 = _17;
    _1 = _10.1;
    _10.0.0 = _6 + _6;
    _10.0.0 = _6 * _6;
    _30 = _4 as isize;
    _36 = _8 * _8;
    _40 = RET;
    _30 = -_18;
    _6 = _10.0.0 + _10.0.0;
    Goto(bb23)
    }
    bb23 = {
    _3 = _33.0 as u16;
    _23 = [(-1020485223_i32),(-1556460674_i32),(-1321312896_i32),777284357_i32,253173103_i32,167423830_i32,(-694709266_i32)];
    _33.0 = 1653599519_u32 & 3201521453_u32;
    _36 = _6 as f64;
    _31 = _40;
    _4 = 86_i8 - 17_i8;
    _30 = _18 >> (*_22);
    _3 = (*_22);
    _37.1.1 = _1 as i128;
    _10.2 = [_1,_10.1,_10.1,_10.1,_10.1,_1];
    _30 = -_18;
    _32 = _3 - _25;
    _35 = _4 << _3;
    _28 = [_10.1,_1,_10.1,_1];
    _7 = _40;
    _18 = 6140934105511228323_u64 as isize;
    _22 = &_3;
    _39 = [18185125064309606636_u64];
    Call(_1 = core::intrinsics::bswap(_10.1), ReturnTo(bb24), UnwindUnreachable())
    }
    bb24 = {
    _39 = [5194310336032311889_u64];
    _29 = RET;
    _3 = !_25;
    _44.2.0.0 = _10.0.0 * _6;
    RET = _17;
    _44.0.3 = [(-7059437858979018569_i64),8156982294624484985_i64,(-2546288678102421195_i64),(-5436417940014041977_i64),1615161805954115954_i64,(-2096002605686241698_i64),(-2721715855548181051_i64),4828599036798784341_i64];
    _42 = 125208012061662585526998374350460091676_u128 as i16;
    _36 = _35 as f64;
    _11 = _37.1.1 & _37.1.1;
    RET = _7;
    _44.0.2 = core::ptr::addr_of!(_44.0.1);
    _44.2.0.0 = _10.0.0 + _10.0.0;
    _42 = _26 >> _2;
    _22 = &_32;
    _1 = _10.1;
    _33.0 = 3859534036_u32;
    _6 = -_44.2.0.0;
    _33.0 = 4165459450_u32 * 2725802162_u32;
    _37.1.2 = _35 | _35;
    _30 = _18 >> _25;
    _6 = _10.0.0 * _44.2.0.0;
    _43 = -_36;
    _33.0 = !905443958_u32;
    _37.2 = core::ptr::addr_of_mut!(_30);
    _19 = _34;
    _5 = _34;
    _43 = -_36;
    Goto(bb25)
    }
    bb25 = {
    _19 = _5;
    _34 = !_5;
    _3 = !(*_22);
    _43 = _36;
    _44.0.1 = 302423172070430701869907672293580267309_u128;
    _1 = _33.0 as usize;
    Goto(bb26)
    }
    bb26 = {
    _28 = [_1,_10.1,_1,_1];
    _44.1 = core::ptr::addr_of!(_44.0.1);
    _44.2.0.0 = _2 as f32;
    _6 = _30 as f32;
    _10.0.0 = _37.1.1 as f32;
    _44.0.0 = -463620856_i32;
    _39 = [8418348696872801939_u64];
    _44.0.1 = !301736701979824143820963532217133736261_u128;
    _49.1 = _44.0.0 as u128;
    _33.1 = &mut _44.0.0;
    _30 = _18 >> _3;
    _48 = -_6;
    _50 = !_19;
    _43 = -_36;
    _7 = _29;
    _52 = _5;
    _38 = core::ptr::addr_of!(_33);
    _51 = _30 ^ _30;
    (*_38).0 = 3833534709_u32 * 3156769729_u32;
    (*_38).0 = _42 as u32;
    (*_38).0 = 3759551929_u32 | 1265143034_u32;
    (*_38).0 = 1114356871_i32 as u32;
    Goto(bb27)
    }
    bb27 = {
    _28 = [_10.1,_10.1,_10.1,_1];
    Goto(bb28)
    }
    bb28 = {
    _37.1.2 = (*_38).0 as i8;
    _54.1 = _29 as i128;
    _5 = _34 & _19;
    _28 = [_10.1,_1,_10.1,_10.1];
    _38 = core::ptr::addr_of!((*_38));
    _2 = !215_u8;
    (*_38).0 = 2370583323_u32 | 1394300473_u32;
    _34 = !_50;
    _54.2 = _35 | _35;
    _8 = _36;
    _39 = [12444336432195486014_u64];
    _38 = core::ptr::addr_of!((*_38));
    (*_38).0 = !1602813443_u32;
    (*_38).0 = 3901892709_u32;
    _54.2 = _35 ^ _35;
    _54.2 = _1 as i8;
    (*_38).0 = 3122172640_u32;
    _38 = core::ptr::addr_of!((*_38));
    _52 = (*_22) <= (*_22);
    _9 = &mut (*_38);
    match (*_9).0 {
    0 => bb29,
    1 => bb30,
    3122172640 => bb32,
    _ => bb31
    }
    }
    bb29 = {
    Return()
    }
    bb30 = {
    _28 = [_1,_10.1,_1,_1];
    _44.1 = core::ptr::addr_of!(_44.0.1);
    _44.2.0.0 = _2 as f32;
    _6 = _30 as f32;
    _10.0.0 = _37.1.1 as f32;
    _44.0.0 = -463620856_i32;
    _39 = [8418348696872801939_u64];
    _44.0.1 = !301736701979824143820963532217133736261_u128;
    _49.1 = _44.0.0 as u128;
    _33.1 = &mut _44.0.0;
    _30 = _18 >> _3;
    _48 = -_6;
    _50 = !_19;
    _43 = -_36;
    _7 = _29;
    _52 = _5;
    _38 = core::ptr::addr_of!(_33);
    _51 = _30 ^ _30;
    (*_38).0 = 3833534709_u32 * 3156769729_u32;
    (*_38).0 = _42 as u32;
    (*_38).0 = 3759551929_u32 | 1265143034_u32;
    (*_38).0 = 1114356871_i32 as u32;
    Goto(bb27)
    }
    bb31 = {
    _29 = _17;
    _28 = [_10.1,_1,_10.1,_10.1];
    _29 = _7;
    _19 = _5 >= _5;
    _10.0.0 = _6;
    _25 = _4 as u16;
    RET = _7;
    _25 = _3 | _3;
    _31 = RET;
    _17 = RET;
    _25 = _3 | _3;
    _27 = !1643100561_i32;
    Goto(bb15)
    }
    bb32 = {
    _20 = Adt53::Variant1 { fld0: (*_9).0,fld1: Move(_37.2),fld2: _6,fld3: (*_22),fld4: _10.2,fld5: _39,fld6: 6439868772905541395_u64 };
    _49.3 = [4355413264234412207_i64,468160278377493874_i64,1091779772220285937_i64,(-1956356045268915638_i64),3150058634896190388_i64,(-5761051306977855720_i64),(-1977583003736738532_i64),(-753735471262676872_i64)];
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0) * Field::<u32>(Variant(_20, 1), 0);
    _56.1 = _35 as u128;
    _53 = [_42,_42,_42,_42,_26,_26,_42];
    _10.3 = Move((*_9).1);
    _49.0 = 169469301_i32 << (*_22);
    _24 = &mut _49.0;
    _28 = [_10.1,_10.1,_1,_1];
    _40 = _31;
    place!(Field::<u32>(Variant(_20, 1), 0)) = !(*_9).0;
    _14 = &place!(Field::<*mut isize>(Variant(_20, 1), 1));
    (*_38).1 = &mut (*_24);
    _42 = _40 as i16;
    _39 = [13672011534216085388_u64];
    (*_38).1 = Move(_24);
    _17 = RET;
    place!(Field::<u64>(Variant(_20, 1), 6)) = 11583893564027422716_u64 >> (*_22);
    place!(Field::<*mut isize>(Variant(_20, 1), 1)) = core::ptr::addr_of_mut!(_51);
    Goto(bb33)
    }
    bb33 = {
    _10.0.0 = Field::<f32>(Variant(_20, 1), 2);
    _37.1.0.0 = Field::<f32>(Variant(_20, 1), 2);
    place!(Field::<[u64; 1]>(Variant(_20, 1), 5)) = _39;
    _36 = _43 - _8;
    _29 = _17;
    _23 = [(-141142021_i32),(-1422058676_i32),(-2042102825_i32),(-1047977523_i32),765647340_i32,(-675002048_i32),1834253925_i32];
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0) * Field::<u32>(Variant(_20, 1), 0);
    _58 = _8;
    (*_9).0 = !Field::<u32>(Variant(_20, 1), 0);
    _37.1.2 = 1437214721_i32 as i8;
    _37.0 = [_26];
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0);
    Goto(bb34)
    }
    bb34 = {
    _56.1 = _50 as u128;
    (*_9).0 = _17 as u32;
    _62.1 = core::ptr::addr_of!(_62.0.1);
    place!(Field::<[usize; 6]>(Variant(_20, 1), 4)) = [_10.1,_10.1,_10.1,_1,_10.1,_10.1];
    Goto(bb35)
    }
    bb35 = {
    _56.2 = core::ptr::addr_of!(_62.0.1);
    _30 = _51 - _51;
    _40 = _7;
    _56.0 = -378850685_i32;
    _7 = _29;
    _60 = core::ptr::addr_of!(_62.0.1);
    (*_60) = _56.1;
    Goto(bb36)
    }
    bb36 = {
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0);
    _62.2.3 = &mut _56.0;
    _53 = [_42,_42,_26,_26,_26,_42,_26];
    _6 = (-1025103107262950472_i64) as f32;
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0);
    _37.2 = core::ptr::addr_of_mut!(_30);
    (*_38).1 = Move(_62.2.3);
    _19 = _34 | _50;
    _34 = _5 ^ _52;
    _28 = [_1,_1,_10.1,_1];
    Goto(bb37)
    }
    bb37 = {
    (*_60) = 101307224599177182055352065554722533426_u128 - 123347831034106252592284785069501974539_u128;
    _68 = &(*_22);
    Goto(bb38)
    }
    bb38 = {
    (*_9).0 = _2 as u32;
    (*_9).0 = !Field::<u32>(Variant(_20, 1), 0);
    (*_9).0 = !Field::<u32>(Variant(_20, 1), 0);
    _4 = _35;
    _25 = (*_68) >> (*_22);
    (*_9).0 = _26 as u32;
    _60 = core::ptr::addr_of!((*_60));
    _62.0.3 = [4537040188409578527_i64,(-487409055870347649_i64),5212857192420254149_i64,(-6605506243192056323_i64),(-1314033396789385985_i64),8524880686012546948_i64,6799352964433907178_i64,(-7934377901952621462_i64)];
    _58 = _43 - _43;
    _26 = !_42;
    _62.0.3 = [(-4627826703520909829_i64),1873947779897316354_i64,(-8587951602775848762_i64),(-5336019713096019750_i64),6846280762610150639_i64,82838328068575635_i64,(-8489326061773659073_i64),19003738018903515_i64];
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0) & Field::<u32>(Variant(_20, 1), 0);
    (*_9).0 = Field::<u32>(Variant(_20, 1), 0);
    _67 = (_28, 2018231155_i32);
    (*_60) = !244352027798284814693285832551675957161_u128;
    (*_60) = 232748688537935195993621665996150815329_u128;
    _37.2 = core::ptr::addr_of_mut!(_30);
    _20 = Adt53::Variant1 { fld0: (*_9).0,fld1: Move(_37.2),fld2: _48,fld3: (*_22),fld4: _10.2,fld5: _39,fld6: 9446957411245663919_u64 };
    RET = _17;
    (*_9).0 = !Field::<u32>(Variant(_20, 1), 0);
    _52 = _34;
    match (*_60) {
    0 => bb3,
    232748688537935195993621665996150815329 => bb39,
    _ => bb25
    }
    }
    bb39 = {
    _72 = (*_60) & (*_60);
    _73.1 = _36 - _8;
    _63 = Move(_9);
    _77 = !_50;
    place!(Field::<[u64; 1]>(Variant(_20, 1), 5)) = [3988721564556911416_u64];
    _24 = &mut _67.1;
    (*_24) = !453822126_i32;
    _50 = !_19;
    _48 = _10.0.0 - _6;
    Call(_62.0.1 = core::intrinsics::transmute(_54.1), ReturnTo(bb40), UnwindUnreachable())
    }
    bb40 = {
    _62.2.1 = _1 >> (*_68);
    _50 = !_19;
    (*_38).1 = &mut (*_24);
    _25 = (*_22);
    (*_60) = _72 << (*_68);
    _81 = Move(_60);
    (*_38).1 = Move(_24);
    _11 = _37.1.1 ^ _37.1.1;
    _77 = _5;
    _54.0.0 = _10.0.0 - _48;
    _73.3 = _43;
    _76 = RET;
    _62.0.1 = _72 & _72;
    _52 = !_5;
    _26 = -_42;
    _55 = _30 as f64;
    _34 = _77;
    _57 = &place!(Field::<*mut isize>(Variant(_20, 1), 1));
    _68 = &_25;
    _78 = Move(Field::<*mut isize>(Variant(_20, 1), 1));
    _39 = [11807155077392348338_u64];
    _18 = -_30;
    _47 = _42 | _42;
    _62.2.0.0 = Field::<f32>(Variant(_20, 1), 2);
    _3 = (*_22) * (*_68);
    _1 = _62.2.1;
    Goto(bb41)
    }
    bb41 = {
    _39 = [559499918851720841_u64];
    place!(Field::<u64>(Variant(_20, 1), 6)) = 15366835596255534270_u64 & 11611848124212446284_u64;
    _59 = !1534538521_i32;
    _62.0.3 = [5086269272340981723_i64,3218557965932894886_i64,3534469862650502024_i64,(-8601941338241030846_i64),989400607090238688_i64,2714528882212592833_i64,(-3780669049156668252_i64),2366881009373473105_i64];
    _62.2.2 = _10.2;
    _72 = Field::<u32>(Variant(_20, 1), 0) as u128;
    place!(Field::<u64>(Variant(_20, 1), 6)) = _62.2.1 as u64;
    _72 = _62.0.1 + _62.0.1;
    _37.1.1 = -_11;
    (*_38).1 = &mut _59;
    _37.0 = [_42];
    place!(Field::<u16>(Variant(_20, 1), 3)) = (*_22);
    _80 = Adt23::Variant2 { fld0: _5,fld1: RET,fld2: (*_22),fld3: _4 };
    _37.3 = Move((*_38).1);
    _54.2 = (*_68) as i8;
    Call(_71 = core::intrinsics::bswap(_30), ReturnTo(bb42), UnwindUnreachable())
    }
    bb42 = {
    _87 = core::ptr::addr_of!(_26);
    _88 = _8 * _73.1;
    _17 = _31;
    _2 = 46_u8 * 102_u8;
    _73.2 = !Field::<u64>(Variant(_20, 1), 6);
    (*_87) = _54.0.0 as i16;
    _64 = _62.2.0.0 as i32;
    (*_38).1 = &mut _64;
    _23 = [(-2032740463_i32),(-22923790_i32),1096944306_i32,(-1389396312_i32),1250100016_i32,(-1736951810_i32),557051888_i32];
    _91 = 1346178944_i32 >> (*_22);
    (*_87) = _47;
    _2 = 160_u8;
    place!(Field::<[usize; 6]>(Variant(_20, 1), 4)) = _10.2;
    place!(Field::<*mut isize>(Variant(_20, 1), 1)) = core::ptr::addr_of_mut!(_51);
    _24 = &mut _91;
    _74 = -_62.2.0.0;
    (*_87) = _47;
    _31 = _7;
    (*_38).1 = &mut (*_24);
    (*_38).1 = Move(_24);
    _73.1 = _36 * _88;
    Goto(bb43)
    }
    bb43 = {
    _69 = (_31, Move(_80));
    _10.2 = [_62.2.1,_62.2.1,_62.2.1,_62.2.1,_1,_1];
    _10.2 = [_62.2.1,_1,_1,_62.2.1,_1,_1];
    _58 = _36 - _88;
    _31 = _40;
    place!(Field::<u64>(Variant(_20, 1), 6)) = !_73.2;
    _83 = _77;
    _17 = Field::<char>(Variant(_69.1, 2), 1);
    Goto(bb44)
    }
    bb44 = {
    _79 = _76;
    place!(Field::<u16>(Variant(_69.1, 2), 2)) = (*_22) << (*_68);
    (*_87) = _73.2 as i16;
    _2 = 32_u8 << (*_87);
    _2 = Field::<u16>(Variant(_69.1, 2), 2) as u8;
    place!(Field::<u16>(Variant(_20, 1), 3)) = (*_68);
    _68 = &(*_22);
    _60 = core::ptr::addr_of!(_62.0.1);
    RET = _79;
    _89 = [(*_87)];
    _37.0 = _89;
    Goto(bb45)
    }
    bb45 = {
    _62.2.1 = _1 | _1;
    _62.0.0 = !(-780594524_i32);
    _62.2.0.0 = _10.0.0;
    _50 = _74 > _62.2.0.0;
    _52 = (*_22) == (*_68);
    _14 = &place!(Field::<*mut isize>(Variant(_20, 1), 1));
    Call((*_60) = core::intrinsics::bswap(_72), ReturnTo(bb46), UnwindUnreachable())
    }
    bb46 = {
    _73.0 = (-315384531934819274_i64) >> (*_68);
    (*_60) = _72;
    _23 = [_62.0.0,_62.0.0,_62.0.0,_62.0.0,_62.0.0,_62.0.0,_62.0.0];
    _35 = _4;
    Goto(bb47)
    }
    bb47 = {
    (*_87) = _47;
    Goto(bb48)
    }
    bb48 = {
    _8 = _73.1 - _55;
    (*_38).1 = &mut _62.0.0;
    _18 = (*_87) as isize;
    _37.1.1 = _11;
    RET = _40;
    _2 = !48_u8;
    _6 = _2 as f32;
    _65 = &_73.0;
    _96.0 = (*_65) & (*_65);
    place!(Field::<i8>(Variant(_69.1, 2), 3)) = _35 ^ _54.2;
    _54.0.1 = &(*_65);
    place!(Field::<u64>(Variant(_20, 1), 6)) = (*_87) as u64;
    _97 = Field::<char>(Variant(_69.1, 2), 1);
    _73 = (_96.0, _58, Field::<u64>(Variant(_20, 1), 6), _88);
    _96.2 = _73.2 >> (*_22);
    _71 = _51;
    _54.1 = _37.1.1;
    _75 = -_48;
    (*_60) = _47 as u128;
    _83 = _52 & Field::<bool>(Variant(_69.1, 2), 0);
    _94 = _73.0 as i128;
    Goto(bb49)
    }
    bb49 = {
    _14 = &_78;
    Goto(bb50)
    }
    bb50 = {
    Call(_99 = dump_var(1_usize, 27_usize, Move(_27), 32_usize, Move(_32), 23_usize, Move(_23), 2_usize, Move(_2)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    Call(_99 = dump_var(1_usize, 30_usize, Move(_30), 77_usize, Move(_77), 26_usize, Move(_26), 79_usize, Move(_79)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_99 = dump_var(1_usize, 64_usize, Move(_64), 67_usize, Move(_67), 1_usize, Move(_1), 50_usize, Move(_50)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_99 = dump_var(1_usize, 52_usize, Move(_52), 71_usize, Move(_71), 42_usize, Move(_42), 94_usize, Move(_94)), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Call(_99 = dump_var(1_usize, 53_usize, Move(_53), 47_usize, Move(_47), 4_usize, Move(_4), 7_usize, Move(_7)), ReturnTo(bb55), UnwindUnreachable())
    }
    bb55 = {
    Call(_99 = dump_var(1_usize, 3_usize, Move(_3), 100_usize, _100, 100_usize, _100, 100_usize, _100), ReturnTo(bb56), UnwindUnreachable())
    }
    bb56 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: f32, mut _2: bool) -> char {
    mir! {
    type RET = char;
    let _3: *const (u32, &'static mut i32);
    let _4: (i32, u128, *const u128, [i64; 8]);
    let _5: *const (i32, isize);
    let _6: *const [char; 1];
    let _7: *const (&'static mut i32, isize, bool, i32);
    let _8: &'static mut i32;
    let _9: *mut isize;
    let _10: u16;
    let _11: isize;
    let _12: (((f32, &'static i64), i128, i8),);
    let _13: Adt52;
    let _14: [i128; 5];
    let _15: *const (i32, isize);
    let _16: *const (i32, isize);
    let _17: char;
    let _18: u32;
    let _19: &'static [i8; 5];
    let _20: &'static i64;
    let _21: i32;
    let _22: *const [char; 1];
    let _23: ([usize; 4], i32);
    let _24: isize;
    let _25: u16;
    let _26: isize;
    let _27: isize;
    let _28: usize;
    let _29: *const u128;
    let _30: f64;
    let _31: *const (u32, &'static mut i32);
    let _32: ((i32, isize), Adt53, isize, u32);
    let _33: &'static mut i32;
    let _34: usize;
    let _35: bool;
    let _36: bool;
    let _37: (f64,);
    let _38: i8;
    let _39: &'static mut (u32, &'static mut i32);
    let _40: u16;
    let _41: f32;
    let _42: i16;
    let _43: bool;
    let _44: *const (u32, &'static mut i32);
    let _45: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _46: &'static mut [i128; 6];
    let _47: usize;
    let _48: &'static [i8; 5];
    let _49: *const u64;
    let _50: f32;
    let _51: f32;
    let _52: isize;
    let _53: (f64,);
    let _54: &'static mut i128;
    let _55: f32;
    let _56: (i64, f64, u64, f64);
    let _57: u16;
    let _58: u32;
    let _59: &'static mut (u32, &'static mut i32);
    let _60: i64;
    let _61: Adt53;
    let _62: f32;
    let _63: f32;
    let _64: isize;
    let _65: &'static u16;
    let _66: *mut ((f32, &'static i64), i128, i8);
    let _67: i8;
    let _68: bool;
    let _69: *mut isize;
    let _70: bool;
    let _71: *const (&'static mut i32, isize, bool, i32);
    let _72: bool;
    let _73: i16;
    let _74: [i8; 1];
    let _75: i16;
    let _76: i8;
    let _77: &'static u16;
    let _78: char;
    let _79: &'static char;
    let _80: f32;
    let _81: *const u128;
    let _82: i8;
    let _83: ((i32, isize), Adt53, isize, u32);
    let _84: ();
    let _85: ();
    {
    RET = '\u{f306e}';
    RET = '\u{18ecb}';
    _1 = 71_i8 as f32;
    RET = '\u{d244f}';
    _2 = !false;
    _1 = 9325_u16 as f32;
    RET = '\u{f7436}';
    RET = '\u{21dc4}';
    _4.1 = 337657278968112162576462044394616065376_u128 >> 247250334997045405038106113687725503958_u128;
    RET = '\u{18947}';
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.0 = 5_usize as i32;
    Call(_4.3 = fn3(_4.1, Move(_4.2), RET, RET, _4.1, _4.1, _4.1, _4.0), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _1 = 2_usize as f32;
    _4.1 = 149979911885528210122369156152653054360_u128 + 192203473412723553274400884066199876859_u128;
    _2 = _4.0 == _4.0;
    _2 = false;
    Goto(bb2)
    }
    bb2 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb3 = {
    _4.1 = 77970876645001152047702679658954472099_u128 & 183148721215864259481000920346171796305_u128;
    _1 = (-3127_i16) as f32;
    _4.2 = core::ptr::addr_of!(_4.1);
    _1 = 6206203837774344619_i64 as f32;
    _2 = _4.1 > _4.1;
    Goto(bb4)
    }
    bb4 = {
    _4.1 = 275607317943187109969083899368409889783_u128;
    _1 = 18317_i16 as f32;
    _2 = !true;
    _4.1 = 282294788575936995687682466603786031664_u128 ^ 185028354029181565445458755785738021454_u128;
    _2 = !true;
    _4.1 = 135_u8 as u128;
    RET = '\u{aaa95}';
    RET = '\u{87a0e}';
    RET = '\u{411d1}';
    _2 = true & true;
    _4.3 = [(-2188146096066834415_i64),(-3309801963867665076_i64),(-4295668994685282748_i64),(-3890430841219528736_i64),(-2502344275622303717_i64),(-6353695425287200537_i64),7130422461499998936_i64,(-3680430835285224469_i64)];
    _4.1 = 274219593610338034659115037782345932043_u128 * 208510581614653258553687481662348662403_u128;
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.0 = (-347486011_i32) + 943435996_i32;
    _8 = &mut _4.0;
    (*_8) = 3746422508_u32 as i32;
    (*_8) = (-1010768266_i32);
    (*_8) = (-58718828645443994615365703973784448524_i128) as i32;
    _12.0.2 = RET as i8;
    _11 = RET as isize;
    _12.0.2 = 81_i8;
    _2 = true;
    _10 = !4352_u16;
    (*_8) = _10 as i32;
    (*_8) = (-1472511794_i32);
    Goto(bb5)
    }
    bb5 = {
    (*_8) = 43502748169288568271882196299541727623_u128 as i32;
    _12.0.1 = 107246639348791233256043606281806017668_i128 | 6412412015011390842643602237455595580_i128;
    _9 = core::ptr::addr_of_mut!(_11);
    (*_8) = (-357677802_i32) & 990134799_i32;
    (*_9) = (-9223372036854775808_isize) ^ 124_isize;
    (*_8) = 55_u8 as i32;
    (*_9) = !9223372036854775807_isize;
    (*_9) = 9223372036854775807_isize * (-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize;
    (*_9) = 6_isize - 23_isize;
    (*_9) = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
    _11 = !(-9223372036854775808_isize);
    (*_9) = (-20_isize) >> (*_8);
    (*_9) = -(-9223372036854775808_isize);
    (*_8) = 488142627_i32 | (-213779698_i32);
    (*_9) = !(-9223372036854775808_isize);
    (*_8) = _10 as i32;
    (*_9) = 1436958677_u32 as isize;
    (*_9) = 9223372036854775807_isize + 9223372036854775807_isize;
    (*_8) = !(-267951291_i32);
    Goto(bb6)
    }
    bb6 = {
    (*_8) = 2134582353_i32 + (-790635276_i32);
    (*_8) = -424166588_i32;
    (*_9) = !(-9223372036854775808_isize);
    (*_8) = 1493035074_i32;
    (*_8) = (-1900894045_i32) << (*_9);
    (*_9) = (-9223372036854775808_isize) - (-99_isize);
    (*_8) = 1888009675_i32 - (-2137991868_i32);
    _12.0.2 = 22_i8 * (-111_i8);
    (*_9) = 123_isize;
    _18 = 67626686_u32 - 1813168378_u32;
    (*_9) = (-9223372036854775808_isize);
    match (*_9) {
    0 => bb7,
    1 => bb8,
    2 => bb9,
    3 => bb10,
    340282366920938463454151235394913435648 => bb12,
    _ => bb11
    }
    }
    bb7 = {
    (*_8) = 43502748169288568271882196299541727623_u128 as i32;
    _12.0.1 = 107246639348791233256043606281806017668_i128 | 6412412015011390842643602237455595580_i128;
    _9 = core::ptr::addr_of_mut!(_11);
    (*_8) = (-357677802_i32) & 990134799_i32;
    (*_9) = (-9223372036854775808_isize) ^ 124_isize;
    (*_8) = 55_u8 as i32;
    (*_9) = !9223372036854775807_isize;
    (*_9) = 9223372036854775807_isize * (-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize;
    (*_9) = 6_isize - 23_isize;
    (*_9) = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
    _11 = !(-9223372036854775808_isize);
    (*_9) = (-20_isize) >> (*_8);
    (*_9) = -(-9223372036854775808_isize);
    (*_8) = 488142627_i32 | (-213779698_i32);
    (*_9) = !(-9223372036854775808_isize);
    (*_8) = _10 as i32;
    (*_9) = 1436958677_u32 as isize;
    (*_9) = 9223372036854775807_isize + 9223372036854775807_isize;
    (*_8) = !(-267951291_i32);
    Goto(bb6)
    }
    bb8 = {
    _4.1 = 275607317943187109969083899368409889783_u128;
    _1 = 18317_i16 as f32;
    _2 = !true;
    _4.1 = 282294788575936995687682466603786031664_u128 ^ 185028354029181565445458755785738021454_u128;
    _2 = !true;
    _4.1 = 135_u8 as u128;
    RET = '\u{aaa95}';
    RET = '\u{87a0e}';
    RET = '\u{411d1}';
    _2 = true & true;
    _4.3 = [(-2188146096066834415_i64),(-3309801963867665076_i64),(-4295668994685282748_i64),(-3890430841219528736_i64),(-2502344275622303717_i64),(-6353695425287200537_i64),7130422461499998936_i64,(-3680430835285224469_i64)];
    _4.1 = 274219593610338034659115037782345932043_u128 * 208510581614653258553687481662348662403_u128;
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.0 = (-347486011_i32) + 943435996_i32;
    _8 = &mut _4.0;
    (*_8) = 3746422508_u32 as i32;
    (*_8) = (-1010768266_i32);
    (*_8) = (-58718828645443994615365703973784448524_i128) as i32;
    _12.0.2 = RET as i8;
    _11 = RET as isize;
    _12.0.2 = 81_i8;
    _2 = true;
    _10 = !4352_u16;
    (*_8) = _10 as i32;
    (*_8) = (-1472511794_i32);
    Goto(bb5)
    }
    bb9 = {
    _4.1 = 77970876645001152047702679658954472099_u128 & 183148721215864259481000920346171796305_u128;
    _1 = (-3127_i16) as f32;
    _4.2 = core::ptr::addr_of!(_4.1);
    _1 = 6206203837774344619_i64 as f32;
    _2 = _4.1 > _4.1;
    Goto(bb4)
    }
    bb10 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb11 = {
    _1 = 2_usize as f32;
    _4.1 = 149979911885528210122369156152653054360_u128 + 192203473412723553274400884066199876859_u128;
    _2 = _4.0 == _4.0;
    _2 = false;
    Goto(bb2)
    }
    bb12 = {
    (*_8) = -1209109975_i32;
    _11 = (-9223372036854775808_isize);
    (*_9) = 248_u8 as isize;
    (*_8) = RET as i32;
    _12.0.1 = (-81136823210944128498136447329289683558_i128) + (-13650167019822124053806036359387827755_i128);
    (*_8) = (-422102967_i32);
    _12.0.1 = 81236855249789581215892947138757640354_i128 + (-41944524218808730057221902478465582660_i128);
    _12.0.2 = 66_i8 * (-12_i8);
    _1 = _12.0.2 as f32;
    Call((*_8) = core::intrinsics::bswap((-1865494328_i32)), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    (*_9) = -(-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize | (-9223372036854775808_isize);
    _10 = 31119_u16;
    (*_8) = 1976685108_i32;
    (*_8) = (-1441695773_i32);
    _1 = _18 as f32;
    (*_9) = !(-97_isize);
    (*_9) = (-28_isize) + (-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize;
    _26 = -(*_9);
    (*_8) = 1915872203_i32 >> (*_9);
    (*_8) = -1190396485_i32;
    _23.1 = _18 as i32;
    (*_9) = _26;
    (*_9) = !_26;
    _23.0 = [0_usize,5_usize,3_usize,9606876477706827580_usize];
    _28 = 250_u8 as usize;
    (*_9) = RET as isize;
    (*_8) = -_23.1;
    _12.0.0.0 = -_1;
    _17 = RET;
    _23.0 = [_28,_28,_28,_28];
    (*_9) = !_26;
    match _10 {
    31119 => bb14,
    _ => bb6
    }
    }
    bb14 = {
    _25 = _10 << (*_8);
    (*_8) = _23.1 | _23.1;
    _30 = 16616339913667630794_u64 as f64;
    _25 = _10 / _10;
    (*_9) = _26 - _26;
    (*_9) = _26;
    (*_9) = _26 << (*_8);
    _12.0.2 = (-81_i8) ^ (-14_i8);
    _12.0.1 = 13491452388052453052_u64 as i128;
    _30 = 155_u8 as f64;
    _12.0.0.0 = _1 * _1;
    Goto(bb15)
    }
    bb15 = {
    _30 = 6_u8 as f64;
    (*_8) = _30 as i32;
    _24 = _30 as isize;
    (*_9) = !_24;
    (*_8) = _23.1 - _23.1;
    _5 = core::ptr::addr_of!(_32.0);
    (*_5).1 = _24 | (*_9);
    _14 = [_12.0.1,_12.0.1,_12.0.1,_12.0.1,_12.0.1];
    (*_9) = _28 as isize;
    _1 = 2219732630416115211669771870885343856_u128 as f32;
    (*_5).0 = (*_8) >> (*_5).1;
    (*_9) = 144750470803580746071918368494887043986_u128 as isize;
    _9 = core::ptr::addr_of_mut!((*_5).1);
    (*_5) = ((*_8), _26);
    _15 = Move(_5);
    _25 = _12.0.2 as u16;
    match _10 {
    0 => bb3,
    1 => bb5,
    31119 => bb17,
    _ => bb16
    }
    }
    bb16 = {
    _25 = _10 << (*_8);
    (*_8) = _23.1 | _23.1;
    _30 = 16616339913667630794_u64 as f64;
    _25 = _10 / _10;
    (*_9) = _26 - _26;
    (*_9) = _26;
    (*_9) = _26 << (*_8);
    _12.0.2 = (-81_i8) ^ (-14_i8);
    _12.0.1 = 13491452388052453052_u64 as i128;
    _30 = 155_u8 as f64;
    _12.0.0.0 = _1 * _1;
    Goto(bb15)
    }
    bb17 = {
    _12.0.0.0 = _1;
    _36 = !_2;
    (*_8) = _32.0.0 - _32.0.0;
    _5 = Move(_15);
    match _10 {
    31119 => bb18,
    _ => bb5
    }
    }
    bb18 = {
    _34 = _30 as usize;
    _21 = (*_8);
    (*_8) = _21 >> _32.0.1;
    (*_8) = _21 * _32.0.0;
    _17 = RET;
    _11 = !_24;
    _15 = core::ptr::addr_of!(_32.0);
    (*_8) = !(*_15).0;
    _42 = 28656_i16 * (-12255_i16);
    _35 = !_36;
    (*_15).0 = -(*_8);
    match _10 {
    0 => bb19,
    1 => bb20,
    2 => bb21,
    3 => bb22,
    4 => bb23,
    31119 => bb25,
    _ => bb24
    }
    }
    bb19 = {
    _12.0.0.0 = _1;
    _36 = !_2;
    (*_8) = _32.0.0 - _32.0.0;
    _5 = Move(_15);
    match _10 {
    31119 => bb18,
    _ => bb5
    }
    }
    bb20 = {
    _25 = _10 << (*_8);
    (*_8) = _23.1 | _23.1;
    _30 = 16616339913667630794_u64 as f64;
    _25 = _10 / _10;
    (*_9) = _26 - _26;
    (*_9) = _26;
    (*_9) = _26 << (*_8);
    _12.0.2 = (-81_i8) ^ (-14_i8);
    _12.0.1 = 13491452388052453052_u64 as i128;
    _30 = 155_u8 as f64;
    _12.0.0.0 = _1 * _1;
    Goto(bb15)
    }
    bb21 = {
    _30 = 6_u8 as f64;
    (*_8) = _30 as i32;
    _24 = _30 as isize;
    (*_9) = !_24;
    (*_8) = _23.1 - _23.1;
    _5 = core::ptr::addr_of!(_32.0);
    (*_5).1 = _24 | (*_9);
    _14 = [_12.0.1,_12.0.1,_12.0.1,_12.0.1,_12.0.1];
    (*_9) = _28 as isize;
    _1 = 2219732630416115211669771870885343856_u128 as f32;
    (*_5).0 = (*_8) >> (*_5).1;
    (*_9) = 144750470803580746071918368494887043986_u128 as isize;
    _9 = core::ptr::addr_of_mut!((*_5).1);
    (*_5) = ((*_8), _26);
    _15 = Move(_5);
    _25 = _12.0.2 as u16;
    match _10 {
    0 => bb3,
    1 => bb5,
    31119 => bb17,
    _ => bb16
    }
    }
    bb22 = {
    _4.1 = 275607317943187109969083899368409889783_u128;
    _1 = 18317_i16 as f32;
    _2 = !true;
    _4.1 = 282294788575936995687682466603786031664_u128 ^ 185028354029181565445458755785738021454_u128;
    _2 = !true;
    _4.1 = 135_u8 as u128;
    RET = '\u{aaa95}';
    RET = '\u{87a0e}';
    RET = '\u{411d1}';
    _2 = true & true;
    _4.3 = [(-2188146096066834415_i64),(-3309801963867665076_i64),(-4295668994685282748_i64),(-3890430841219528736_i64),(-2502344275622303717_i64),(-6353695425287200537_i64),7130422461499998936_i64,(-3680430835285224469_i64)];
    _4.1 = 274219593610338034659115037782345932043_u128 * 208510581614653258553687481662348662403_u128;
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.0 = (-347486011_i32) + 943435996_i32;
    _8 = &mut _4.0;
    (*_8) = 3746422508_u32 as i32;
    (*_8) = (-1010768266_i32);
    (*_8) = (-58718828645443994615365703973784448524_i128) as i32;
    _12.0.2 = RET as i8;
    _11 = RET as isize;
    _12.0.2 = 81_i8;
    _2 = true;
    _10 = !4352_u16;
    (*_8) = _10 as i32;
    (*_8) = (-1472511794_i32);
    Goto(bb5)
    }
    bb23 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb24 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb25 = {
    (*_15).0 = (*_8) ^ (*_8);
    Call(_27 = core::intrinsics::transmute((*_15).1), ReturnTo(bb26), UnwindUnreachable())
    }
    bb26 = {
    (*_15).1 = _27;
    _16 = core::ptr::addr_of!((*_15));
    (*_8) = (*_16).0;
    (*_15).0 = _21 + (*_8);
    (*_16).1 = _18 as isize;
    (*_15).0 = (*_8) ^ (*_8);
    _5 = core::ptr::addr_of!((*_15));
    (*_15) = ((*_8), _27);
    (*_15).1 = _34 as isize;
    (*_15) = ((*_8), _24);
    (*_15) = ((*_8), _11);
    (*_15) = ((*_8), _24);
    _23.1 = (*_8) + (*_15).0;
    (*_15) = ((*_8), _27);
    (*_15).1 = _24 | _11;
    Goto(bb27)
    }
    bb27 = {
    _37 = (_30,);
    _45.1.2 = 22_u8 as i8;
    (*_15).1 = _18 as isize;
    _40 = _25 * _25;
    (*_15).1 = _26;
    (*_8) = (*_15).0 - _23.1;
    (*_15).1 = _25 as isize;
    (*_15) = ((*_8), _11);
    _36 = (*_15).0 > (*_15).0;
    (*_15).1 = _24 - _27;
    _33 = Move(_8);
    (*_15).0 = _18 as i32;
    _41 = _45.1.2 as f32;
    _33 = &mut (*_15).0;
    _47 = _28;
    _45.3 = &mut (*_33);
    match _10 {
    0 => bb11,
    1 => bb19,
    2 => bb3,
    3 => bb4,
    4 => bb16,
    31119 => bb28,
    _ => bb26
    }
    }
    bb28 = {
    _42 = (-29549_i16);
    _23.1 = -_21;
    (*_15).1 = _27 | _26;
    _45.0 = [_42];
    (*_15).1 = _27;
    _15 = Move(_5);
    _45.2 = core::ptr::addr_of_mut!(_27);
    _45.1.0.0 = _41;
    _45.1.0.0 = _1 + _1;
    _5 = Move(_16);
    _37 = (_30,);
    _47 = _12.0.2 as usize;
    _54 = &mut _12.0.1;
    (*_54) = 20859391991653225463826665103520004128_i128 | 42520499948666071155745343252431463329_i128;
    _38 = _45.1.2 | _45.1.2;
    (*_54) = -17573203912464261830559036757075194872_i128;
    _18 = 2634013719_u32 << _25;
    _17 = RET;
    Goto(bb29)
    }
    bb29 = {
    _42 = 1564_i16 | 2635_i16;
    (*_54) = -28630711360781154901362126898693295000_i128;
    _40 = _10 ^ _10;
    _16 = Move(_15);
    _23.1 = _21 - _21;
    _52 = _21 as isize;
    _40 = !_25;
    _43 = _36 >= _36;
    _53.0 = _37.0 * _37.0;
    (*_54) = 44109810026902412602625945497280659337_i128;
    _47 = _45.1.0.0 as usize;
    _50 = _37.0 as f32;
    match (*_54) {
    0 => bb19,
    1 => bb13,
    2 => bb30,
    3 => bb31,
    44109810026902412602625945497280659337 => bb33,
    _ => bb32
    }
    }
    bb30 = {
    _4.1 = 275607317943187109969083899368409889783_u128;
    _1 = 18317_i16 as f32;
    _2 = !true;
    _4.1 = 282294788575936995687682466603786031664_u128 ^ 185028354029181565445458755785738021454_u128;
    _2 = !true;
    _4.1 = 135_u8 as u128;
    RET = '\u{aaa95}';
    RET = '\u{87a0e}';
    RET = '\u{411d1}';
    _2 = true & true;
    _4.3 = [(-2188146096066834415_i64),(-3309801963867665076_i64),(-4295668994685282748_i64),(-3890430841219528736_i64),(-2502344275622303717_i64),(-6353695425287200537_i64),7130422461499998936_i64,(-3680430835285224469_i64)];
    _4.1 = 274219593610338034659115037782345932043_u128 * 208510581614653258553687481662348662403_u128;
    _4.2 = core::ptr::addr_of!(_4.1);
    _4.0 = (-347486011_i32) + 943435996_i32;
    _8 = &mut _4.0;
    (*_8) = 3746422508_u32 as i32;
    (*_8) = (-1010768266_i32);
    (*_8) = (-58718828645443994615365703973784448524_i128) as i32;
    _12.0.2 = RET as i8;
    _11 = RET as isize;
    _12.0.2 = 81_i8;
    _2 = true;
    _10 = !4352_u16;
    (*_8) = _10 as i32;
    (*_8) = (-1472511794_i32);
    Goto(bb5)
    }
    bb31 = {
    _25 = _10 << (*_8);
    (*_8) = _23.1 | _23.1;
    _30 = 16616339913667630794_u64 as f64;
    _25 = _10 / _10;
    (*_9) = _26 - _26;
    (*_9) = _26;
    (*_9) = _26 << (*_8);
    _12.0.2 = (-81_i8) ^ (-14_i8);
    _12.0.1 = 13491452388052453052_u64 as i128;
    _30 = 155_u8 as f64;
    _12.0.0.0 = _1 * _1;
    Goto(bb15)
    }
    bb32 = {
    _25 = _10 << (*_8);
    (*_8) = _23.1 | _23.1;
    _30 = 16616339913667630794_u64 as f64;
    _25 = _10 / _10;
    (*_9) = _26 - _26;
    (*_9) = _26;
    (*_9) = _26 << (*_8);
    _12.0.2 = (-81_i8) ^ (-14_i8);
    _12.0.1 = 13491452388052453052_u64 as i128;
    _30 = 155_u8 as f64;
    _12.0.0.0 = _1 * _1;
    Goto(bb15)
    }
    bb33 = {
    _28 = _34 & _47;
    (*_54) = !181973564783273700559570590864713662_i128;
    (*_54) = (-28208860792963195663901653452079628139_i128);
    _28 = _34 - _47;
    _53 = (_30,);
    (*_54) = 39564015638871757147670229416479787125_i128 - (-13484058290435449844735481870131003508_i128);
    _24 = _11 ^ _52;
    (*_54) = !11984294963498082779508233717518197965_i128;
    _51 = _47 as f32;
    _50 = _28 as f32;
    (*_54) = 55218441073655613658851011133715110957_i128;
    _9 = core::ptr::addr_of_mut!(_11);
    (*_9) = 8374779582601596764446361918852729660_u128 as isize;
    (*_9) = _52;
    (*_9) = _52 << _23.1;
    (*_54) = RET as i128;
    _56.2 = 3864886168431839743_u64 | 4174273442018132679_u64;
    _56.0 = 7014727476168621525_i64 | (-8368139564733212345_i64);
    (*_9) = !_24;
    _24 = 24391785115532866403264496249331406585_u128 as isize;
    _53.0 = -_30;
    match _10 {
    0 => bb32,
    1 => bb2,
    2 => bb3,
    3 => bb26,
    4 => bb5,
    5 => bb13,
    6 => bb17,
    31119 => bb35,
    _ => bb34
    }
    }
    bb34 = {
    (*_8) = -1209109975_i32;
    _11 = (-9223372036854775808_isize);
    (*_9) = 248_u8 as isize;
    (*_8) = RET as i32;
    _12.0.1 = (-81136823210944128498136447329289683558_i128) + (-13650167019822124053806036359387827755_i128);
    (*_8) = (-422102967_i32);
    _12.0.1 = 81236855249789581215892947138757640354_i128 + (-41944524218808730057221902478465582660_i128);
    _12.0.2 = 66_i8 * (-12_i8);
    _1 = _12.0.2 as f32;
    Call((*_8) = core::intrinsics::bswap((-1865494328_i32)), ReturnTo(bb13), UnwindUnreachable())
    }
    bb35 = {
    _53.0 = _30 + _30;
    _9 = core::ptr::addr_of_mut!(_24);
    (*_54) = !(-133347179166032024983627647231328797693_i128);
    (*_54) = (-152523894408773742597050792997919857605_i128) << (*_9);
    _49 = core::ptr::addr_of!(_56.2);
    (*_49) = 10146885083809616089_u64 & 3556700115375605462_u64;
    _57 = _25 ^ _10;
    RET = _17;
    (*_54) = 127896937128148093148046075145466170349_i128;
    (*_54) = _25 as i128;
    _25 = !_40;
    (*_54) = (-10868940604749416213461660835743112032_i128);
    (*_54) = (-108414672431446032960641110200605535750_i128);
    _34 = _28 * _28;
    _56.3 = _53.0 + _30;
    _26 = _52 * (*_9);
    _25 = !_57;
    _62 = _50;
    match (*_54) {
    0 => bb27,
    231867694489492430502733497231162675706 => bb36,
    _ => bb22
    }
    }
    bb36 = {
    Goto(bb37)
    }
    bb37 = {
    Goto(bb38)
    }
    bb38 = {
    (*_49) = _56.3 as u64;
    (*_54) = (-62869957735124235051117660877851782062_i128) >> (*_9);
    _27 = _26 * _52;
    _24 = _43 as isize;
    _26 = (*_9);
    (*_9) = _26;
    _45.2 = core::ptr::addr_of_mut!((*_9));
    _65 = &_25;
    _24 = _26;
    match _10 {
    0 => bb24,
    1 => bb9,
    2 => bb5,
    3 => bb39,
    31119 => bb41,
    _ => bb40
    }
    }
    bb39 = {
    _1 = 2_usize as f32;
    _4.1 = 149979911885528210122369156152653054360_u128 + 192203473412723553274400884066199876859_u128;
    _2 = _4.0 == _4.0;
    _2 = false;
    Goto(bb2)
    }
    bb40 = {
    _28 = _34 & _47;
    (*_54) = !181973564783273700559570590864713662_i128;
    (*_54) = (-28208860792963195663901653452079628139_i128);
    _28 = _34 - _47;
    _53 = (_30,);
    (*_54) = 39564015638871757147670229416479787125_i128 - (-13484058290435449844735481870131003508_i128);
    _24 = _11 ^ _52;
    (*_54) = !11984294963498082779508233717518197965_i128;
    _51 = _47 as f32;
    _50 = _28 as f32;
    (*_54) = 55218441073655613658851011133715110957_i128;
    _9 = core::ptr::addr_of_mut!(_11);
    (*_9) = 8374779582601596764446361918852729660_u128 as isize;
    (*_9) = _52;
    (*_9) = _52 << _23.1;
    (*_54) = RET as i128;
    _56.2 = 3864886168431839743_u64 | 4174273442018132679_u64;
    _56.0 = 7014727476168621525_i64 | (-8368139564733212345_i64);
    (*_9) = !_24;
    _24 = 24391785115532866403264496249331406585_u128 as isize;
    _53.0 = -_30;
    match _10 {
    0 => bb32,
    1 => bb2,
    2 => bb3,
    3 => bb26,
    4 => bb5,
    5 => bb13,
    6 => bb17,
    31119 => bb35,
    _ => bb34
    }
    }
    bb41 = {
    (*_9) = _26;
    (*_9) = _26;
    (*_49) = !369618686743183325_u64;
    _11 = -(*_9);
    _28 = _34 >> (*_9);
    (*_54) = 137051534683292260289011474556495851708_i128 * (-1478495212022865044705422649558836162_i128);
    (*_54) = 157153344364789393859981185105524589796_i128 ^ 155217737714715406415220170607100628395_i128;
    (*_9) = !_11;
    _49 = core::ptr::addr_of!((*_49));
    (*_49) = !10143786416858259730_u64;
    _35 = _43;
    _30 = -_53.0;
    (*_49) = !7120846158021672215_u64;
    Goto(bb42)
    }
    bb42 = {
    (*_9) = _27;
    _55 = -_62;
    _45.0 = [_42];
    (*_54) = -163812986007203274340585800680661630698_i128;
    (*_49) = 13673590019251011243_u64 - 17881788423762738696_u64;
    (*_54) = 35537547362492973923769888867233859048_i128;
    _52 = _24;
    _45.1.1 = (*_54);
    _69 = core::ptr::addr_of_mut!((*_9));
    (*_54) = _18 as i128;
    (*_49) = 13417299115569601422_u64 - 3079210899198694073_u64;
    (*_9) = _26;
    (*_49) = RET as u64;
    _69 = core::ptr::addr_of_mut!((*_9));
    (*_54) = _42 as i128;
    _49 = core::ptr::addr_of!((*_49));
    _65 = &_40;
    (*_54) = !_45.1.1;
    _23.1 = _53.0 as i32;
    (*_54) = _45.1.1 + _45.1.1;
    Call(_21 = core::intrinsics::transmute(_23.1), ReturnTo(bb43), UnwindUnreachable())
    }
    bb43 = {
    (*_9) = _52 >> _28;
    (*_54) = _45.1.1 >> (*_9);
    _45.1.0.0 = -_55;
    _60 = _56.0 | _56.0;
    _15 = Move(_5);
    _10 = (*_65);
    (*_49) = (*_54) as u64;
    (*_49) = 15122956590143142804_u64 << (*_54);
    match _45.1.1 {
    0 => bb10,
    1 => bb7,
    2 => bb15,
    3 => bb44,
    4 => bb45,
    35537547362492973923769888867233859048 => bb47,
    _ => bb46
    }
    }
    bb44 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb45 = {
    (*_9) = -(-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize | (-9223372036854775808_isize);
    _10 = 31119_u16;
    (*_8) = 1976685108_i32;
    (*_8) = (-1441695773_i32);
    _1 = _18 as f32;
    (*_9) = !(-97_isize);
    (*_9) = (-28_isize) + (-9223372036854775808_isize);
    (*_9) = 9223372036854775807_isize;
    _26 = -(*_9);
    (*_8) = 1915872203_i32 >> (*_9);
    (*_8) = -1190396485_i32;
    _23.1 = _18 as i32;
    (*_9) = _26;
    (*_9) = !_26;
    _23.0 = [0_usize,5_usize,3_usize,9606876477706827580_usize];
    _28 = 250_u8 as usize;
    (*_9) = RET as isize;
    (*_8) = -_23.1;
    _12.0.0.0 = -_1;
    _17 = RET;
    _23.0 = [_28,_28,_28,_28];
    (*_9) = !_26;
    match _10 {
    31119 => bb14,
    _ => bb6
    }
    }
    bb46 = {
    _4.0 = (-818136641_i32) >> _4.1;
    _4.2 = core::ptr::addr_of!(_4.1);
    RET = '\u{61a42}';
    _4.3 = [2991179685756786743_i64,(-3018972764217642187_i64),(-3303619379390178318_i64),(-461748960382551120_i64),5506035477931216773_i64,7894430113987873898_i64,(-2531599288846514019_i64),4744032528187119296_i64];
    Goto(bb3)
    }
    bb47 = {
    _70 = !_35;
    _43 = (*_9) < (*_9);
    _20 = &_60;
    _72 = _43 ^ _70;
    (*_54) = -_45.1.1;
    _45.1.0.0 = _51;
    _8 = &mut _21;
    (*_49) = 7911805214545965314_u64;
    _5 = Move(_15);
    (*_8) = -_23.1;
    _68 = (*_9) != (*_9);
    (*_8) = -_23.1;
    _50 = _55 * _1;
    (*_8) = _23.1 | _23.1;
    (*_49) = 10213642765187567563_u64;
    _53.0 = _30 * _30;
    Goto(bb48)
    }
    bb48 = {
    (*_8) = !_23.1;
    _27 = (*_9);
    _9 = core::ptr::addr_of_mut!(_64);
    (*_54) = _45.1.1 >> _11;
    (*_8) = _23.1;
    _56.1 = _42 as f64;
    (*_54) = _45.1.1 & _45.1.1;
    (*_9) = _24;
    (*_8) = _23.1 ^ _23.1;
    Goto(bb49)
    }
    bb49 = {
    _65 = &_25;
    (*_9) = _24 >> _26;
    (*_54) = -_45.1.1;
    (*_49) = 6228656161374276174_u64 & 2737886222004406698_u64;
    _60 = _56.0;
    (*_9) = !_26;
    _80 = _62 + _62;
    _58 = _18;
    Goto(bb50)
    }
    bb50 = {
    Call(_84 = dump_var(2_usize, 26_usize, Move(_26), 34_usize, Move(_34), 28_usize, Move(_28), 14_usize, Move(_14)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    Call(_84 = dump_var(2_usize, 47_usize, Move(_47), 58_usize, Move(_58), 2_usize, Move(_2), 17_usize, Move(_17)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_84 = dump_var(2_usize, 57_usize, Move(_57), 36_usize, Move(_36), 64_usize, Move(_64), 38_usize, Move(_38)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_84 = dump_var(2_usize, 42_usize, Move(_42), 60_usize, Move(_60), 85_usize, _85, 85_usize, _85), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(
    mut _1: u128,
    mut _2: *const u128,
    mut _3: char,
    mut _4: char,
    mut _5: u128,
    mut _6: u128,
    mut _7: u128,
    mut _8: i32,
) -> [i64; 8] {
    mir! {
    type RET = [i64; 8];
    let _9: [usize; 6];
    let _10: [i16; 1];
    let _11: &'static i64;
    let _12: *const [char; 1];
    let _13: *const u64;
    let _14: Adt17;
    let _15: *mut ((f32, &'static i64), i128, i8);
    let _16: u128;
    let _17: f64;
    let _18: char;
    let _19: *const [char; 1];
    let _20: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _21: f32;
    let _22: isize;
    let _23: u32;
    let _24: i64;
    let _25: u64;
    let _26: f64;
    let _27: isize;
    let _28: i32;
    let _29: isize;
    let _30: f32;
    let _31: &'static mut (u32, &'static mut i32);
    let _32: &'static mut (u32, &'static mut i32);
    let _33: (&'static mut i32, isize, bool, i32);
    let _34: f64;
    let _35: (f64,);
    let _36: &'static u16;
    let _37: &'static mut i32;
    let _38: f64;
    let _39: &'static char;
    let _40: *const i16;
    let _41: [i16; 1];
    let _42: f64;
    let _43: &'static [i8; 2];
    let _44: isize;
    let _45: &'static u16;
    let _46: &'static mut [i128; 6];
    let _47: *const [char; 1];
    let _48: i128;
    let _49: bool;
    let _50: *const [char; 1];
    let _51: Adt17;
    let _52: &'static char;
    let _53: *mut isize;
    let _54: u16;
    let _55: &'static mut i128;
    let _56: Adt68;
    let _57: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _58: *const u64;
    let _59: isize;
    let _60: i32;
    let _61: &'static mut i32;
    let _62: ((f32, &'static i64), i128, i8);
    let _63: isize;
    let _64: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _65: &'static [i8; 2];
    let _66: *mut isize;
    let _67: i16;
    let _68: *const u128;
    let _69: [i128; 1];
    let _70: *const [char; 1];
    let _71: *mut [i16; 7];
    let _72: char;
    let _73: *mut [i128; 1];
    let _74: f32;
    let _75: *const u64;
    let _76: isize;
    let _77: [u64; 4];
    let _78: &'static [i8; 2];
    let _79: i8;
    let _80: char;
    let _81: *mut ((f32, &'static i64), i128, i8);
    let _82: f64;
    let _83: u8;
    let _84: isize;
    let _85: *const u64;
    let _86: u16;
    let _87: *mut [i16; 7];
    let _88: [i16; 7];
    let _89: i16;
    let _90: u32;
    let _91: f32;
    let _92: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _93: bool;
    let _94: bool;
    let _95: char;
    let _96: isize;
    let _97: i32;
    let _98: isize;
    let _99: ();
    let _100: ();
    {
    _3 = _4;
    _5 = _1 & _6;
    _6 = _5;
    RET = [(-4425379605606488950_i64),(-8438071731435533332_i64),(-3796618469366784415_i64),(-4429177759049541320_i64),(-5657679891383299913_i64),3812292787205108940_i64,8881520107091482952_i64,(-7353806823940329682_i64)];
    _10 = [28012_i16];
    _10 = [2957_i16];
    _10 = [20769_i16];
    _1 = 91_u8 as u128;
    Call(RET = fn4(Move(_2), _3, _4, _3, _6, _8, _4), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _8 = (-63888197_i32);
    _10 = [(-20048_i16)];
    _2 = core::ptr::addr_of!(_7);
    (*_2) = !_6;
    _1 = _7 * (*_2);
    _7 = _6 & _6;
    (*_2) = 8855683578150958502_u64 as u128;
    (*_2) = _6;
    (*_2) = _3 as u128;
    (*_2) = _1 ^ _6;
    _10 = [2507_i16];
    (*_2) = _1 * _6;
    (*_2) = _5 + _1;
    _9 = [2_usize,5_usize,8478706686275046470_usize,13430585435754105106_usize,6_usize,7_usize];
    _3 = _4;
    (*_2) = _5 << _5;
    (*_2) = _5 | _1;
    _3 = _4;
    (*_2) = 20_isize as u128;
    (*_2) = _6;
    RET = [(-5421503131022242713_i64),3314990755848839441_i64,(-2621140388993511479_i64),1441724655716217591_i64,(-4539830972726541157_i64),(-7121959953051521229_i64),(-5711020084666786407_i64),8340748006683529143_i64];
    (*_2) = _1 ^ _5;
    (*_2) = _5 + _1;
    _1 = !(*_2);
    (*_2) = 44296_u16 as u128;
    _10 = [(-13735_i16)];
    (*_2) = (-19_i8) as u128;
    Goto(bb2)
    }
    bb2 = {
    (*_2) = _6 * _6;
    (*_2) = _1 - _1;
    (*_2) = !_1;
    (*_2) = _1 - _6;
    _14 = Adt17::Variant2 { fld0: (-2743278750464176381_i64),fld1: 1812365929041232130_u64 };
    place!(Field::<i64>(Variant(_14, 2), 0)) = 6532643272737909616_i64 + 4033846221753023896_i64;
    (*_2) = !_1;
    (*_2) = (-4824387860452058698539511063881692232_i128) as u128;
    _11 = &place!(Field::<i64>(Variant(_14, 2), 0));
    place!(Field::<u64>(Variant(_14, 2), 1)) = !1173975934274335637_u64;
    _18 = _4;
    (*_2) = _5;
    _5 = _1 | (*_2);
    (*_2) = _1;
    _20.1.2 = (-125_i8);
    _21 = 84_u8 as f32;
    _6 = (*_2) * (*_2);
    _3 = _18;
    _9 = [0_usize,2_usize,3_usize,15817421720149508674_usize,5027446122509267323_usize,2_usize];
    _20.1.0.1 = Move(_11);
    (*_2) = _6;
    match _20.1.2 {
    0 => bb1,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    340282366920938463463374607431768211331 => bb7,
    _ => bb6
    }
    }
    bb3 = {
    _8 = (-63888197_i32);
    _10 = [(-20048_i16)];
    _2 = core::ptr::addr_of!(_7);
    (*_2) = !_6;
    _1 = _7 * (*_2);
    _7 = _6 & _6;
    (*_2) = 8855683578150958502_u64 as u128;
    (*_2) = _6;
    (*_2) = _3 as u128;
    (*_2) = _1 ^ _6;
    _10 = [2507_i16];
    (*_2) = _1 * _6;
    (*_2) = _5 + _1;
    _9 = [2_usize,5_usize,8478706686275046470_usize,13430585435754105106_usize,6_usize,7_usize];
    _3 = _4;
    (*_2) = _5 << _5;
    (*_2) = _5 | _1;
    _3 = _4;
    (*_2) = 20_isize as u128;
    (*_2) = _6;
    RET = [(-5421503131022242713_i64),3314990755848839441_i64,(-2621140388993511479_i64),1441724655716217591_i64,(-4539830972726541157_i64),(-7121959953051521229_i64),(-5711020084666786407_i64),8340748006683529143_i64];
    (*_2) = _1 ^ _5;
    (*_2) = _5 + _1;
    _1 = !(*_2);
    (*_2) = 44296_u16 as u128;
    _10 = [(-13735_i16)];
    (*_2) = (-19_i8) as u128;
    Goto(bb2)
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _1 = _7;
    (*_2) = _5 >> _6;
    Goto(bb8)
    }
    bb8 = {
    _20.1.0.0 = _21 * _21;
    _20.2 = core::ptr::addr_of_mut!(_22);
    _20.1.1 = 116959775235563528157867394115068483339_i128;
    _16 = _7;
    _20.0 = _10;
    _10 = _20.0;
    _20.1.0.0 = _8 as f32;
    (*_2) = !_6;
    RET = [Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0)];
    (*_2) = _16 << _6;
    (*_2) = _6;
    _23 = 1681138052_u32;
    _1 = _7 - _7;
    _20.1.0.0 = _21;
    (*_2) = !_16;
    place!(Field::<u64>(Variant(_14, 2), 1)) = 13544788271725735693_u64 ^ 13604266776320669249_u64;
    (*_2) = _1;
    RET = [Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0)];
    _3 = _18;
    (*_2) = _16 + _16;
    (*_2) = _6 << _1;
    (*_2) = _16 * _16;
    (*_2) = _6;
    _13 = core::ptr::addr_of!(place!(Field::<u64>(Variant(_14, 2), 1)));
    (*_13) = 19564_u16 as u64;
    (*_13) = Field::<i64>(Variant(_14, 2), 0) as u64;
    (*_13) = _20.1.1 as u64;
    (*_13) = 15812362827534687977_u64;
    match Field::<u64>(Variant(_14, 2), 1) {
    0 => bb1,
    1 => bb7,
    2 => bb9,
    3 => bb10,
    4 => bb11,
    15812362827534687977 => bb13,
    _ => bb12
    }
    }
    bb9 = {
    _8 = (-63888197_i32);
    _10 = [(-20048_i16)];
    _2 = core::ptr::addr_of!(_7);
    (*_2) = !_6;
    _1 = _7 * (*_2);
    _7 = _6 & _6;
    (*_2) = 8855683578150958502_u64 as u128;
    (*_2) = _6;
    (*_2) = _3 as u128;
    (*_2) = _1 ^ _6;
    _10 = [2507_i16];
    (*_2) = _1 * _6;
    (*_2) = _5 + _1;
    _9 = [2_usize,5_usize,8478706686275046470_usize,13430585435754105106_usize,6_usize,7_usize];
    _3 = _4;
    (*_2) = _5 << _5;
    (*_2) = _5 | _1;
    _3 = _4;
    (*_2) = 20_isize as u128;
    (*_2) = _6;
    RET = [(-5421503131022242713_i64),3314990755848839441_i64,(-2621140388993511479_i64),1441724655716217591_i64,(-4539830972726541157_i64),(-7121959953051521229_i64),(-5711020084666786407_i64),8340748006683529143_i64];
    (*_2) = _1 ^ _5;
    (*_2) = _5 + _1;
    _1 = !(*_2);
    (*_2) = 44296_u16 as u128;
    _10 = [(-13735_i16)];
    (*_2) = (-19_i8) as u128;
    Goto(bb2)
    }
    bb10 = {
    Return()
    }
    bb11 = {
    Return()
    }
    bb12 = {
    Return()
    }
    bb13 = {
    (*_2) = _1 >> _16;
    (*_13) = 13063380083655150668_u64;
    match (*_13) {
    0 => bb6,
    1 => bb4,
    2 => bb14,
    3 => bb15,
    4 => bb16,
    5 => bb17,
    6 => bb18,
    13063380083655150668 => bb20,
    _ => bb19
    }
    }
    bb14 = {
    Return()
    }
    bb15 = {
    (*_2) = _6 * _6;
    (*_2) = _1 - _1;
    (*_2) = !_1;
    (*_2) = _1 - _6;
    _14 = Adt17::Variant2 { fld0: (-2743278750464176381_i64),fld1: 1812365929041232130_u64 };
    place!(Field::<i64>(Variant(_14, 2), 0)) = 6532643272737909616_i64 + 4033846221753023896_i64;
    (*_2) = !_1;
    (*_2) = (-4824387860452058698539511063881692232_i128) as u128;
    _11 = &place!(Field::<i64>(Variant(_14, 2), 0));
    place!(Field::<u64>(Variant(_14, 2), 1)) = !1173975934274335637_u64;
    _18 = _4;
    (*_2) = _5;
    _5 = _1 | (*_2);
    (*_2) = _1;
    _20.1.2 = (-125_i8);
    _21 = 84_u8 as f32;
    _6 = (*_2) * (*_2);
    _3 = _18;
    _9 = [0_usize,2_usize,3_usize,15817421720149508674_usize,5027446122509267323_usize,2_usize];
    _20.1.0.1 = Move(_11);
    (*_2) = _6;
    match _20.1.2 {
    0 => bb1,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    340282366920938463463374607431768211331 => bb7,
    _ => bb6
    }
    }
    bb16 = {
    Return()
    }
    bb17 = {
    _8 = (-63888197_i32);
    _10 = [(-20048_i16)];
    _2 = core::ptr::addr_of!(_7);
    (*_2) = !_6;
    _1 = _7 * (*_2);
    _7 = _6 & _6;
    (*_2) = 8855683578150958502_u64 as u128;
    (*_2) = _6;
    (*_2) = _3 as u128;
    (*_2) = _1 ^ _6;
    _10 = [2507_i16];
    (*_2) = _1 * _6;
    (*_2) = _5 + _1;
    _9 = [2_usize,5_usize,8478706686275046470_usize,13430585435754105106_usize,6_usize,7_usize];
    _3 = _4;
    (*_2) = _5 << _5;
    (*_2) = _5 | _1;
    _3 = _4;
    (*_2) = 20_isize as u128;
    (*_2) = _6;
    RET = [(-5421503131022242713_i64),3314990755848839441_i64,(-2621140388993511479_i64),1441724655716217591_i64,(-4539830972726541157_i64),(-7121959953051521229_i64),(-5711020084666786407_i64),8340748006683529143_i64];
    (*_2) = _1 ^ _5;
    (*_2) = _5 + _1;
    _1 = !(*_2);
    (*_2) = 44296_u16 as u128;
    _10 = [(-13735_i16)];
    (*_2) = (-19_i8) as u128;
    Goto(bb2)
    }
    bb18 = {
    _20.1.0.0 = _21 * _21;
    _20.2 = core::ptr::addr_of_mut!(_22);
    _20.1.1 = 116959775235563528157867394115068483339_i128;
    _16 = _7;
    _20.0 = _10;
    _10 = _20.0;
    _20.1.0.0 = _8 as f32;
    (*_2) = !_6;
    RET = [Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0)];
    (*_2) = _16 << _6;
    (*_2) = _6;
    _23 = 1681138052_u32;
    _1 = _7 - _7;
    _20.1.0.0 = _21;
    (*_2) = !_16;
    place!(Field::<u64>(Variant(_14, 2), 1)) = 13544788271725735693_u64 ^ 13604266776320669249_u64;
    (*_2) = _1;
    RET = [Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0)];
    _3 = _18;
    (*_2) = _16 + _16;
    (*_2) = _6 << _1;
    (*_2) = _16 * _16;
    (*_2) = _6;
    _13 = core::ptr::addr_of!(place!(Field::<u64>(Variant(_14, 2), 1)));
    (*_13) = 19564_u16 as u64;
    (*_13) = Field::<i64>(Variant(_14, 2), 0) as u64;
    (*_13) = _20.1.1 as u64;
    (*_13) = 15812362827534687977_u64;
    match Field::<u64>(Variant(_14, 2), 1) {
    0 => bb1,
    1 => bb7,
    2 => bb9,
    3 => bb10,
    4 => bb11,
    15812362827534687977 => bb13,
    _ => bb12
    }
    }
    bb19 = {
    Return()
    }
    bb20 = {
    (*_13) = 16958522189842835455_u64 ^ 8108216329836549849_u64;
    (*_13) = 84_u8 as u64;
    _17 = (*_13) as f64;
    (*_13) = 7671029437326019416_u64;
    (*_2) = _1 ^ _5;
    (*_2) = _1;
    _20.1.0.0 = _21 * _21;
    _20.3 = &mut _8;
    (*_13) = 8778203428032799991_u64 & 15604196237043157969_u64;
    (*_13) = !7595598547816728955_u64;
    (*_13) = !8537758432575136160_u64;
    _7 = !_16;
    (*_2) = !_16;
    (*_2) = !_1;
    _20.2 = core::ptr::addr_of_mut!(_22);
    _18 = _4;
    (*_2) = _1 - _1;
    (*_13) = 14692327063234469346_u64 ^ 2393417163371352300_u64;
    place!(Field::<i64>(Variant(_14, 2), 0)) = 6337032949156405979_i64 * (-5081088690905248701_i64);
    Call((*_2) = core::intrinsics::transmute(_6), ReturnTo(bb21), UnwindUnreachable())
    }
    bb21 = {
    _4 = _18;
    (*_2) = _16 | _6;
    place!(Field::<i64>(Variant(_14, 2), 0)) = (-8209103345200257314_i64) ^ 2029924473910211950_i64;
    (*_13) = 18172897870345347241_u64 - 16415105453604987613_u64;
    (*_2) = _16;
    _11 = &place!(Field::<i64>(Variant(_14, 2), 0));
    _20.1.0.1 = Move(_11);
    _7 = !_5;
    _5 = _16 >> (*_13);
    RET = [Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0),Field::<i64>(Variant(_14, 2), 0)];
    (*_2) = !_6;
    (*_2) = _16 - _6;
    (*_13) = false as u64;
    (*_13) = _4 as u64;
    _29 = _20.1.1 as isize;
    (*_13) = !11259024297163177598_u64;
    _25 = !(*_13);
    (*_13) = !_25;
    _20.1.0.1 = &place!(Field::<i64>(Variant(_14, 2), 0));
    _25 = (*_13);
    _30 = _21 * _20.1.0.0;
    (*_13) = !_25;
    _18 = _3;
    _30 = _20.1.0.0;
    (*_2) = _5 - _5;
    (*_13) = _25 & _25;
    _26 = -_17;
    Call((*_13) = core::intrinsics::bswap(_25), ReturnTo(bb22), UnwindUnreachable())
    }
    bb22 = {
    _4 = _18;
    (*_2) = _1 | _16;
    _17 = _20.1.0.0 as f64;
    (*_2) = (-137110578_i32) as u128;
    (*_13) = _25 * _25;
    (*_2) = _16 + _1;
    match _20.1.1 {
    116959775235563528157867394115068483339 => bb23,
    _ => bb19
    }
    }
    bb23 = {
    Goto(bb24)
    }
    bb24 = {
    (*_13) = !_25;
    (*_2) = _5 - _1;
    (*_13) = _25;
    _22 = Field::<i64>(Variant(_14, 2), 0) as isize;
    _33.0 = Move(_20.3);
    _23 = _3 as u32;
    _10 = _20.0;
    _21 = 36500_u16 as f32;
    _20.0 = [(-4285_i16)];
    _14 = Adt17::Variant2 { fld0: (-4324893476210376852_i64),fld1: _25 };
    _34 = -_17;
    _25 = (-4201428051213036589_i64) as u64;
    (*_2) = _1 & _1;
    (*_2) = _16 << _5;
    _27 = _29 | _22;
    _9 = [2545078021799383099_usize,10303818904545898152_usize,5275841410536051708_usize,9301541721954386838_usize,3_usize,2298414028237307500_usize];
    _33.2 = !false;
    (*_2) = _1;
    _33.2 = !true;
    (*_2) = _5;
    (*_2) = _6;
    _10 = [573_i16];
    match _20.1.1 {
    0 => bb11,
    1 => bb9,
    2 => bb19,
    116959775235563528157867394115068483339 => bb26,
    _ => bb25
    }
    }
    bb25 = {
    Return()
    }
    bb26 = {
    _17 = -_34;
    _42 = _20.1.2 as f64;
    _28 = (-1487248176_i32);
    (*_2) = !_6;
    (*_2) = _16;
    (*_2) = _16;
    _16 = (*_2);
    _22 = _27;
    _20.1.1 = (-22770762503720734168772105482677197596_i128);
    _14 = Adt17::Variant0 { fld0: _30,fld1: _42,fld2: 7787_u16 };
    _28 = 2066120719_i32 + 795882071_i32;
    _30 = 6_usize as f32;
    _9 = [5_usize,4_usize,5_usize,11067639834411661979_usize,0_usize,11456424913160607855_usize];
    _37 = &mut _28;
    (*_2) = _27 as u128;
    _30 = Field::<f32>(Variant(_14, 0), 0) * Field::<f32>(Variant(_14, 0), 0);
    _3 = _4;
    _1 = _7 << (*_37);
    (*_37) = !(-919490488_i32);
    (*_37) = 1856066517_i32;
    _4 = _18;
    _35.0 = -_42;
    (*_37) = (-569047106_i32) & 364074359_i32;
    _39 = &_18;
    _14 = Adt17::Variant3 { fld0: _33.2,fld1: (*_39),fld2: _23,fld3: _20.1.2,fld4: (*_2),fld5: (*_37),fld6: 161_u8,fld7: _25 };
    _24 = _25 as i64;
    Goto(bb27)
    }
    bb27 = {
    (*_2) = _1 * _5;
    _14 = Adt17::Variant2 { fld0: _24,fld1: _25 };
    (*_37) = _20.1.2 as i32;
    place!(Field::<i64>(Variant(_14, 2), 0)) = _24 * _24;
    (*_37) = (-1480854471_i32);
    _20.3 = &mut (*_37);
    _35 = (_17,);
    _33 = (Move(_37), _22, false, (-509590575_i32));
    _49 = (*_2) != (*_2);
    place!(Field::<u64>(Variant(_14, 2), 1)) = _25;
    _33.0 = &mut _33.3;
    _35 = (_26,);
    _48 = _20.1.1 ^ _20.1.1;
    (*_2) = !_16;
    (*_2) = !_6;
    (*_2) = _5 >> _29;
    (*_2) = _6;
    _1 = _48 as u128;
    Goto(bb28)
    }
    bb28 = {
    _4 = (*_39);
    (*_2) = !_5;
    Goto(bb29)
    }
    bb29 = {
    (*_2) = _5 >> _5;
    (*_2) = _5 - _16;
    _51 = Move(_14);
    (*_2) = !_6;
    _3 = (*_39);
    _42 = Field::<i64>(Variant(_51, 2), 0) as f64;
    place!(Field::<i64>(Variant(_51, 2), 0)) = _24 - _24;
    (*_2) = !_1;
    _42 = _34 - _34;
    _37 = Move(_20.3);
    _13 = core::ptr::addr_of!(place!(Field::<u64>(Variant(_51, 2), 1)));
    RET = [_24,Field::<i64>(Variant(_51, 2), 0),Field::<i64>(Variant(_51, 2), 0),_24,Field::<i64>(Variant(_51, 2), 0),_24,Field::<i64>(Variant(_51, 2), 0),_24];
    _56.fld0 = (-1940477509_i32);
    (*_2) = _16;
    match _56.fld0 {
    0 => bb8,
    340282366920938463463374607429827733947 => bb30,
    _ => bb28
    }
    }
    bb30 = {
    _18 = _3;
    _57.1.1 = Field::<i64>(Variant(_51, 2), 0) as i128;
    (*_2) = !_5;
    _20.1.0.1 = &_24;
    (*_2) = _16 >> (*_13);
    _11 = &_24;
    _15 = core::ptr::addr_of_mut!(_20.1);
    _57.2 = core::ptr::addr_of_mut!(_44);
    (*_2) = _16;
    (*_13) = _25;
    (*_15).2 = -(-77_i8);
    (*_15).1 = _57.1.1;
    _59 = 3897_u16 as isize;
    (*_15).1 = _57.1.1 << _6;
    (*_15).0 = (_30, Move(_11));
    (*_15).0.1 = &_24;
    (*_15).1 = !_57.1.1;
    (*_15).0.0 = _30 - _21;
    (*_15).0.0 = _21 - _30;
    (*_13) = !_25;
    (*_15).2 = 91_i8;
    _57.1.0.1 = &place!(Field::<i64>(Variant(_51, 2), 0));
    _56.fld2 = _22 as f64;
    (*_15).0 = (_30, Move(_57.1.0.1));
    (*_15).2 = (-101_i8) << _7;
    (*_2) = _35.0 as u128;
    Goto(bb31)
    }
    bb31 = {
    (*_15).1 = -_48;
    _57.1.0.1 = &_24;
    (*_15).2 = 55095_u16 as i8;
    _24 = !Field::<i64>(Variant(_51, 2), 0);
    match _56.fld0 {
    0 => bb8,
    1 => bb18,
    2 => bb24,
    3 => bb4,
    4 => bb21,
    5 => bb11,
    340282366920938463463374607429827733947 => bb33,
    _ => bb32
    }
    }
    bb32 = {
    (*_2) = _1 * _5;
    _14 = Adt17::Variant2 { fld0: _24,fld1: _25 };
    (*_37) = _20.1.2 as i32;
    place!(Field::<i64>(Variant(_14, 2), 0)) = _24 * _24;
    (*_37) = (-1480854471_i32);
    _20.3 = &mut (*_37);
    _35 = (_17,);
    _33 = (Move(_37), _22, false, (-509590575_i32));
    _49 = (*_2) != (*_2);
    place!(Field::<u64>(Variant(_14, 2), 1)) = _25;
    _33.0 = &mut _33.3;
    _35 = (_26,);
    _48 = _20.1.1 ^ _20.1.1;
    (*_2) = !_16;
    (*_2) = !_6;
    (*_2) = _5 >> _29;
    (*_2) = _6;
    _1 = _48 as u128;
    Goto(bb28)
    }
    bb33 = {
    _20.3 = &mut _56.fld0;
    (*_15).0.0 = 179_u8 as f32;
    (*_15).2 = -(-26_i8);
    _55 = &mut _20.1.1;
    Goto(bb34)
    }
    bb34 = {
    (*_15).0.0 = _21 - _30;
    _22 = _27;
    (*_55) = _48 ^ _48;
    (*_15).2 = 28_i8 * 25_i8;
    _29 = _6 as isize;
    _14 = Adt17::Variant0 { fld0: (*_15).0.0,fld1: _35.0,fld2: 31888_u16 };
    _7 = _16 & _5;
    _62.1 = (*_55) ^ (*_55);
    _14 = Adt17::Variant1 { fld0: 63055_u16 };
    (*_15).0.1 = &_24;
    _64.0 = &mut (*_55);
    _48 = _62.1 | _62.1;
    (*_15).2 = 60_i8;
    _64.0 = Move(_55);
    _51 = Adt17::Variant3 { fld0: _49,fld1: _18,fld2: _23,fld3: (*_15).2,fld4: (*_2),fld5: 160358066_i32,fld6: 145_u8,fld7: _25 };
    (*_15).0.1 = Move(_57.1.0.1);
    _57.0 = [7952_i16];
    Goto(bb35)
    }
    bb35 = {
    place!(Field::<u8>(Variant(_51, 3), 6)) = 204_u8 * 197_u8;
    (*_15).0.0 = _21;
    match Field::<i8>(Variant(_51, 3), 3) {
    0 => bb1,
    1 => bb19,
    2 => bb3,
    3 => bb31,
    4 => bb32,
    60 => bb36,
    _ => bb15
    }
    }
    bb36 = {
    (*_15).0.1 = &_24;
    (*_2) = _5 >> Field::<u128>(Variant(_51, 3), 4);
    _5 = Field::<u128>(Variant(_51, 3), 4);
    _27 = !_29;
    (*_15).2 = 26572_u16 as i8;
    _62.0.0 = (*_15).0.0;
    _13 = core::ptr::addr_of!(_25);
    _35.0 = -_42;
    _51 = Adt17::Variant2 { fld0: _24,fld1: (*_13) };
    (*_15).2 = _29 as i8;
    _14 = Move(_51);
    (*_15).0.0 = _30;
    _41 = [27468_i16];
    (*_15).0.0 = Field::<i64>(Variant(_14, 2), 0) as f32;
    _30 = (*_15).0.0 - (*_15).0.0;
    (*_2) = _5 * _5;
    (*_15).0.1 = &place!(Field::<i64>(Variant(_14, 2), 0));
    _51 = Adt17::Variant3 { fld0: _49,fld1: _4,fld2: _23,fld3: (*_15).2,fld4: (*_2),fld5: (-1613155894_i32),fld6: 22_u8,fld7: (*_13) };
    (*_2) = (-28104_i16) as u128;
    place!(Field::<u128>(Variant(_51, 3), 4)) = _16 >> (*_15).2;
    _62.0.0 = -(*_15).0.0;
    (*_15).0.0 = _62.0.0 - _62.0.0;
    (*_2) = !_16;
    (*_2) = Field::<u128>(Variant(_51, 3), 4) | _5;
    _7 = _5 | Field::<u128>(Variant(_51, 3), 4);
    _58 = Move(_13);
    _49 = Field::<bool>(Variant(_51, 3), 0) & Field::<bool>(Variant(_51, 3), 0);
    Goto(bb37)
    }
    bb37 = {
    _62.2 = (*_15).2 << _6;
    place!(Field::<u8>(Variant(_51, 3), 6)) = 93_u8 ^ 122_u8;
    (*_15).0.1 = &_24;
    _57.2 = core::ptr::addr_of_mut!(_44);
    Goto(bb38)
    }
    bb38 = {
    _62 = (Move((*_15).0), _48, (*_15).2);
    (*_15).0.0 = _30;
    (*_15).0.1 = &place!(Field::<i64>(Variant(_14, 2), 0));
    (*_15).0.0 = _62.0.0;
    (*_15).0.0 = _62.0.0 - _30;
    (*_2) = !Field::<u128>(Variant(_51, 3), 4);
    _69 = [_62.1];
    _54 = 8790_u16;
    match _54 {
    0 => bb7,
    8790 => bb39,
    _ => bb22
    }
    }
    bb39 = {
    _66 = core::ptr::addr_of_mut!(_22);
    _57.1 = (Move((*_15).0), _48, (*_15).2);
    (*_15).0.1 = &_24;
    Goto(bb40)
    }
    bb40 = {
    _36 = &_54;
    (*_15).0.0 = _62.0.0 + _62.0.0;
    _53 = core::ptr::addr_of_mut!(_63);
    (*_2) = Field::<u128>(Variant(_51, 3), 4);
    (*_2) = (-2086550480_i32) as u128;
    _54 = 39102_u16;
    (*_15).0.1 = &place!(Field::<i64>(Variant(_14, 2), 0));
    (*_53) = _27;
    (*_15).2 = !_62.2;
    _62 = (Move((*_15).0), _48, Field::<i8>(Variant(_51, 3), 3));
    (*_15).0.1 = &_24;
    _40 = core::ptr::addr_of!(_67);
    place!(Field::<u8>(Variant(_51, 3), 6)) = !74_u8;
    (*_66) = -(*_53);
    (*_15).2 = Field::<i8>(Variant(_51, 3), 3) & _57.1.2;
    (*_66) = -_29;
    (*_53) = !_22;
    _80 = _4;
    _62.0 = (_30, Move((*_15).0.1));
    _77 = [_25,_25,Field::<u64>(Variant(_51, 3), 7),Field::<u64>(Variant(_51, 3), 7)];
    _72 = _4;
    (*_15).2 = _62.2;
    (*_40) = Field::<i64>(Variant(_14, 2), 0) as i16;
    _44 = -(*_53);
    Goto(bb41)
    }
    bb41 = {
    _17 = _42 * _42;
    place!(Field::<i8>(Variant(_51, 3), 3)) = (*_15).2 + (*_15).2;
    (*_2) = Field::<u128>(Variant(_51, 3), 4) - _16;
    (*_53) = (*_66) ^ (*_66);
    (*_15).0.1 = &_24;
    _76 = _23 as isize;
    (*_15).2 = Field::<i8>(Variant(_51, 3), 3);
    _83 = !Field::<u8>(Variant(_51, 3), 6);
    _4 = _18;
    (*_15).0.1 = &place!(Field::<i64>(Variant(_14, 2), 0));
    Goto(bb42)
    }
    bb42 = {
    _7 = _5 & _5;
    (*_15).0.0 = (*_2) as f32;
    (*_66) = (*_53) << (*_2);
    _62.0.0 = _54 as f32;
    _39 = &place!(Field::<char>(Variant(_51, 3), 1));
    (*_66) = (*_53) | (*_53);
    (*_2) = (-314437851_i32) as u128;
    (*_40) = 6_usize as i16;
    _57.1.1 = _62.1 * _48;
    place!(Field::<i8>(Variant(_51, 3), 3)) = -(*_15).2;
    (*_66) = (*_53);
    (*_15).0.1 = &_24;
    _23 = !Field::<u32>(Variant(_51, 3), 2);
    _3 = (*_39);
    _68 = core::ptr::addr_of!((*_2));
    _17 = _34;
    (*_15).0.0 = -_21;
    _51 = Move(_14);
    _64.1 = Move(_15);
    (*_2) = _5 ^ _16;
    Call(_23 = core::intrinsics::bswap(2979302943_u32), ReturnTo(bb43), UnwindUnreachable())
    }
    bb43 = {
    _79 = 4_usize as i8;
    _62.2 = _57.1.2;
    (*_40) = -18456_i16;
    (*_2) = _16;
    _23 = 554981245_u32 >> _57.1.1;
    Call((*_66) = core::intrinsics::bswap((*_53)), ReturnTo(bb44), UnwindUnreachable())
    }
    bb44 = {
    _87 = core::ptr::addr_of_mut!(_88);
    _16 = _59 as u128;
    (*_87) = [(*_40),(*_40),(*_40),(*_40),(*_40),(*_40),(*_40)];
    (*_53) = (*_66);
    _72 = _18;
    _60 = 1430430900_i32 & 905064344_i32;
    (*_53) = (*_66) ^ (*_66);
    _13 = core::ptr::addr_of!(place!(Field::<u64>(Variant(_51, 2), 1)));
    _51 = Adt17::Variant0 { fld0: _57.1.0.0,fld1: _35.0,fld2: _54 };
    (*_87) = [(*_40),(*_40),(*_40),(*_40),(*_40),(*_40),(*_40)];
    (*_87) = [(*_40),(*_40),(*_40),(*_40),(*_40),(*_40),(*_40)];
    (*_53) = (*_66) >> (*_2);
    _85 = Move(_58);
    _64.0 = &mut _48;
    (*_2) = !_5;
    _55 = &mut _57.1.1;
    _15 = Move(_64.1);
    (*_87) = [(*_40),(*_40),(*_40),(*_40),(*_40),(*_40),(*_40)];
    _35.0 = _26 - _42;
    (*_87) = [(*_40),(*_40),_67,(*_40),(*_40),(*_40),(*_40)];
    _74 = (*_2) as f32;
    Goto(bb45)
    }
    bb45 = {
    _64 = (Move(_55), Move(_15));
    _81 = Move(_64.1);
    _36 = &place!(Field::<u16>(Variant(_51, 0), 2));
    (*_87) = [(*_40),(*_40),(*_40),(*_40),(*_40),(*_40),(*_40)];
    match (*_36) {
    0 => bb46,
    1 => bb47,
    2 => bb48,
    39102 => bb50,
    _ => bb49
    }
    }
    bb46 = {
    _8 = (-63888197_i32);
    _10 = [(-20048_i16)];
    _2 = core::ptr::addr_of!(_7);
    (*_2) = !_6;
    _1 = _7 * (*_2);
    _7 = _6 & _6;
    (*_2) = 8855683578150958502_u64 as u128;
    (*_2) = _6;
    (*_2) = _3 as u128;
    (*_2) = _1 ^ _6;
    _10 = [2507_i16];
    (*_2) = _1 * _6;
    (*_2) = _5 + _1;
    _9 = [2_usize,5_usize,8478706686275046470_usize,13430585435754105106_usize,6_usize,7_usize];
    _3 = _4;
    (*_2) = _5 << _5;
    (*_2) = _5 | _1;
    _3 = _4;
    (*_2) = 20_isize as u128;
    (*_2) = _6;
    RET = [(-5421503131022242713_i64),3314990755848839441_i64,(-2621140388993511479_i64),1441724655716217591_i64,(-4539830972726541157_i64),(-7121959953051521229_i64),(-5711020084666786407_i64),8340748006683529143_i64];
    (*_2) = _1 ^ _5;
    (*_2) = _5 + _1;
    _1 = !(*_2);
    (*_2) = 44296_u16 as u128;
    _10 = [(-13735_i16)];
    (*_2) = (-19_i8) as u128;
    Goto(bb2)
    }
    bb47 = {
    _79 = 4_usize as i8;
    _62.2 = _57.1.2;
    (*_40) = -18456_i16;
    (*_2) = _16;
    _23 = 554981245_u32 >> _57.1.1;
    Call((*_66) = core::intrinsics::bswap((*_53)), ReturnTo(bb44), UnwindUnreachable())
    }
    bb48 = {
    _1 = _7;
    (*_2) = _5 >> _6;
    Goto(bb8)
    }
    bb49 = {
    _20.3 = &mut _56.fld0;
    (*_15).0.0 = 179_u8 as f32;
    (*_15).2 = -(-26_i8);
    _55 = &mut _20.1.1;
    Goto(bb34)
    }
    bb50 = {
    _55 = &mut _62.1;
    _1 = !(*_2);
    _51 = Adt17::Variant1 { fld0: _54 };
    _80 = _72;
    _15 = Move(_81);
    (*_53) = (*_66) ^ (*_66);
    (*_2) = _23 as u128;
    _7 = (*_55) as u128;
    _63 = -(*_66);
    (*_40) = -625_i16;
    (*_66) = !(*_53);
    Goto(bb51)
    }
    bb51 = {
    Call(_99 = dump_var(3_usize, 5_usize, Move(_5), 60_usize, Move(_60), 72_usize, Move(_72), 80_usize, Move(_80)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_99 = dump_var(3_usize, 88_usize, Move(_88), 67_usize, Move(_67), 44_usize, Move(_44), 27_usize, Move(_27)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_99 = dump_var(3_usize, 6_usize, Move(_6), 7_usize, Move(_7), 69_usize, Move(_69), 49_usize, Move(_49)), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Call(_99 = dump_var(3_usize, 48_usize, Move(_48), 24_usize, Move(_24), 3_usize, Move(_3), 22_usize, Move(_22)), ReturnTo(bb55), UnwindUnreachable())
    }
    bb55 = {
    Call(_99 = dump_var(3_usize, 23_usize, Move(_23), 100_usize, _100, 100_usize, _100, 100_usize, _100), ReturnTo(bb56), UnwindUnreachable())
    }
    bb56 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(
    mut _1: *const u128,
    mut _2: char,
    mut _3: char,
    mut _4: char,
    mut _5: u128,
    mut _6: i32,
    mut _7: char,
) -> [i64; 8] {
    mir! {
    type RET = [i64; 8];
    let _8: &'static mut (u32, &'static mut i32);
    let _9: &'static [i8; 2];
    let _10: i64;
    let _11: i64;
    let _12: i8;
    let _13: f64;
    let _14: *const u64;
    let _15: char;
    let _16: &'static char;
    let _17: *const i16;
    let _18: char;
    let _19: *const u64;
    let _20: f32;
    let _21: *mut [i128; 1];
    let _22: char;
    let _23: i16;
    let _24: *const (&'static mut i32, isize, bool, i32);
    let _25: bool;
    let _26: f64;
    let _27: char;
    let _28: *const i16;
    let _29: isize;
    let _30: i8;
    let _31: *mut ((f32, &'static i64), i128, i8);
    let _32: [i128; 6];
    let _33: *const (u32, &'static mut i32);
    let _34: &'static i64;
    let _35: *mut [i128; 1];
    let _36: u8;
    let _37: &'static mut (u32, &'static mut i32);
    let _38: &'static mut i128;
    let _39: u32;
    let _40: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _41: &'static *mut isize;
    let _42: isize;
    let _43: &'static [i8; 2];
    let _44: i128;
    let _45: &'static mut i128;
    let _46: usize;
    let _47: &'static u16;
    let _48: u128;
    let _49: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _50: f64;
    let _51: isize;
    let _52: ((f32, &'static i64), i128, i8);
    let _53: u32;
    let _54: u64;
    let _55: (&'static u16,);
    let _56: [i8; 5];
    let _57: isize;
    let _58: [i128; 5];
    let _59: u32;
    let _60: f32;
    let _61: char;
    let _62: i16;
    let _63: &'static mut (u32, &'static mut i32);
    let _64: *const i16;
    let _65: char;
    let _66: u64;
    let _67: *mut ((f32, &'static i64), i128, i8);
    let _68: &'static *mut isize;
    let _69: *const u128;
    let _70: *const (&'static mut i32, isize, bool, i32);
    let _71: [u64; 4];
    let _72: bool;
    let _73: &'static mut i32;
    let _74: &'static mut [i128; 6];
    let _75: [usize; 6];
    let _76: &'static *mut isize;
    let _77: u8;
    let _78: (&'static u16,);
    let _79: ([i128; 6],);
    let _80: *const [char; 1];
    let _81: [i128; 5];
    let _82: isize;
    let _83: [u64; 1];
    let _84: ();
    let _85: ();
    {
    _6 = 1400651243_i32;
    _7 = _4;
    _7 = _4;
    _6 = (-13262813_i32) ^ (-1230220639_i32);
    _5 = 227720176607144328400453272019374216690_u128;
    Goto(bb1)
    }
    bb1 = {
    _2 = _3;
    RET = [1332249008755274020_i64,6693170280691202256_i64,(-1415260262120730282_i64),(-5746402619670631836_i64),9132363161803843379_i64,(-3005008093317081044_i64),6964297016513735818_i64,4065880331697555878_i64];
    _7 = _4;
    _1 = core::ptr::addr_of!(_5);
    (*_1) = 10610730938896832690028039383543636194_u128 & 204677059286126299279622868713671206724_u128;
    (*_1) = 191852446585870682315354179811999510267_u128 * 185874272112725497923441198263763718169_u128;
    _10 = 7713679079108259199_i64 ^ 8151388483663171648_i64;
    (*_1) = 274668362406134757225505752345178434289_u128 + 11747623101949614984653949331926245307_u128;
    (*_1) = 182238245222436666498940782967477264445_u128 + 187399900771442157044878220801440219057_u128;
    Call((*_1) = fn5(_4), ReturnTo(bb2), UnwindUnreachable())
    }
    bb2 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb3 = {
    (*_1) = 290051668108346229022701942325651135997_u128;
    (*_1) = 9704247418170120309_usize as u128;
    _1 = core::ptr::addr_of!((*_1));
    (*_1) = 233499485630538100229241222074300510937_u128;
    (*_1) = 238283838990643853851193858128083046665_u128 - 309147750621834657317952144072779516621_u128;
    _7 = _3;
    _2 = _4;
    (*_1) = 179111325474640088383397744076597703886_u128 << _6;
    (*_1) = _3 as u128;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = !71357116137132707900196955835428331329_u128;
    _10 = _11;
    _6 = -(-1180280811_i32);
    Goto(bb4)
    }
    bb4 = {
    (*_1) = 279374271472991944768998086106622466448_u128;
    _5 = 17629394041221852360_u64 as u128;
    _7 = _4;
    (*_1) = 302770869952002958713312225794251967744_u128 * 194678901111196167999973594379615236647_u128;
    _12 = (-120_i8) * (-127_i8);
    (*_1) = _6 as u128;
    _1 = core::ptr::addr_of!((*_1));
    _15 = _7;
    (*_1) = 164822466954682819146342180017236110803_u128 + 4086619809353240490279890703665129070_u128;
    (*_1) = 75749966289964447429889840906704285264_u128 * 165239693068613385207634100544891766664_u128;
    (*_1) = 1633485438_u32 as u128;
    _3 = _15;
    (*_1) = 262055357930085609654343081045746421844_u128;
    _12 = (-84_i8) ^ 118_i8;
    (*_1) = 2_usize as u128;
    (*_1) = !16111746713554349805953087908777973719_u128;
    _18 = _15;
    (*_1) = 194946383003725978580269467141960399958_u128 & 223139611265725078073110623520021079990_u128;
    (*_1) = true as u128;
    (*_1) = 246665261510272322553422292296694657062_u128;
    (*_1) = 140_u8 as u128;
    Goto(bb5)
    }
    bb5 = {
    (*_1) = 133458110727825574379102684074883008344_u128 << _11;
    _11 = _10;
    Goto(bb6)
    }
    bb6 = {
    (*_1) = 213108122550356480881587186134699826521_u128 >> _11;
    (*_1) = 1018926193947418830713316162524572552_u128;
    (*_1) = 14147166173254082477737273743969725867_u128 + 110593785702224850798314316773274703618_u128;
    (*_1) = 236910700984830446744094843828905719023_u128 * 287144948328255236251563386799631359404_u128;
    (*_1) = !205562425419684070920519142109525382471_u128;
    (*_1) = 23629549006865251599388705705633069415_u128 ^ 144853106283465521122689846042427160222_u128;
    _13 = _10 as f64;
    (*_1) = 137899614549844930978727659215717238294_u128;
    RET = [_10,_10,_10,_11,_11,_10,_11,_11];
    match (*_1) {
    0 => bb1,
    1 => bb3,
    2 => bb7,
    3 => bb8,
    4 => bb9,
    5 => bb10,
    6 => bb11,
    137899614549844930978727659215717238294 => bb13,
    _ => bb12
    }
    }
    bb7 = {
    (*_1) = 133458110727825574379102684074883008344_u128 << _11;
    _11 = _10;
    Goto(bb6)
    }
    bb8 = {
    (*_1) = 279374271472991944768998086106622466448_u128;
    _5 = 17629394041221852360_u64 as u128;
    _7 = _4;
    (*_1) = 302770869952002958713312225794251967744_u128 * 194678901111196167999973594379615236647_u128;
    _12 = (-120_i8) * (-127_i8);
    (*_1) = _6 as u128;
    _1 = core::ptr::addr_of!((*_1));
    _15 = _7;
    (*_1) = 164822466954682819146342180017236110803_u128 + 4086619809353240490279890703665129070_u128;
    (*_1) = 75749966289964447429889840906704285264_u128 * 165239693068613385207634100544891766664_u128;
    (*_1) = 1633485438_u32 as u128;
    _3 = _15;
    (*_1) = 262055357930085609654343081045746421844_u128;
    _12 = (-84_i8) ^ 118_i8;
    (*_1) = 2_usize as u128;
    (*_1) = !16111746713554349805953087908777973719_u128;
    _18 = _15;
    (*_1) = 194946383003725978580269467141960399958_u128 & 223139611265725078073110623520021079990_u128;
    (*_1) = true as u128;
    (*_1) = 246665261510272322553422292296694657062_u128;
    (*_1) = 140_u8 as u128;
    Goto(bb5)
    }
    bb9 = {
    (*_1) = 290051668108346229022701942325651135997_u128;
    (*_1) = 9704247418170120309_usize as u128;
    _1 = core::ptr::addr_of!((*_1));
    (*_1) = 233499485630538100229241222074300510937_u128;
    (*_1) = 238283838990643853851193858128083046665_u128 - 309147750621834657317952144072779516621_u128;
    _7 = _3;
    _2 = _4;
    (*_1) = 179111325474640088383397744076597703886_u128 << _6;
    (*_1) = _3 as u128;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = !71357116137132707900196955835428331329_u128;
    _10 = _11;
    _6 = -(-1180280811_i32);
    Goto(bb4)
    }
    bb10 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb11 = {
    _2 = _3;
    RET = [1332249008755274020_i64,6693170280691202256_i64,(-1415260262120730282_i64),(-5746402619670631836_i64),9132363161803843379_i64,(-3005008093317081044_i64),6964297016513735818_i64,4065880331697555878_i64];
    _7 = _4;
    _1 = core::ptr::addr_of!(_5);
    (*_1) = 10610730938896832690028039383543636194_u128 & 204677059286126299279622868713671206724_u128;
    (*_1) = 191852446585870682315354179811999510267_u128 * 185874272112725497923441198263763718169_u128;
    _10 = 7713679079108259199_i64 ^ 8151388483663171648_i64;
    (*_1) = 274668362406134757225505752345178434289_u128 + 11747623101949614984653949331926245307_u128;
    (*_1) = 182238245222436666498940782967477264445_u128 + 187399900771442157044878220801440219057_u128;
    Call((*_1) = fn5(_4), ReturnTo(bb2), UnwindUnreachable())
    }
    bb12 = {
    Return()
    }
    bb13 = {
    (*_1) = 43782095141273804780832609464896043946_u128 >> _12;
    _6 = -347955325_i32;
    _10 = !_11;
    _22 = _3;
    (*_1) = 3900143419688060027196254362794596126_u128 * 133806396525917703986914566812946720344_u128;
    _16 = &_2;
    Goto(bb14)
    }
    bb14 = {
    _20 = 3953033189_u32 as f32;
    _17 = core::ptr::addr_of!(_23);
    _11 = _10 * _10;
    _16 = &_15;
    _6 = (-267578583_i32) | 346339131_i32;
    (*_17) = !13430_i16;
    (*_17) = 13224_i16 & 19954_i16;
    (*_17) = 7_usize as i16;
    _3 = (*_16);
    (*_1) = 95107995049924313787633450168956048835_u128 | 36751718587372345785916623757786531529_u128;
    (*_1) = 131895679997810199830858936393789845299_u128 << _11;
    (*_17) = !(-14035_i16);
    (*_17) = (-29518_i16);
    (*_1) = 133353909934011525828046245421665807803_u128;
    _2 = (*_16);
    (*_17) = 20027_i16 ^ 29373_i16;
    _6 = (-1559205983_i32);
    (*_1) = 200133920705490181693109595844565353254_u128 & 240423962008905545339614383101919446802_u128;
    (*_17) = -17563_i16;
    _15 = _4;
    match _6 {
    0 => bb1,
    1 => bb2,
    340282366920938463463374607430209005473 => bb15,
    _ => bb7
    }
    }
    bb15 = {
    (*_17) = !(-10457_i16);
    (*_17) = (-10182_i16) << (*_1);
    _2 = _22;
    Goto(bb16)
    }
    bb16 = {
    (*_17) = !(-28346_i16);
    (*_17) = -(-3846_i16);
    _23 = (-25502_i16) >> (*_1);
    (*_17) = -26851_i16;
    (*_17) = !(-8773_i16);
    (*_1) = 148647397762382161892223678064724865129_u128 >> _6;
    (*_1) = 232489199867593991751892579277182164416_u128 >> _11;
    Goto(bb17)
    }
    bb17 = {
    (*_17) = 23153961176518084848974018997964466764_i128 as i16;
    _25 = false | false;
    (*_17) = 4369_i16;
    _18 = _15;
    (*_1) = !136064150463500283620653301120149725390_u128;
    _28 = core::ptr::addr_of!((*_17));
    (*_28) = 4123_i16 * (-27780_i16);
    _18 = _3;
    (*_28) = 15939_i16 << (*_1);
    (*_1) = 207228075047299738403066134584046148659_u128 ^ 336445377994367532775422603716149869329_u128;
    (*_17) = 21143_i16;
    _27 = _2;
    _13 = (*_1) as f64;
    (*_1) = !151695979266511081136005342386515809804_u128;
    (*_17) = !(-25025_i16);
    _30 = _12 ^ _12;
    (*_17) = -(-1390_i16);
    _7 = _27;
    (*_1) = 71056510861827336013714145240883269540_i128 as u128;
    (*_1) = 41034880084382350412562211982361728341_u128 << (*_17);
    match _6 {
    0 => bb11,
    1 => bb14,
    2 => bb6,
    3 => bb4,
    4 => bb5,
    340282366920938463463374607430209005473 => bb19,
    _ => bb18
    }
    }
    bb18 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb19 = {
    _34 = &_10;
    _1 = core::ptr::addr_of!((*_1));
    _6 = 9223372036854775807_isize as i32;
    _11 = _20 as i64;
    (*_1) = 243374718714010207705481608054292872111_u128 << (*_34);
    (*_1) = 2014369318761685714_u64 as u128;
    (*_17) = 28672_i16;
    _29 = 227_u8 as isize;
    _18 = _4;
    (*_1) = 97454296262880271457646097215872446262_u128 * 94833649568812972755323983178175212141_u128;
    (*_17) = (-15630_i16) & (-4373_i16);
    _12 = _30 ^ _30;
    (*_17) = 30696_i16 * (-7258_i16);
    _29 = 127_isize & 9223372036854775807_isize;
    _2 = _3;
    Goto(bb20)
    }
    bb20 = {
    (*_17) = (-26640_i16) >> (*_1);
    (*_1) = 193240813767221278670824134172748187876_u128 + 307026875028062408239323748275492659686_u128;
    (*_1) = !4819228234987077223912213239546413313_u128;
    _32 = [(-147472937031570989919156785807918124539_i128),139839877953415162308498105801011884617_i128,(-156510755301214459857408364285876849840_i128),2867451390566700535974217642633317175_i128,(-88151824756120899259135211726714480453_i128),21686749692869541101391786572488726380_i128];
    _3 = _7;
    (*_1) = 292122379467784701251176959601098831107_u128 ^ 235457840309751146885168470691288686712_u128;
    (*_17) = !(-1273_i16);
    (*_17) = !(-14604_i16);
    _22 = _18;
    (*_17) = -(-30958_i16);
    (*_17) = (-19400_i16) - 10656_i16;
    _34 = &_11;
    (*_1) = !335257833671488073031775182331316601847_u128;
    (*_1) = 27009129694005218758006358143982330655_u128;
    (*_17) = 12532_i16;
    (*_17) = 28698_i16;
    (*_1) = _20 as u128;
    _40.3 = &mut _6;
    (*_1) = 18391471263641930883_u64 as u128;
    (*_1) = 15962083593757297881110037323220246895_u128 * 29820601834325311576607472708804428973_u128;
    (*_17) = 21669_i16 << (*_1);
    _17 = core::ptr::addr_of!((*_17));
    (*_17) = 2249_i16 | (-11810_i16);
    _34 = &_10;
    (*_1) = !15660147457014426533496934172786185285_u128;
    (*_17) = 2555_i16 - (-19188_i16);
    _39 = 3907467690_u32 << (*_34);
    Goto(bb21)
    }
    bb21 = {
    (*_1) = 186166670596138540961465571827026263708_u128 * 270512136002596044996523826421011909912_u128;
    (*_1) = 1928696248297914200487126293617121509_u128 ^ 188185983149803793367040487511605237418_u128;
    _40.2 = core::ptr::addr_of_mut!(_29);
    (*_17) = 30835_i16 | 358_i16;
    _5 = 84341210686498857410103463927738492572_u128 - 39945942106463768331013823468670269926_u128;
    _17 = core::ptr::addr_of!((*_17));
    (*_1) = 13165_u16 as u128;
    (*_1) = !61908279493935703074633344598026755004_u128;
    _17 = core::ptr::addr_of!((*_17));
    _32 = [(-92627183897872666039849420051709821848_i128),55682930659525286889672185352568244369_i128,(-698259237952472001639675159812828699_i128),58656029111377103523800445104247667377_i128,39593859364485989308516322785931423460_i128,90028958103030339576014488201212644828_i128];
    _40.1.0 = (_20, Move(_34));
    (*_1) = _29 as u128;
    (*_17) = (-40_i16) * 18852_i16;
    (*_17) = _30 as i16;
    _28 = core::ptr::addr_of!(_23);
    Goto(bb22)
    }
    bb22 = {
    (*_1) = 326226770865830376658770914698274124106_u128 * 122505463756181490713721850322894206914_u128;
    _36 = 69_u8;
    (*_28) = 10976_i16 | (-24460_i16);
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_28) = (-11309_i16) + 21428_i16;
    (*_1) = 77827418527527923811142792561582023002_u128 << _12;
    _39 = !2293892792_u32;
    (*_17) = (-11203_i16) + (-10915_i16);
    _13 = (-55415161_i32) as f64;
    _22 = _7;
    _40.1.1 = (-64391727962680443992102656897699559719_i128) << (*_1);
    (*_1) = 59816375015300355795598267644240576540_u128;
    _49.0.0 = _20 * _20;
    (*_1) = !55913039035696448896758505924305778661_u128;
    (*_1) = 220940250387102727635093988506720328352_u128 & 254426358170348957136438772175707100452_u128;
    _49.0.1 = &_11;
    _49.1 = 7_usize & 10841065192915870322_usize;
    _44 = _40.1.1;
    _42 = !_29;
    (*_1) = 92160996969582018571756572325303570356_u128 - 173149508118038205273224440731738404682_u128;
    _36 = 142_u8;
    _44 = _40.1.1;
    (*_17) = (-30644_i16) >> _40.1.1;
    match _36 {
    0 => bb23,
    1 => bb24,
    142 => bb26,
    _ => bb25
    }
    }
    bb23 = {
    (*_1) = 133458110727825574379102684074883008344_u128 << _11;
    _11 = _10;
    Goto(bb6)
    }
    bb24 = {
    (*_17) = (-26640_i16) >> (*_1);
    (*_1) = 193240813767221278670824134172748187876_u128 + 307026875028062408239323748275492659686_u128;
    (*_1) = !4819228234987077223912213239546413313_u128;
    _32 = [(-147472937031570989919156785807918124539_i128),139839877953415162308498105801011884617_i128,(-156510755301214459857408364285876849840_i128),2867451390566700535974217642633317175_i128,(-88151824756120899259135211726714480453_i128),21686749692869541101391786572488726380_i128];
    _3 = _7;
    (*_1) = 292122379467784701251176959601098831107_u128 ^ 235457840309751146885168470691288686712_u128;
    (*_17) = !(-1273_i16);
    (*_17) = !(-14604_i16);
    _22 = _18;
    (*_17) = -(-30958_i16);
    (*_17) = (-19400_i16) - 10656_i16;
    _34 = &_11;
    (*_1) = !335257833671488073031775182331316601847_u128;
    (*_1) = 27009129694005218758006358143982330655_u128;
    (*_17) = 12532_i16;
    (*_17) = 28698_i16;
    (*_1) = _20 as u128;
    _40.3 = &mut _6;
    (*_1) = 18391471263641930883_u64 as u128;
    (*_1) = 15962083593757297881110037323220246895_u128 * 29820601834325311576607472708804428973_u128;
    (*_17) = 21669_i16 << (*_1);
    _17 = core::ptr::addr_of!((*_17));
    (*_17) = 2249_i16 | (-11810_i16);
    _34 = &_10;
    (*_1) = !15660147457014426533496934172786185285_u128;
    (*_17) = 2555_i16 - (-19188_i16);
    _39 = 3907467690_u32 << (*_34);
    Goto(bb21)
    }
    bb25 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb26 = {
    (*_1) = 108571317871462973335161509064053990957_u128;
    _49.2 = [_49.1,_49.1,_49.1,_49.1,_49.1,_49.1];
    _26 = -_13;
    (*_1) = 147435814932719036482429157659265954728_u128 & 339373779032997908699505044906998853909_u128;
    (*_17) = 25989_i16 - 15616_i16;
    (*_1) = 292938332110870904440440717846937447432_u128;
    _52.0 = Move(_49.0);
    _30 = _36 as i8;
    match (*_1) {
    0 => bb19,
    1 => bb12,
    2 => bb3,
    3 => bb11,
    292938332110870904440440717846937447432 => bb27,
    _ => bb23
    }
    }
    bb27 = {
    _1 = core::ptr::addr_of!((*_1));
    _48 = (*_1) | (*_1);
    _49.1 = !7_usize;
    (*_17) = 28888_i16 ^ (-14294_i16);
    _34 = &_11;
    (*_17) = _12 as i16;
    (*_17) = (*_1) as i16;
    _52.0 = (_20, Move(_34));
    _29 = _42 | _42;
    _25 = !true;
    _40.0 = [(*_17)];
    _49.0.1 = &_10;
    (*_1) = !_48;
    _22 = _15;
    Call(_49.0.0 = core::intrinsics::transmute(_22), ReturnTo(bb28), UnwindUnreachable())
    }
    bb28 = {
    _45 = &mut _40.1.1;
    (*_1) = _13 as u128;
    (*_1) = _48;
    _44 = -(*_45);
    (*_1) = (*_45) as u128;
    (*_17) = 4251_u16 as i16;
    (*_17) = (-12079_i16);
    _11 = (*_45) as i64;
    (*_17) = (-6492_i16) * (-29658_i16);
    _19 = core::ptr::addr_of!(_54);
    (*_17) = 9787_i16 | (-26227_i16);
    (*_17) = (*_1) as i16;
    _42 = _29 + _29;
    (*_17) = !18521_i16;
    _52.2 = _12 & _30;
    (*_17) = (-23248_i16);
    RET = [_10,_11,_11,_10,_11,_11,_10,_11];
    _13 = _26;
    (*_45) = 8992780391438937209_u64 as i128;
    (*_1) = _48 ^ _48;
    (*_19) = !18428218838226101385_u64;
    (*_17) = -15889_i16;
    (*_17) = (-10112_i16) | (-8470_i16);
    _52.2 = _12 | _12;
    (*_19) = 2384867896812558223_u64 >> (*_17);
    (*_45) = _44;
    (*_19) = (*_1) as u64;
    Goto(bb29)
    }
    bb29 = {
    (*_17) = (-11292_i16) + 26449_i16;
    Goto(bb30)
    }
    bb30 = {
    _57 = _29;
    _50 = _13 * _13;
    (*_1) = !_48;
    (*_1) = (*_45) as u128;
    _23 = (-27541_i16) ^ 32139_i16;
    _4 = _27;
    (*_19) = 12375177625905563757_u64 << _52.2;
    match _36 {
    0 => bb24,
    1 => bb31,
    142 => bb33,
    _ => bb32
    }
    }
    bb31 = {
    (*_17) = 23153961176518084848974018997964466764_i128 as i16;
    _25 = false | false;
    (*_17) = 4369_i16;
    _18 = _15;
    (*_1) = !136064150463500283620653301120149725390_u128;
    _28 = core::ptr::addr_of!((*_17));
    (*_28) = 4123_i16 * (-27780_i16);
    _18 = _3;
    (*_28) = 15939_i16 << (*_1);
    (*_1) = 207228075047299738403066134584046148659_u128 ^ 336445377994367532775422603716149869329_u128;
    (*_17) = 21143_i16;
    _27 = _2;
    _13 = (*_1) as f64;
    (*_1) = !151695979266511081136005342386515809804_u128;
    (*_17) = !(-25025_i16);
    _30 = _12 ^ _12;
    (*_17) = -(-1390_i16);
    _7 = _27;
    (*_1) = 71056510861827336013714145240883269540_i128 as u128;
    (*_1) = 41034880084382350412562211982361728341_u128 << (*_17);
    match _6 {
    0 => bb11,
    1 => bb14,
    2 => bb6,
    3 => bb4,
    4 => bb5,
    340282366920938463463374607430209005473 => bb19,
    _ => bb18
    }
    }
    bb32 = {
    _34 = &_10;
    _1 = core::ptr::addr_of!((*_1));
    _6 = 9223372036854775807_isize as i32;
    _11 = _20 as i64;
    (*_1) = 243374718714010207705481608054292872111_u128 << (*_34);
    (*_1) = 2014369318761685714_u64 as u128;
    (*_17) = 28672_i16;
    _29 = 227_u8 as isize;
    _18 = _4;
    (*_1) = 97454296262880271457646097215872446262_u128 * 94833649568812972755323983178175212141_u128;
    (*_17) = (-15630_i16) & (-4373_i16);
    _12 = _30 ^ _30;
    (*_17) = 30696_i16 * (-7258_i16);
    _29 = 127_isize & 9223372036854775807_isize;
    _2 = _3;
    Goto(bb20)
    }
    bb33 = {
    (*_17) = 22884_i16 * 24974_i16;
    _56 = [_52.2,_12,_12,_12,_52.2];
    (*_45) = _36 as i128;
    _4 = _15;
    (*_17) = 14232_i16 ^ 17054_i16;
    (*_19) = !11690129387934319038_u64;
    _15 = _3;
    _3 = _18;
    (*_1) = !_48;
    (*_19) = 17965482095043364727_u64;
    (*_17) = _36 as i16;
    _26 = _13;
    _42 = _57 & _57;
    (*_1) = _52.0.0 as u128;
    (*_19) = 4700508031838878729_u64 * 15516731253022709091_u64;
    _19 = core::ptr::addr_of!((*_19));
    _58 = [_44,(*_45),_44,(*_45),(*_45)];
    (*_19) = !14095782193627000952_u64;
    _50 = _26 * _13;
    (*_1) = _48 - _48;
    (*_19) = 14404550666413653264_u64;
    (*_1) = _48 << _42;
    _5 = _48 << (*_45);
    _3 = _27;
    match (*_19) {
    0 => bb27,
    14404550666413653264 => bb35,
    _ => bb34
    }
    }
    bb34 = {
    Return()
    }
    bb35 = {
    (*_1) = _48 >> _39;
    (*_19) = (*_1) as u64;
    (*_19) = 8362041494965170470_u64;
    _1 = core::ptr::addr_of!((*_1));
    (*_17) = _39 as i16;
    _61 = _15;
    match (*_19) {
    0 => bb16,
    1 => bb22,
    2 => bb29,
    3 => bb27,
    8362041494965170470 => bb37,
    _ => bb36
    }
    }
    bb36 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb37 = {
    (*_19) = _44 as u64;
    _49.2 = [_49.1,_49.1,_49.1,_49.1,_49.1,_49.1];
    (*_1) = _54 as u128;
    (*_45) = _44 >> (*_1);
    _49.0.1 = &_11;
    (*_19) = 2975342990994541519_u64 & 4126120296609461558_u64;
    (*_19) = 4457697134669865887_u64;
    (*_19) = 2748503493673919438_u64 + 7461641299091149878_u64;
    (*_45) = (*_1) as i128;
    _15 = _2;
    _10 = _11;
    _60 = _49.0.0 * _52.0.0;
    (*_45) = _36 as i128;
    _66 = _42 as u64;
    (*_17) = 7362_i16 | 14529_i16;
    match _36 {
    0 => bb31,
    1 => bb25,
    2 => bb38,
    142 => bb40,
    _ => bb39
    }
    }
    bb38 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb39 = {
    (*_1) = _48 >> _39;
    (*_19) = (*_1) as u64;
    (*_19) = 8362041494965170470_u64;
    _1 = core::ptr::addr_of!((*_1));
    (*_17) = _39 as i16;
    _61 = _15;
    match (*_19) {
    0 => bb16,
    1 => bb22,
    2 => bb29,
    3 => bb27,
    8362041494965170470 => bb37,
    _ => bb36
    }
    }
    bb40 = {
    (*_1) = _48;
    _58 = [(*_45),(*_45),_44,_44,(*_45)];
    _49.0.1 = &_10;
    _13 = _26 + _50;
    (*_1) = _48 * _48;
    Goto(bb41)
    }
    bb41 = {
    _22 = _61;
    (*_1) = !_48;
    _12 = -_52.2;
    (*_17) = 27094_i16 - 30100_i16;
    _22 = _18;
    _19 = core::ptr::addr_of!(_54);
    _52.0.0 = _60;
    _14 = core::ptr::addr_of!((*_19));
    (*_45) = (*_1) as i128;
    _4 = _61;
    _25 = false;
    (*_45) = _44;
    _39 = !3098614906_u32;
    (*_17) = !(-16443_i16);
    _3 = _61;
    _20 = _52.0.0 - _60;
    (*_1) = _48;
    (*_19) = _66 | _66;
    (*_17) = !(-17972_i16);
    (*_17) = !(-17324_i16);
    _32 = [_44,(*_45),(*_45),(*_45),(*_45),(*_45)];
    (*_17) = !(-11056_i16);
    (*_19) = _66 + _66;
    (*_19) = _25 as u64;
    _52.1 = (*_45);
    Goto(bb42)
    }
    bb42 = {
    _36 = 128_u8;
    _49.0.1 = &_11;
    _64 = core::ptr::addr_of!((*_17));
    (*_64) = !(-14120_i16);
    (*_45) = _52.1;
    _5 = _36 as u128;
    _62 = (*_64);
    _20 = -_60;
    (*_64) = _27 as i16;
    (*_17) = _62 << (*_19);
    (*_1) = !_48;
    (*_1) = _48 >> (*_19);
    RET = [_11,_10,_11,_10,_10,_11,_11,_10];
    _29 = !_42;
    (*_19) = _66 << (*_45);
    (*_17) = _62;
    _60 = _44 as f32;
    _54 = _66 << (*_45);
    _39 = 3931447529_u32 * 3050164164_u32;
    (*_17) = _62 | _62;
    _46 = _49.1 | _49.1;
    match _36 {
    0 => bb43,
    1 => bb44,
    2 => bb45,
    128 => bb47,
    _ => bb46
    }
    }
    bb43 = {
    _57 = _29;
    _50 = _13 * _13;
    (*_1) = !_48;
    (*_1) = (*_45) as u128;
    _23 = (-27541_i16) ^ 32139_i16;
    _4 = _27;
    (*_19) = 12375177625905563757_u64 << _52.2;
    match _36 {
    0 => bb24,
    1 => bb31,
    142 => bb33,
    _ => bb32
    }
    }
    bb44 = {
    (*_1) = 186166670596138540961465571827026263708_u128 * 270512136002596044996523826421011909912_u128;
    (*_1) = 1928696248297914200487126293617121509_u128 ^ 188185983149803793367040487511605237418_u128;
    _40.2 = core::ptr::addr_of_mut!(_29);
    (*_17) = 30835_i16 | 358_i16;
    _5 = 84341210686498857410103463927738492572_u128 - 39945942106463768331013823468670269926_u128;
    _17 = core::ptr::addr_of!((*_17));
    (*_1) = 13165_u16 as u128;
    (*_1) = !61908279493935703074633344598026755004_u128;
    _17 = core::ptr::addr_of!((*_17));
    _32 = [(-92627183897872666039849420051709821848_i128),55682930659525286889672185352568244369_i128,(-698259237952472001639675159812828699_i128),58656029111377103523800445104247667377_i128,39593859364485989308516322785931423460_i128,90028958103030339576014488201212644828_i128];
    _40.1.0 = (_20, Move(_34));
    (*_1) = _29 as u128;
    (*_17) = (-40_i16) * 18852_i16;
    (*_17) = _30 as i16;
    _28 = core::ptr::addr_of!(_23);
    Goto(bb22)
    }
    bb45 = {
    (*_1) = 290051668108346229022701942325651135997_u128;
    (*_1) = 9704247418170120309_usize as u128;
    _1 = core::ptr::addr_of!((*_1));
    (*_1) = 233499485630538100229241222074300510937_u128;
    (*_1) = 238283838990643853851193858128083046665_u128 - 309147750621834657317952144072779516621_u128;
    _7 = _3;
    _2 = _4;
    (*_1) = 179111325474640088383397744076597703886_u128 << _6;
    (*_1) = _3 as u128;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = !71357116137132707900196955835428331329_u128;
    _10 = _11;
    _6 = -(-1180280811_i32);
    Goto(bb4)
    }
    bb46 = {
    (*_17) = !(-10457_i16);
    (*_17) = (-10182_i16) << (*_1);
    _2 = _22;
    Goto(bb16)
    }
    bb47 = {
    _69 = core::ptr::addr_of!((*_1));
    (*_1) = !_48;
    (*_45) = _44 + _52.1;
    (*_19) = !_66;
    (*_19) = _50 as u64;
    _14 = core::ptr::addr_of!((*_19));
    _49.0.0 = _20;
    _69 = core::ptr::addr_of!((*_1));
    (*_69) = _48 & _48;
    (*_17) = _62 + _62;
    _15 = _61;
    (*_1) = _48 >> (*_17);
    _28 = core::ptr::addr_of!((*_17));
    (*_17) = _62 & _62;
    (*_14) = _66;
    (*_45) = _52.1 * _52.1;
    _34 = &_10;
    _77 = (*_1) as u8;
    _52.0.0 = _49.0.0 + _60;
    _27 = _2;
    (*_19) = _66;
    _17 = Move(_64);
    _52.2 = !_12;
    _27 = _22;
    _51 = !_29;
    _19 = Move(_14);
    _59 = _39;
    match _36 {
    0 => bb36,
    1 => bb48,
    128 => bb50,
    _ => bb49
    }
    }
    bb48 = {
    _3 = _2;
    RET = [_10,_10,_10,_10,_10,_10,_10,_10];
    (*_1) = 241418743959240274205810357373088379160_u128 + 58316818393471853182603795856266112306_u128;
    (*_1) = 320667991708260571053046288597756687585_u128 << _6;
    _1 = core::ptr::addr_of!((*_1));
    _11 = _10 ^ _10;
    (*_1) = !315138407491930308672670956279860439780_u128;
    _1 = core::ptr::addr_of!((*_1));
    _10 = _11;
    Goto(bb3)
    }
    bb49 = {
    (*_1) = _48;
    _58 = [(*_45),(*_45),_44,_44,(*_45)];
    _49.0.1 = &_10;
    _13 = _26 + _50;
    (*_1) = _48 * _48;
    Goto(bb41)
    }
    bb50 = {
    RET = [(*_34),_10,(*_34),(*_34),(*_34),(*_34),(*_34),(*_34)];
    _52 = (Move(_49.0), _44, _12);
    _1 = Move(_69);
    _57 = _29 * _51;
    _29 = _57;
    _52.0.1 = &_11;
    _61 = _22;
    _81 = _58;
    _23 = _62 * _62;
    _51 = _57 * _57;
    _52.2 = _12;
    _53 = _59 ^ _39;
    (*_45) = _52.1 * _44;
    _49.1 = 43310_u16 as usize;
    (*_45) = 58998_u16 as i128;
    RET = [(*_34),(*_34),(*_34),(*_34),(*_34),(*_34),(*_34),(*_34)];
    _7 = _27;
    _49.0 = Move(_52.0);
    (*_45) = _44;
    _77 = _36 << (*_45);
    (*_45) = !_44;
    _31 = core::ptr::addr_of_mut!(_52);
    (*_31).0.0 = _60 - _20;
    Goto(bb51)
    }
    bb51 = {
    Call(_84 = dump_var(4_usize, 36_usize, Move(_36), 6_usize, Move(_6), 57_usize, Move(_57), 46_usize, Move(_46)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_84 = dump_var(4_usize, 27_usize, Move(_27), 30_usize, Move(_30), 51_usize, Move(_51), 7_usize, Move(_7)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_84 = dump_var(4_usize, 23_usize, Move(_23), 22_usize, Move(_22), 62_usize, Move(_62), 77_usize, Move(_77)), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Call(_84 = dump_var(4_usize, 81_usize, Move(_81), 59_usize, Move(_59), 5_usize, Move(_5), 44_usize, Move(_44)), ReturnTo(bb55), UnwindUnreachable())
    }
    bb55 = {
    Call(_84 = dump_var(4_usize, 48_usize, Move(_48), 3_usize, Move(_3), 85_usize, _85, 85_usize, _85), ReturnTo(bb56), UnwindUnreachable())
    }
    bb56 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: char) -> u128 {
    mir! {
    type RET = u128;
    let _2: i8;
    let _3: i64;
    let _4: char;
    let _5: f64;
    let _6: *const u128;
    let _7: &'static mut (u32, &'static mut i32);
    let _8: *mut [i128; 1];
    let _9: i128;
    let _10: usize;
    let _11: f64;
    let _12: u128;
    let _13: *const [char; 1];
    let _14: &'static [i8; 5];
    let _15: i64;
    let _16: i16;
    let _17: isize;
    let _18: isize;
    let _19: &'static char;
    let _20: ();
    let _21: ();
    {
    RET = !36517075862189116526595572553129929238_u128;
    _1 = '\u{efa36}';
    _1 = '\u{8327b}';
    _3 = -(-3956849165324238819_i64);
    RET = 116508783792594656581613072021858405000_u128;
    _2 = (-81_i8) >> _3;
    RET = 2145155662_i32 as u128;
    _1 = '\u{d46e3}';
    RET = 305594240755800114131884198733684001651_u128;
    _3 = _2 as i64;
    _3 = -(-7146393806332678999_i64);
    _3 = (-5362753987422616308_i64) ^ (-493095852818754918_i64);
    _2 = (-57_i8) + 71_i8;
    RET = 245793450687385808242155543997416957585_u128;
    _1 = '\u{50fbb}';
    _3 = 8927404022661931561_i64 & 5607585440346525143_i64;
    _4 = _1;
    _5 = 7084_u16 as f64;
    match RET {
    0 => bb1,
    1 => bb2,
    245793450687385808242155543997416957585 => bb4,
    _ => bb3
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    _1 = _4;
    _5 = 33670_u16 as f64;
    _6 = core::ptr::addr_of!(RET);
    (*_6) = 218820392876477738478055548505908276770_u128 ^ 222231650282291777806022627753731452960_u128;
    (*_6) = false as u128;
    (*_6) = 254182333404160007143044712858973532306_u128;
    (*_6) = 50267334593674366949976692679349544206_u128 & 189204125419058513385203189676895311959_u128;
    Goto(bb5)
    }
    bb5 = {
    (*_6) = 317275231495761875101673886221012618550_u128;
    (*_6) = 304008249592573388952313167787767484935_u128 - 177063062036806615559215887267316839567_u128;
    Goto(bb6)
    }
    bb6 = {
    (*_6) = !163309332107015572746592493960767593072_u128;
    Goto(bb7)
    }
    bb7 = {
    _5 = 8131_u16 as f64;
    (*_6) = 2111489681_i32 as u128;
    (*_6) = _1 as u128;
    (*_6) = !220953853280818387123140378995869865379_u128;
    (*_6) = 229879160912601990359600912266896983980_u128 >> _2;
    (*_6) = 29440_u16 as u128;
    (*_6) = 111605568121763136037028629051471259670_u128;
    (*_6) = 128_u8 as u128;
    (*_6) = 242796720718708793247535006689939118446_u128 + 5863814628032177985297189060458007465_u128;
    (*_6) = !59139741714642386896638528807377298703_u128;
    (*_6) = 277538385190743581402529727852045322797_u128 ^ 184337529845326997025426021060973777688_u128;
    _10 = 6_usize ^ 3_usize;
    (*_6) = _3 as u128;
    _10 = !13161516984933594822_usize;
    (*_6) = 119008212849004777904487738516831112079_u128;
    _12 = (*_6) * (*_6);
    (*_6) = _12 - _12;
    (*_6) = !_12;
    (*_6) = (-9223372036854775808_isize) as u128;
    (*_6) = _12;
    _2 = (-100_i8) & 49_i8;
    RET = !_12;
    (*_6) = _12 ^ _12;
    (*_6) = _12;
    Call((*_6) = fn6(_4, Move(_6), _10, _12), ReturnTo(bb8), UnwindUnreachable())
    }
    bb8 = {
    _16 = (-16354_i16) * (-25234_i16);
    _12 = !RET;
    _9 = 10021577567070955123909973485257444046_i128 + 73102461269658717581193083694229108262_i128;
    _12 = !RET;
    _6 = core::ptr::addr_of!(RET);
    _15 = 3846146539_u32 as i64;
    (*_6) = 25165582_i32 as u128;
    _2 = 66_i8 >> _12;
    _11 = _5;
    (*_6) = !_12;
    (*_6) = _12 | _12;
    (*_6) = _12 + _12;
    (*_6) = _12 << _2;
    _6 = core::ptr::addr_of!((*_6));
    _1 = _4;
    (*_6) = _12 - _12;
    (*_6) = _12;
    (*_6) = _12 - _12;
    _11 = _5 * _5;
    (*_6) = _12 - _12;
    _18 = -75_isize;
    (*_6) = !_12;
    Goto(bb9)
    }
    bb9 = {
    Call(_20 = dump_var(5_usize, 16_usize, Move(_16), 9_usize, Move(_9), 18_usize, Move(_18), 10_usize, Move(_10)), ReturnTo(bb10), UnwindUnreachable())
    }
    bb10 = {
    Call(_20 = dump_var(5_usize, 1_usize, Move(_1), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb11), UnwindUnreachable())
    }
    bb11 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: char, mut _2: *const u128, mut _3: usize, mut _4: u128) -> u128 {
    mir! {
    type RET = u128;
    let _5: (f32, &'static i64);
    let _6: usize;
    let _7: *const [char; 1];
    let _8: *const (&'static mut i32, isize, bool, i32);
    let _9: i128;
    let _10: isize;
    let _11: isize;
    let _12: &'static [i8; 2];
    let _13: *const i16;
    let _14: usize;
    let _15: &'static *mut isize;
    let _16: [i64; 8];
    let _17: &'static mut i128;
    let _18: [i128; 5];
    let _19: i16;
    let _20: usize;
    let _21: *mut isize;
    let _22: &'static mut i128;
    let _23: &'static mut i128;
    let _24: f64;
    let _25: ([usize; 4], i32);
    let _26: f64;
    let _27: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _28: bool;
    let _29: Adt52;
    let _30: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _31: [char; 1];
    let _32: &'static [i8; 2];
    let _33: i128;
    let _34: char;
    let _35: [i128; 1];
    let _36: *mut ((f32, &'static i64), i128, i8);
    let _37: i64;
    let _38: &'static [i8; 2];
    let _39: [i16; 6];
    let _40: char;
    let _41: u16;
    let _42: ();
    let _43: ();
    {
    _4 = 129806181346237839749187457058953113237_u128;
    _1 = '\u{dc3d8}';
    RET = _4 * _4;
    _1 = '\u{88c1c}';
    _1 = '\u{faf2b}';
    _5.0 = (-577751717_i32) as f32;
    match _4 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    5 => bb6,
    129806181346237839749187457058953113237 => bb8,
    _ => bb7
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    _3 = 4_usize & 2_usize;
    _2 = core::ptr::addr_of!(RET);
    _5.0 = 23_u8 as f32;
    _5.0 = 80_i8 as f32;
    (*_2) = _4;
    (*_2) = _4 | _4;
    _4 = (*_2);
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = !_4;
    (*_2) = _4;
    _5.0 = (-8585036239992383305446919859095668495_i128) as f32;
    _1 = '\u{edcf8}';
    (*_2) = _4;
    _1 = '\u{93f31}';
    (*_2) = !_4;
    (*_2) = 1687256420_i32 as u128;
    (*_2) = !_4;
    (*_2) = _3 as u128;
    _1 = '\u{e0046}';
    (*_2) = _4 >> _3;
    Goto(bb9)
    }
    bb9 = {
    (*_2) = _4 >> _3;
    (*_2) = !_4;
    _1 = '\u{ee9f1}';
    (*_2) = _4 - _4;
    (*_2) = _4 >> _3;
    (*_2) = _4 << _3;
    _9 = (-104821345503372935654582682930011829559_i128) & (-31317934645363062757967786382253995922_i128);
    _4 = (*_2) * (*_2);
    _10 = !(-21_isize);
    (*_2) = !_4;
    Call(_3 = fn7((*_2), Move(_2), _4, _10, (*_2)), ReturnTo(bb10), UnwindUnreachable())
    }
    bb10 = {
    _1 = '\u{58949}';
    _1 = '\u{10b095}';
    _6 = _3 | _3;
    _2 = core::ptr::addr_of!(RET);
    (*_2) = _10 as u128;
    Goto(bb11)
    }
    bb11 = {
    (*_2) = 15903492093352494002_u64 as u128;
    _4 = !(*_2);
    (*_2) = !_4;
    _3 = _6;
    (*_2) = 7958912335856298537_i64 as u128;
    _11 = _10 + _10;
    (*_2) = !_4;
    RET = !_4;
    _14 = _6 << _3;
    (*_2) = _4 ^ _4;
    (*_2) = _4 + _4;
    (*_2) = !_4;
    (*_2) = _4;
    (*_2) = _4 | _4;
    (*_2) = _4;
    _17 = &mut _9;
    RET = 13482132836154175272_u64 as u128;
    (*_2) = !_4;
    _5.0 = (*_2) as f32;
    (*_17) = (-4881770394322504693773421266352114978_i128);
    Call((*_2) = fn8(_10, (*_17), (*_17), (*_17)), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    (*_2) = _4;
    _4 = (*_2) | (*_2);
    (*_17) = !(-136357225220730440054495217612282303453_i128);
    (*_17) = 22884134846085354155718126174418370699_i128 ^ 37998268850189169767952975548717741838_i128;
    (*_2) = _14 as u128;
    _6 = _14;
    (*_17) = !(-123502073410164533428487883045653015054_i128);
    (*_17) = -(-47256786006081759167841134047046100629_i128);
    (*_2) = _4;
    (*_17) = -(-149764349071152859419233257155091344594_i128);
    (*_2) = _4 & _4;
    (*_17) = -(-164346748859193160456310701773687608151_i128);
    (*_2) = 1460008265_u32 as u128;
    (*_17) = 144071202009367390997324268971415343977_i128 ^ 25395035457205870383658306048202294414_i128;
    (*_17) = (-11509_i16) as i128;
    (*_17) = false as i128;
    _18 = [(*_17),(*_17),(*_17),(*_17),(*_17)];
    _16 = [5548280565939869054_i64,8337326123214103365_i64,61962106924223568_i64,799412674471916635_i64,3938145501095341381_i64,(-4571324839637407723_i64),(-3012464350642180022_i64),(-6543162693407884347_i64)];
    _5.0 = (-1262907014940921260_i64) as f32;
    (*_17) = 161051400980522668967258054935891812530_i128;
    _4 = !(*_2);
    (*_17) = 216_u8 as i128;
    RET = _4 << _14;
    (*_17) = (-104145154176450601820654846153172328411_i128) & 70149803208610934787610436920753503727_i128;
    (*_17) = (-134453503153423696450821846852713319153_i128) >> (*_2);
    (*_2) = _4 | _4;
    Call((*_17) = core::intrinsics::bswap(20410566833781728775284159277913113180_i128), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    _16 = [4265496718351355055_i64,(-8546284842564842231_i64),7844817235270034424_i64,(-4810140595764427772_i64),6109501965308966981_i64,2640592196391982369_i64,(-8140273145335328533_i64),(-516331881141907372_i64)];
    (*_2) = _4 & _4;
    (*_17) = -49837207806842673601775499308774927178_i128;
    _18 = [(*_17),(*_17),(*_17),(*_17),(*_17)];
    _2 = core::ptr::addr_of!(_4);
    (*_2) = 31850_u16 as u128;
    _13 = core::ptr::addr_of!(_19);
    (*_13) = 51495_u16 as i16;
    (*_13) = (-10646_i16) + 27175_i16;
    (*_13) = (-14490_i16);
    (*_17) = -63484761897756165289874672412375033129_i128;
    (*_2) = RET;
    (*_2) = RET;
    (*_17) = 77302040171778609879541366789127373361_i128 | (-25705997078436337544475183983182950873_i128);
    Goto(bb14)
    }
    bb14 = {
    (*_13) = _1 as i16;
    (*_17) = (-39072928439566292741292438385993582814_i128);
    (*_13) = 8123109236007642405_i64 as i16;
    _21 = core::ptr::addr_of_mut!(_10);
    (*_21) = _11 << _6;
    (*_21) = _14 as isize;
    (*_17) = 70629516535061814395564454903866218387_i128;
    (*_2) = 60462_u16 as u128;
    (*_17) = (-58421821838235840946062651674483491785_i128) - (-44220459946560272101602560209483363122_i128);
    _22 = &mut (*_17);
    _3 = _14 + _6;
    (*_22) = (-108_i8) as i128;
    (*_13) = 31649_i16 << (*_21);
    _20 = _3 & _6;
    (*_22) = 95201084583703062667185945079692825961_i128 | 67885283776116613145286556218939443734_i128;
    (*_2) = RET | RET;
    (*_2) = RET;
    Call(_4 = core::intrinsics::transmute((*_22)), ReturnTo(bb15), UnwindUnreachable())
    }
    bb15 = {
    _6 = !_20;
    (*_21) = _11;
    (*_22) = (-134784582708235549849162495610786087677_i128);
    (*_22) = 150307168563341238659383429217286018816_i128 & (-60710947914543178759063659968741703327_i128);
    (*_21) = _11 << (*_13);
    (*_13) = (-2376_i16) + 32105_i16;
    (*_21) = _11;
    (*_22) = (-80339847080559887852761093090792083615_i128) & (-1022835196704731198005937688665961969_i128);
    (*_13) = (-28154_i16);
    (*_2) = RET | RET;
    _1 = '\u{c82b8}';
    (*_13) = (-15021_i16);
    (*_21) = !_11;
    (*_2) = _1 as u128;
    (*_21) = -_11;
    (*_13) = 28705_i16 + (-27037_i16);
    _17 = Move(_22);
    (*_2) = RET + RET;
    _15 = &_21;
    (*_2) = RET - RET;
    _10 = _11 ^ _11;
    (*_2) = RET << _20;
    (*_21) = -_11;
    (*_2) = RET - RET;
    (*_13) = (-29861_i16) | (-8787_i16);
    (*_21) = _11 * _11;
    Goto(bb16)
    }
    bb16 = {
    _27.2 = [_6,_3,_14,_14,_14,_20];
    _19 = (*_21) as i16;
    (*_21) = _11 ^ _11;
    _24 = (-100_i8) as f64;
    (*_21) = -_11;
    (*_2) = _24 as u128;
    (*_2) = 24_u8 as u128;
    (*_21) = (*_13) as isize;
    (*_13) = !22176_i16;
    _5.0 = 81661890238638645954863458060637690105_i128 as f32;
    Call((*_13) = core::intrinsics::bswap((-2141_i16)), ReturnTo(bb17), UnwindUnreachable())
    }
    bb17 = {
    (*_21) = _11 | _11;
    (*_2) = RET;
    _26 = _24 + _24;
    (*_2) = RET * RET;
    (*_21) = _11 * _11;
    (*_13) = 152715202250546328520848223839049353973_i128 as i16;
    (*_21) = -_11;
    (*_2) = RET & RET;
    _26 = -_24;
    _1 = '\u{5a66d}';
    (*_21) = _11 - _11;
    (*_21) = -_11;
    (*_21) = (-115_i8) as isize;
    (*_21) = _11;
    (*_21) = _11 * _11;
    (*_13) = 16681_i16 | (-11750_i16);
    (*_21) = false as isize;
    (*_21) = 4566492616663161052_i64 as isize;
    (*_21) = _11 ^ _11;
    (*_13) = _26 as i16;
    (*_21) = _5.0 as isize;
    _16 = [9213468067960404062_i64,4783996789851636864_i64,5424952862217112803_i64,(-5832314485744989921_i64),1129514372810649537_i64,7195782677470273999_i64,2686683596238838695_i64,5240162644852475372_i64];
    (*_21) = _5.0 as isize;
    (*_13) = (-21251_i16) ^ 17595_i16;
    Goto(bb18)
    }
    bb18 = {
    _21 = core::ptr::addr_of_mut!((*_21));
    _27.1 = _3 >> (*_13);
    (*_2) = RET >> _20;
    Goto(bb19)
    }
    bb19 = {
    _30.0 = [(*_13)];
    _31 = [_1];
    _30.1.1 = !(-96978053871087946015121665202300310522_i128);
    _21 = core::ptr::addr_of_mut!((*_21));
    (*_2) = RET << (*_13);
    _6 = _20;
    (*_13) = (-7225_i16) >> (*_2);
    (*_13) = (-28037_i16) << _3;
    _25.1 = (-1782867022_i32) << _27.1;
    (*_2) = !RET;
    (*_2) = RET << (*_13);
    _27.0.0 = _5.0;
    (*_21) = _11 - _11;
    Goto(bb20)
    }
    bb20 = {
    (*_13) = -(-22606_i16);
    (*_13) = 8894_i16 << (*_2);
    (*_2) = !RET;
    (*_21) = _11;
    (*_21) = _11 - _11;
    (*_13) = 12277_i16 & 14930_i16;
    (*_13) = -(-32177_i16);
    (*_2) = !RET;
    _22 = &mut _30.1.1;
    (*_22) = !95787984597970885920802776472914006283_i128;
    _17 = &mut (*_22);
    (*_17) = (-145249491737866916968002967793462962981_i128);
    (*_17) = 108012041818864049803571029541126415270_i128;
    (*_13) = 27539_u16 as i16;
    (*_2) = !RET;
    (*_13) = (-1523_i16);
    (*_21) = _11 & _11;
    (*_17) = 26008926692092007602567956321148102418_i128 & 169793310913219517581249821883362823204_i128;
    _27.1 = _14;
    (*_17) = (-50080139683888650789514583177926589549_i128) | (-48313482692546127454615150777024906593_i128);
    (*_2) = RET - RET;
    (*_21) = 12797052144664134558_u64 as isize;
    _3 = _14 * _27.1;
    (*_17) = -150422230762861196286369295315787021763_i128;
    (*_21) = _11 | _11;
    match (*_13) {
    0 => bb7,
    1 => bb2,
    2 => bb15,
    3 => bb8,
    340282366920938463463374607431768209933 => bb22,
    _ => bb21
    }
    }
    bb21 = {
    (*_21) = _11 | _11;
    (*_2) = RET;
    _26 = _24 + _24;
    (*_2) = RET * RET;
    (*_21) = _11 * _11;
    (*_13) = 152715202250546328520848223839049353973_i128 as i16;
    (*_21) = -_11;
    (*_2) = RET & RET;
    _26 = -_24;
    _1 = '\u{5a66d}';
    (*_21) = _11 - _11;
    (*_21) = -_11;
    (*_21) = (-115_i8) as isize;
    (*_21) = _11;
    (*_21) = _11 * _11;
    (*_13) = 16681_i16 | (-11750_i16);
    (*_21) = false as isize;
    (*_21) = 4566492616663161052_i64 as isize;
    (*_21) = _11 ^ _11;
    (*_13) = _26 as i16;
    (*_21) = _5.0 as isize;
    _16 = [9213468067960404062_i64,4783996789851636864_i64,5424952862217112803_i64,(-5832314485744989921_i64),1129514372810649537_i64,7195782677470273999_i64,2686683596238838695_i64,5240162644852475372_i64];
    (*_21) = _5.0 as isize;
    (*_13) = (-21251_i16) ^ 17595_i16;
    Goto(bb18)
    }
    bb22 = {
    (*_2) = RET >> _27.1;
    _23 = &mut (*_17);
    _35 = [(*_23)];
    (*_13) = _26 as i16;
    (*_23) = (-109117381642709122786460173059384233_i128) * (-164505133732067498560287884077474627356_i128);
    _11 = (*_23) as isize;
    Goto(bb23)
    }
    bb23 = {
    _27.0.0 = _5.0 + _5.0;
    (*_13) = (-21258_i16) + 32459_i16;
    (*_13) = 11336_i16 >> (*_2);
    (*_13) = 18152_i16 * 7682_i16;
    (*_23) = 167327714500056169500159671748138948762_i128;
    (*_21) = _11 & _11;
    _34 = _1;
    (*_13) = !16288_i16;
    (*_21) = _11 & _11;
    _39 = [(*_13),(*_13),(*_13),(*_13),(*_13),(*_13)];
    _33 = (*_23) & (*_23);
    RET = (*_2) ^ (*_2);
    _16 = [(-153929459603500492_i64),(-8335852105649891035_i64),3083816471193978503_i64,(-802907549600110507_i64),(-5426561259515708703_i64),2866344836311003408_i64,(-4819557674156919554_i64),1987276127789241425_i64];
    _18 = [(*_23),(*_23),(*_23),(*_23),(*_23)];
    _37 = -2255756833877974903_i64;
    Goto(bb24)
    }
    bb24 = {
    Call(_42 = dump_var(6_usize, 18_usize, Move(_18), 19_usize, Move(_19), 16_usize, Move(_16), 1_usize, Move(_1)), ReturnTo(bb25), UnwindUnreachable())
    }
    bb25 = {
    Call(_42 = dump_var(6_usize, 3_usize, Move(_3), 6_usize, Move(_6), 31_usize, Move(_31), 20_usize, Move(_20)), ReturnTo(bb26), UnwindUnreachable())
    }
    bb26 = {
    Call(_42 = dump_var(6_usize, 34_usize, Move(_34), 43_usize, _43, 43_usize, _43, 43_usize, _43), ReturnTo(bb27), UnwindUnreachable())
    }
    bb27 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: u128, mut _2: *const u128, mut _3: u128, mut _4: isize, mut _5: u128) -> usize {
    mir! {
    type RET = usize;
    let _6: ((i32, isize), Adt53, isize, u32);
    let _7: isize;
    let _8: *const (i32, isize);
    let _9: *const [char; 1];
    let _10: (char, Adt23);
    let _11: usize;
    let _12: *mut [i128; 1];
    let _13: ([i128; 6],);
    let _14: u32;
    let _15: &'static *mut isize;
    let _16: f32;
    let _17: Adt37;
    let _18: isize;
    let _19: [usize; 4];
    let _20: &'static *mut isize;
    let _21: *mut Adt23;
    let _22: f32;
    let _23: f64;
    let _24: u32;
    let _25: ();
    let _26: ();
    {
    _1 = _3 - _3;
    _6.0 = ((-1153052838_i32), _4);
    _5 = _1;
    _6.0.1 = _4 ^ _4;
    _6.0.0 = 15692972_i32 - (-6764989_i32);
    _6.3 = !457667179_u32;
    _6.0.0 = false as i32;
    _6.3 = 2348279761_u32 * 462414085_u32;
    _6.0.1 = !_4;
    _6.0 = ((-442304277_i32), _4);
    _6.0.0 = 75_i8 as i32;
    RET = 5827969470753719808_usize >> _1;
    _6.2 = -_4;
    _6.3 = '\u{34279}' as u32;
    _2 = core::ptr::addr_of!(_3);
    RET = !2_usize;
    (*_2) = _1 ^ _5;
    _6.3 = 2018556704_u32 >> (*_2);
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = _5 - _5;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = !_5;
    (*_2) = _5 << _5;
    (*_2) = _1;
    Goto(bb1)
    }
    bb1 = {
    _6.3 = !1620476049_u32;
    _8 = core::ptr::addr_of!(_6.0);
    (*_8).0 = true as i32;
    (*_8) = (1345539907_i32, _6.2);
    _6.0.0 = 16228532156214943635_u64 as i32;
    _6.3 = 9180168037017542398_u64 as u32;
    (*_2) = (-83266851679246719408321989659808450168_i128) as u128;
    (*_8).1 = _4 >> _1;
    Goto(bb2)
    }
    bb2 = {
    (*_8) = ((-1519296325_i32), _6.2);
    (*_8) = ((-1953025960_i32), _6.2);
    (*_8) = ((-1129808747_i32), _6.2);
    (*_8).1 = _4 >> (*_8).0;
    (*_8).1 = (*_8).0 as isize;
    (*_2) = _5;
    Goto(bb3)
    }
    bb3 = {
    (*_8).1 = -_6.2;
    (*_8).1 = _6.2 >> _5;
    _13.0 = [19977116223905061985775210072773365760_i128,(-22899992435352091843214777685853163802_i128),(-2079636157379789573042766086265949644_i128),(-128987818021252524843377985552005170098_i128),152210821468458100633590480607030072841_i128,(-154115862728794167587423248319710198173_i128)];
    _6.2 = 35452_u16 as isize;
    _17 = Adt37::Variant1 { fld0: 14582257958885049003066018478504947484_i128,fld1: 6883_u16 };
    (*_2) = 120_u8 as u128;
    _6.0 = ((-409092844_i32), _6.2);
    (*_8).1 = _6.2;
    (*_2) = _5 << _5;
    (*_8) = (2056300265_i32, _4);
    (*_8).1 = _6.2 ^ _4;
    (*_8).1 = _6.2 >> (*_2);
    (*_8) = ((-1361499401_i32), _6.2);
    (*_8) = (1056021774_i32, _4);
    (*_8).1 = _6.2;
    _6.3 = 69338445_u32 << (*_2);
    (*_8).1 = _4 * _6.2;
    (*_8).1 = _6.2 << (*_2);
    (*_8).0 = !1097570738_i32;
    (*_8).1 = _6.2 & _6.2;
    _7 = !(*_8).1;
    _6.0.0 = !(-214911659_i32);
    (*_8).1 = 16916327806967683722_u64 as isize;
    (*_2) = _5;
    (*_8) = (1647755467_i32, _6.2);
    match (*_8).0 {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    1647755467 => bb10,
    _ => bb9
    }
    }
    bb4 = {
    (*_8) = ((-1519296325_i32), _6.2);
    (*_8) = ((-1953025960_i32), _6.2);
    (*_8) = ((-1129808747_i32), _6.2);
    (*_8).1 = _4 >> (*_8).0;
    (*_8).1 = (*_8).0 as isize;
    (*_2) = _5;
    Goto(bb3)
    }
    bb5 = {
    _6.3 = !1620476049_u32;
    _8 = core::ptr::addr_of!(_6.0);
    (*_8).0 = true as i32;
    (*_8) = (1345539907_i32, _6.2);
    _6.0.0 = 16228532156214943635_u64 as i32;
    _6.3 = 9180168037017542398_u64 as u32;
    (*_2) = (-83266851679246719408321989659808450168_i128) as u128;
    (*_8).1 = _4 >> _1;
    Goto(bb2)
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    place!(Field::<i128>(Variant(_17, 1), 0)) = 62288384294255667245313287908369817615_i128 * 68896692422376386715981516991518431143_i128;
    Goto(bb11)
    }
    bb11 = {
    (*_8).1 = _7 + _7;
    match (*_8).0 {
    0 => bb1,
    1 => bb7,
    2 => bb5,
    3 => bb4,
    4 => bb12,
    5 => bb13,
    6 => bb14,
    1647755467 => bb16,
    _ => bb15
    }
    }
    bb12 = {
    (*_8) = ((-1519296325_i32), _6.2);
    (*_8) = ((-1953025960_i32), _6.2);
    (*_8) = ((-1129808747_i32), _6.2);
    (*_8).1 = _4 >> (*_8).0;
    (*_8).1 = (*_8).0 as isize;
    (*_2) = _5;
    Goto(bb3)
    }
    bb13 = {
    Return()
    }
    bb14 = {
    (*_8).1 = -_6.2;
    (*_8).1 = _6.2 >> _5;
    _13.0 = [19977116223905061985775210072773365760_i128,(-22899992435352091843214777685853163802_i128),(-2079636157379789573042766086265949644_i128),(-128987818021252524843377985552005170098_i128),152210821468458100633590480607030072841_i128,(-154115862728794167587423248319710198173_i128)];
    _6.2 = 35452_u16 as isize;
    _17 = Adt37::Variant1 { fld0: 14582257958885049003066018478504947484_i128,fld1: 6883_u16 };
    (*_2) = 120_u8 as u128;
    _6.0 = ((-409092844_i32), _6.2);
    (*_8).1 = _6.2;
    (*_2) = _5 << _5;
    (*_8) = (2056300265_i32, _4);
    (*_8).1 = _6.2 ^ _4;
    (*_8).1 = _6.2 >> (*_2);
    (*_8) = ((-1361499401_i32), _6.2);
    (*_8) = (1056021774_i32, _4);
    (*_8).1 = _6.2;
    _6.3 = 69338445_u32 << (*_2);
    (*_8).1 = _4 * _6.2;
    (*_8).1 = _6.2 << (*_2);
    (*_8).0 = !1097570738_i32;
    (*_8).1 = _6.2 & _6.2;
    _7 = !(*_8).1;
    _6.0.0 = !(-214911659_i32);
    (*_8).1 = 16916327806967683722_u64 as isize;
    (*_2) = _5;
    (*_8) = (1647755467_i32, _6.2);
    match (*_8).0 {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    1647755467 => bb10,
    _ => bb9
    }
    }
    bb15 = {
    Return()
    }
    bb16 = {
    (*_2) = (*_8).0 as u128;
    (*_8) = ((-257963631_i32), _6.2);
    (*_2) = _1;
    (*_8).1 = 57_u8 as isize;
    (*_2) = _1 & _5;
    (*_2) = Field::<i128>(Variant(_17, 1), 0) as u128;
    (*_2) = _1 & _5;
    RET = 5947065455875421836_usize >> (*_2);
    (*_8).1 = _4 & _7;
    (*_2) = _5 ^ _1;
    (*_8).1 = _7;
    (*_8).1 = -_7;
    _11 = !RET;
    (*_8).0 = -(-1186493741_i32);
    Goto(bb17)
    }
    bb17 = {
    Call(_25 = dump_var(7_usize, 5_usize, Move(_5), 4_usize, Move(_4), 3_usize, Move(_3), 26_usize, _26), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: isize, mut _2: i128, mut _3: i128, mut _4: i128) -> u128 {
    mir! {
    type RET = u128;
    let _5: u8;
    let _6: f64;
    let _7: *const [char; 1];
    let _8: isize;
    let _9: Adt37;
    let _10: i8;
    let _11: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _12: [i16; 7];
    let _13: [i128; 5];
    let _14: u8;
    let _15: isize;
    let _16: *const [char; 1];
    let _17: char;
    let _18: ();
    let _19: ();
    {
    _4 = _3 * _3;
    _3 = _4 << _4;
    _4 = _2;
    _4 = !_3;
    _2 = _4;
    _1 = 45471_u16 as isize;
    _6 = (-1370984386_i32) as f64;
    _1 = 6879111610767768897_u64 as isize;
    _1 = 9223372036854775807_isize << _2;
    _4 = !_3;
    RET = 90230250792478821485810420966012748823_u128 * 14124721039114326022768010946844813222_u128;
    _3 = _6 as i128;
    _5 = 88_u8 & 89_u8;
    _2 = '\u{6fc5c}' as i128;
    _10 = !5_i8;
    _5 = !72_u8;
    _3 = -_2;
    _11.0 = &mut _3;
    _8 = _1 + _1;
    RET = 213396182620263681919011394340815442405_u128 ^ 84177170497464589319874235076982767134_u128;
    Goto(bb1)
    }
    bb1 = {
    _6 = (-96175245_i32) as f64;
    _2 = _10 as i128;
    _5 = 35_u8 >> _4;
    _9 = Adt37::Variant1 { fld0: _4,fld1: 32828_u16 };
    _13 = [_2,_2,_4,Field::<i128>(Variant(_9, 1), 0),Field::<i128>(Variant(_9, 1), 0)];
    place!(Field::<u16>(Variant(_9, 1), 1)) = RET as u16;
    _13 = [_4,_4,_2,Field::<i128>(Variant(_9, 1), 0),Field::<i128>(Variant(_9, 1), 0)];
    _6 = _1 as f64;
    _4 = !Field::<i128>(Variant(_9, 1), 0);
    place!(Field::<u16>(Variant(_9, 1), 1)) = !47274_u16;
    _2 = _4 >> _8;
    Call(RET = fn9(_1, Move(_11.0)), ReturnTo(bb2), UnwindUnreachable())
    }
    bb2 = {
    _10 = -98_i8;
    _11.0 = &mut place!(Field::<i128>(Variant(_9, 1), 0));
    _12 = [18244_i16,(-15372_i16),17538_i16,(-27786_i16),(-16925_i16),(-17955_i16),2005_i16];
    _6 = _5 as f64;
    _14 = _5 ^ _5;
    _6 = _1 as f64;
    _5 = _14;
    _15 = _1 - _8;
    _5 = 7279_i16 as u8;
    _13 = [_2,_2,_2,_2,_2];
    _2 = _4;
    _14 = _5 ^ _5;
    _12 = [(-22451_i16),(-21677_i16),20041_i16,2602_i16,(-15705_i16),30277_i16,(-30287_i16)];
    _4 = (-2049029208_i32) as i128;
    _14 = _5 * _5;
    _6 = RET as f64;
    _2 = 17213127325346474689_u64 as i128;
    _6 = _4 as f64;
    _8 = _15 + _15;
    _15 = !_8;
    Goto(bb3)
    }
    bb3 = {
    Call(_18 = dump_var(8_usize, 13_usize, Move(_13), 1_usize, Move(_1), 14_usize, Move(_14), 3_usize, Move(_3)), ReturnTo(bb4), UnwindUnreachable())
    }
    bb4 = {
    Call(_18 = dump_var(8_usize, 5_usize, Move(_5), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb5), UnwindUnreachable())
    }
    bb5 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize, mut _2: &'static mut i128) -> u128 {
    mir! {
    type RET = u128;
    let _3: f32;
    let _4: *const (u32, &'static mut i32);
    let _5: ([usize; 4], i32);
    let _6: *const u128;
    let _7: &'static [i8; 2];
    let _8: [i16; 7];
    let _9: isize;
    let _10: char;
    let _11: *const i16;
    let _12: u8;
    let _13: [i8; 5];
    let _14: char;
    let _15: i128;
    let _16: bool;
    let _17: *const (i32, isize);
    let _18: (&'static u16,);
    let _19: Adt52;
    let _20: *mut [i16; 7];
    let _21: isize;
    let _22: isize;
    let _23: isize;
    let _24: &'static mut i128;
    let _25: *const (i32, isize);
    let _26: f32;
    let _27: [i128; 1];
    let _28: *const [char; 1];
    let _29: f32;
    let _30: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _31: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _32: &'static *mut isize;
    let _33: isize;
    let _34: *const i16;
    let _35: u8;
    let _36: char;
    let _37: isize;
    let _38: char;
    let _39: f64;
    let _40: [u64; 1];
    let _41: [i8; 5];
    let _42: Adt17;
    let _43: isize;
    let _44: u64;
    let _45: [char; 1];
    let _46: Adt52;
    let _47: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _48: &'static [i8; 2];
    let _49: *mut [i128; 1];
    let _50: usize;
    let _51: ([i128; 5], f32, u32);
    let _52: &'static i64;
    let _53: i128;
    let _54: isize;
    let _55: isize;
    let _56: [usize; 6];
    let _57: [u64; 4];
    let _58: (&'static u16,);
    let _59: isize;
    let _60: char;
    let _61: [i32; 7];
    let _62: isize;
    let _63: f64;
    let _64: char;
    let _65: &'static char;
    let _66: i16;
    let _67: &'static i64;
    let _68: &'static i64;
    let _69: i32;
    let _70: bool;
    let _71: &'static *mut isize;
    let _72: i8;
    let _73: &'static [i8; 5];
    let _74: f64;
    let _75: i128;
    let _76: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _77: *const [char; 1];
    let _78: Adt74;
    let _79: *const (&'static mut i32, isize, bool, i32);
    let _80: char;
    let _81: isize;
    let _82: f32;
    let _83: bool;
    let _84: isize;
    let _85: (&'static mut i32, isize, bool, i32);
    let _86: char;
    let _87: f64;
    let _88: *mut [i128; 1];
    let _89: bool;
    let _90: char;
    let _91: i16;
    let _92: &'static char;
    let _93: bool;
    let _94: &'static mut i32;
    let _95: isize;
    let _96: [u128; 8];
    let _97: char;
    let _98: char;
    let _99: u32;
    let _100: ();
    let _101: ();
    {
    _1 = (-9223372036854775808_isize);
    _1 = (-39_isize) * 9223372036854775807_isize;
    RET = 330183793051774389345750431082085921213_u128;
    _1 = 9223372036854775807_isize - (-9223372036854775808_isize);
    RET = 278591528870996240225316202740179391811_u128 & 102828371632303674735643330443239136722_u128;
    RET = 45121779860878603717179216670340611316_u128 << _1;
    _1 = (-9223372036854775808_isize);
    _3 = 32295557531178512824808512757599450850_i128 as f32;
    RET = 291696785840841100714279701101534925787_u128 + 167362672699330355813730913132300044130_u128;
    _3 = 1862946189_u32 as f32;
    RET = 340134278530907671894418574197171927186_u128 - 304837300152836843280249582011704459234_u128;
    _3 = 204_u8 as f32;
    _3 = 19703_i16 as f32;
    RET = 296915616125818558027002419089858090746_u128 - 307028331069403164676964894293801426541_u128;
    _1 = true as isize;
    RET = !245349075592895131084674134942164382077_u128;
    _5.1 = (-1200954554_i32);
    _1 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
    RET = !213243204035123534054299698070003031045_u128;
    _3 = 253772899_u32 as f32;
    _5.1 = 154581565_i32 & 1567668046_i32;
    Call(_5.0 = fn10(RET, _5.1, _5.1, _1, RET, _3, _3, _5.1, RET, RET), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _8 = [(-2822_i16),13778_i16,(-29165_i16),15473_i16,5940_i16,(-25027_i16),(-14916_i16)];
    _8 = [19508_i16,(-25004_i16),(-14486_i16),24833_i16,(-17036_i16),9174_i16,(-9368_i16)];
    RET = 215175147704002263198129106507372615615_u128 * 145637788010772050844480272514593828488_u128;
    _6 = core::ptr::addr_of!(RET);
    (*_6) = !189644671378000871737545048911583132845_u128;
    (*_6) = 115857524091712077425478340412905003004_u128;
    (*_6) = !145380755605448686024526545729889819933_u128;
    (*_6) = 146997377559413494882169629271511287777_u128 << _1;
    (*_6) = 9528926139666854818389528146505223015_u128;
    _8 = [7401_i16,(-20396_i16),(-2786_i16),6150_i16,(-32285_i16),21474_i16,13390_i16];
    (*_6) = 205688462390251574575196979271038818125_u128 - 32210221978328350230148130544057571660_u128;
    Goto(bb2)
    }
    bb2 = {
    (*_6) = 198847229561193813076298865856153219411_u128;
    (*_6) = 82729704426658010711231575828645570421_u128 ^ 165000429351818935381403275202551132616_u128;
    _6 = core::ptr::addr_of!((*_6));
    (*_6) = 106724877578664936957243944950072679220_i128 as u128;
    (*_6) = _5.1 as u128;
    (*_6) = 91704378284379534347872483148929548500_u128 * 238108522484660210520465536177383673909_u128;
    Goto(bb3)
    }
    bb3 = {
    (*_6) = 295787433211163001850709867583083101622_u128;
    _9 = (*_6) as isize;
    _10 = '\u{ccf8}';
    _1 = _9;
    (*_6) = 46945533643481385291934639640788799665_u128 >> _9;
    (*_6) = !257192412550303029979674875975033773347_u128;
    (*_6) = !334371236127256413537361460987925887419_u128;
    (*_6) = !62186434491002153945801910356911795409_u128;
    (*_6) = false as u128;
    (*_6) = 277397832445675736896400903931237300071_u128 * 178537790199035963337989453929610709964_u128;
    _5.1 = 1075788686_i32;
    (*_6) = 149027942433400832388376106289472663411_u128 >> _1;
    (*_6) = 23159560517000569193931507412280989684_u128;
    (*_6) = 50281979750977812924029600720447542223_u128;
    (*_6) = 11322023445887075727815710835915180447_u128;
    (*_6) = 29920035767731496720980025781335228894_u128 - 12144237364851192054397105422748905804_u128;
    (*_6) = 3257211035_u32 as u128;
    (*_6) = 193514424472488425371027581220983765715_u128 * 337418276195396694608329712840532047456_u128;
    _12 = 192_u8 - 68_u8;
    _5.0 = [1_usize,10107258693147185415_usize,7693946725441892967_usize,1237575105392508657_usize];
    _5.1 = (-1820928786_i32) & 1513220775_i32;
    (*_6) = !278154301125899781109325764687706508980_u128;
    _8 = [(-12442_i16),25955_i16,18510_i16,(-19093_i16),(-24646_i16),17687_i16,(-26909_i16)];
    (*_6) = 270065483615450494927966741009204666314_u128 - 21653708468649779579940354510139330533_u128;
    (*_6) = 37871_u16 as u128;
    Goto(bb4)
    }
    bb4 = {
    _5.0 = [13656880838168934984_usize,18036459926193955854_usize,0_usize,18328842090435974726_usize];
    RET = !160741228492382358476400426557523899269_u128;
    RET = 69680228553111632972933076184911254820_u128;
    (*_6) = !155198270277006869495784784864726650201_u128;
    _10 = '\u{c2eb1}';
    _5.1 = !(-1734070502_i32);
    RET = 7499058548251558977614289483235843966_u128 * 241139603922868118658882225008093217707_u128;
    (*_6) = 267051053700028673784861206778342518519_u128;
    match (*_6) {
    0 => bb3,
    1 => bb2,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    267051053700028673784861206778342518519 => bb11,
    _ => bb10
    }
    }
    bb5 = {
    (*_6) = 295787433211163001850709867583083101622_u128;
    _9 = (*_6) as isize;
    _10 = '\u{ccf8}';
    _1 = _9;
    (*_6) = 46945533643481385291934639640788799665_u128 >> _9;
    (*_6) = !257192412550303029979674875975033773347_u128;
    (*_6) = !334371236127256413537361460987925887419_u128;
    (*_6) = !62186434491002153945801910356911795409_u128;
    (*_6) = false as u128;
    (*_6) = 277397832445675736896400903931237300071_u128 * 178537790199035963337989453929610709964_u128;
    _5.1 = 1075788686_i32;
    (*_6) = 149027942433400832388376106289472663411_u128 >> _1;
    (*_6) = 23159560517000569193931507412280989684_u128;
    (*_6) = 50281979750977812924029600720447542223_u128;
    (*_6) = 11322023445887075727815710835915180447_u128;
    (*_6) = 29920035767731496720980025781335228894_u128 - 12144237364851192054397105422748905804_u128;
    (*_6) = 3257211035_u32 as u128;
    (*_6) = 193514424472488425371027581220983765715_u128 * 337418276195396694608329712840532047456_u128;
    _12 = 192_u8 - 68_u8;
    _5.0 = [1_usize,10107258693147185415_usize,7693946725441892967_usize,1237575105392508657_usize];
    _5.1 = (-1820928786_i32) & 1513220775_i32;
    (*_6) = !278154301125899781109325764687706508980_u128;
    _8 = [(-12442_i16),25955_i16,18510_i16,(-19093_i16),(-24646_i16),17687_i16,(-26909_i16)];
    (*_6) = 270065483615450494927966741009204666314_u128 - 21653708468649779579940354510139330533_u128;
    (*_6) = 37871_u16 as u128;
    Goto(bb4)
    }
    bb6 = {
    (*_6) = 198847229561193813076298865856153219411_u128;
    (*_6) = 82729704426658010711231575828645570421_u128 ^ 165000429351818935381403275202551132616_u128;
    _6 = core::ptr::addr_of!((*_6));
    (*_6) = 106724877578664936957243944950072679220_i128 as u128;
    (*_6) = _5.1 as u128;
    (*_6) = 91704378284379534347872483148929548500_u128 * 238108522484660210520465536177383673909_u128;
    Goto(bb3)
    }
    bb7 = {
    _8 = [(-2822_i16),13778_i16,(-29165_i16),15473_i16,5940_i16,(-25027_i16),(-14916_i16)];
    _8 = [19508_i16,(-25004_i16),(-14486_i16),24833_i16,(-17036_i16),9174_i16,(-9368_i16)];
    RET = 215175147704002263198129106507372615615_u128 * 145637788010772050844480272514593828488_u128;
    _6 = core::ptr::addr_of!(RET);
    (*_6) = !189644671378000871737545048911583132845_u128;
    (*_6) = 115857524091712077425478340412905003004_u128;
    (*_6) = !145380755605448686024526545729889819933_u128;
    (*_6) = 146997377559413494882169629271511287777_u128 << _1;
    (*_6) = 9528926139666854818389528146505223015_u128;
    _8 = [7401_i16,(-20396_i16),(-2786_i16),6150_i16,(-32285_i16),21474_i16,13390_i16];
    (*_6) = 205688462390251574575196979271038818125_u128 - 32210221978328350230148130544057571660_u128;
    Goto(bb2)
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    Return()
    }
    bb11 = {
    RET = 328637336961043182609467966146838357190_u128 + 194240972904945677379111198689913587852_u128;
    (*_6) = true as u128;
    (*_6) = !335344299259664693526847812390220554223_u128;
    RET = !83258331675973329225458319155100911558_u128;
    (*_6) = !14704783198104556451576092463055244796_u128;
    _16 = true & true;
    (*_6) = 179883194678980534388130696885105912827_u128 << _9;
    (*_6) = 898703817_u32 as u128;
    (*_6) = 333494314734608776416719629215581578661_u128;
    _10 = '\u{f2b63}';
    _14 = _10;
    _12 = 4273_u16 as u8;
    _20 = core::ptr::addr_of_mut!(_8);
    (*_20) = [21506_i16,(-22316_i16),(-22111_i16),6579_i16,(-24562_i16),(-32542_i16),22228_i16];
    (*_20) = [15790_i16,(-18781_i16),805_i16,(-1354_i16),(-601_i16),(-10139_i16),(-32456_i16)];
    _13 = [(-122_i8),114_i8,(-107_i8),(-5_i8),(-50_i8)];
    _16 = !true;
    (*_20) = [12248_i16,(-16425_i16),5476_i16,(-28123_i16),5222_i16,1907_i16,(-26699_i16)];
    match (*_6) {
    0 => bb1,
    1 => bb9,
    2 => bb3,
    3 => bb4,
    4 => bb10,
    5 => bb8,
    6 => bb7,
    333494314734608776416719629215581578661 => bb13,
    _ => bb12
    }
    }
    bb12 = {
    Return()
    }
    bb13 = {
    (*_20) = [(-28888_i16),15203_i16,(-20111_i16),5636_i16,(-27845_i16),25588_i16,19483_i16];
    (*_6) = 57115708696231590819633051472879432297_u128;
    (*_20) = [(-13234_i16),16846_i16,17101_i16,28735_i16,(-8046_i16),11456_i16,21300_i16];
    (*_6) = 79070764606274374701168059331187406347_u128 ^ 30977221698799879194854459425451524105_u128;
    Goto(bb14)
    }
    bb14 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb15 = {
    _3 = 19899_u16 as f32;
    (*_6) = 251265059637787641796389241879043031248_u128 >> _1;
    Goto(bb16)
    }
    bb16 = {
    (*_20) = [1562_i16,22472_i16,(-23166_i16),6879_i16,(-30680_i16),(-1219_i16),13275_i16];
    (*_6) = 140603627068559037218334702859034636957_u128 * 3925282495093007455851035846300414560_u128;
    _12 = _16 as u8;
    (*_20) = [(-8943_i16),(-17538_i16),(-1324_i16),(-3599_i16),(-2837_i16),(-1587_i16),(-16306_i16)];
    _10 = _14;
    _5.0 = [1_usize,2_usize,12236095672769707538_usize,8951273598363737072_usize];
    (*_20) = [31984_i16,(-27723_i16),(-27965_i16),5670_i16,22205_i16,8679_i16,13051_i16];
    (*_20) = [15631_i16,2155_i16,26294_i16,(-19763_i16),30898_i16,(-252_i16),(-6508_i16)];
    (*_6) = 42798315504076518879882222406416744799_u128 << _23;
    (*_6) = 246148366298989476298246646573484259683_u128;
    (*_6) = 160911302145421333634776570985558032514_u128 & 24144736217437656424024980416096500243_u128;
    (*_20) = [15030_i16,(-4975_i16),(-9543_i16),(-27475_i16),(-20288_i16),(-3896_i16),(-21030_i16)];
    (*_6) = 102208489181398011101632825726794810096_u128 & 284372026656146367624721268282675615299_u128;
    _14 = _10;
    _16 = !false;
    _15 = (-65555608706259866865735665806123042324_i128) - (-51826205985511244253773602377724679054_i128);
    (*_20) = [(-12364_i16),15272_i16,16852_i16,510_i16,(-31407_i16),(-30961_i16),22023_i16];
    (*_6) = 81667347544979176385231048594511724077_u128 * 24813602378030729524107164461633911165_u128;
    (*_6) = 339140214328883702831615526806285435915_u128 - 46975911393889650409210573558702867435_u128;
    _9 = _23;
    RET = _22 as u128;
    Goto(bb17)
    }
    bb17 = {
    (*_6) = 247372684393021295184067141536595405899_u128;
    (*_20) = [2116_i16,(-10890_i16),687_i16,6774_i16,11403_i16,16335_i16,28890_i16];
    _27 = [_15];
    (*_20) = [(-24015_i16),9996_i16,4910_i16,(-8042_i16),28345_i16,14354_i16,2032_i16];
    _30.1 = 34_i8;
    _2 = &mut _15;
    (*_20) = [26618_i16,(-6284_i16),30277_i16,6904_i16,(-5046_i16),3369_i16,9730_i16];
    _10 = _14;
    (*_2) = !(-2467267236778684716995014075936563423_i128);
    (*_2) = 135093325384930494728236717924001525725_i128;
    _12 = 158_u8;
    (*_6) = !232808025124822545040089440343662174505_u128;
    (*_20) = [4645_i16,16604_i16,4661_i16,(-12513_i16),5210_i16,(-3689_i16),(-9123_i16)];
    _29 = 29926_u16 as f32;
    _26 = _29;
    (*_2) = -103392583390428115045383163017129415073_i128;
    (*_20) = [(-23257_i16),5256_i16,(-9737_i16),(-6498_i16),32665_i16,1217_i16,1031_i16];
    (*_2) = !38814885101269609316184455624295151316_i128;
    (*_6) = 97266214455882400351306337438022014865_u128 - 268146616951349214652271494850270304173_u128;
    (*_2) = 116713634644491416022234082355719086651_i128 & 138618689328982569440188065572892271839_i128;
    (*_6) = 28009227417659737207966458742914021192_u128;
    (*_20) = [(-30514_i16),(-4132_i16),16698_i16,21972_i16,30925_i16,(-30511_i16),1264_i16];
    Goto(bb18)
    }
    bb18 = {
    (*_6) = 13368642894753349334_u64 as u128;
    (*_2) = -(-63848044346992169556742129837755272215_i128);
    (*_6) = _9 as u128;
    _31.0 = &mut (*_2);
    (*_20) = [16064_i16,(-24145_i16),(-2822_i16),26371_i16,(-24640_i16),(-11660_i16),11559_i16];
    _27 = [(-69879391144278400280114010479747328420_i128)];
    _37 = _1;
    _39 = _5.1 as f64;
    _33 = _9;
    (*_20) = [(-11663_i16),29038_i16,6497_i16,3577_i16,(-19272_i16),28768_i16,(-32664_i16)];
    (*_6) = 73837339641138980125593524467294886481_u128;
    (*_6) = 251550968444731406020872293170181378647_u128 & 102645390578080413482073742365152665378_u128;
    (*_20) = [(-19960_i16),(-11451_i16),22942_i16,(-20640_i16),(-20117_i16),15291_i16,3007_i16];
    (*_6) = 77448624863440408924633472402274797608_u128 ^ 37267123388934909148566748462045697683_u128;
    (*_20) = [(-1142_i16),(-29868_i16),30620_i16,(-5066_i16),20876_i16,28073_i16,(-19915_i16)];
    match _12 {
    0 => bb1,
    1 => bb9,
    2 => bb16,
    3 => bb7,
    4 => bb5,
    5 => bb15,
    6 => bb19,
    158 => bb21,
    _ => bb20
    }
    }
    bb19 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb20 = {
    Return()
    }
    bb21 = {
    _23 = _9 + _22;
    _29 = _23 as f32;
    (*_6) = 23155927159587835998303622946588340723_u128 * 114788389623032837022569849211744587814_u128;
    (*_20) = [(-29836_i16),(-3844_i16),(-15691_i16),14520_i16,16029_i16,14123_i16,(-12685_i16)];
    (*_20) = [5690_i16,31327_i16,(-6970_i16),26119_i16,2606_i16,(-20592_i16),26512_i16];
    _43 = _23 ^ _37;
    _35 = (-75422141746873265800424961724887273312_i128) as u8;
    (*_20) = [(-28190_i16),(-148_i16),(-31090_i16),(-12809_i16),26078_i16,12258_i16,(-2055_i16)];
    _5.1 = !(-1496994945_i32);
    _16 = true ^ false;
    (*_6) = !22690607561481460490405643506410032715_u128;
    Goto(bb22)
    }
    bb22 = {
    Goto(bb23)
    }
    bb23 = {
    _45 = [_14];
    (*_20) = [(-10088_i16),(-13631_i16),21308_i16,(-3843_i16),(-26228_i16),24018_i16,(-19015_i16)];
    _6 = core::ptr::addr_of!(RET);
    _42 = Adt17::Variant3 { fld0: _16,fld1: _14,fld2: 1085498572_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _12,fld7: 6340809198018613011_u64 };
    _28 = core::ptr::addr_of!(_45);
    _42 = Adt17::Variant2 { fld0: (-40365029079222893_i64),fld1: 9933436063384331544_u64 };
    _42 = Adt17::Variant3 { fld0: _16,fld1: _10,fld2: 151374212_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _12,fld7: 1864179134900846265_u64 };
    _5.1 = Field::<i32>(Variant(_42, 3), 5) ^ Field::<i32>(Variant(_42, 3), 5);
    place!(Field::<u32>(Variant(_42, 3), 2)) = !2652519298_u32;
    _24 = Move(_2);
    (*_20) = [6489_i16,(-2853_i16),(-6602_i16),14445_i16,21555_i16,(-31914_i16),(-5189_i16)];
    (*_20) = [10873_i16,6124_i16,(-30514_i16),(-16063_i16),30694_i16,(-15032_i16),7297_i16];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) & Field::<u128>(Variant(_42, 3), 4);
    _23 = _9;
    _42 = Adt17::Variant3 { fld0: _16,fld1: _14,fld2: 3145543672_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _35,fld7: 11879437330712213923_u64 };
    (*_20) = [10921_i16,26657_i16,(-30857_i16),2590_i16,(-10905_i16),(-31935_i16),126_i16];
    _21 = _37 ^ _1;
    (*_28) = [_14];
    (*_20) = [9671_i16,(-23519_i16),(-31885_i16),14614_i16,19423_i16,10048_i16,6262_i16];
    (*_20) = [(-24980_i16),(-19482_i16),(-3016_i16),6008_i16,22551_i16,(-23925_i16),(-17956_i16)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    (*_6) = Field::<char>(Variant(_42, 3), 1) as u128;
    _49 = core::ptr::addr_of_mut!(_27);
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    (*_20) = [10856_i16,7652_i16,25526_i16,(-20151_i16),(-1939_i16),(-6658_i16),15885_i16];
    place!(Field::<u64>(Variant(_42, 3), 7)) = 515556165053854129_u64 + 14758851097216150922_u64;
    match Field::<i8>(Variant(_42, 3), 3) {
    0 => bb8,
    34 => bb24,
    _ => bb9
    }
    }
    bb24 = {
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    _40 = [Field::<u64>(Variant(_42, 3), 7)];
    (*_20) = [(-30390_i16),(-4350_i16),31580_i16,31190_i16,(-27567_i16),(-13963_i16),(-6777_i16)];
    (*_28) = [_10];
    _9 = -_43;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    (*_49) = [(-139125035276717810326787064970830935719_i128)];
    (*_20) = [(-23692_i16),5984_i16,12685_i16,2033_i16,(-3538_i16),31478_i16,(-13005_i16)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    _21 = _9 ^ _43;
    Call(place!(Field::<i8>(Variant(_42, 3), 3)) = core::intrinsics::transmute(Field::<bool>(Variant(_42, 3), 0)), ReturnTo(bb25), UnwindUnreachable())
    }
    bb25 = {
    (*_49) = [(-90947233436308131589310234358937689451_i128)];
    _19 = Adt52::Variant1 { fld0: _40 };
    (*_6) = Field::<u128>(Variant(_42, 3), 4) << _1;
    place!(Field::<u32>(Variant(_42, 3), 2)) = 4042673898_u32 - 1593941533_u32;
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    (*_20) = [(-22705_i16),(-24868_i16),16529_i16,7667_i16,3291_i16,1130_i16,12785_i16];
    (*_20) = [(-23183_i16),26173_i16,25941_i16,(-8350_i16),(-50_i16),22713_i16,12464_i16];
    _38 = _14;
    _35 = _12;
    (*_28) = [_14];
    _53 = Field::<u32>(Variant(_42, 3), 2) as i128;
    (*_49) = [_53];
    place!(Field::<char>(Variant(_42, 3), 1)) = _14;
    _43 = _9;
    _45 = [_38];
    _55 = _22 * _21;
    place!(Field::<[u64; 1]>(Variant(_19, 1), 0)) = [Field::<u64>(Variant(_42, 3), 7)];
    match _12 {
    158 => bb26,
    _ => bb20
    }
    }
    bb26 = {
    (*_49) = [_53];
    (*_20) = [(-2388_i16),(-27972_i16),21160_i16,(-32133_i16),16903_i16,7953_i16,(-20809_i16)];
    _54 = _22;
    (*_49) = [_53];
    (*_28) = [_10];
    (*_6) = _14 as u128;
    place!(Field::<char>(Variant(_42, 3), 1)) = _38;
    Goto(bb27)
    }
    bb27 = {
    _1 = _55 + _37;
    _56 = [10536702881191555928_usize,3_usize,8299545381406448484_usize,2_usize,3_usize,10847758173120044641_usize];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) & Field::<u128>(Variant(_42, 3), 4);
    (*_20) = [(-19454_i16),4939_i16,(-3604_i16),12838_i16,4860_i16,28673_i16,(-25059_i16)];
    _51.1 = _29 * _3;
    _1 = _5.1 as isize;
    _8 = [10709_i16,20524_i16,23480_i16,(-4870_i16),(-5718_i16),9509_i16,(-5186_i16)];
    match _12 {
    0 => bb19,
    1 => bb2,
    2 => bb16,
    158 => bb29,
    _ => bb28
    }
    }
    bb28 = {
    _5.0 = [13656880838168934984_usize,18036459926193955854_usize,0_usize,18328842090435974726_usize];
    RET = !160741228492382358476400426557523899269_u128;
    RET = 69680228553111632972933076184911254820_u128;
    (*_6) = !155198270277006869495784784864726650201_u128;
    _10 = '\u{c2eb1}';
    _5.1 = !(-1734070502_i32);
    RET = 7499058548251558977614289483235843966_u128 * 241139603922868118658882225008093217707_u128;
    (*_6) = 267051053700028673784861206778342518519_u128;
    match (*_6) {
    0 => bb3,
    1 => bb2,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    267051053700028673784861206778342518519 => bb11,
    _ => bb10
    }
    }
    bb29 = {
    _51.0 = [_53,_53,_53,_53,_53];
    _20 = core::ptr::addr_of_mut!((*_20));
    _2 = &mut _53;
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _31.0 = &mut (*_2);
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    _5.1 = Field::<i32>(Variant(_42, 3), 5);
    (*_20) = [(-8514_i16),(-25929_i16),(-11985_i16),(-29424_i16),(-19803_i16),11305_i16,(-6555_i16)];
    place!(Field::<u8>(Variant(_42, 3), 6)) = 28208_i16 as u8;
    _33 = _5.1 as isize;
    (*_49) = [136896379025447351746945023220578044226_i128];
    _63 = 6887461060884280889_usize as f64;
    _51.2 = Field::<u32>(Variant(_42, 3), 2) >> (*_6);
    (*_6) = (-436940489894088463_i64) as u128;
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    (*_49) = [132865963781522373999422077034521017849_i128];
    (*_20) = [9067_i16,25789_i16,4745_i16,(-14931_i16),22443_i16,(-29176_i16),29341_i16];
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _59 = _21 * _43;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) << Field::<u64>(Variant(_42, 3), 7);
    (*_28) = [_14];
    (*_28) = [_10];
    place!(Field::<i32>(Variant(_42, 3), 5)) = 23476_i16 as i32;
    (*_49) = [107001054742131164283478894242055851742_i128];
    _43 = !_55;
    match _35 {
    158 => bb31,
    _ => bb30
    }
    }
    bb30 = {
    _5.0 = [13656880838168934984_usize,18036459926193955854_usize,0_usize,18328842090435974726_usize];
    RET = !160741228492382358476400426557523899269_u128;
    RET = 69680228553111632972933076184911254820_u128;
    (*_6) = !155198270277006869495784784864726650201_u128;
    _10 = '\u{c2eb1}';
    _5.1 = !(-1734070502_i32);
    RET = 7499058548251558977614289483235843966_u128 * 241139603922868118658882225008093217707_u128;
    (*_6) = 267051053700028673784861206778342518519_u128;
    match (*_6) {
    0 => bb3,
    1 => bb2,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    267051053700028673784861206778342518519 => bb11,
    _ => bb10
    }
    }
    bb31 = {
    _39 = _63 - _63;
    (*_6) = _5.1 as u128;
    (*_20) = [(-21340_i16),(-23452_i16),27639_i16,21707_i16,(-26807_i16),(-84_i16),(-12487_i16)];
    _9 = 4_usize as isize;
    (*_20) = [30646_i16,(-31220_i16),(-19942_i16),(-12744_i16),7529_i16,20325_i16,29766_i16];
    (*_20) = [(-31283_i16),9925_i16,11466_i16,32658_i16,(-2372_i16),20017_i16,(-14370_i16)];
    _11 = core::ptr::addr_of!(_66);
    _20 = core::ptr::addr_of_mut!((*_20));
    place!(Field::<u32>(Variant(_42, 3), 2)) = _51.2;
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    place!(Field::<u32>(Variant(_42, 3), 2)) = _51.2 << _21;
    (*_20) = [12660_i16,(-27688_i16),(-6783_i16),(-21894_i16),31553_i16,(-28348_i16),17338_i16];
    (*_11) = 7688_i16;
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    _39 = _63 * _63;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) & Field::<u128>(Variant(_42, 3), 4);
    (*_11) = -(-17699_i16);
    _12 = Field::<u8>(Variant(_42, 3), 6) % _35;
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    (*_28) = [_38];
    match _35 {
    0 => bb22,
    1 => bb2,
    2 => bb4,
    158 => bb33,
    _ => bb32
    }
    }
    bb32 = {
    (*_6) = 295787433211163001850709867583083101622_u128;
    _9 = (*_6) as isize;
    _10 = '\u{ccf8}';
    _1 = _9;
    (*_6) = 46945533643481385291934639640788799665_u128 >> _9;
    (*_6) = !257192412550303029979674875975033773347_u128;
    (*_6) = !334371236127256413537361460987925887419_u128;
    (*_6) = !62186434491002153945801910356911795409_u128;
    (*_6) = false as u128;
    (*_6) = 277397832445675736896400903931237300071_u128 * 178537790199035963337989453929610709964_u128;
    _5.1 = 1075788686_i32;
    (*_6) = 149027942433400832388376106289472663411_u128 >> _1;
    (*_6) = 23159560517000569193931507412280989684_u128;
    (*_6) = 50281979750977812924029600720447542223_u128;
    (*_6) = 11322023445887075727815710835915180447_u128;
    (*_6) = 29920035767731496720980025781335228894_u128 - 12144237364851192054397105422748905804_u128;
    (*_6) = 3257211035_u32 as u128;
    (*_6) = 193514424472488425371027581220983765715_u128 * 337418276195396694608329712840532047456_u128;
    _12 = 192_u8 - 68_u8;
    _5.0 = [1_usize,10107258693147185415_usize,7693946725441892967_usize,1237575105392508657_usize];
    _5.1 = (-1820928786_i32) & 1513220775_i32;
    (*_6) = !278154301125899781109325764687706508980_u128;
    _8 = [(-12442_i16),25955_i16,18510_i16,(-19093_i16),(-24646_i16),17687_i16,(-26909_i16)];
    (*_6) = 270065483615450494927966741009204666314_u128 - 21653708468649779579940354510139330533_u128;
    (*_6) = 37871_u16 as u128;
    Goto(bb4)
    }
    bb33 = {
    (*_49) = [123899468228697383903726211314115180606_i128];
    (*_11) = (-19150_i16) << (*_6);
    RET = Field::<u128>(Variant(_42, 3), 4);
    _50 = !6_usize;
    (*_20) = [(*_11),(*_11),(*_11),(*_11),(*_11),(*_11),(*_11)];
    (*_20) = [(*_11),(*_11),(*_11),(*_11),(*_11),(*_11),(*_11)];
    (*_11) = 16608_i16;
    _26 = _3 + _3;
    _45 = [_14];
    place!(Field::<i8>(Variant(_42, 3), 3)) = _30.1 ^ _30.1;
    _14 = _10;
    (*_49) = [77982760734529151009050794061166757603_i128];
    _60 = _10;
    (*_20) = [(*_11),(*_11),(*_11),(*_11),(*_11),(*_11),(*_11)];
    (*_28) = [_38];
    _34 = core::ptr::addr_of!((*_11));
    (*_34) = (-13501_i16);
    (*_28) = [_10];
    match (*_11) {
    0 => bb11,
    1 => bb2,
    2 => bb30,
    3 => bb25,
    4 => bb34,
    5 => bb35,
    6 => bb36,
    340282366920938463463374607431768197955 => bb38,
    _ => bb37
    }
    }
    bb34 = {
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    _40 = [Field::<u64>(Variant(_42, 3), 7)];
    (*_20) = [(-30390_i16),(-4350_i16),31580_i16,31190_i16,(-27567_i16),(-13963_i16),(-6777_i16)];
    (*_28) = [_10];
    _9 = -_43;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    (*_49) = [(-139125035276717810326787064970830935719_i128)];
    (*_20) = [(-23692_i16),5984_i16,12685_i16,2033_i16,(-3538_i16),31478_i16,(-13005_i16)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    _21 = _9 ^ _43;
    Call(place!(Field::<i8>(Variant(_42, 3), 3)) = core::intrinsics::transmute(Field::<bool>(Variant(_42, 3), 0)), ReturnTo(bb25), UnwindUnreachable())
    }
    bb35 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb36 = {
    _45 = [_14];
    (*_20) = [(-10088_i16),(-13631_i16),21308_i16,(-3843_i16),(-26228_i16),24018_i16,(-19015_i16)];
    _6 = core::ptr::addr_of!(RET);
    _42 = Adt17::Variant3 { fld0: _16,fld1: _14,fld2: 1085498572_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _12,fld7: 6340809198018613011_u64 };
    _28 = core::ptr::addr_of!(_45);
    _42 = Adt17::Variant2 { fld0: (-40365029079222893_i64),fld1: 9933436063384331544_u64 };
    _42 = Adt17::Variant3 { fld0: _16,fld1: _10,fld2: 151374212_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _12,fld7: 1864179134900846265_u64 };
    _5.1 = Field::<i32>(Variant(_42, 3), 5) ^ Field::<i32>(Variant(_42, 3), 5);
    place!(Field::<u32>(Variant(_42, 3), 2)) = !2652519298_u32;
    _24 = Move(_2);
    (*_20) = [6489_i16,(-2853_i16),(-6602_i16),14445_i16,21555_i16,(-31914_i16),(-5189_i16)];
    (*_20) = [10873_i16,6124_i16,(-30514_i16),(-16063_i16),30694_i16,(-15032_i16),7297_i16];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) & Field::<u128>(Variant(_42, 3), 4);
    _23 = _9;
    _42 = Adt17::Variant3 { fld0: _16,fld1: _14,fld2: 3145543672_u32,fld3: _30.1,fld4: (*_6),fld5: _5.1,fld6: _35,fld7: 11879437330712213923_u64 };
    (*_20) = [10921_i16,26657_i16,(-30857_i16),2590_i16,(-10905_i16),(-31935_i16),126_i16];
    _21 = _37 ^ _1;
    (*_28) = [_14];
    (*_20) = [9671_i16,(-23519_i16),(-31885_i16),14614_i16,19423_i16,10048_i16,6262_i16];
    (*_20) = [(-24980_i16),(-19482_i16),(-3016_i16),6008_i16,22551_i16,(-23925_i16),(-17956_i16)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    (*_6) = Field::<char>(Variant(_42, 3), 1) as u128;
    _49 = core::ptr::addr_of_mut!(_27);
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    (*_20) = [10856_i16,7652_i16,25526_i16,(-20151_i16),(-1939_i16),(-6658_i16),15885_i16];
    place!(Field::<u64>(Variant(_42, 3), 7)) = 515556165053854129_u64 + 14758851097216150922_u64;
    match Field::<i8>(Variant(_42, 3), 3) {
    0 => bb8,
    34 => bb24,
    _ => bb9
    }
    }
    bb37 = {
    _51.0 = [_53,_53,_53,_53,_53];
    _20 = core::ptr::addr_of_mut!((*_20));
    _2 = &mut _53;
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _31.0 = &mut (*_2);
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    _5.1 = Field::<i32>(Variant(_42, 3), 5);
    (*_20) = [(-8514_i16),(-25929_i16),(-11985_i16),(-29424_i16),(-19803_i16),11305_i16,(-6555_i16)];
    place!(Field::<u8>(Variant(_42, 3), 6)) = 28208_i16 as u8;
    _33 = _5.1 as isize;
    (*_49) = [136896379025447351746945023220578044226_i128];
    _63 = 6887461060884280889_usize as f64;
    _51.2 = Field::<u32>(Variant(_42, 3), 2) >> (*_6);
    (*_6) = (-436940489894088463_i64) as u128;
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    (*_49) = [132865963781522373999422077034521017849_i128];
    (*_20) = [9067_i16,25789_i16,4745_i16,(-14931_i16),22443_i16,(-29176_i16),29341_i16];
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _59 = _21 * _43;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) << Field::<u64>(Variant(_42, 3), 7);
    (*_28) = [_14];
    (*_28) = [_10];
    place!(Field::<i32>(Variant(_42, 3), 5)) = 23476_i16 as i32;
    (*_49) = [107001054742131164283478894242055851742_i128];
    _43 = !_55;
    match _35 {
    158 => bb31,
    _ => bb30
    }
    }
    bb38 = {
    _57 = [Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) ^ Field::<u128>(Variant(_42, 3), 4);
    (*_34) = (-26931_i16);
    (*_34) = _50 as i16;
    (*_49) = [17787888600617094586869250944331894264_i128];
    _21 = _55 << (*_34);
    (*_28) = [_10];
    (*_11) = 29600_i16;
    Goto(bb39)
    }
    bb39 = {
    (*_6) = Field::<u128>(Variant(_42, 3), 4);
    _37 = _30.1 as isize;
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _13 = [_30.1,Field::<i8>(Variant(_42, 3), 3),Field::<i8>(Variant(_42, 3), 3),_30.1,Field::<i8>(Variant(_42, 3), 3)];
    place!(Field::<u32>(Variant(_42, 3), 2)) = _51.2 >> (*_6);
    _72 = Field::<u64>(Variant(_42, 3), 7) as i8;
    _33 = _43 + _55;
    (*_20) = [(*_11),(*_11),(*_11),(*_11),(*_11),(*_11),(*_11)];
    _21 = _54;
    _22 = _39 as isize;
    (*_49) = [62499412013566879035199256726245510253_i128];
    Call(_76.1.0.0 = core::intrinsics::transmute((*_28)), ReturnTo(bb40), UnwindUnreachable())
    }
    bb40 = {
    (*_49) = [3125592275853997680137732832031886489_i128];
    _76.1.2 = Field::<i8>(Variant(_42, 3), 3);
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    (*_11) = (-16051_i16) & (-32477_i16);
    _65 = &place!(Field::<char>(Variant(_42, 3), 1));
    RET = Field::<u128>(Variant(_42, 3), 4);
    (*_6) = !Field::<u128>(Variant(_42, 3), 4);
    _76.3 = &mut place!(Field::<i32>(Variant(_42, 3), 5));
    _74 = -_39;
    (*_28) = [(*_65)];
    (*_28) = [(*_65)];
    (*_28) = [(*_65)];
    (*_49) = [(-49553691557625176365291583071694912225_i128)];
    _50 = 0_usize | 4520666443904044833_usize;
    _75 = (-67048173655714791095276180776180305000_i128);
    (*_49) = [_75];
    _41 = [_72,_72,_72,_72,_76.1.2];
    (*_28) = [(*_65)];
    (*_20) = [(*_11),(*_11),(*_11),(*_11),(*_11),(*_11),(*_11)];
    _64 = (*_65);
    _11 = Move(_34);
    _3 = _29 + _51.1;
    _43 = _33 + _23;
    _70 = _16 & _16;
    match _75 {
    0 => bb28,
    1 => bb8,
    2 => bb4,
    3 => bb41,
    4 => bb42,
    273234193265223672368098426655587906456 => bb44,
    _ => bb43
    }
    }
    bb41 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb42 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb43 = {
    (*_6) = 198847229561193813076298865856153219411_u128;
    (*_6) = 82729704426658010711231575828645570421_u128 ^ 165000429351818935381403275202551132616_u128;
    _6 = core::ptr::addr_of!((*_6));
    (*_6) = 106724877578664936957243944950072679220_i128 as u128;
    (*_6) = _5.1 as u128;
    (*_6) = 91704378284379534347872483148929548500_u128 * 238108522484660210520465536177383673909_u128;
    Goto(bb3)
    }
    bb44 = {
    (*_28) = [(*_65)];
    _47.0 = &mut _75;
    _40 = [12180275624619719782_u64];
    _51.0 = [(-832053332472844419096484324800516975_i128),(-31406572996487358199616330310042068732_i128),139338068817651499459831790936414801033_i128,7095500235191231871535368459656149632_i128,(-20782668878115880819680809672137548454_i128)];
    (*_28) = [(*_65)];
    _72 = _30.1 & _76.1.2;
    _46 = Move(_19);
    (*_49) = [158329046066461137048824488193669954246_i128];
    (*_20) = [_66,_66,_66,_66,_66,_66,_66];
    _29 = _3;
    _16 = !_70;
    (*_28) = [(*_65)];
    (*_28) = [_14];
    _70 = _16 < _16;
    _47.0 = Move(_2);
    (*_28) = [(*_65)];
    (*_20) = [_66,_66,_66,_66,_66,_66,_66];
    Goto(bb45)
    }
    bb45 = {
    (*_6) = 199209408911740781297701394645615222455_u128 * 139114827276611887244652459339321426697_u128;
    (*_6) = _51.2 as u128;
    (*_28) = [(*_65)];
    _80 = _38;
    (*_28) = [(*_65)];
    _36 = _10;
    (*_49) = [(-48067353986407103483797777010573882796_i128)];
    (*_28) = [_60];
    _2 = Move(_31.0);
    _9 = _59;
    _55 = _66 as isize;
    (*_28) = [(*_65)];
    _76.2 = core::ptr::addr_of_mut!(_43);
    _30.1 = -_72;
    _40 = [6008716031645423709_u64];
    (*_28) = [_14];
    _51.1 = _29 + _3;
    _26 = _51.1 - _29;
    _34 = Move(_11);
    _89 = _43 != _33;
    _84 = _21 + _33;
    _76.1.1 = !93355250929288751976813994741723786556_i128;
    _14 = (*_65);
    _13 = [_72,_30.1,_30.1,_30.1,_30.1];
    _81 = _74 as isize;
    (*_49) = [_76.1.1];
    match _35 {
    0 => bb33,
    1 => bb25,
    2 => bb15,
    3 => bb21,
    4 => bb27,
    5 => bb9,
    6 => bb36,
    158 => bb46,
    _ => bb10
    }
    }
    bb46 = {
    (*_49) = [_76.1.1];
    _13 = [_30.1,_72,_30.1,_30.1,_72];
    _88 = core::ptr::addr_of_mut!((*_49));
    _31.0 = &mut _76.1.1;
    (*_28) = [(*_65)];
    _26 = -_51.1;
    (*_6) = !77420083579793905044264561238838424255_u128;
    (*_6) = 141241618273706951269063496197170095575_u128;
    _72 = _30.1 | _30.1;
    _85.1 = !_23;
    RET = !117368661989374696999859363309036742468_u128;
    _87 = -_39;
    _66 = (-28643_i16) >> _33;
    _44 = 7218206388628330865_u64 + 11455824707477602332_u64;
    match _35 {
    0 => bb38,
    1 => bb47,
    2 => bb48,
    3 => bb49,
    4 => bb50,
    5 => bb51,
    6 => bb52,
    158 => bb54,
    _ => bb53
    }
    }
    bb47 = {
    (*_6) = 198847229561193813076298865856153219411_u128;
    (*_6) = 82729704426658010711231575828645570421_u128 ^ 165000429351818935381403275202551132616_u128;
    _6 = core::ptr::addr_of!((*_6));
    (*_6) = 106724877578664936957243944950072679220_i128 as u128;
    (*_6) = _5.1 as u128;
    (*_6) = 91704378284379534347872483148929548500_u128 * 238108522484660210520465536177383673909_u128;
    Goto(bb3)
    }
    bb48 = {
    _57 = [Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7),Field::<u64>(Variant(_42, 3), 7)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) ^ Field::<u128>(Variant(_42, 3), 4);
    (*_34) = (-26931_i16);
    (*_34) = _50 as i16;
    (*_49) = [17787888600617094586869250944331894264_i128];
    _21 = _55 << (*_34);
    (*_28) = [_10];
    (*_11) = 29600_i16;
    Goto(bb39)
    }
    bb49 = {
    _5.0 = [13656880838168934984_usize,18036459926193955854_usize,0_usize,18328842090435974726_usize];
    RET = !160741228492382358476400426557523899269_u128;
    RET = 69680228553111632972933076184911254820_u128;
    (*_6) = !155198270277006869495784784864726650201_u128;
    _10 = '\u{c2eb1}';
    _5.1 = !(-1734070502_i32);
    RET = 7499058548251558977614289483235843966_u128 * 241139603922868118658882225008093217707_u128;
    (*_6) = 267051053700028673784861206778342518519_u128;
    match (*_6) {
    0 => bb3,
    1 => bb2,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    267051053700028673784861206778342518519 => bb11,
    _ => bb10
    }
    }
    bb50 = {
    (*_6) = 295787433211163001850709867583083101622_u128;
    _9 = (*_6) as isize;
    _10 = '\u{ccf8}';
    _1 = _9;
    (*_6) = 46945533643481385291934639640788799665_u128 >> _9;
    (*_6) = !257192412550303029979674875975033773347_u128;
    (*_6) = !334371236127256413537361460987925887419_u128;
    (*_6) = !62186434491002153945801910356911795409_u128;
    (*_6) = false as u128;
    (*_6) = 277397832445675736896400903931237300071_u128 * 178537790199035963337989453929610709964_u128;
    _5.1 = 1075788686_i32;
    (*_6) = 149027942433400832388376106289472663411_u128 >> _1;
    (*_6) = 23159560517000569193931507412280989684_u128;
    (*_6) = 50281979750977812924029600720447542223_u128;
    (*_6) = 11322023445887075727815710835915180447_u128;
    (*_6) = 29920035767731496720980025781335228894_u128 - 12144237364851192054397105422748905804_u128;
    (*_6) = 3257211035_u32 as u128;
    (*_6) = 193514424472488425371027581220983765715_u128 * 337418276195396694608329712840532047456_u128;
    _12 = 192_u8 - 68_u8;
    _5.0 = [1_usize,10107258693147185415_usize,7693946725441892967_usize,1237575105392508657_usize];
    _5.1 = (-1820928786_i32) & 1513220775_i32;
    (*_6) = !278154301125899781109325764687706508980_u128;
    _8 = [(-12442_i16),25955_i16,18510_i16,(-19093_i16),(-24646_i16),17687_i16,(-26909_i16)];
    (*_6) = 270065483615450494927966741009204666314_u128 - 21653708468649779579940354510139330533_u128;
    (*_6) = 37871_u16 as u128;
    Goto(bb4)
    }
    bb51 = {
    (*_6) = 77023313880193777098716221408538327329_u128 << _12;
    (*_6) = 97915586366849053293259024856772038340_u128;
    (*_20) = [(-3088_i16),(-11936_i16),9084_i16,29069_i16,(-13541_i16),367_i16,12233_i16];
    (*_20) = [(-27276_i16),2931_i16,21936_i16,7127_i16,23494_i16,3179_i16,(-15934_i16)];
    (*_20) = [(-5967_i16),24773_i16,(-19199_i16),(-28455_i16),(-24879_i16),28381_i16,(-21578_i16)];
    (*_6) = 130846093291183608791918348347932514361_u128 + 319679156841592800626601183754527069089_u128;
    (*_6) = 120005178980564941578153959657870451104_u128;
    (*_6) = !61644569192861161427435609644291372261_u128;
    (*_20) = [229_i16,(-16873_i16),(-3708_i16),12550_i16,7318_i16,31113_i16,32254_i16];
    (*_20) = [22568_i16,(-23831_i16),26322_i16,(-5336_i16),6617_i16,(-2079_i16),(-30417_i16)];
    _23 = 55636_u16 as isize;
    (*_20) = [(-28154_i16),25102_i16,5977_i16,(-24107_i16),13329_i16,(-13348_i16),(-8940_i16)];
    _20 = core::ptr::addr_of_mut!((*_20));
    _22 = _9;
    _6 = core::ptr::addr_of!((*_6));
    (*_20) = [(-30217_i16),(-21918_i16),5461_i16,13948_i16,23472_i16,(-11261_i16),(-9038_i16)];
    _23 = !_9;
    (*_6) = !329698403162696398320996901366660334693_u128;
    (*_6) = 275983861990007770791627586769308276242_u128;
    (*_20) = [(-5033_i16),31253_i16,8772_i16,30950_i16,26710_i16,(-29269_i16),(-462_i16)];
    (*_6) = 123514251881444030464143589991427197441_u128 ^ 331053003788470378561708647487284175951_u128;
    Goto(bb15)
    }
    bb52 = {
    (*_49) = [_53];
    (*_20) = [(-2388_i16),(-27972_i16),21160_i16,(-32133_i16),16903_i16,7953_i16,(-20809_i16)];
    _54 = _22;
    (*_49) = [_53];
    (*_28) = [_10];
    (*_6) = _14 as u128;
    place!(Field::<char>(Variant(_42, 3), 1)) = _38;
    Goto(bb27)
    }
    bb53 = {
    (*_28) = [Field::<char>(Variant(_42, 3), 1)];
    _40 = [Field::<u64>(Variant(_42, 3), 7)];
    (*_20) = [(-30390_i16),(-4350_i16),31580_i16,31190_i16,(-27567_i16),(-13963_i16),(-6777_i16)];
    (*_28) = [_10];
    _9 = -_43;
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    (*_49) = [(-139125035276717810326787064970830935719_i128)];
    (*_20) = [(-23692_i16),5984_i16,12685_i16,2033_i16,(-3538_i16),31478_i16,(-13005_i16)];
    (*_6) = Field::<u128>(Variant(_42, 3), 4) + Field::<u128>(Variant(_42, 3), 4);
    _21 = _9 ^ _43;
    Call(place!(Field::<i8>(Variant(_42, 3), 3)) = core::intrinsics::transmute(Field::<bool>(Variant(_42, 3), 0)), ReturnTo(bb25), UnwindUnreachable())
    }
    bb54 = {
    _6 = core::ptr::addr_of!((*_6));
    _30.1 = (-5065724626096724241_i64) as i8;
    _24 = Move(_31.0);
    (*_88) = [156539174906500494300806490461351538498_i128];
    (*_20) = [_66,_66,_66,_66,_66,_66,_66];
    _12 = _35 << _66;
    _63 = _51.2 as f64;
    _93 = _16 & _89;
    (*_88) = [(-86629899787067803434225041543037046442_i128)];
    (*_88) = [67967041801838275238130662263422119933_i128];
    _77 = core::ptr::addr_of!((*_28));
    _10 = _64;
    (*_77) = [(*_65)];
    (*_88) = [(-50892074926907959324093981378194133216_i128)];
    (*_6) = !76392116148465718339892311398781340884_u128;
    RET = 70973764145237295863429031996115963140_u128 << _43;
    (*_28) = [(*_65)];
    _91 = _66 * _66;
    (*_20) = [_66,_91,_91,_66,_91,_66,_91];
    (*_49) = [20690648158405348997341282114614254863_i128];
    Goto(bb55)
    }
    bb55 = {
    Call(_100 = dump_var(9_usize, 21_usize, Move(_21), 15_usize, Move(_15), 8_usize, Move(_8), 27_usize, Move(_27)), ReturnTo(bb56), UnwindUnreachable())
    }
    bb56 = {
    Call(_100 = dump_var(9_usize, 16_usize, Move(_16), 33_usize, Move(_33), 93_usize, Move(_93), 59_usize, Move(_59)), ReturnTo(bb57), UnwindUnreachable())
    }
    bb57 = {
    Call(_100 = dump_var(9_usize, 38_usize, Move(_38), 53_usize, Move(_53), 84_usize, Move(_84), 50_usize, Move(_50)), ReturnTo(bb58), UnwindUnreachable())
    }
    bb58 = {
    Call(_100 = dump_var(9_usize, 60_usize, Move(_60), 56_usize, Move(_56), 43_usize, Move(_43), 13_usize, Move(_13)), ReturnTo(bb59), UnwindUnreachable())
    }
    bb59 = {
    Call(_100 = dump_var(9_usize, 12_usize, Move(_12), 70_usize, Move(_70), 23_usize, Move(_23), 80_usize, Move(_80)), ReturnTo(bb60), UnwindUnreachable())
    }
    bb60 = {
    Call(_100 = dump_var(9_usize, 64_usize, Move(_64), 101_usize, _101, 101_usize, _101, 101_usize, _101), ReturnTo(bb61), UnwindUnreachable())
    }
    bb61 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(
    mut _1: u128,
    mut _2: i32,
    mut _3: i32,
    mut _4: isize,
    mut _5: u128,
    mut _6: f32,
    mut _7: f32,
    mut _8: i32,
    mut _9: u128,
    mut _10: u128,
) -> [usize; 4] {
    mir! {
    type RET = [usize; 4];
    let _11: &'static char;
    let _12: char;
    let _13: (((f32, &'static i64), i128, i8),);
    let _14: u128;
    let _15: char;
    let _16: bool;
    let _17: bool;
    let _18: isize;
    let _19: f32;
    let _20: usize;
    let _21: bool;
    let _22: u128;
    let _23: Adt37;
    let _24: isize;
    let _25: *const [char; 1];
    let _26: char;
    let _27: u128;
    let _28: *mut isize;
    let _29: char;
    let _30: &'static mut i32;
    let _31: [i128; 5];
    let _32: bool;
    let _33: *const (u32, &'static mut i32);
    let _34: &'static [i8; 5];
    let _35: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _36: ();
    let _37: ();
    {
    _10 = 14756432080239682224_u64 as u128;
    _8 = _3 | _2;
    _9 = _7 as u128;
    _7 = _6 * _6;
    _9 = 43_u8 as u128;
    RET = [2053142250130979848_usize,2_usize,5_usize,15166052003216132001_usize];
    _5 = _1 * _10;
    RET = [5107820544346733794_usize,0_usize,7941265823910967202_usize,6_usize];
    _5 = 2450657433_u32 as u128;
    _10 = _5 | _9;
    _7 = -_6;
    _1 = _5 + _5;
    _5 = _10 - _1;
    _9 = _5;
    _9 = _5;
    _1 = _10;
    _5 = _9 * _9;
    _10 = _5;
    _8 = _3 ^ _2;
    _1 = !_10;
    _9 = _10 * _10;
    _4 = (-434429450306321174_i64) as isize;
    _9 = _1;
    _5 = !_9;
    _3 = _8;
    _1 = !_5;
    _7 = _6 - _6;
    _5 = !_1;
    Call(_3 = fn11(RET, _1), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    RET = [6002347220118205348_usize,12924330229592517035_usize,7_usize,5705553414686649827_usize];
    _13.0.0.0 = _7 - _7;
    _6 = 1230022816_u32 as f32;
    _7 = _13.0.0.0 - _6;
    _10 = _9;
    _9 = _10 ^ _5;
    RET = [8816413101549347818_usize,1_usize,15675405966192324727_usize,4996220235951631180_usize];
    _13.0.0.0 = _7 * _7;
    Call(_8 = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
    }
    bb2 = {
    _7 = -_13.0.0.0;
    _12 = '\u{b5808}';
    _11 = &_12;
    _6 = -_13.0.0.0;
    _6 = _13.0.0.0;
    _5 = _1 - _10;
    RET = [1_usize,4_usize,188117428835024193_usize,15348606696906688007_usize];
    RET = [5_usize,1_usize,5_usize,6_usize];
    _6 = _13.0.0.0;
    _13.0.2 = _8 as i8;
    _8 = 3764422305643878943_u64 as i32;
    RET = [13166193932601012322_usize,5_usize,17104181125859155891_usize,1_usize];
    Goto(bb3)
    }
    bb3 = {
    _2 = _3 & _3;
    _6 = _13.0.0.0 * _13.0.0.0;
    _2 = -_3;
    _3 = -_2;
    _6 = (-3269098614047329061_i64) as f32;
    _13.0.1 = -36947393635850726588174822348253701496_i128;
    _5 = !_10;
    _12 = '\u{b78a6}';
    _14 = _9;
    _14 = _12 as u128;
    _12 = '\u{44ea3}';
    _13.0.1 = 123169934380661224291487699168963113224_i128 | 68052655978599571972757384911977047035_i128;
    RET = [2_usize,14265206551764019751_usize,6_usize,0_usize];
    _14 = !_9;
    Goto(bb4)
    }
    bb4 = {
    _16 = true & false;
    _6 = _13.0.0.0;
    _8 = -_3;
    _7 = -_6;
    _17 = !_16;
    RET = [486454625780717417_usize,11627008426474980892_usize,4_usize,930813364527240915_usize];
    _15 = _12;
    _5 = _14 + _9;
    _7 = _13.0.0.0 + _13.0.0.0;
    _6 = _7;
    _12 = _15;
    _11 = &_15;
    _3 = 60225_u16 as i32;
    _18 = !_4;
    _13.0.2 = _17 as i8;
    _7 = _6 * _6;
    _6 = 254_u8 as f32;
    _4 = _18 * _18;
    Goto(bb5)
    }
    bb5 = {
    _8 = _2 - _2;
    _1 = _9 - _9;
    _6 = -_7;
    _21 = _13.0.0.0 != _13.0.0.0;
    _17 = _21 & _21;
    _9 = !_5;
    _11 = &_12;
    _17 = _21;
    _13.0.1 = 123416577630746286070291410889245279938_i128 ^ 134410273928061729949337440884145139566_i128;
    _9 = !_1;
    _23 = Adt37::Variant1 { fld0: _13.0.1,fld1: 54301_u16 };
    _20 = 14587903503356325900_usize << _5;
    _16 = !_21;
    _3 = _8 ^ _2;
    _10 = _9;
    _6 = _7 * _7;
    _6 = -_7;
    _16 = !_17;
    place!(Field::<i128>(Variant(_23, 1), 0)) = !_13.0.1;
    _19 = 196_u8 as f32;
    _12 = _15;
    _15 = _12;
    Call(_22 = core::intrinsics::bswap(_1), ReturnTo(bb6), UnwindUnreachable())
    }
    bb6 = {
    _13.0.0.0 = _7 * _6;
    _24 = _4;
    _15 = _12;
    _14 = _7 as u128;
    _26 = _12;
    _13.0.0.0 = -_7;
    _20 = 468079413144200429_i64 as usize;
    _10 = _1;
    _20 = 1_usize;
    _2 = _24 as i32;
    place!(Field::<i128>(Variant(_23, 1), 0)) = !_13.0.1;
    RET = [_20,_20,_20,_20];
    _17 = _8 > _3;
    _21 = _16;
    _4 = _24 * _24;
    _13.0.0.0 = (-3194788423124213060_i64) as f32;
    _13.0.0.0 = 1909680012566839676_i64 as f32;
    _8 = _3 * _3;
    _12 = _26;
    _3 = _8;
    _17 = _16 | _16;
    _10 = _9 - _14;
    _24 = _4 + _4;
    match _20 {
    0 => bb7,
    2 => bb9,
    3 => bb10,
    4 => bb11,
    5 => bb12,
    6 => bb13,
    1 => bb15,
    _ => bb14
    }
    }
    bb7 = {
    _8 = _2 - _2;
    _1 = _9 - _9;
    _6 = -_7;
    _21 = _13.0.0.0 != _13.0.0.0;
    _17 = _21 & _21;
    _9 = !_5;
    _11 = &_12;
    _17 = _21;
    _13.0.1 = 123416577630746286070291410889245279938_i128 ^ 134410273928061729949337440884145139566_i128;
    _9 = !_1;
    _23 = Adt37::Variant1 { fld0: _13.0.1,fld1: 54301_u16 };
    _20 = 14587903503356325900_usize << _5;
    _16 = !_21;
    _3 = _8 ^ _2;
    _10 = _9;
    _6 = _7 * _7;
    _6 = -_7;
    _16 = !_17;
    place!(Field::<i128>(Variant(_23, 1), 0)) = !_13.0.1;
    _19 = 196_u8 as f32;
    _12 = _15;
    _15 = _12;
    Call(_22 = core::intrinsics::bswap(_1), ReturnTo(bb6), UnwindUnreachable())
    }
    bb8 = {
    _16 = true & false;
    _6 = _13.0.0.0;
    _8 = -_3;
    _7 = -_6;
    _17 = !_16;
    RET = [486454625780717417_usize,11627008426474980892_usize,4_usize,930813364527240915_usize];
    _15 = _12;
    _5 = _14 + _9;
    _7 = _13.0.0.0 + _13.0.0.0;
    _6 = _7;
    _12 = _15;
    _11 = &_15;
    _3 = 60225_u16 as i32;
    _18 = !_4;
    _13.0.2 = _17 as i8;
    _7 = _6 * _6;
    _6 = 254_u8 as f32;
    _4 = _18 * _18;
    Goto(bb5)
    }
    bb9 = {
    _2 = _3 & _3;
    _6 = _13.0.0.0 * _13.0.0.0;
    _2 = -_3;
    _3 = -_2;
    _6 = (-3269098614047329061_i64) as f32;
    _13.0.1 = -36947393635850726588174822348253701496_i128;
    _5 = !_10;
    _12 = '\u{b78a6}';
    _14 = _9;
    _14 = _12 as u128;
    _12 = '\u{44ea3}';
    _13.0.1 = 123169934380661224291487699168963113224_i128 | 68052655978599571972757384911977047035_i128;
    RET = [2_usize,14265206551764019751_usize,6_usize,0_usize];
    _14 = !_9;
    Goto(bb4)
    }
    bb10 = {
    _7 = -_13.0.0.0;
    _12 = '\u{b5808}';
    _11 = &_12;
    _6 = -_13.0.0.0;
    _6 = _13.0.0.0;
    _5 = _1 - _10;
    RET = [1_usize,4_usize,188117428835024193_usize,15348606696906688007_usize];
    RET = [5_usize,1_usize,5_usize,6_usize];
    _6 = _13.0.0.0;
    _13.0.2 = _8 as i8;
    _8 = 3764422305643878943_u64 as i32;
    RET = [13166193932601012322_usize,5_usize,17104181125859155891_usize,1_usize];
    Goto(bb3)
    }
    bb11 = {
    RET = [6002347220118205348_usize,12924330229592517035_usize,7_usize,5705553414686649827_usize];
    _13.0.0.0 = _7 - _7;
    _6 = 1230022816_u32 as f32;
    _7 = _13.0.0.0 - _6;
    _10 = _9;
    _9 = _10 ^ _5;
    RET = [8816413101549347818_usize,1_usize,15675405966192324727_usize,4996220235951631180_usize];
    _13.0.0.0 = _7 * _7;
    Call(_8 = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
    }
    bb12 = {
    Return()
    }
    bb13 = {
    Return()
    }
    bb14 = {
    Return()
    }
    bb15 = {
    _13.0.0.0 = -_6;
    _2 = !_8;
    _27 = _1;
    _10 = _14;
    _1 = !_27;
    place!(Field::<u16>(Variant(_23, 1), 1)) = 60571_u16;
    _10 = _14 + _9;
    _4 = _24 + _24;
    _10 = _9 * _14;
    _26 = _15;
    _22 = _9 ^ _1;
    _23 = Adt37::Variant1 { fld0: _13.0.1,fld1: 51115_u16 };
    RET = [_20,_20,_20,_20];
    _8 = 15575_u16 as i32;
    _13.0.1 = Field::<i128>(Variant(_23, 1), 0) << _14;
    _14 = _22;
    match _20 {
    0 => bb14,
    2 => bb10,
    3 => bb11,
    4 => bb5,
    1 => bb16,
    _ => bb9
    }
    }
    bb16 = {
    _17 = _3 > _3;
    _5 = _22 & _14;
    _7 = _13.0.0.0;
    _31 = [_13.0.1,_13.0.1,_13.0.1,_13.0.1,Field::<i128>(Variant(_23, 1), 0)];
    _15 = _26;
    _15 = _12;
    RET[_20] = 20732_i16 as usize;
    _9 = _10 + _22;
    _9 = _1 ^ _5;
    _27 = !_10;
    _24 = 60269_u16 as isize;
    _20 = RET[_20] >> _31[_20];
    _15 = _12;
    RET = [_20,_20,_20,_20];
    _30 = &mut _8;
    (*_30) = _3 & _3;
    (*_30) = !_3;
    _17 = _21;
    _11 = &_15;
    _4 = _24 | _18;
    _15 = _26;
    (*_30) = _3 ^ _2;
    (*_30) = _2 ^ _2;
    (*_30) = _15 as i32;
    _35.0.0 = _7 + _6;
    Goto(bb17)
    }
    bb17 = {
    Call(_36 = dump_var(10_usize, 22_usize, Move(_22), 1_usize, Move(_1), 21_usize, Move(_21), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    Call(_36 = dump_var(10_usize, 3_usize, Move(_3), 31_usize, Move(_31), 20_usize, Move(_20), 10_usize, Move(_10)), ReturnTo(bb19), UnwindUnreachable())
    }
    bb19 = {
    Call(_36 = dump_var(10_usize, 15_usize, Move(_15), 27_usize, Move(_27), 37_usize, _37, 37_usize, _37), ReturnTo(bb20), UnwindUnreachable())
    }
    bb20 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: [usize; 4], mut _2: u128) -> i32 {
    mir! {
    type RET = i32;
    let _3: ([i128; 6],);
    let _4: *const (&'static mut i32, isize, bool, i32);
    let _5: bool;
    let _6: usize;
    let _7: Adt68;
    let _8: Adt68;
    let _9: u64;
    let _10: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _11: u128;
    let _12: [u64; 4];
    let _13: i128;
    let _14: &'static mut (u32, &'static mut i32);
    let _15: i64;
    let _16: (&'static mut i32, isize, bool, i32);
    let _17: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _18: isize;
    let _19: isize;
    let _20: [i8; 5];
    let _21: i16;
    let _22: *const (u32, &'static mut i32);
    let _23: isize;
    let _24: ((f32, &'static i64), i128, i8);
    let _25: *const (u32, &'static mut i32);
    let _26: char;
    let _27: [char; 1];
    let _28: f64;
    let _29: usize;
    let _30: [u64; 4];
    let _31: f64;
    let _32: f64;
    let _33: &'static *mut isize;
    let _34: &'static [i8; 2];
    let _35: ([i128; 5], f32, u32);
    let _36: char;
    let _37: bool;
    let _38: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _39: f32;
    let _40: char;
    let _41: usize;
    let _42: char;
    let _43: f32;
    let _44: Adt68;
    let _45: i8;
    let _46: *mut ((f32, &'static i64), i128, i8);
    let _47: usize;
    let _48: usize;
    let _49: *mut Adt23;
    let _50: *mut [i16; 7];
    let _51: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _52: &'static mut [i128; 6];
    let _53: [usize; 4];
    let _54: char;
    let _55: f32;
    let _56: &'static [i8; 2];
    let _57: u8;
    let _58: *const [char; 1];
    let _59: u64;
    let _60: f32;
    let _61: f32;
    let _62: i16;
    let _63: *const u64;
    let _64: (&'static mut i32, isize, bool, i32);
    let _65: &'static i64;
    let _66: &'static char;
    let _67: &'static i64;
    let _68: char;
    let _69: (f64,);
    let _70: isize;
    let _71: char;
    let _72: u16;
    let _73: &'static *mut isize;
    let _74: &'static [i8; 2];
    let _75: [i128; 5];
    let _76: *const u128;
    let _77: isize;
    let _78: char;
    let _79: *const [char; 1];
    let _80: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _81: char;
    let _82: [i8; 5];
    let _83: bool;
    let _84: *mut isize;
    let _85: f64;
    let _86: f32;
    let _87: &'static mut (u32, &'static mut i32);
    let _88: (i32, u128, *const u128, [i64; 8]);
    let _89: f32;
    let _90: i8;
    let _91: f32;
    let _92: (char, Adt23);
    let _93: bool;
    let _94: isize;
    let _95: f64;
    let _96: u8;
    let _97: f32;
    let _98: f32;
    let _99: &'static u16;
    let _100: f32;
    let _101: *const u64;
    let _102: *const u64;
    let _103: *mut Adt23;
    let _104: isize;
    let _105: i128;
    let _106: *const u128;
    let _107: bool;
    let _108: *const (i32, isize);
    let _109: i128;
    let _110: isize;
    let _111: bool;
    let _112: i32;
    let _113: bool;
    let _114: bool;
    let _115: [i8; 2];
    let _116: Adt37;
    let _117: bool;
    let _118: isize;
    let _119: [i128; 6];
    let _120: *mut ((f32, &'static i64), i128, i8);
    let _121: ();
    let _122: ();
    {
    RET = 2027038858_i32 + (-613369757_i32);
    _2 = 80252879527855765217867547324244215777_u128 * 200767679603012455428263622689163800282_u128;
    _2 = false as u128;
    _3.0 = [37362886196067816319708684199201644092_i128,61693841018332607816016185954713070779_i128,(-59437629614454459709951202227235655497_i128),6620652012600066674556179226782635046_i128,159738791340818615642417356386967135103_i128,(-129844845148247672401370806552802381724_i128)];
    _5 = !false;
    _1 = [3_usize,8142827394317247255_usize,0_usize,7_usize];
    _3.0 = [107300026502920586831374899306544166399_i128,136005373862439316446673490501511460331_i128,(-3091344881744728872477989688489115349_i128),(-61010217756475104602945979984079202619_i128),155606954113246422801829511409876282865_i128,864265619405068038316625785202785203_i128];
    _5 = !false;
    _2 = 259479929200961912860642373167436329635_u128 ^ 176169267585002833807258455597491842018_u128;
    _5 = _2 >= _2;
    _2 = !126174411187200702611119153540424461277_u128;
    _1 = [9254463067168397865_usize,2_usize,1019506166425906396_usize,10924994693422275155_usize];
    RET = 18_isize as i32;
    _2 = !83211692642245590311434378916716286619_u128;
    _7.fld4 = [(-118956779401819546156199485368687559819_i128),73740820331073004581020464407827384786_i128,(-165760324677608604474837524454325676611_i128),37243520480652584236305503631310348787_i128,143319970270120403381004061477777228070_i128,14090155568349777928445625173384068566_i128];
    _7.fld1 = [(-76_i8),(-83_i8),78_i8,97_i8,(-50_i8)];
    _3.0 = [(-50567903315686135920231629370983940998_i128),(-51083606346921760949331280311491608412_i128),(-135502680232412993515767587251462469706_i128),(-2779029128161793952713087691905061812_i128),(-87903313801601029258100740857404485846_i128),(-5948850575019931443602581148899042215_i128)];
    _7.fld0 = 36696_u16 as i32;
    _7.fld1 = [26_i8,(-56_i8),12_i8,105_i8,13_i8];
    _6 = 26711_u16 as usize;
    _7.fld1 = [69_i8,85_i8,3_i8,67_i8,68_i8];
    _7.fld2 = 17354196808540679027_u64 as f64;
    _7.fld0 = RET & RET;
    _8.fld1 = [104_i8,65_i8,(-66_i8),97_i8,(-79_i8)];
    Goto(bb1)
    }
    bb1 = {
    _8.fld0 = !_7.fld0;
    _5 = !true;
    _2 = (-21_isize) as u128;
    _7.fld4 = _3.0;
    _7.fld1 = [80_i8,(-72_i8),(-39_i8),(-88_i8),112_i8];
    _3.0 = _7.fld4;
    _8.fld4 = _7.fld4;
    _9 = !11889341805107524267_u64;
    _9 = 7503410653971614246_u64 - 8194028461940939067_u64;
    RET = _8.fld0;
    _7.fld2 = 441750764901392319466120934864036134_i128 as f64;
    _13 = !(-137246653240364689221005108889747230877_i128);
    _12 = [_9,_9,_9,_9];
    _7.fld1 = [68_i8,77_i8,(-50_i8),53_i8,95_i8];
    _9 = 18372861299193304668_u64;
    _5 = false;
    _8.fld2 = _7.fld2 - _7.fld2;
    _7.fld0 = RET;
    RET = _7.fld0 + _7.fld0;
    _1 = [_6,_6,_6,_6];
    _8.fld2 = -_7.fld2;
    _1 = [_6,_6,_6,_6];
    _7.fld0 = 179_u8 as i32;
    _13 = (-7371608476315467625512722869980904787_i128) * (-146324880437390434902833387471160202446_i128);
    Goto(bb2)
    }
    bb2 = {
    _11 = _2 ^ _2;
    _10.0 = &mut _13;
    _15 = !8584798417549106470_i64;
    _7.fld1 = _8.fld1;
    _16.0 = &mut RET;
    _16.2 = _5 | _5;
    _16.2 = _5;
    Goto(bb3)
    }
    bb3 = {
    _8.fld0 = -_7.fld0;
    _7.fld1 = _8.fld1;
    _16.3 = _7.fld0 >> _6;
    _6 = 118_i16 as usize;
    _16.1 = (-103_isize) + 9223372036854775807_isize;
    _11 = _2;
    _17.0 = core::ptr::addr_of!(_16);
    _16.3 = _8.fld0 * _8.fld0;
    _8.fld1 = [(-56_i8),(-5_i8),58_i8,36_i8,(-113_i8)];
    _5 = _2 > _11;
    _8.fld4 = [(-114680475583533562937658480529349960282_i128),123954894296942126188137390418322229965_i128,(-149321500069101150017346611253060625970_i128),106939962275259535028096763461604479602_i128,(-126367604620434585432323654110376562482_i128),(-116513757945332916562567867759264835726_i128)];
    _9 = 10668517387077257515_u64 - 2807245193464426684_u64;
    _16.0 = &mut _16.3;
    _4 = Move(_17.0);
    _7.fld2 = _8.fld2 - _8.fld2;
    _6 = 1_usize;
    _17.0 = Move(_4);
    match _7.fld1[_6] {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    65 => bb10,
    _ => bb9
    }
    }
    bb4 = {
    _11 = _2 ^ _2;
    _10.0 = &mut _13;
    _15 = !8584798417549106470_i64;
    _7.fld1 = _8.fld1;
    _16.0 = &mut RET;
    _16.2 = _5 | _5;
    _16.2 = _5;
    Goto(bb3)
    }
    bb5 = {
    _8.fld0 = !_7.fld0;
    _5 = !true;
    _2 = (-21_isize) as u128;
    _7.fld4 = _3.0;
    _7.fld1 = [80_i8,(-72_i8),(-39_i8),(-88_i8),112_i8];
    _3.0 = _7.fld4;
    _8.fld4 = _7.fld4;
    _9 = !11889341805107524267_u64;
    _9 = 7503410653971614246_u64 - 8194028461940939067_u64;
    RET = _8.fld0;
    _7.fld2 = 441750764901392319466120934864036134_i128 as f64;
    _13 = !(-137246653240364689221005108889747230877_i128);
    _12 = [_9,_9,_9,_9];
    _7.fld1 = [68_i8,77_i8,(-50_i8),53_i8,95_i8];
    _9 = 18372861299193304668_u64;
    _5 = false;
    _8.fld2 = _7.fld2 - _7.fld2;
    _7.fld0 = RET;
    RET = _7.fld0 + _7.fld0;
    _1 = [_6,_6,_6,_6];
    _8.fld2 = -_7.fld2;
    _1 = [_6,_6,_6,_6];
    _7.fld0 = 179_u8 as i32;
    _13 = (-7371608476315467625512722869980904787_i128) * (-146324880437390434902833387471160202446_i128);
    Goto(bb2)
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    _8.fld2 = _7.fld2;
    _7.fld1 = [_8.fld1[_6],_8.fld1[_6],_8.fld1[_6],_8.fld1[_6],_8.fld1[_6]];
    _7.fld2 = _8.fld2 + _8.fld2;
    _8.fld4 = [_7.fld4[_6],_7.fld4[_6],_7.fld4[_6],_7.fld4[_6],_7.fld4[_6],_7.fld4[_6]];
    _7.fld1[_6] = !_8.fld1[_6];
    _7.fld2 = 2574730977_u32 as f64;
    _2 = !_11;
    _7.fld2 = _8.fld2;
    _8.fld0 = _7.fld0 * _7.fld0;
    _3 = (_7.fld4,);
    _18 = (-9223372036854775808_isize) & 9223372036854775807_isize;
    _19 = !_18;
    _8.fld4 = [_3.0[_6],_3.0[_6],_3.0[_6],_3.0[_6],_7.fld4[_6],_3.0[_6]];
    _8.fld0 = _7.fld0 << _7.fld4[_6];
    match _8.fld1[_6] {
    0 => bb6,
    1 => bb4,
    340282366920938463463374607431768211451 => bb11,
    _ => bb3
    }
    }
    bb11 = {
    _9 = _12[_6];
    _8.fld1[_6] = _8.fld0 as i8;
    _4 = Move(_17.0);
    _17.2 = Move(_4);
    _12[_6] = _9 * _9;
    _20[_6] = 95_u8 as i8;
    _1 = [_6,_6,_6,_6];
    _19 = _9 as isize;
    _7.fld1[_6] = _8.fld1[_6];
    _7.fld1[_6] = _8.fld1[_6];
    _6 = _1[_6] % _1[_6];
    _7.fld4 = _8.fld4;
    _17.0 = Move(_17.2);
    _17.1 = _8.fld2 as i8;
    _15 = (-7098026742123147666_i64);
    match _15 {
    340282366920938463456276580689645063790 => bb12,
    _ => bb1
    }
    }
    bb12 = {
    _7.fld1 = [_17.1,_17.1,_17.1,_17.1,_17.1];
    _24.2 = _17.1 & _17.1;
    _8.fld0 = _7.fld0 << _19;
    _8.fld1 = _7.fld1;
    _20 = [_24.2,_24.2,_24.2,_17.1,_24.2];
    _24.1 = !68344533106773224480565677332833637268_i128;
    _7.fld0 = _8.fld0 << _8.fld0;
    _2 = _11 * _11;
    _21 = _24.1 as i16;
    _15 = (-7887242039390636200_i64);
    Goto(bb13)
    }
    bb13 = {
    _18 = _19 ^ _19;
    _3.0 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _2 = _11 | _11;
    _24.0.0 = 2973479889_u32 as f32;
    _8.fld4 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _29 = _6;
    _5 = !true;
    _15 = (-5887135762736990445_i64) * (-1267788891251398357_i64);
    _24.0.1 = &_15;
    _28 = -_7.fld2;
    Goto(bb14)
    }
    bb14 = {
    _7.fld0 = _8.fld0 ^ _8.fld0;
    _17.1 = _24.2;
    _6 = _29 + _29;
    _30 = [_9,_9,_9,_9];
    _7.fld0 = _8.fld0;
    _19 = _18 >> _24.2;
    _29 = _6;
    _26 = '\u{fd468}';
    _7.fld4 = _3.0;
    _17.2 = Move(_17.0);
    _15 = -5674111847053002681_i64;
    _18 = 169_u8 as isize;
    _24.1 = !30794814762480732578869245942297952057_i128;
    _6 = _19 as usize;
    _24.1 = 130627507657200194707124576647128528749_i128 + (-122584010973549518677384472873947178268_i128);
    _17.0 = Move(_17.2);
    _4 = Move(_17.0);
    Call(_20 = fn12(Move(_4), Move(_24.0), Move(_10.0), _8.fld2, _7.fld1, _26, _2, _7.fld0, _5, _8.fld1), ReturnTo(bb15), UnwindUnreachable())
    }
    bb15 = {
    _35.0 = [_24.1,_24.1,_24.1,_24.1,_24.1];
    _7.fld4 = _8.fld4;
    _24.1 = (-139936961077026077990166388160369433841_i128) >> _19;
    _32 = _8.fld2;
    _35.0 = [_24.1,_24.1,_24.1,_24.1,_24.1];
    _18 = !_19;
    _19 = !_18;
    _2 = _11 >> _21;
    _27 = [_26];
    _17.1 = _24.2 | _24.2;
    _10.1 = core::ptr::addr_of_mut!(_24);
    _3.0 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _35.0 = [_24.1,_24.1,_24.1,_24.1,_24.1];
    _20 = [_17.1,_17.1,_17.1,_24.2,_24.2];
    _24.0.0 = _15 as f32;
    _30 = _12;
    _8.fld1 = _20;
    _2 = !_11;
    _23 = -_19;
    _9 = 7581618580028041325_u64;
    Goto(bb16)
    }
    bb16 = {
    _1 = [_6,_6,_6,_6];
    _15 = 5257223044270742832_i64;
    _24.2 = _17.1 | _17.1;
    _24.2 = _17.1 * _17.1;
    _26 = '\u{14cdc}';
    _6 = !_29;
    _8.fld1 = [_24.2,_24.2,_24.2,_24.2,_24.2];
    _17.1 = !_24.2;
    _32 = _8.fld2;
    Goto(bb17)
    }
    bb17 = {
    _39 = _24.1 as f32;
    match _15 {
    0 => bb18,
    1 => bb19,
    5257223044270742832 => bb21,
    _ => bb20
    }
    }
    bb18 = {
    _8.fld0 = !_7.fld0;
    _5 = !true;
    _2 = (-21_isize) as u128;
    _7.fld4 = _3.0;
    _7.fld1 = [80_i8,(-72_i8),(-39_i8),(-88_i8),112_i8];
    _3.0 = _7.fld4;
    _8.fld4 = _7.fld4;
    _9 = !11889341805107524267_u64;
    _9 = 7503410653971614246_u64 - 8194028461940939067_u64;
    RET = _8.fld0;
    _7.fld2 = 441750764901392319466120934864036134_i128 as f64;
    _13 = !(-137246653240364689221005108889747230877_i128);
    _12 = [_9,_9,_9,_9];
    _7.fld1 = [68_i8,77_i8,(-50_i8),53_i8,95_i8];
    _9 = 18372861299193304668_u64;
    _5 = false;
    _8.fld2 = _7.fld2 - _7.fld2;
    _7.fld0 = RET;
    RET = _7.fld0 + _7.fld0;
    _1 = [_6,_6,_6,_6];
    _8.fld2 = -_7.fld2;
    _1 = [_6,_6,_6,_6];
    _7.fld0 = 179_u8 as i32;
    _13 = (-7371608476315467625512722869980904787_i128) * (-146324880437390434902833387471160202446_i128);
    Goto(bb2)
    }
    bb19 = {
    _9 = _12[_6];
    _8.fld1[_6] = _8.fld0 as i8;
    _4 = Move(_17.0);
    _17.2 = Move(_4);
    _12[_6] = _9 * _9;
    _20[_6] = 95_u8 as i8;
    _1 = [_6,_6,_6,_6];
    _19 = _9 as isize;
    _7.fld1[_6] = _8.fld1[_6];
    _7.fld1[_6] = _8.fld1[_6];
    _6 = _1[_6] % _1[_6];
    _7.fld4 = _8.fld4;
    _17.0 = Move(_17.2);
    _17.1 = _8.fld2 as i8;
    _15 = (-7098026742123147666_i64);
    match _15 {
    340282366920938463456276580689645063790 => bb12,
    _ => bb1
    }
    }
    bb20 = {
    Return()
    }
    bb21 = {
    _6 = !_29;
    _1 = [_29,_6,_29,_29];
    _36 = _26;
    _27 = [_36];
    _17.1 = _24.2 + _24.2;
    _8.fld0 = !_7.fld0;
    _41 = _6;
    _8.fld2 = _32;
    _30 = [_9,_9,_9,_9];
    _42 = _36;
    _1 = [_6,_41,_29,_29];
    _3.0 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _17.1 = _8.fld0 as i8;
    _12 = _30;
    _35.0 = [_24.1,_24.1,_24.1,_24.1,_24.1];
    _26 = _42;
    _2 = _11 << _29;
    _40 = _36;
    _7.fld1 = [_24.2,_24.2,_24.2,_17.1,_24.2];
    _41 = 1636150261_u32 as usize;
    _31 = _8.fld2 - _8.fld2;
    _8.fld0 = _7.fld0 & _7.fld0;
    _21 = (-23038_i16) - 19913_i16;
    Goto(bb22)
    }
    bb22 = {
    _17.1 = _24.2 | _24.2;
    _7.fld1 = [_17.1,_17.1,_17.1,_17.1,_17.1];
    _35.1 = _39 * _39;
    _29 = 227_u8 as usize;
    _6 = _29 * _29;
    match _15 {
    0 => bb16,
    1 => bb6,
    2 => bb5,
    3 => bb15,
    5257223044270742832 => bb24,
    _ => bb23
    }
    }
    bb23 = {
    _8.fld0 = !_7.fld0;
    _5 = !true;
    _2 = (-21_isize) as u128;
    _7.fld4 = _3.0;
    _7.fld1 = [80_i8,(-72_i8),(-39_i8),(-88_i8),112_i8];
    _3.0 = _7.fld4;
    _8.fld4 = _7.fld4;
    _9 = !11889341805107524267_u64;
    _9 = 7503410653971614246_u64 - 8194028461940939067_u64;
    RET = _8.fld0;
    _7.fld2 = 441750764901392319466120934864036134_i128 as f64;
    _13 = !(-137246653240364689221005108889747230877_i128);
    _12 = [_9,_9,_9,_9];
    _7.fld1 = [68_i8,77_i8,(-50_i8),53_i8,95_i8];
    _9 = 18372861299193304668_u64;
    _5 = false;
    _8.fld2 = _7.fld2 - _7.fld2;
    _7.fld0 = RET;
    RET = _7.fld0 + _7.fld0;
    _1 = [_6,_6,_6,_6];
    _8.fld2 = -_7.fld2;
    _1 = [_6,_6,_6,_6];
    _7.fld0 = 179_u8 as i32;
    _13 = (-7371608476315467625512722869980904787_i128) * (-146324880437390434902833387471160202446_i128);
    Goto(bb2)
    }
    bb24 = {
    _30 = [_9,_9,_9,_9];
    _12 = [_9,_9,_9,_9];
    _38.1 = _17.1 & _24.2;
    _30 = [_9,_9,_9,_9];
    _36 = _42;
    _36 = _40;
    _39 = _35.1 + _35.1;
    _31 = _32;
    _24.1 = (-14167184876253144889972707845026493358_i128) << _24.2;
    _10.0 = &mut _24.1;
    _27 = [_40];
    _37 = _5 ^ _5;
    _15 = -5463161137953993586_i64;
    _44.fld4 = [148162244918005482406871627635859156171_i128,(-65840842886273994012766529750956860936_i128),(-69886961782900497848785262623769386845_i128),(-164160988842954071947491327582265749138_i128),163962421399005556605326968546988193097_i128,(-125663257363288181577041979079321588302_i128)];
    _31 = 28834664355811373561204773155028795944_i128 as f64;
    match _9 {
    0 => bb18,
    1 => bb14,
    2 => bb25,
    3 => bb26,
    7581618580028041325 => bb28,
    _ => bb27
    }
    }
    bb25 = {
    _18 = _19 ^ _19;
    _3.0 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _2 = _11 | _11;
    _24.0.0 = 2973479889_u32 as f32;
    _8.fld4 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _29 = _6;
    _5 = !true;
    _15 = (-5887135762736990445_i64) * (-1267788891251398357_i64);
    _24.0.1 = &_15;
    _28 = -_7.fld2;
    Goto(bb14)
    }
    bb26 = {
    Return()
    }
    bb27 = {
    _6 = !_29;
    _1 = [_29,_6,_29,_29];
    _36 = _26;
    _27 = [_36];
    _17.1 = _24.2 + _24.2;
    _8.fld0 = !_7.fld0;
    _41 = _6;
    _8.fld2 = _32;
    _30 = [_9,_9,_9,_9];
    _42 = _36;
    _1 = [_6,_41,_29,_29];
    _3.0 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
    _17.1 = _8.fld0 as i8;
    _12 = _30;
    _35.0 = [_24.1,_24.1,_24.1,_24.1,_24.1];
    _26 = _42;
    _2 = _11 << _29;
    _40 = _36;
    _7.fld1 = [_24.2,_24.2,_24.2,_17.1,_24.2];
    _41 = 1636150261_u32 as usize;
    _31 = _8.fld2 - _8.fld2;
    _8.fld0 = _7.fld0 & _7.fld0;
    _21 = (-23038_i16) - 19913_i16;
    Goto(bb22)
    }
    bb28 = {
    _2 = _11 << _38.1;
    _8.fld2 = -_31;
    _27 = [_42];
    _30 = _12;
    _35.2 = !1142977779_u32;
    _8.fld1 = [_38.1,_38.1,_38.1,_38.1,_17.1];
    _15 = (-1538348848255463193_i64);
    _15 = (-8270312777361612057_i64);
    _32 = _7.fld2 * _31;
    _17.1 = !_38.1;
    _11 = !_2;
    _44.fld4 = [(-117427025404448529843927828687039998454_i128),148166895125600767786297918351757549317_i128,(-20545381373294005863263780500601320834_i128),23517247825861725351667939198070811999_i128,(-149089134578326738084174491505654778787_i128),109022403667108078846112377127300760696_i128];
    _44.fld0 = 191_u8 as i32;
    _27 = [_40];
    Goto(bb29)
    }
    bb29 = {
    _51.2 = [_41,_6,_6,_6,_6,_6];
    _51.0.1 = &_15;
    _23 = _19;
    _36 = _42;
    _7.fld2 = _32 + _28;
    _28 = _8.fld2 + _7.fld2;
    _44.fld1 = [_38.1,_38.1,_17.1,_38.1,_17.1];
    _46 = Move(_10.1);
    _44.fld2 = _7.fld2 - _28;
    _45 = _38.1 * _17.1;
    _40 = _26;
    _51.0.0 = -_39;
    _51.3 = &mut _8.fld0;
    _32 = -_28;
    _7.fld0 = _44.fld0;
    _32 = -_44.fld2;
    _19 = _18 << _11;
    Goto(bb30)
    }
    bb30 = {
    _51.3 = &mut _7.fld0;
    _19 = -_23;
    _57 = 11_u8 & 114_u8;
    _35.0 = [(-59584333323516836239995798852295030107_i128),166374766424666328146234213925390727113_i128,34120656369287300491892762580153833050_i128,42007908001341572462648330466481592429_i128,(-109548004720752318536883075774900652424_i128)];
    _43 = _39 * _51.0.0;
    _47 = _6 << _11;
    _38.1 = _9 as i8;
    _54 = _40;
    _3.0 = _44.fld4;
    _42 = _54;
    _44.fld2 = _21 as f64;
    _53 = _1;
    _37 = _5 & _5;
    _35.0 = [(-71005851185256980303777422690518781183_i128),25031025003439752812350077224510705654_i128,113955660418637329049838424586058088015_i128,95195128639550731661738994889331766459_i128,(-108888467430572158717179540295490077685_i128)];
    _26 = _54;
    _41 = _36 as usize;
    _55 = _43 * _35.1;
    _10.1 = Move(_46);
    _3 = (_44.fld4,);
    _17.1 = _15 as i8;
    Goto(bb31)
    }
    bb31 = {
    _41 = _47 << _47;
    _36 = _42;
    _44.fld1 = [_45,_45,_45,_45,_17.1];
    _19 = !_18;
    _9 = 14443916706107764544_u64 - 16281695335161078365_u64;
    _15 = -(-3627322406011941598_i64);
    _46 = Move(_10.1);
    Goto(bb32)
    }
    bb32 = {
    _29 = !_41;
    _61 = (-47926432405468401049605111478775096927_i128) as f32;
    _17.1 = -_45;
    _32 = -_28;
    _32 = _28 + _31;
    _51.2 = [_47,_29,_29,_41,_29,_41];
    _53 = _1;
    _31 = -_44.fld2;
    _36 = _54;
    _64 = (Move(_51.3), _19, _5, _44.fld0);
    _58 = core::ptr::addr_of!(_27);
    (*_58) = [_40];
    (*_58) = [_40];
    _39 = _55 * _55;
    _41 = _39 as usize;
    (*_58) = [_40];
    (*_58) = [_36];
    _67 = Move(_51.0.1);
    _15 = 5179406649187569094_i64 & 3478565274343434919_i64;
    Goto(bb33)
    }
    bb33 = {
    _1 = [_29,_47,_41,_41];
    (*_58) = [_42];
    _2 = _39 as u128;
    _6 = _15 as usize;
    (*_58) = [_54];
    (*_58) = [_40];
    Goto(bb34)
    }
    bb34 = {
    (*_58) = [_36];
    Goto(bb35)
    }
    bb35 = {
    _51.0.1 = &_15;
    _35.2 = 3588505891_u32 * 665041031_u32;
    (*_58) = [_42];
    _52 = &mut _44.fld4;
    _1 = _53;
    _75 = [31025218986345987978727539808572163592_i128,101833151063096785737299333599681991358_i128,112189100873177276352680667457274913561_i128,25379036418137873867388087329848493280_i128,(-94527997105935182161379778308076187662_i128)];
    _10.1 = Move(_46);
    _39 = _55 + _51.0.0;
    _3 = ((*_52),);
    _51.1 = _11 as usize;
    (*_52) = _3.0;
    (*_52) = [127322503566880752318984842733298937364_i128,135707579246704588580925273482552491518_i128,(-100006119690141322341852265709629182280_i128),(-31818050043669775832874538843781664771_i128),40328951327876767333497812460730077056_i128,5374824057596453986845099590791244182_i128];
    _59 = _9 & _9;
    _46 = Move(_10.1);
    Goto(bb36)
    }
    bb36 = {
    _69.0 = _32 * _32;
    (*_52) = [22741985248743032806433422097350947374_i128,168330343943214303934125068855366404264_i128,(-85781219161496062542607871396880684936_i128),(-14622705135126797826749789987552190176_i128),155795502711941081535807141669102515993_i128,98013357948134681389703565973111067921_i128];
    _51.1 = _41 - _41;
    (*_52) = _3.0;
    (*_58) = [_26];
    _5 = _37;
    _64.0 = &mut _64.3;
    _68 = _36;
    _67 = &_15;
    _45 = _17.1 - _17.1;
    _77 = _32 as isize;
    _38.1 = _45 >> _29;
    (*_58) = [_40];
    _5 = !_37;
    _26 = _36;
    _65 = &(*_67);
    Goto(bb37)
    }
    bb37 = {
    (*_58) = [_54];
    (*_58) = [_54];
    _48 = _21 as usize;
    _75 = [(-138755402564097866613270569506702531421_i128),(-158625055256459453516530323125354373410_i128),100950497803799838551361601647893459626_i128,(-12813584836862508792818689080800147199_i128),(-104738424712636602131086078004252925964_i128)];
    _3 = ((*_52),);
    _66 = &_42;
    (*_58) = [(*_66)];
    _81 = _36;
    _63 = core::ptr::addr_of!(_59);
    _60 = -_39;
    (*_58) = [(*_66)];
    _31 = _32;
    _72 = !47279_u16;
    _53 = _1;
    _81 = (*_66);
    _30 = _12;
    (*_52) = _3.0;
    Goto(bb38)
    }
    bb38 = {
    (*_58) = [_40];
    _71 = (*_66);
    _51.0 = (_39, Move(_65));
    (*_58) = [(*_66)];
    (*_52) = _3.0;
    _82 = _20;
    (*_63) = _9 >> _29;
    (*_63) = _9 - _9;
    _39 = _55;
    _68 = (*_66);
    _54 = (*_66);
    _62 = 29370065806172980840518116130062360420_i128 as i16;
    _19 = _77 << _41;
    _85 = -_32;
    _12 = [(*_63),(*_63),(*_63),(*_63)];
    _86 = _51.0.0;
    _88.0 = (-1828542825_i32) & 815477822_i32;
    Goto(bb39)
    }
    bb39 = {
    _17.1 = _21 as i8;
    _51.2 = [_47,_29,_47,_47,_51.1,_29];
    _3.0 = [(-107007698543816620742382709414893868429_i128),86101057521519366056258206750385458091_i128,4326343703244989670006868056618372821_i128,(-148034082452381670047902053453867845762_i128),67012506739871601289487525389099098434_i128,151454650073536232472717098582014806519_i128];
    (*_58) = [(*_66)];
    (*_63) = !_9;
    (*_52) = _3.0;
    _10.1 = Move(_46);
    (*_63) = _9;
    (*_58) = [(*_66)];
    (*_58) = [(*_66)];
    _51.0 = (_55, Move(_67));
    _19 = _32 as isize;
    (*_63) = _9;
    Goto(bb40)
    }
    bb40 = {
    (*_63) = _9;
    _40 = (*_66);
    _48 = _41;
    (*_63) = !_9;
    (*_58) = [(*_66)];
    _51.1 = _48 ^ _41;
    Goto(bb41)
    }
    bb41 = {
    (*_52) = [(-156505710247004296640853962601837755560_i128),(-117121486238097226734797924381531330846_i128),(-8653774481198417742031677574650230885_i128),155649912238140910664137133955658954582_i128,30387854692349307879855312594415635732_i128,(-91401701966388017248707598950222537155_i128)];
    (*_58) = [(*_66)];
    (*_63) = _32 as u64;
    _90 = _38.1;
    (*_52) = [164499811440441795675989406997188877365_i128,66597018885852325697722836417023166658_i128,94593711844156462977895555429362756125_i128,(-40681082180309698427307553870947237990_i128),94542483291918861249575325093253757207_i128,(-160740481357878908085484461954240302461_i128)];
    (*_58) = [(*_66)];
    (*_63) = _9 >> _90;
    _61 = _43;
    _88.2 = core::ptr::addr_of!(_2);
    (*_63) = _35.2 as u64;
    _71 = (*_66);
    (*_63) = _9 << _2;
    (*_58) = [(*_66)];
    _88.2 = core::ptr::addr_of!(_2);
    (*_63) = _9;
    _30 = [(*_63),(*_63),(*_63),(*_63)];
    (*_63) = _37 as u64;
    (*_63) = _57 as u64;
    _94 = _31 as isize;
    (*_58) = [(*_66)];
    (*_58) = [(*_66)];
    _37 = _5;
    (*_52) = [(-37383533442106067939379483888575633305_i128),5089687493579937780394147910633219512_i128,123062784393101546660171594981464773547_i128,21266297526835516420545359742641181221_i128,13759429058990769635279481376212738473_i128,38010687599204594573086997971644521685_i128];
    (*_63) = _9;
    Call(_12 = core::intrinsics::transmute(_30), ReturnTo(bb42), UnwindUnreachable())
    }
    bb42 = {
    _51.2 = [_48,_51.1,_29,_41,_48,_29];
    (*_52) = [(-119033861801791503601147707950567759124_i128),159633105580958338145952959381055652147_i128,(-72638062092401147820959483585693341730_i128),64297295656409457189819543880911493162_i128,(-168940776817190687564062354733433534222_i128),2565135598186201586517412935531119199_i128];
    _91 = _51.0.0 * _43;
    (*_58) = [(*_66)];
    (*_63) = _37 as u64;
    _57 = 89_u8 - 223_u8;
    Goto(bb43)
    }
    bb43 = {
    (*_52) = [156484344251327374570486112941976284674_i128,12056862877285972034389206970447274577_i128,(-101480939347039887298053537873967782891_i128),(-48448300035621291715714032355312955885_i128),35431094148619700538828971054743620869_i128,66765084019370309044761704928118916615_i128];
    Goto(bb44)
    }
    bb44 = {
    (*_63) = !_9;
    _39 = _77 as f32;
    _59 = _9;
    (*_58) = [_71];
    _65 = &_15;
    _29 = _41 >> _51.1;
    _27 = [(*_66)];
    Goto(bb45)
    }
    bb45 = {
    _55 = _51.0.0 + _43;
    _93 = (*_63) != (*_63);
    _66 = &_54;
    _89 = _86 + _55;
    (*_52) = _3.0;
    _102 = core::ptr::addr_of!((*_63));
    _35.2 = 804727202_u32;
    _54 = _81;
    _43 = _51.0.0 - _55;
    _77 = _18 & _18;
    _35.1 = -_43;
    _23 = -_18;
    _83 = _93 ^ _93;
    (*_52) = _3.0;
    _76 = core::ptr::addr_of!(_2);
    _107 = _37;
    (*_102) = !_9;
    Goto(bb46)
    }
    bb46 = {
    _91 = -_43;
    _106 = core::ptr::addr_of!((*_76));
    (*_102) = _62 as u64;
    _80.1 = _38.1 + _45;
    (*_52) = _3.0;
    (*_52) = _3.0;
    _40 = _26;
    (*_106) = !_11;
    _109 = (-114395543375451511892911240132252807755_i128) >> _45;
    (*_52) = _3.0;
    (*_52) = [_109,_109,_109,_109,_109,_109];
    (*_106) = _11 | _11;
    _1 = _53;
    (*_52) = _3.0;
    _51.2 = [_41,_47,_51.1,_51.1,_48,_51.1];
    (*_58) = [_40];
    _57 = 18_u8 >> (*_63);
    _86 = _91 + _91;
    (*_58) = [_40];
    _96 = _57 + _57;
    Goto(bb47)
    }
    bb47 = {
    _88.1 = (*_106);
    _90 = _96 as i8;
    (*_63) = _9 | _9;
    (*_76) = _81 as u128;
    _106 = core::ptr::addr_of!((*_76));
    _103 = core::ptr::addr_of_mut!(_92.1);
    _21 = _62 << _88.1;
    match _35.2 {
    0 => bb26,
    1 => bb11,
    2 => bb37,
    3 => bb31,
    4 => bb43,
    5 => bb6,
    804727202 => bb48,
    _ => bb7
    }
    }
    bb48 = {
    _1 = [_29,_29,_48,_51.1];
    _59 = _88.0 as u64;
    _85 = -_32;
    _100 = _43 - _43;
    _72 = 20174_u16;
    _97 = _48 as f32;
    (*_52) = [_109,_109,_109,_109,_109,_109];
    (*_58) = [_26];
    (*_63) = !_9;
    (*_63) = _9;
    (*_58) = [_71];
    (*_76) = _11;
    (*_63) = _9 & _9;
    (*_63) = _9;
    (*_58) = [_68];
    _47 = _28 as usize;
    (*_76) = _88.1 << _11;
    _21 = (*_65) as i16;
    _76 = core::ptr::addr_of!((*_76));
    (*_52) = [_109,_109,_109,_109,_109,_109];
    (*_52) = [_109,_109,_109,_109,_109,_109];
    _51.1 = !_41;
    _17.1 = _80.1;
    (*_52) = [_109,_109,_109,_109,_109,_109];
    _19 = _77 >> _51.1;
    _1 = [_51.1,_48,_51.1,_51.1];
    (*_58) = [_54];
    match _72 {
    0 => bb39,
    1 => bb2,
    2 => bb31,
    3 => bb37,
    20174 => bb49,
    _ => bb15
    }
    }
    bb49 = {
    _67 = &(*_65);
    (*_63) = !_9;
    (*_58) = [_40];
    _92.0 = _42;
    _71 = _42;
    _98 = -_97;
    _26 = _54;
    _21 = _62;
    _92.0 = _54;
    _71 = _40;
    _95 = _35.2 as f64;
    _66 = &_42;
    _41 = _109 as usize;
    (*_76) = _88.1 | _11;
    (*_63) = !_9;
    (*_76) = _88.1;
    _15 = 2673579315741287872_i64 >> (*_76);
    _101 = core::ptr::addr_of!((*_63));
    (*_63) = _9 >> _29;
    _60 = _55;
    _96 = _57 - _57;
    _35.0 = [_109,_109,_109,_109,_109];
    (*_63) = _9 ^ _9;
    _9 = (*_63) & (*_63);
    _103 = core::ptr::addr_of_mut!((*_103));
    _46 = Move(_10.1);
    _72 = _51.0.0 as u16;
    Goto(bb50)
    }
    bb50 = {
    Call(_121 = dump_var(11_usize, 19_usize, Move(_19), 12_usize, Move(_12), 9_usize, Move(_9), 94_usize, Move(_94)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    Call(_121 = dump_var(11_usize, 27_usize, Move(_27), 30_usize, Move(_30), 37_usize, Move(_37), 48_usize, Move(_48)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_121 = dump_var(11_usize, 20_usize, Move(_20), 15_usize, Move(_15), 109_usize, Move(_109), 11_usize, Move(_11)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_121 = dump_var(11_usize, 36_usize, Move(_36), 81_usize, Move(_81), 40_usize, Move(_40), 18_usize, Move(_18)), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Call(_121 = dump_var(11_usize, 68_usize, Move(_68), 75_usize, Move(_75), 54_usize, Move(_54), 57_usize, Move(_57)), ReturnTo(bb55), UnwindUnreachable())
    }
    bb55 = {
    Call(_121 = dump_var(11_usize, 93_usize, Move(_93), 6_usize, Move(_6), 83_usize, Move(_83), 122_usize, _122), ReturnTo(bb56), UnwindUnreachable())
    }
    bb56 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(
    mut _1: *const (&'static mut i32, isize, bool, i32),
    mut _2: (f32, &'static i64),
    mut _3: &'static mut i128,
    mut _4: f64,
    mut _5: [i8; 5],
    mut _6: char,
    mut _7: u128,
    mut _8: i32,
    mut _9: bool,
    mut _10: [i8; 5],
) -> [i8; 5] {
    mir! {
    type RET = [i8; 5];
    let _11: [i16; 1];
    let _12: f64;
    let _13: &'static mut i128;
    let _14: (char, Adt23);
    let _15: [i128; 5];
    let _16: &'static mut i32;
    let _17: *const (i32, isize);
    let _18: bool;
    let _19: i16;
    let _20: bool;
    let _21: ((i32, isize), Adt53, isize, u32);
    let _22: *const u64;
    let _23: f32;
    let _24: [i16; 1];
    let _25: char;
    let _26: i64;
    let _27: Adt23;
    let _28: *const u64;
    let _29: *const u64;
    let _30: (((f32, &'static i64), i128, i8),);
    let _31: *mut [i128; 1];
    let _32: *const (&'static mut i32, isize, bool, i32);
    let _33: Adt53;
    let _34: *mut ((f32, &'static i64), i128, i8);
    let _35: f32;
    let _36: [i64; 8];
    let _37: *mut Adt23;
    let _38: f64;
    let _39: *const (&'static mut i32, isize, bool, i32);
    let _40: *const (u32, &'static mut i32);
    let _41: &'static *mut isize;
    let _42: &'static u16;
    let _43: char;
    let _44: i8;
    let _45: (&'static u16,);
    let _46: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _47: f32;
    let _48: &'static i64;
    let _49: u32;
    let _50: u128;
    let _51: i8;
    let _52: &'static mut [i128; 6];
    let _53: isize;
    let _54: bool;
    let _55: *const u64;
    let _56: (&'static u16,);
    let _57: *mut Adt23;
    let _58: i128;
    let _59: [char; 1];
    let _60: *const (i32, isize);
    let _61: i128;
    let _62: [i16; 6];
    let _63: u64;
    let _64: [i8; 5];
    let _65: &'static i64;
    let _66: [i16; 1];
    let _67: i8;
    let _68: *mut [i128; 1];
    let _69: &'static mut [i128; 6];
    let _70: i64;
    let _71: isize;
    let _72: f32;
    let _73: isize;
    let _74: *mut [i128; 1];
    let _75: *const (i32, isize);
    let _76: &'static u16;
    let _77: f64;
    let _78: [usize; 4];
    let _79: *const u64;
    let _80: Adt68;
    let _81: &'static mut [i128; 6];
    let _82: (i64, f64, u64, f64);
    let _83: ();
    let _84: ();
    {
    _8 = (-1443512607_i32) * (-932690477_i32);
    _4 = 2116083835_u32 as f64;
    RET = _5;
    _2.0 = 504_i16 as f32;
    _8 = _9 as i32;
    _9 = _2.0 >= _2.0;
    _4 = 4_usize as f64;
    _5 = RET;
    RET = [7_i8,54_i8,121_i8,52_i8,(-48_i8)];
    _7 = _9 as u128;
    _8 = !(-699611108_i32);
    _4 = 8288184806702537949_i64 as f64;
    _7 = 87094228318010841720208711103708328825_i128 as u128;
    _9 = false;
    _2.0 = _4 as f32;
    _11 = [4747_i16];
    _12 = _4 - _4;
    _6 = '\u{6e9fc}';
    _6 = '\u{f49fb}';
    _2.0 = 28107_i16 as f32;
    _7 = 211382037928097058659058469191510470590_u128 + 36772235757953492278922410563709106404_u128;
    _12 = _4 * _4;
    _10 = _5;
    Call(_7 = fn13(Move(_1), _9, _6, _9, RET, _4, RET, _8, _10, _10, _10), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _11 = [(-28577_i16)];
    _4 = -_12;
    _2.0 = 5208670932590212761_i64 as f32;
    _7 = 86630353647888262167701427262477816995_u128 ^ 105514211244408326692081917175405723954_u128;
    _12 = (-309231113190567436_i64) as f64;
    _11 = [(-22946_i16)];
    _10 = [49_i8,17_i8,(-37_i8),(-6_i8),63_i8];
    _5 = [11_i8,13_i8,100_i8,100_i8,104_i8];
    _8 = (-80651268_i32) | (-382760621_i32);
    _10 = RET;
    _10 = [86_i8,(-45_i8),(-24_i8),61_i8,13_i8];
    _8 = !(-1594901768_i32);
    _14.0 = _6;
    _8 = 590125534_i32;
    _6 = _14.0;
    _14.0 = _6;
    _9 = false;
    _11 = [(-22643_i16)];
    _4 = _12 + _12;
    _8 = 1051337253_i32 + 1417140_i32;
    _14.0 = _6;
    _14.0 = _6;
    _4 = -_12;
    _15 = [(-133923190881573786987577941966219908761_i128),(-127501192668197683127687808018439844626_i128),138292540024939732756841194523448389831_i128,(-17684371127133113836659198623468415023_i128),105454226104059392477195170618272376093_i128];
    RET = [65_i8,124_i8,(-56_i8),59_i8,107_i8];
    _10 = RET;
    _5 = [(-43_i8),82_i8,(-67_i8),33_i8,57_i8];
    _4 = 241_u8 as f64;
    _12 = 23476_u16 as f64;
    _5 = [(-100_i8),76_i8,113_i8,5_i8,52_i8];
    Goto(bb2)
    }
    bb2 = {
    _16 = &mut _8;
    _2.0 = 11947728828623815049_u64 as f32;
    (*_16) = 2142958081_i32 << _7;
    (*_16) = (-504123308_i32) + (-1576037486_i32);
    (*_16) = 679682198_i32 - (-1814133281_i32);
    _6 = _14.0;
    (*_16) = 1856181530_i32 | (-708763659_i32);
    _2.0 = _12 as f32;
    (*_16) = (-1703640343_i32) & 44680567_i32;
    _15 = [(-139595094478010893857920419374607444887_i128),58747623937166069753082626784253083868_i128,(-27986787747642385885513573456703673569_i128),(-123192052896660172769500854754010501373_i128),(-151742542526659875785958527224306511841_i128)];
    _18 = _9;
    _2.0 = (-9223372036854775808_isize) as f32;
    (*_16) = (-1328412606_i32) << _7;
    (*_16) = (-862904773_i32) * (-367585391_i32);
    (*_16) = (-303995851_i32) >> _7;
    (*_16) = !(-1404813339_i32);
    Goto(bb3)
    }
    bb3 = {
    _20 = !_9;
    (*_16) = (-193291113_i32);
    _19 = -7773_i16;
    (*_16) = (-1406673342_i32);
    (*_16) = (-547680732_i32) << _19;
    (*_16) = -(-855597155_i32);
    _21.2 = 9223372036854775807_isize;
    _17 = core::ptr::addr_of!(_21.0);
    (*_16) = (-64336253_i32);
    (*_16) = _7 as i32;
    (*_16) = (-1834092088_i32);
    (*_17).0 = -(*_16);
    _11 = [_19];
    Goto(bb4)
    }
    bb4 = {
    _18 = !_9;
    (*_16) = (*_17).0 | (*_17).0;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    _19 = (-28826_i16);
    (*_17).1 = _21.2 - _21.2;
    (*_17).0 = (*_16) >> (*_17).1;
    match _19 {
    0 => bb2,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    340282366920938463463374607431768182630 => bb9,
    _ => bb8
    }
    }
    bb5 = {
    _20 = !_9;
    (*_16) = (-193291113_i32);
    _19 = -7773_i16;
    (*_16) = (-1406673342_i32);
    (*_16) = (-547680732_i32) << _19;
    (*_16) = -(-855597155_i32);
    _21.2 = 9223372036854775807_isize;
    _17 = core::ptr::addr_of!(_21.0);
    (*_16) = (-64336253_i32);
    (*_16) = _7 as i32;
    (*_16) = (-1834092088_i32);
    (*_17).0 = -(*_16);
    _11 = [_19];
    Goto(bb4)
    }
    bb6 = {
    _16 = &mut _8;
    _2.0 = 11947728828623815049_u64 as f32;
    (*_16) = 2142958081_i32 << _7;
    (*_16) = (-504123308_i32) + (-1576037486_i32);
    (*_16) = 679682198_i32 - (-1814133281_i32);
    _6 = _14.0;
    (*_16) = 1856181530_i32 | (-708763659_i32);
    _2.0 = _12 as f32;
    (*_16) = (-1703640343_i32) & 44680567_i32;
    _15 = [(-139595094478010893857920419374607444887_i128),58747623937166069753082626784253083868_i128,(-27986787747642385885513573456703673569_i128),(-123192052896660172769500854754010501373_i128),(-151742542526659875785958527224306511841_i128)];
    _18 = _9;
    _2.0 = (-9223372036854775808_isize) as f32;
    (*_16) = (-1328412606_i32) << _7;
    (*_16) = (-862904773_i32) * (-367585391_i32);
    (*_16) = (-303995851_i32) >> _7;
    (*_16) = !(-1404813339_i32);
    Goto(bb3)
    }
    bb7 = {
    _11 = [(-28577_i16)];
    _4 = -_12;
    _2.0 = 5208670932590212761_i64 as f32;
    _7 = 86630353647888262167701427262477816995_u128 ^ 105514211244408326692081917175405723954_u128;
    _12 = (-309231113190567436_i64) as f64;
    _11 = [(-22946_i16)];
    _10 = [49_i8,17_i8,(-37_i8),(-6_i8),63_i8];
    _5 = [11_i8,13_i8,100_i8,100_i8,104_i8];
    _8 = (-80651268_i32) | (-382760621_i32);
    _10 = RET;
    _10 = [86_i8,(-45_i8),(-24_i8),61_i8,13_i8];
    _8 = !(-1594901768_i32);
    _14.0 = _6;
    _8 = 590125534_i32;
    _6 = _14.0;
    _14.0 = _6;
    _9 = false;
    _11 = [(-22643_i16)];
    _4 = _12 + _12;
    _8 = 1051337253_i32 + 1417140_i32;
    _14.0 = _6;
    _14.0 = _6;
    _4 = -_12;
    _15 = [(-133923190881573786987577941966219908761_i128),(-127501192668197683127687808018439844626_i128),138292540024939732756841194523448389831_i128,(-17684371127133113836659198623468415023_i128),105454226104059392477195170618272376093_i128];
    RET = [65_i8,124_i8,(-56_i8),59_i8,107_i8];
    _10 = RET;
    _5 = [(-43_i8),82_i8,(-67_i8),33_i8,57_i8];
    _4 = 241_u8 as f64;
    _12 = 23476_u16 as f64;
    _5 = [(-100_i8),76_i8,113_i8,5_i8,52_i8];
    Goto(bb2)
    }
    bb8 = {
    Return()
    }
    bb9 = {
    (*_16) = -(*_17).0;
    (*_17) = ((*_16), _21.2);
    Goto(bb10)
    }
    bb10 = {
    _24 = [_19];
    (*_16) = (*_17).0 - (*_17).0;
    (*_17).0 = 9483_u16 as i32;
    _23 = -_2.0;
    (*_17) = ((*_16), _21.2);
    _26 = _18 as i64;
    _24 = [_19];
    Goto(bb11)
    }
    bb11 = {
    (*_17).1 = _21.2;
    (*_16) = (*_17).0 << _21.0.0;
    (*_17).0 = !(*_16);
    _4 = _7 as f64;
    _26 = 216_u8 as i64;
    (*_17).0 = 17177461406526474143_usize as i32;
    _21.3 = 3305562100_u32;
    _10 = [65_i8,(-98_i8),30_i8,(-80_i8),11_i8];
    _12 = _4 - _4;
    (*_16) = (*_17).0;
    (*_16) = (*_17).0 ^ _21.0.0;
    _5 = RET;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = _21.2;
    _27 = Adt23::Variant2 { fld0: _18,fld1: _14.0,fld2: 63809_u16,fld3: (-38_i8) };
    (*_17).1 = _21.2;
    (*_17).1 = _21.2;
    (*_17).1 = !_21.2;
    (*_17).1 = _21.2;
    (*_17).1 = _21.2 ^ _21.2;
    (*_17).0 = (*_16) - (*_16);
    match _21.3 {
    0 => bb8,
    3305562100 => bb12,
    _ => bb3
    }
    }
    bb12 = {
    (*_16) = _21.0.0 + (*_17).0;
    (*_17).0 = (*_16) ^ (*_16);
    (*_17).0 = -(*_16);
    _7 = 39267_u16 as u128;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = !_21.2;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = (*_16) >> (*_17).1;
    (*_17) = ((*_16), _21.2);
    _4 = _12;
    (*_17).0 = -(*_16);
    _18 = !_20;
    (*_16) = _9 as i32;
    place!(Field::<i8>(Variant(_27, 2), 3)) = (-39_i8) - (-10_i8);
    match (*_17).1 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    9223372036854775807 => bb13,
    _ => bb6
    }
    }
    bb13 = {
    _30.0.1 = (-167605734840682821830752338173353466992_i128) * 138653371193909153759479913277893483744_i128;
    (*_16) = (*_17).0 >> (*_17).0;
    place!(Field::<i8>(Variant(_27, 2), 3)) = -(-7_i8);
    _13 = &mut _30.0.1;
    (*_16) = (*_17).0 & _21.0.0;
    (*_17).0 = !(*_16);
    Call((*_17).0 = core::intrinsics::bswap((*_16)), ReturnTo(bb14), UnwindUnreachable())
    }
    bb14 = {
    (*_17).0 = (*_16);
    (*_17).1 = _21.2 << (*_16);
    (*_17).0 = _18 as i32;
    (*_17).1 = _21.2 >> (*_16);
    (*_13) = (-31698985065838400182720414391354096990_i128) >> (*_17).1;
    (*_16) = (*_17).0 & (*_17).0;
    _35 = _23;
    Goto(bb15)
    }
    bb15 = {
    _26 = 97_u8 as i64;
    (*_16) = -(*_17).0;
    _21.0.1 = _21.2 - _21.2;
    (*_16) = _4 as i32;
    (*_17).1 = _21.2 | _21.2;
    (*_17) = ((*_16), _21.2);
    (*_16) = _19 as i32;
    (*_13) = -(-118266269383379356104209947351545121183_i128);
    (*_17) = ((*_16), _21.2);
    (*_17).0 = (*_16);
    (*_17) = ((*_16), _21.2);
    _10 = [Field::<i8>(Variant(_27, 2), 3),Field::<i8>(Variant(_27, 2), 3),Field::<i8>(Variant(_27, 2), 3),Field::<i8>(Variant(_27, 2), 3),Field::<i8>(Variant(_27, 2), 3)];
    (*_17).0 = (*_16) - (*_16);
    (*_17).1 = _6 as isize;
    _9 = Field::<bool>(Variant(_27, 2), 0) ^ _18;
    (*_13) = (-140064126351942595877366944744520363796_i128) & (-103621850272607552766961003245419642038_i128);
    (*_16) = -(*_17).0;
    match _21.2 {
    0 => bb11,
    1 => bb5,
    2 => bb9,
    9223372036854775807 => bb16,
    _ => bb12
    }
    }
    bb16 = {
    _36 = [_26,_26,_26,_26,_26,_26,_26,_26];
    (*_17).1 = _21.2;
    (*_16) = !_21.0.0;
    (*_13) = !79286570088544651030768004192992682485_i128;
    _24 = _11;
    (*_17).0 = _7 as i32;
    (*_13) = 204_u8 as i128;
    (*_17).1 = _21.2 << (*_16);
    _46.0.0 = 42478_u16 as f32;
    _46.2 = [12036263688028166889_usize,3199213875257319384_usize,13491694979011734298_usize,1620373916399843875_usize,2_usize,3_usize];
    place!(Field::<bool>(Variant(_27, 2), 0)) = _20 | _18;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    (*_16) = (*_17).0 | (*_17).0;
    (*_13) = 42058305164532133103289210583866899304_i128;
    Goto(bb17)
    }
    bb17 = {
    (*_16) = (*_17).0 << _19;
    _4 = _21.3 as f64;
    _11 = [_19];
    (*_16) = (*_17).0 + (*_17).0;
    (*_17).1 = _46.0.0 as isize;
    _9 = _18;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = _18 as i32;
    (*_17).0 = (*_16);
    (*_17) = ((*_16), _21.2);
    _49 = _21.3 | _21.3;
    _38 = _4;
    Goto(bb18)
    }
    bb18 = {
    (*_17).1 = _26 as isize;
    (*_17) = ((*_16), _21.2);
    place!(Field::<char>(Variant(_27, 2), 1)) = _14.0;
    _50 = _7;
    (*_13) = -(-126035621076838450627657251653268005917_i128);
    _46.0.1 = &_26;
    (*_17).0 = _2.0 as i32;
    place!(Field::<u16>(Variant(_27, 2), 2)) = 9377_u16 >> (*_16);
    (*_17).0 = (*_16) - (*_16);
    Goto(bb19)
    }
    bb19 = {
    (*_13) = (-150904881492508128318947230879322389666_i128) ^ 166749579940608264332871595600308423937_i128;
    (*_17).0 = (*_16) | (*_16);
    _43 = _14.0;
    (*_13) = (-88541083815018055972390438691039198101_i128) - (-50530640536207183396287041869675793945_i128);
    _47 = -_23;
    (*_13) = 112157853491939338253090772355227755093_i128;
    _14.0 = _6;
    Goto(bb20)
    }
    bb20 = {
    (*_17).0 = _21.3 as i32;
    _14.1 = Move(_27);
    place!(Field::<char>(Variant(_14.1, 2), 1)) = _43;
    (*_13) = 41674554132327312413209155099106334746_i128;
    Call(_26 = core::intrinsics::bswap((-1786178661300506023_i64)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb21 = {
    (*_17).1 = _21.2;
    (*_13) = 13970053085626558221_usize as i128;
    _12 = _38 + _38;
    (*_13) = Field::<u16>(Variant(_14.1, 2), 2) as i128;
    _46.1 = 5729263394489025641_usize;
    _42 = &place!(Field::<u16>(Variant(_14.1, 2), 2));
    _23 = _35;
    Goto(bb22)
    }
    bb22 = {
    _43 = Field::<char>(Variant(_14.1, 2), 1);
    (*_13) = 16064188304110122657394044171684698901_i128;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    _44 = Field::<i8>(Variant(_14.1, 2), 3) << (*_42);
    _45 = (Move(_42),);
    _6 = _14.0;
    (*_17).1 = _21.2 + _21.2;
    (*_16) = -(*_17).0;
    (*_13) = (-121915915840116943190218930377874868849_i128) >> (*_17).0;
    (*_17).1 = _19 as isize;
    _60 = Move(_17);
    (*_13) = !(-117542181802041214914607992391017298071_i128);
    (*_13) = _2.0 as i128;
    _56.0 = &place!(Field::<u16>(Variant(_14.1, 2), 2));
    _61 = (*_16) as i128;
    (*_13) = _61;
    _14.0 = Field::<char>(Variant(_14.1, 2), 1);
    match _21.3 {
    3305562100 => bb23,
    _ => bb5
    }
    }
    bb23 = {
    _48 = &_26;
    _47 = _46.0.0 - _2.0;
    _48 = Move(_46.0.1);
    (*_16) = _21.0.0 + _21.0.0;
    _2.0 = _23 - _46.0.0;
    _18 = (*_16) >= (*_16);
    (*_13) = _61 | _61;
    match _21.2 {
    0 => bb4,
    1 => bb7,
    2 => bb24,
    3 => bb25,
    4 => bb26,
    5 => bb27,
    9223372036854775807 => bb29,
    _ => bb28
    }
    }
    bb24 = {
    (*_16) = _21.0.0 + (*_17).0;
    (*_17).0 = (*_16) ^ (*_16);
    (*_17).0 = -(*_16);
    _7 = 39267_u16 as u128;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = !_21.2;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = (*_16) >> (*_17).1;
    (*_17) = ((*_16), _21.2);
    _4 = _12;
    (*_17).0 = -(*_16);
    _18 = !_20;
    (*_16) = _9 as i32;
    place!(Field::<i8>(Variant(_27, 2), 3)) = (-39_i8) - (-10_i8);
    match (*_17).1 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    9223372036854775807 => bb13,
    _ => bb6
    }
    }
    bb25 = {
    (*_17).1 = _21.2;
    (*_16) = (*_17).0 << _21.0.0;
    (*_17).0 = !(*_16);
    _4 = _7 as f64;
    _26 = 216_u8 as i64;
    (*_17).0 = 17177461406526474143_usize as i32;
    _21.3 = 3305562100_u32;
    _10 = [65_i8,(-98_i8),30_i8,(-80_i8),11_i8];
    _12 = _4 - _4;
    (*_16) = (*_17).0;
    (*_16) = (*_17).0 ^ _21.0.0;
    _5 = RET;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = _21.2;
    _27 = Adt23::Variant2 { fld0: _18,fld1: _14.0,fld2: 63809_u16,fld3: (-38_i8) };
    (*_17).1 = _21.2;
    (*_17).1 = _21.2;
    (*_17).1 = !_21.2;
    (*_17).1 = _21.2;
    (*_17).1 = _21.2 ^ _21.2;
    (*_17).0 = (*_16) - (*_16);
    match _21.3 {
    0 => bb8,
    3305562100 => bb12,
    _ => bb3
    }
    }
    bb26 = {
    (*_16) = (*_17).0 << _19;
    _4 = _21.3 as f64;
    _11 = [_19];
    (*_16) = (*_17).0 + (*_17).0;
    (*_17).1 = _46.0.0 as isize;
    _9 = _18;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = _18 as i32;
    (*_17).0 = (*_16);
    (*_17) = ((*_16), _21.2);
    _49 = _21.3 | _21.3;
    _38 = _4;
    Goto(bb18)
    }
    bb27 = {
    _18 = !_9;
    (*_16) = (*_17).0 | (*_17).0;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    _19 = (-28826_i16);
    (*_17).1 = _21.2 - _21.2;
    (*_17).0 = (*_16) >> (*_17).1;
    match _19 {
    0 => bb2,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    340282366920938463463374607431768182630 => bb9,
    _ => bb8
    }
    }
    bb28 = {
    _36 = [_26,_26,_26,_26,_26,_26,_26,_26];
    (*_17).1 = _21.2;
    (*_16) = !_21.0.0;
    (*_13) = !79286570088544651030768004192992682485_i128;
    _24 = _11;
    (*_17).0 = _7 as i32;
    (*_13) = 204_u8 as i128;
    (*_17).1 = _21.2 << (*_16);
    _46.0.0 = 42478_u16 as f32;
    _46.2 = [12036263688028166889_usize,3199213875257319384_usize,13491694979011734298_usize,1620373916399843875_usize,2_usize,3_usize];
    place!(Field::<bool>(Variant(_27, 2), 0)) = _20 | _18;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    (*_16) = (*_17).0 | (*_17).0;
    (*_13) = 42058305164532133103289210583866899304_i128;
    Goto(bb17)
    }
    bb29 = {
    (*_16) = !_21.0.0;
    _58 = (*_13) | (*_13);
    _10 = [Field::<i8>(Variant(_14.1, 2), 3),_44,_44,Field::<i8>(Variant(_14.1, 2), 3),_44];
    _36 = [_26,_26,_26,_26,_26,_26,_26,_26];
    _5 = RET;
    (*_16) = _21.0.0 * _21.0.0;
    (*_13) = _61;
    (*_13) = _58 | _58;
    _53 = -_21.2;
    (*_16) = _21.0.0;
    _37 = core::ptr::addr_of_mut!(_27);
    (*_37) = Move(_14.1);
    _57 = core::ptr::addr_of_mut!((*_37));
    place!(Field::<u16>(Variant((*_57), 2), 2)) = _19 as u16;
    (*_57) = Adt23::Variant2 { fld0: _18,fld1: _43,fld2: 61090_u16,fld3: _44 };
    place!(Field::<char>(Variant((*_37), 2), 1)) = _6;
    place!(Field::<i8>(Variant((*_57), 2), 3)) = !_44;
    (*_16) = _21.0.0 - _21.0.0;
    place!(Field::<u16>(Variant((*_57), 2), 2)) = !15027_u16;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = -_44;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = !_18;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _44 << _58;
    _46.0.1 = &_26;
    (*_13) = _58;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = -_44;
    match _46.1 {
    0 => bb13,
    1 => bb19,
    2 => bb3,
    3 => bb11,
    4 => bb7,
    5 => bb9,
    6 => bb30,
    5729263394489025641 => bb32,
    _ => bb31
    }
    }
    bb30 = {
    (*_17).0 = _21.3 as i32;
    _14.1 = Move(_27);
    place!(Field::<char>(Variant(_14.1, 2), 1)) = _43;
    (*_13) = 41674554132327312413209155099106334746_i128;
    Call(_26 = core::intrinsics::bswap((-1786178661300506023_i64)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb31 = {
    _18 = !_9;
    (*_16) = (*_17).0 | (*_17).0;
    (*_17) = ((*_16), _21.2);
    (*_17) = ((*_16), _21.2);
    _19 = (-28826_i16);
    (*_17).1 = _21.2 - _21.2;
    (*_17).0 = (*_16) >> (*_17).1;
    match _19 {
    0 => bb2,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    340282366920938463463374607431768182630 => bb9,
    _ => bb8
    }
    }
    bb32 = {
    _14 = (Field::<char>(Variant((*_37), 2), 1), Move((*_37)));
    _29 = core::ptr::addr_of!(_63);
    _22 = core::ptr::addr_of!((*_29));
    _46.0.0 = _47 - _47;
    place!(Field::<i8>(Variant(_14.1, 2), 3)) = _44 & _44;
    (*_16) = _21.0.0;
    _42 = &place!(Field::<u16>(Variant(_14.1, 2), 2));
    (*_29) = 16204325872910044077_u64;
    (*_37) = Adt23::Variant2 { fld0: Field::<bool>(Variant(_14.1, 2), 0),fld1: Field::<char>(Variant(_14.1, 2), 1),fld2: (*_42),fld3: _44 };
    match (*_29) {
    0 => bb1,
    1 => bb7,
    2 => bb31,
    16204325872910044077 => bb33,
    _ => bb10
    }
    }
    bb33 = {
    place!(Field::<u16>(Variant((*_37), 2), 2)) = !(*_42);
    place!(Field::<char>(Variant((*_37), 2), 1)) = Field::<char>(Variant(_14.1, 2), 1);
    (*_13) = _58;
    (*_37) = Move(_14.1);
    place!(Field::<bool>(Variant((*_37), 2), 0)) = (*_16) <= (*_16);
    (*_37) = Adt23::Variant2 { fld0: _18,fld1: _14.0,fld2: 6249_u16,fld3: _44 };
    _3 = &mut (*_13);
    _6 = Field::<char>(Variant((*_37), 2), 1);
    (*_3) = _58 - _58;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = Field::<char>(Variant((*_37), 2), 1) as u16;
    _65 = &_26;
    _21.0.0 = (*_16) - (*_16);
    place!(Field::<char>(Variant((*_37), 2), 1)) = _6;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = _18;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = 46205_u16 * 17587_u16;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = !_18;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = _18 | _18;
    _59 = [Field::<char>(Variant((*_37), 2), 1)];
    (*_16) = _21.0.0 ^ _21.0.0;
    _16 = &mut _21.0.0;
    match (*_29) {
    0 => bb31,
    1 => bb34,
    2 => bb35,
    3 => bb36,
    16204325872910044077 => bb38,
    _ => bb37
    }
    }
    bb34 = {
    (*_16) = _21.0.0 + (*_17).0;
    (*_17).0 = (*_16) ^ (*_16);
    (*_17).0 = -(*_16);
    _7 = 39267_u16 as u128;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = !_21.2;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = (*_16) >> (*_17).1;
    (*_17) = ((*_16), _21.2);
    _4 = _12;
    (*_17).0 = -(*_16);
    _18 = !_20;
    (*_16) = _9 as i32;
    place!(Field::<i8>(Variant(_27, 2), 3)) = (-39_i8) - (-10_i8);
    match (*_17).1 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    9223372036854775807 => bb13,
    _ => bb6
    }
    }
    bb35 = {
    (*_13) = (-150904881492508128318947230879322389666_i128) ^ 166749579940608264332871595600308423937_i128;
    (*_17).0 = (*_16) | (*_16);
    _43 = _14.0;
    (*_13) = (-88541083815018055972390438691039198101_i128) - (-50530640536207183396287041869675793945_i128);
    _47 = -_23;
    (*_13) = 112157853491939338253090772355227755093_i128;
    _14.0 = _6;
    Goto(bb20)
    }
    bb36 = {
    (*_16) = (*_17).0 << _19;
    _4 = _21.3 as f64;
    _11 = [_19];
    (*_16) = (*_17).0 + (*_17).0;
    (*_17).1 = _46.0.0 as isize;
    _9 = _18;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = _18 as i32;
    (*_17).0 = (*_16);
    (*_17) = ((*_16), _21.2);
    _49 = _21.3 | _21.3;
    _38 = _4;
    Goto(bb18)
    }
    bb37 = {
    (*_17).0 = _21.3 as i32;
    _14.1 = Move(_27);
    place!(Field::<char>(Variant(_14.1, 2), 1)) = _43;
    (*_13) = 41674554132327312413209155099106334746_i128;
    Call(_26 = core::intrinsics::bswap((-1786178661300506023_i64)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb38 = {
    (*_3) = _61 + _58;
    _46.0.0 = (*_16) as f32;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _44;
    (*_29) = 17615607608374651274_u64;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = _18 & _9;
    _67 = Field::<char>(Variant((*_37), 2), 1) as i8;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = 39614_u16 - 39778_u16;
    (*_3) = !_61;
    (*_16) = (-1943895868_i32) << _58;
    match (*_29) {
    0 => bb17,
    1 => bb26,
    2 => bb39,
    3 => bb40,
    17615607608374651274 => bb42,
    _ => bb41
    }
    }
    bb39 = {
    _30.0.1 = (-167605734840682821830752338173353466992_i128) * 138653371193909153759479913277893483744_i128;
    (*_16) = (*_17).0 >> (*_17).0;
    place!(Field::<i8>(Variant(_27, 2), 3)) = -(-7_i8);
    _13 = &mut _30.0.1;
    (*_16) = (*_17).0 & _21.0.0;
    (*_17).0 = !(*_16);
    Call((*_17).0 = core::intrinsics::bswap((*_16)), ReturnTo(bb14), UnwindUnreachable())
    }
    bb40 = {
    (*_17).1 = _21.2;
    (*_16) = (*_17).0 << _21.0.0;
    (*_17).0 = !(*_16);
    _4 = _7 as f64;
    _26 = 216_u8 as i64;
    (*_17).0 = 17177461406526474143_usize as i32;
    _21.3 = 3305562100_u32;
    _10 = [65_i8,(-98_i8),30_i8,(-80_i8),11_i8];
    _12 = _4 - _4;
    (*_16) = (*_17).0;
    (*_16) = (*_17).0 ^ _21.0.0;
    _5 = RET;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = _21.2;
    _27 = Adt23::Variant2 { fld0: _18,fld1: _14.0,fld2: 63809_u16,fld3: (-38_i8) };
    (*_17).1 = _21.2;
    (*_17).1 = _21.2;
    (*_17).1 = !_21.2;
    (*_17).1 = _21.2;
    (*_17).1 = _21.2 ^ _21.2;
    (*_17).0 = (*_16) - (*_16);
    match _21.3 {
    0 => bb8,
    3305562100 => bb12,
    _ => bb3
    }
    }
    bb41 = {
    _20 = !_9;
    (*_16) = (-193291113_i32);
    _19 = -7773_i16;
    (*_16) = (-1406673342_i32);
    (*_16) = (-547680732_i32) << _19;
    (*_16) = -(-855597155_i32);
    _21.2 = 9223372036854775807_isize;
    _17 = core::ptr::addr_of!(_21.0);
    (*_16) = (-64336253_i32);
    (*_16) = _7 as i32;
    (*_16) = (-1834092088_i32);
    (*_17).0 = -(*_16);
    _11 = [_19];
    Goto(bb4)
    }
    bb42 = {
    _3 = &mut _61;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = !7149_u16;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = (*_16) > (*_16);
    _67 = Field::<i8>(Variant((*_37), 2), 3) ^ Field::<i8>(Variant((*_37), 2), 3);
    _66 = [_19];
    (*_29) = !10287449733237811839_u64;
    _54 = Field::<bool>(Variant((*_37), 2), 0) < _9;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _46.1 as i8;
    _35 = _2.0 - _46.0.0;
    (*_37) = Adt23::Variant2 { fld0: _54,fld1: _43,fld2: 21663_u16,fld3: _67 };
    match _46.1 {
    0 => bb21,
    1 => bb2,
    2 => bb40,
    3 => bb43,
    4 => bb44,
    5 => bb45,
    5729263394489025641 => bb47,
    _ => bb46
    }
    }
    bb43 = {
    _16 = &mut _8;
    _2.0 = 11947728828623815049_u64 as f32;
    (*_16) = 2142958081_i32 << _7;
    (*_16) = (-504123308_i32) + (-1576037486_i32);
    (*_16) = 679682198_i32 - (-1814133281_i32);
    _6 = _14.0;
    (*_16) = 1856181530_i32 | (-708763659_i32);
    _2.0 = _12 as f32;
    (*_16) = (-1703640343_i32) & 44680567_i32;
    _15 = [(-139595094478010893857920419374607444887_i128),58747623937166069753082626784253083868_i128,(-27986787747642385885513573456703673569_i128),(-123192052896660172769500854754010501373_i128),(-151742542526659875785958527224306511841_i128)];
    _18 = _9;
    _2.0 = (-9223372036854775808_isize) as f32;
    (*_16) = (-1328412606_i32) << _7;
    (*_16) = (-862904773_i32) * (-367585391_i32);
    (*_16) = (-303995851_i32) >> _7;
    (*_16) = !(-1404813339_i32);
    Goto(bb3)
    }
    bb44 = {
    (*_16) = (*_17).0 << _19;
    _4 = _21.3 as f64;
    _11 = [_19];
    (*_16) = (*_17).0 + (*_17).0;
    (*_17).1 = _46.0.0 as isize;
    _9 = _18;
    (*_17) = ((*_16), _21.2);
    (*_17).0 = _18 as i32;
    (*_17).0 = (*_16);
    (*_17) = ((*_16), _21.2);
    _49 = _21.3 | _21.3;
    _38 = _4;
    Goto(bb18)
    }
    bb45 = {
    (*_13) = (-150904881492508128318947230879322389666_i128) ^ 166749579940608264332871595600308423937_i128;
    (*_17).0 = (*_16) | (*_16);
    _43 = _14.0;
    (*_13) = (-88541083815018055972390438691039198101_i128) - (-50530640536207183396287041869675793945_i128);
    _47 = -_23;
    (*_13) = 112157853491939338253090772355227755093_i128;
    _14.0 = _6;
    Goto(bb20)
    }
    bb46 = {
    (*_17).1 = _21.2;
    (*_16) = (*_17).0 << _21.0.0;
    (*_17).0 = !(*_16);
    _4 = _7 as f64;
    _26 = 216_u8 as i64;
    (*_17).0 = 17177461406526474143_usize as i32;
    _21.3 = 3305562100_u32;
    _10 = [65_i8,(-98_i8),30_i8,(-80_i8),11_i8];
    _12 = _4 - _4;
    (*_16) = (*_17).0;
    (*_16) = (*_17).0 ^ _21.0.0;
    _5 = RET;
    (*_17) = ((*_16), _21.2);
    (*_17).1 = _21.2;
    _27 = Adt23::Variant2 { fld0: _18,fld1: _14.0,fld2: 63809_u16,fld3: (-38_i8) };
    (*_17).1 = _21.2;
    (*_17).1 = _21.2;
    (*_17).1 = !_21.2;
    (*_17).1 = _21.2;
    (*_17).1 = _21.2 ^ _21.2;
    (*_17).0 = (*_16) - (*_16);
    match _21.3 {
    0 => bb8,
    3305562100 => bb12,
    _ => bb3
    }
    }
    bb47 = {
    place!(Field::<char>(Variant((*_37), 2), 1)) = _14.0;
    place!(Field::<char>(Variant((*_37), 2), 1)) = _14.0;
    (*_16) = (*_29) as i32;
    (*_3) = (*_65) as i128;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = 25680_u16 << Field::<i8>(Variant((*_37), 2), 3);
    place!(Field::<char>(Variant(_27, 2), 1)) = _6;
    (*_37) = Adt23::Variant2 { fld0: _54,fld1: _14.0,fld2: 27990_u16,fld3: _44 };
    (*_29) = 10052733268583978995_u64 << (*_65);
    (*_16) = _53 as i32;
    _58 = (*_3);
    place!(Field::<char>(Variant((*_37), 2), 1)) = _14.0;
    Goto(bb48)
    }
    bb48 = {
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _67 + _44;
    _44 = Field::<i8>(Variant((*_37), 2), 3);
    (*_37) = Adt23::Variant2 { fld0: _54,fld1: _43,fld2: 61210_u16,fld3: _44 };
    place!(Field::<char>(Variant((*_37), 2), 1)) = _14.0;
    _55 = core::ptr::addr_of!((*_29));
    place!(Field::<u16>(Variant((*_37), 2), 2)) = (*_16) as u16;
    (*_3) = -_58;
    _2.1 = &(*_65);
    _17 = Move(_60);
    place!(Field::<char>(Variant((*_37), 2), 1)) = _43;
    (*_3) = -_58;
    _10 = _5;
    _14 = (Field::<char>(Variant((*_37), 2), 1), Move((*_37)));
    match _19 {
    0 => bb21,
    1 => bb41,
    2 => bb43,
    3 => bb15,
    340282366920938463463374607431768182630 => bb49,
    _ => bb39
    }
    }
    bb49 = {
    (*_55) = Field::<char>(Variant(_14.1, 2), 1) as u64;
    (*_37) = Move(_14.1);
    _37 = core::ptr::addr_of_mut!(_27);
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _44;
    _64 = [Field::<i8>(Variant((*_37), 2), 3),Field::<i8>(Variant((*_37), 2), 3),Field::<i8>(Variant((*_37), 2), 3),Field::<i8>(Variant(_27, 2), 3),Field::<i8>(Variant(_27, 2), 3)];
    (*_3) = _58 & _58;
    _23 = (*_16) as f32;
    (*_16) = (-9319918_i32) - (-1156989920_i32);
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _49 as i8;
    _70 = (*_65);
    place!(Field::<bool>(Variant((*_37), 2), 0)) = _54;
    (*_16) = (-1527131857_i32);
    place!(Field::<bool>(Variant((*_37), 2), 0)) = _18 & _18;
    place!(Field::<bool>(Variant((*_37), 2), 0)) = !_54;
    _27 = Adt23::Variant2 { fld0: _18,fld1: _43,fld2: 46077_u16,fld3: _44 };
    place!(Field::<u16>(Variant((*_37), 2), 2)) = 62119_u16 ^ 29955_u16;
    place!(Field::<i8>(Variant((*_37), 2), 3)) = _44 - _67;
    place!(Field::<u16>(Variant((*_37), 2), 2)) = !3520_u16;
    _14 = (Field::<char>(Variant((*_37), 2), 1), Move((*_37)));
    (*_37) = Move(_14.1);
    place!(Field::<char>(Variant((*_37), 2), 1)) = _43;
    (*_16) = 1233588894_i32;
    _47 = _46.0.0 * _23;
    (*_29) = 10598903786304680894_u64 ^ 565765941835691008_u64;
    Goto(bb50)
    }
    bb50 = {
    Call(_83 = dump_var(12_usize, 44_usize, Move(_44), 70_usize, Move(_70), 11_usize, Move(_11), 43_usize, Move(_43)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    Call(_83 = dump_var(12_usize, 49_usize, Move(_49), 67_usize, Move(_67), 24_usize, Move(_24), 20_usize, Move(_20)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_83 = dump_var(12_usize, 59_usize, Move(_59), 5_usize, Move(_5), 19_usize, Move(_19), 58_usize, Move(_58)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_83 = dump_var(12_usize, 15_usize, Move(_15), 36_usize, Move(_36), 84_usize, _84, 84_usize, _84), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(
    mut _1: *const (&'static mut i32, isize, bool, i32),
    mut _2: bool,
    mut _3: char,
    mut _4: bool,
    mut _5: [i8; 5],
    mut _6: f64,
    mut _7: [i8; 5],
    mut _8: i32,
    mut _9: [i8; 5],
    mut _10: [i8; 5],
    mut _11: [i8; 5],
) -> u128 {
    mir! {
    type RET = u128;
    let _12: i16;
    let _13: isize;
    let _14: [u128; 8];
    let _15: f32;
    let _16: char;
    let _17: isize;
    let _18: &'static mut i32;
    let _19: isize;
    let _20: [u128; 8];
    let _21: &'static [i8; 2];
    let _22: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _23: [i16; 7];
    let _24: isize;
    let _25: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _26: f32;
    let _27: i8;
    let _28: &'static mut i128;
    let _29: [i8; 5];
    let _30: i64;
    let _31: &'static i64;
    let _32: u16;
    let _33: isize;
    let _34: *mut [i128; 1];
    let _35: isize;
    let _36: isize;
    let _37: *const u128;
    let _38: &'static mut i32;
    let _39: char;
    let _40: [u64; 1];
    let _41: *mut ((f32, &'static i64), i128, i8);
    let _42: *const [char; 1];
    let _43: [i128; 5];
    let _44: f32;
    let _45: (i32, u128, *const u128, [i64; 8]);
    let _46: *const u128;
    let _47: Adt23;
    let _48: i16;
    let _49: (i64, f64, u64, f64);
    let _50: u16;
    let _51: f64;
    let _52: f64;
    let _53: *const (i32, isize);
    let _54: Adt71;
    let _55: f64;
    let _56: i64;
    let _57: i64;
    let _58: bool;
    let _59: *const u64;
    let _60: ();
    let _61: ();
    {
    _10 = _9;
    _9 = _7;
    _9 = [(-14_i8),(-44_i8),30_i8,(-111_i8),10_i8];
    Call(_5 = fn14(Move(_1), _3, _2), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _12 = 17648_i16;
    _2 = _6 != _6;
    _4 = !_2;
    _14 = [167950284513332577211853531079757159187_u128,295899003408277502774899303518364604084_u128,203107864118353570678876986576248374855_u128,227709535982076794931751556482330776108_u128,286083442595727791210345478123638800297_u128,323546725141185916225133813036112307389_u128,260373809956532866580897029011048869119_u128,285379089023315347027921401199337599586_u128];
    _15 = _8 as f32;
    _10 = _5;
    RET = !249389186364399900520097307182926848468_u128;
    _13 = 9223372036854775807_isize + 9223372036854775807_isize;
    _8 = -2099544444_i32;
    _6 = _8 as f64;
    _13 = 9223372036854775807_isize;
    _15 = _12 as f32;
    RET = 291082888560805304443779791972101460598_u128;
    _12 = !21152_i16;
    _13 = (-72_isize) << _12;
    _4 = RET == RET;
    _12 = 8063849730454404593_u64 as i16;
    _5 = [(-123_i8),(-54_i8),(-111_i8),127_i8,(-35_i8)];
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    Goto(bb2)
    }
    bb2 = {
    _5 = [111_i8,(-105_i8),83_i8,(-85_i8),10_i8];
    _7 = _10;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _4 = !_2;
    _3 = '\u{eeffc}';
    _6 = 9570190422274869251_u64 as f64;
    _2 = _4 | _4;
    _12 = _13 as i16;
    _15 = _12 as f32;
    _9 = [66_i8,(-14_i8),2_i8,8_i8,(-21_i8)];
    _3 = '\u{9b315}';
    _2 = !_4;
    _17 = _13 * _13;
    RET = 167125336165475045004633261582607813057_u128 * 212240354338545315311923964486220295692_u128;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _15 = 12793822892693925443_u64 as f32;
    _16 = _3;
    _2 = _4;
    _15 = 69935679970447472475099382158431236647_i128 as f32;
    Goto(bb3)
    }
    bb3 = {
    _9 = [48_i8,(-5_i8),72_i8,91_i8,77_i8];
    _7 = [71_i8,(-32_i8),(-67_i8),(-7_i8),42_i8];
    _15 = 31284_u16 as f32;
    _11 = [114_i8,(-29_i8),(-112_i8),(-21_i8),88_i8];
    Goto(bb4)
    }
    bb4 = {
    _13 = _17;
    _18 = &mut _8;
    (*_18) = (-1623178439_i32) ^ 284452313_i32;
    (*_18) = 135898298_i32 << _17;
    (*_18) = 1603946347_i32 * 63701861_i32;
    _19 = _17 ^ _17;
    _2 = (*_18) == (*_18);
    (*_18) = 715732526_i32 >> _17;
    _20 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _20 = [RET,RET,RET,RET,RET,RET,RET,RET];
    (*_18) = !1600688804_i32;
    (*_18) = -(-893599640_i32);
    _10 = _11;
    (*_18) = (-1315895404_i32) >> RET;
    _9 = [115_i8,90_i8,80_i8,61_i8,107_i8];
    _11 = _10;
    (*_18) = -(-1969114658_i32);
    (*_18) = 1417180659_i32 ^ (-1549361665_i32);
    _2 = !_4;
    (*_18) = 339491909_i32;
    _13 = (*_18) as isize;
    (*_18) = (-1321080121_i32) - 1777237347_i32;
    (*_18) = !1306374061_i32;
    (*_18) = -(-889522456_i32);
    _24 = 38698_u16 as isize;
    Goto(bb5)
    }
    bb5 = {
    (*_18) = 1440979311_i32;
    (*_18) = (-399662133_i32);
    _20 = _14;
    Call(_19 = core::intrinsics::bswap(_17), ReturnTo(bb6), UnwindUnreachable())
    }
    bb6 = {
    (*_18) = (-1980305823_i32) | (-840194840_i32);
    _6 = 40428_u16 as f64;
    _14 = _20;
    (*_18) = _6 as i32;
    (*_18) = 1860760206_i32;
    _12 = -2638_i16;
    _10 = _5;
    (*_18) = !(-1396367106_i32);
    _2 = (*_18) != (*_18);
    Goto(bb7)
    }
    bb7 = {
    (*_18) = 455313849_i32 >> _19;
    (*_18) = 146303927_i32 - 2146621129_i32;
    (*_18) = 1127256902_i32 | 844286942_i32;
    (*_18) = !(-1918092437_i32);
    _5 = [(-115_i8),(-27_i8),(-46_i8),118_i8,(-42_i8)];
    (*_18) = (-1391790752_i32);
    (*_18) = 4987197414120600383_usize as i32;
    _13 = RET as isize;
    _27 = (-124_i8) ^ 62_i8;
    _16 = _3;
    (*_18) = _15 as i32;
    _14 = _20;
    _2 = !_4;
    _26 = (-6179008814607750454_i64) as f32;
    _2 = _4 == _4;
    _10 = [_27,_27,_27,_27,_27];
    _29 = [_27,_27,_27,_27,_27];
    _14 = _20;
    (*_18) = !(-772459953_i32);
    _30 = !(-8956085213964266663_i64);
    _31 = &_30;
    Goto(bb8)
    }
    bb8 = {
    (*_18) = (-1047052613_i32) & (-1805870671_i32);
    _17 = _2 as isize;
    (*_18) = !(-1865375773_i32);
    (*_18) = 855942678_i32 >> RET;
    _9 = [_27,_27,_27,_27,_27];
    Call((*_18) = core::intrinsics::bswap((-411198873_i32)), ReturnTo(bb9), UnwindUnreachable())
    }
    bb9 = {
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    (*_18) = (-1138672848_i32);
    _10 = _9;
    (*_18) = !(-998197221_i32);
    _5 = _10;
    _16 = _3;
    _29 = [_27,_27,_27,_27,_27];
    _26 = -_15;
    _14 = _20;
    (*_18) = !545599955_i32;
    (*_18) = -(-810314689_i32);
    _26 = -_15;
    _17 = _19 << (*_31);
    (*_18) = 929230184_i32 & 76105703_i32;
    _23 = [_12,_12,_12,_12,_12,_12,_12];
    (*_18) = 2146616784_i32 + 1307307994_i32;
    _2 = _4;
    (*_18) = 1871237220_i32;
    _32 = 62322_u16 ^ 11691_u16;
    _36 = _19 + _17;
    match (*_18) {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb7,
    5 => bb10,
    1871237220 => bb12,
    _ => bb11
    }
    }
    bb10 = {
    (*_18) = (-1980305823_i32) | (-840194840_i32);
    _6 = 40428_u16 as f64;
    _14 = _20;
    (*_18) = _6 as i32;
    (*_18) = 1860760206_i32;
    _12 = -2638_i16;
    _10 = _5;
    (*_18) = !(-1396367106_i32);
    _2 = (*_18) != (*_18);
    Goto(bb7)
    }
    bb11 = {
    _5 = [111_i8,(-105_i8),83_i8,(-85_i8),10_i8];
    _7 = _10;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _4 = !_2;
    _3 = '\u{eeffc}';
    _6 = 9570190422274869251_u64 as f64;
    _2 = _4 | _4;
    _12 = _13 as i16;
    _15 = _12 as f32;
    _9 = [66_i8,(-14_i8),2_i8,8_i8,(-21_i8)];
    _3 = '\u{9b315}';
    _2 = !_4;
    _17 = _13 * _13;
    RET = 167125336165475045004633261582607813057_u128 * 212240354338545315311923964486220295692_u128;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _15 = 12793822892693925443_u64 as f32;
    _16 = _3;
    _2 = _4;
    _15 = 69935679970447472475099382158431236647_i128 as f32;
    Goto(bb3)
    }
    bb12 = {
    (*_18) = (-581893577_i32) ^ 780180764_i32;
    _12 = (-3082_i16);
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _7 = [_27,_27,_27,_27,_27];
    (*_18) = _12 as i32;
    _26 = -_15;
    _2 = !_4;
    _19 = -_36;
    _24 = _17 + _17;
    (*_18) = (-1217830480_i32) * 1603157040_i32;
    (*_18) = 110_u8 as i32;
    (*_18) = 16466984108891682648_u64 as i32;
    (*_18) = (-1455476839_i32) + 2109851212_i32;
    _15 = -_26;
    _27 = 90_i8;
    _19 = _36 << _27;
    _6 = _32 as f64;
    _32 = 58584_u16;
    _35 = _36;
    (*_18) = (-219320579_i32);
    _38 = Move(_18);
    _9 = _29;
    _13 = _35 - _36;
    _23 = [_12,_12,_12,_12,_12,_12,_12];
    _33 = _36;
    match _32 {
    0 => bb1,
    1 => bb9,
    2 => bb7,
    3 => bb4,
    4 => bb13,
    5 => bb14,
    6 => bb15,
    58584 => bb17,
    _ => bb16
    }
    }
    bb13 = {
    (*_18) = 1440979311_i32;
    (*_18) = (-399662133_i32);
    _20 = _14;
    Call(_19 = core::intrinsics::bswap(_17), ReturnTo(bb6), UnwindUnreachable())
    }
    bb14 = {
    (*_18) = (-1980305823_i32) | (-840194840_i32);
    _6 = 40428_u16 as f64;
    _14 = _20;
    (*_18) = _6 as i32;
    (*_18) = 1860760206_i32;
    _12 = -2638_i16;
    _10 = _5;
    (*_18) = !(-1396367106_i32);
    _2 = (*_18) != (*_18);
    Goto(bb7)
    }
    bb15 = {
    (*_18) = 455313849_i32 >> _19;
    (*_18) = 146303927_i32 - 2146621129_i32;
    (*_18) = 1127256902_i32 | 844286942_i32;
    (*_18) = !(-1918092437_i32);
    _5 = [(-115_i8),(-27_i8),(-46_i8),118_i8,(-42_i8)];
    (*_18) = (-1391790752_i32);
    (*_18) = 4987197414120600383_usize as i32;
    _13 = RET as isize;
    _27 = (-124_i8) ^ 62_i8;
    _16 = _3;
    (*_18) = _15 as i32;
    _14 = _20;
    _2 = !_4;
    _26 = (-6179008814607750454_i64) as f32;
    _2 = _4 == _4;
    _10 = [_27,_27,_27,_27,_27];
    _29 = [_27,_27,_27,_27,_27];
    _14 = _20;
    (*_18) = !(-772459953_i32);
    _30 = !(-8956085213964266663_i64);
    _31 = &_30;
    Goto(bb8)
    }
    bb16 = {
    (*_18) = (-1980305823_i32) | (-840194840_i32);
    _6 = 40428_u16 as f64;
    _14 = _20;
    (*_18) = _6 as i32;
    (*_18) = 1860760206_i32;
    _12 = -2638_i16;
    _10 = _5;
    (*_18) = !(-1396367106_i32);
    _2 = (*_18) != (*_18);
    Goto(bb7)
    }
    bb17 = {
    _40 = [15874534723670007785_u64];
    _32 = 15316_u16 >> _35;
    _39 = _3;
    _24 = -_17;
    _32 = 352_u16 * 63512_u16;
    _39 = _3;
    _6 = (*_31) as f64;
    _19 = _33 + _24;
    _6 = _12 as f64;
    _10 = [_27,_27,_27,_27,_27];
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _24 = -_13;
    _12 = 3538_i16 * (-13995_i16);
    _9 = [_27,_27,_27,_27,_27];
    _12 = 3685_i16 >> _35;
    _36 = 1742443923_u32 as isize;
    _15 = _26 * _26;
    _16 = _39;
    _35 = -_19;
    _43 = [18654978429461933354261211589574681807_i128,100773343536471996462737987129590574142_i128,29168804346474117004719618249020690861_i128,64655393302446259553499765313759778529_i128,134364659760034235408334413047130962356_i128];
    _17 = _24 << _24;
    match _27 {
    0 => bb13,
    90 => bb18,
    _ => bb2
    }
    }
    bb18 = {
    _39 = _16;
    _45.1 = RET + RET;
    _37 = core::ptr::addr_of!(RET);
    _14 = [(*_37),(*_37),(*_37),_45.1,(*_37),(*_37),(*_37),(*_37)];
    _5 = [_27,_27,_27,_27,_27];
    _37 = core::ptr::addr_of!((*_37));
    _44 = _15 * _15;
    _24 = !_13;
    _23 = [_12,_12,_12,_12,_12,_12,_12];
    (*_37) = _45.1;
    (*_37) = _45.1;
    _45.0 = (-2053333429_i32) + 718157002_i32;
    _6 = (-108074736865253938998709216951115079941_i128) as f64;
    _44 = _15;
    (*_37) = 103_u8 as u128;
    _45.0 = 5700498645951556472_u64 as i32;
    match _27 {
    0 => bb5,
    1 => bb11,
    2 => bb4,
    90 => bb20,
    _ => bb19
    }
    }
    bb19 = {
    _5 = [111_i8,(-105_i8),83_i8,(-85_i8),10_i8];
    _7 = _10;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _4 = !_2;
    _3 = '\u{eeffc}';
    _6 = 9570190422274869251_u64 as f64;
    _2 = _4 | _4;
    _12 = _13 as i16;
    _15 = _12 as f32;
    _9 = [66_i8,(-14_i8),2_i8,8_i8,(-21_i8)];
    _3 = '\u{9b315}';
    _2 = !_4;
    _17 = _13 * _13;
    RET = 167125336165475045004633261582607813057_u128 * 212240354338545315311923964486220295692_u128;
    _14 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _15 = 12793822892693925443_u64 as f32;
    _16 = _3;
    _2 = _4;
    _15 = 69935679970447472475099382158431236647_i128 as f32;
    Goto(bb3)
    }
    bb20 = {
    (*_37) = _45.1 - _45.1;
    _45.2 = core::ptr::addr_of!((*_37));
    (*_37) = !_45.1;
    (*_37) = !_45.1;
    match _27 {
    0 => bb16,
    1 => bb7,
    2 => bb19,
    3 => bb10,
    4 => bb15,
    90 => bb21,
    _ => bb6
    }
    }
    bb21 = {
    _36 = !_33;
    _46 = core::ptr::addr_of!((*_37));
    (*_46) = !_45.1;
    (*_46) = _45.1 * _45.1;
    _27 = -(-94_i8);
    (*_37) = _45.1 | _45.1;
    _45.3 = [(*_31),(*_31),(*_31),(*_31),(*_31),(*_31),(*_31),(*_31)];
    (*_37) = !_45.1;
    RET = _45.1;
    _49.3 = _6 - _6;
    _24 = _17 << _35;
    _46 = Move(_45.2);
    _18 = &mut _45.0;
    (*_37) = 271740390612894744914354759003770374836_u128 | 243711822777980838309643185875827239001_u128;
    (*_18) = (-1222050407_i32);
    _3 = _39;
    Goto(bb22)
    }
    bb22 = {
    (*_18) = 1702416829_i32 & (-654281500_i32);
    (*_18) = 1442498058_i32;
    (*_18) = (*_31) as i32;
    _49.0 = -(*_31);
    _2 = _35 < _17;
    _16 = _39;
    _14 = [(*_37),(*_37),(*_37),(*_37),(*_37),(*_37),(*_37),(*_37)];
    _49 = ((*_31), _6, 11268122507444217998_u64, _6);
    _26 = -_44;
    Goto(bb23)
    }
    bb23 = {
    (*_18) = (-63453084_i32);
    _29 = _11;
    (*_37) = 237859928591846738170294787826409808995_u128 - 45188815532074642682778854785018988583_u128;
    _10 = [_27,_27,_27,_27,_27];
    _29 = [_27,_27,_27,_27,_27];
    (*_18) = (-274098040_i32) ^ (-1266821171_i32);
    (*_18) = -9715336_i32;
    _38 = &mut (*_18);
    (*_37) = _12 as u128;
    _33 = -_19;
    _39 = _3;
    (*_38) = (-1931277307_i32);
    _26 = (-72819816644315633795037583142894491250_i128) as f32;
    _14 = [(*_37),RET,(*_37),(*_37),(*_37),(*_37),(*_37),(*_37)];
    _32 = 45121_u16 + 323_u16;
    _20 = [(*_37),(*_37),(*_37),(*_37),(*_37),(*_37),(*_37),(*_37)];
    _49.0 = -(*_31);
    _55 = _49.3;
    (*_38) = !314230259_i32;
    Goto(bb24)
    }
    bb24 = {
    Call(_60 = dump_var(13_usize, 3_usize, Move(_3), 10_usize, Move(_10), 40_usize, Move(_40), 14_usize, Move(_14)), ReturnTo(bb25), UnwindUnreachable())
    }
    bb25 = {
    Call(_60 = dump_var(13_usize, 39_usize, Move(_39), 4_usize, Move(_4), 29_usize, Move(_29), 32_usize, Move(_32)), ReturnTo(bb26), UnwindUnreachable())
    }
    bb26 = {
    Call(_60 = dump_var(13_usize, 12_usize, Move(_12), 35_usize, Move(_35), 36_usize, Move(_36), 43_usize, Move(_43)), ReturnTo(bb27), UnwindUnreachable())
    }
    bb27 = {
    Call(_60 = dump_var(13_usize, 20_usize, Move(_20), 13_usize, Move(_13), 61_usize, _61, 61_usize, _61), ReturnTo(bb28), UnwindUnreachable())
    }
    bb28 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(
    mut _1: *const (&'static mut i32, isize, bool, i32),
    mut _2: char,
    mut _3: bool,
) -> [i8; 5] {
    mir! {
    type RET = [i8; 5];
    let _4: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _5: f32;
    let _6: isize;
    let _7: ([usize; 4], i32);
    let _8: &'static i64;
    let _9: char;
    let _10: *const u128;
    let _11: Adt37;
    let _12: f64;
    let _13: u128;
    let _14: isize;
    let _15: char;
    let _16: &'static mut i32;
    let _17: *mut isize;
    let _18: char;
    let _19: isize;
    let _20: isize;
    let _21: isize;
    let _22: [i16; 5];
    let _23: ([i128; 6],);
    let _24: bool;
    let _25: u32;
    let _26: char;
    let _27: ([i16; 1], ((f32, &'static i64), i128, i8), *mut isize, &'static mut i32);
    let _28: (u32, &'static mut i32);
    let _29: *const u128;
    let _30: Adt74;
    let _31: ([i128; 5], f32, u32);
    let _32: (char, Adt23);
    let _33: *mut Adt23;
    let _34: (i64, f64, u64, f64);
    let _35: *mut [i128; 1];
    let _36: u128;
    let _37: *const (u32, &'static mut i32);
    let _38: &'static mut i32;
    let _39: (f32, &'static i64);
    let _40: isize;
    let _41: *mut ((f32, &'static i64), i128, i8);
    let _42: isize;
    let _43: *const (&'static mut i32, isize, bool, i32);
    let _44: u16;
    let _45: *mut Adt23;
    let _46: isize;
    let _47: *const (&'static mut i32, isize, bool, i32);
    let _48: f32;
    let _49: *const u128;
    let _50: bool;
    let _51: &'static mut i32;
    let _52: [i128; 5];
    let _53: *mut [i16; 7];
    let _54: isize;
    let _55: f64;
    let _56: usize;
    let _57: i8;
    let _58: ([i128; 6],);
    let _59: isize;
    let _60: Adt37;
    let _61: *mut ((f32, &'static i64), i128, i8);
    let _62: f32;
    let _63: usize;
    let _64: char;
    let _65: [u64; 1];
    let _66: u32;
    let _67: *const (i32, isize);
    let _68: &'static mut [i128; 6];
    let _69: Adt53;
    let _70: usize;
    let _71: f32;
    let _72: isize;
    let _73: u32;
    let _74: char;
    let _75: *const (i32, isize);
    let _76: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _77: [i32; 7];
    let _78: [i64; 8];
    let _79: i8;
    let _80: i128;
    let _81: *const (i32, isize);
    let _82: &'static i64;
    let _83: bool;
    let _84: (&'static mut i32, isize, bool, i32);
    let _85: ();
    let _86: ();
    {
    RET = [(-15_i8),(-41_i8),33_i8,58_i8,(-71_i8)];
    _2 = '\u{5ff9c}';
    Goto(bb1)
    }
    bb1 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb2 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb3 = {
    _9 = _15;
    _7.1 = 4106546592_u32 as i32;
    _3 = true;
    _3 = false & true;
    _5 = (-88169873424656489722288659673325365993_i128) as f32;
    _11 = Adt37::Variant1 { fld0: 103035675641518070919929022087366572588_i128,fld1: 5683_u16 };
    _2 = _15;
    _11 = Adt37::Variant1 { fld0: 73711935429538013379068129518709689612_i128,fld1: 10660_u16 };
    _12 = _5 as f64;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 580_u16 << _13;
    _5 = (-117305524819179292081651673190144708598_i128) as f32;
    _5 = 3448534703609993562_i64 as f32;
    Goto(bb4)
    }
    bb4 = {
    _3 = true & false;
    _7.0 = [11867507041459519536_usize,13724474385580746139_usize,7438917731926625091_usize,11365595774188544259_usize];
    place!(Field::<u16>(Variant(_11, 1), 1)) = !9553_u16;
    _5 = 11754551799273949439_u64 as f32;
    _12 = _6 as f64;
    _5 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _10 = core::ptr::addr_of!(_13);
    place!(Field::<i128>(Variant(_11, 1), 0)) = (-88580482689832352598022062157731619478_i128);
    (*_10) = _5 as u128;
    _13 = 233437239051543352661187751406502511134_u128;
    (*_10) = Field::<u16>(Variant(_11, 1), 1) as u128;
    _10 = core::ptr::addr_of!(_13);
    _13 = 198656565254066278031301625631312061736_u128;
    (*_10) = !187659027172093731054364050386578224468_u128;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    (*_10) = !275812894598613889813301642881342035545_u128;
    _18 = _9;
    (*_10) = Field::<i128>(Variant(_11, 1), 0) as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 53572_u16;
    (*_10) = !190441905127532750994206685139561984381_u128;
    _2 = _9;
    (*_10) = !232877247950407113719271022848306934072_u128;
    (*_10) = 287722626832034867355948429598962211844_u128 + 150478443462976017974420383011493314678_u128;
    Call((*_10) = core::intrinsics::transmute(Field::<i128>(Variant(_11, 1), 0)), ReturnTo(bb5), UnwindUnreachable())
    }
    bb5 = {
    _16 = &mut _7.1;
    _15 = _2;
    _6 = (*_16) as isize;
    _19 = _14;
    (*_16) = 15_u8 as i32;
    (*_10) = !186042604908998034470979027700816081707_u128;
    (*_16) = 4904_i16 as i32;
    (*_10) = !69504975942252531887436128033277255861_u128;
    _3 = _13 == (*_10);
    (*_10) = 259546273771826756873887909969587849875_u128;
    (*_16) = _12 as i32;
    (*_16) = _15 as i32;
    (*_10) = 1464158137679552537839368476712990668_u128 >> _19;
    (*_16) = -(-1390365651_i32);
    (*_16) = (-233740277_i32);
    _20 = _14 >> (*_16);
    _13 = 85045491801515531047742267139288492467_u128 | 98827016067136214747520201177384503613_u128;
    match (*_16) {
    0 => bb4,
    1 => bb6,
    2 => bb7,
    3 => bb8,
    340282366920938463463374607431534471179 => bb10,
    _ => bb9
    }
    }
    bb6 = {
    _3 = true & false;
    _7.0 = [11867507041459519536_usize,13724474385580746139_usize,7438917731926625091_usize,11365595774188544259_usize];
    place!(Field::<u16>(Variant(_11, 1), 1)) = !9553_u16;
    _5 = 11754551799273949439_u64 as f32;
    _12 = _6 as f64;
    _5 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _10 = core::ptr::addr_of!(_13);
    place!(Field::<i128>(Variant(_11, 1), 0)) = (-88580482689832352598022062157731619478_i128);
    (*_10) = _5 as u128;
    _13 = 233437239051543352661187751406502511134_u128;
    (*_10) = Field::<u16>(Variant(_11, 1), 1) as u128;
    _10 = core::ptr::addr_of!(_13);
    _13 = 198656565254066278031301625631312061736_u128;
    (*_10) = !187659027172093731054364050386578224468_u128;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    (*_10) = !275812894598613889813301642881342035545_u128;
    _18 = _9;
    (*_10) = Field::<i128>(Variant(_11, 1), 0) as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 53572_u16;
    (*_10) = !190441905127532750994206685139561984381_u128;
    _2 = _9;
    (*_10) = !232877247950407113719271022848306934072_u128;
    (*_10) = 287722626832034867355948429598962211844_u128 + 150478443462976017974420383011493314678_u128;
    Call((*_10) = core::intrinsics::transmute(Field::<i128>(Variant(_11, 1), 0)), ReturnTo(bb5), UnwindUnreachable())
    }
    bb7 = {
    _9 = _15;
    _7.1 = 4106546592_u32 as i32;
    _3 = true;
    _3 = false & true;
    _5 = (-88169873424656489722288659673325365993_i128) as f32;
    _11 = Adt37::Variant1 { fld0: 103035675641518070919929022087366572588_i128,fld1: 5683_u16 };
    _2 = _15;
    _11 = Adt37::Variant1 { fld0: 73711935429538013379068129518709689612_i128,fld1: 10660_u16 };
    _12 = _5 as f64;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 580_u16 << _13;
    _5 = (-117305524819179292081651673190144708598_i128) as f32;
    _5 = 3448534703609993562_i64 as f32;
    Goto(bb4)
    }
    bb8 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb9 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb10 = {
    (*_10) = 288375885709246032119491519643962095517_u128;
    (*_16) = 15144143654039969694_u64 as i32;
    _11 = Adt37::Variant1 { fld0: (-75670117900483464106174694108328925050_i128),fld1: 29600_u16 };
    (*_10) = !264512087564832782552526826506387789223_u128;
    _18 = _15;
    place!(Field::<u16>(Variant(_11, 1), 1)) = _4.1 as u16;
    (*_16) = (-767979811_i32) - (-112420149_i32);
    _21 = _19 >> (*_10);
    _11 = Adt37::Variant1 { fld0: 29238557622505240133409908724023350142_i128,fld1: 54543_u16 };
    (*_10) = 260947830906081546719799209122966390660_u128 | 331641536074844997260340701601112605626_u128;
    (*_10) = !169008721886632137750033496503413014797_u128;
    (*_10) = 278410011298938006762091540929316305016_u128 - 86022999639110456129527303454610212688_u128;
    (*_10) = _3 as u128;
    (*_16) = (-828605739_i32) * (-132725134_i32);
    (*_10) = 268634809859834977750145365406372331589_u128 * 148353986647482241779888708693560438360_u128;
    _17 = core::ptr::addr_of_mut!(_14);
    (*_10) = 261112322560124906717422009398471487821_u128 >> (*_16);
    place!(Field::<i128>(Variant(_11, 1), 0)) = (*_16) as i128;
    _17 = core::ptr::addr_of_mut!(_21);
    (*_10) = 334475445242638362555621717179915337426_u128;
    Call((*_16) = core::intrinsics::bswap((-1067132013_i32)), ReturnTo(bb11), UnwindUnreachable())
    }
    bb11 = {
    _5 = 4_usize as f32;
    match (*_10) {
    0 => bb8,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb10,
    334475445242638362555621717179915337426 => bb12,
    _ => bb6
    }
    }
    bb12 = {
    (*_16) = (-1865965225_i32) << (*_17);
    _13 = 124581043041900444889755546296029947765_u128 << (*_16);
    (*_10) = (*_16) as u128;
    (*_16) = (-546672960_i32);
    (*_10) = !75672570941491323968320654285357213301_u128;
    _9 = _15;
    (*_16) = (-537275572_i32) - 619012016_i32;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 26078_u16 << (*_17);
    (*_10) = 311879951942289619560766723471307847618_u128 | 311630560241370149685640563198979073083_u128;
    (*_17) = _14 << (*_16);
    (*_17) = _20 - _20;
    _2 = _15;
    (*_17) = _5 as isize;
    (*_17) = _12 as isize;
    (*_10) = 210396035117242471734551435087112332031_u128 << (*_17);
    _5 = (*_17) as f32;
    (*_17) = 189_u8 as isize;
    _14 = (*_17);
    _11 = Adt37::Variant1 { fld0: (-37886165275989965927211416949792745710_i128),fld1: 13621_u16 };
    (*_16) = 318489886_i32;
    (*_16) = 1318952462_i32 * 478901243_i32;
    _12 = 119_u8 as f64;
    place!(Field::<u16>(Variant(_11, 1), 1)) = !13713_u16;
    place!(Field::<i128>(Variant(_11, 1), 0)) = _14 as i128;
    _4.1 = (-51_i8) + 80_i8;
    (*_17) = _19;
    (*_17) = _20 & _20;
    (*_16) = (-1837065856_i32);
    match (*_16) {
    0 => bb1,
    1 => bb13,
    2 => bb14,
    3 => bb15,
    340282366920938463463374607429931145600 => bb17,
    _ => bb16
    }
    }
    bb13 = {
    _5 = 4_usize as f32;
    match (*_10) {
    0 => bb8,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb10,
    334475445242638362555621717179915337426 => bb12,
    _ => bb6
    }
    }
    bb14 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb15 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb16 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb17 = {
    (*_17) = !_19;
    (*_17) = _20 & _19;
    (*_10) = 66488029367567693997521043606074622498_u128 ^ 180084536851339217454070773011091019367_u128;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _27.2 = Move(_17);
    _13 = 15718160563368079051_usize as u128;
    (*_16) = (-2063059913_i32);
    (*_16) = 2087986031_i32 + (-1546344512_i32);
    place!(Field::<u16>(Variant(_11, 1), 1)) = 44433_u16 & 6632_u16;
    _18 = _2;
    (*_10) = !213531610644502979487775510076988777394_u128;
    (*_16) = 1283919753_i32 | 1264568805_i32;
    _20 = _14;
    (*_16) = 8626135652448436745_i64 as i32;
    _27.1.2 = _4.1 + _4.1;
    Goto(bb18)
    }
    bb18 = {
    _27.1.1 = Field::<i128>(Variant(_11, 1), 0) ^ Field::<i128>(Variant(_11, 1), 0);
    _14 = _3 as isize;
    (*_16) = (-819897001_i32);
    (*_16) = _12 as i32;
    (*_10) = _20 as u128;
    (*_16) = !(-125286586_i32);
    (*_16) = 1835100035_i32;
    (*_16) = (-220123331_i32);
    (*_10) = 320217221027929524939733414820576001345_u128 << _21;
    _28 = (1511658843_u32, Move(_16));
    _9 = _18;
    _23.0 = [_27.1.1,_27.1.1,Field::<i128>(Variant(_11, 1), 0),Field::<i128>(Variant(_11, 1), 0),_27.1.1,_27.1.1];
    (*_10) = !233258279984472549021536424012142471463_u128;
    _12 = 5790428484388950656_i64 as f64;
    (*_10) = 46361184498742376615355547466778448536_u128;
    (*_10) = 4_usize as u128;
    Call((*_10) = fn16(_15, _28.0, _23.0, _6, Move(_27.2), Move(_10), _15, _19, RET, _19, _21, _18), ReturnTo(bb19), UnwindUnreachable())
    }
    bb19 = {
    _31.1 = 31535_i16 as f32;
    Goto(bb20)
    }
    bb20 = {
    _26 = _18;
    _27.2 = core::ptr::addr_of_mut!(_19);
    _33 = core::ptr::addr_of_mut!(_32.1);
    Call(_23 = fn17(Move(_27.2), _9, _14, Move(_33), _4.1, _9, Field::<i128>(Variant(_11, 1), 0), _15, _6, _18, Field::<u16>(Variant(_11, 1), 1)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb21 = {
    _31.1 = _5;
    _27.1.0.0 = _27.1.1 as f32;
    _27.1.2 = 11977364229076226965_usize as i8;
    _27.2 = core::ptr::addr_of_mut!(_14);
    _25 = _28.0 & _28.0;
    _34.2 = Field::<u16>(Variant(_11, 1), 1) as u64;
    _32.0 = _18;
    _31.2 = !_28.0;
    _28.0 = _25 >> _13;
    _34.1 = _12 * _12;
    _5 = -_31.1;
    _12 = -_34.1;
    _33 = core::ptr::addr_of_mut!(_32.1);
    _27.1.1 = Field::<i128>(Variant(_11, 1), 0) ^ Field::<i128>(Variant(_11, 1), 0);
    place!(Field::<u16>(Variant(_11, 1), 1)) = !40579_u16;
    _22 = [(-30146_i16),(-26222_i16),(-10790_i16),10037_i16,3142_i16];
    _3 = false & true;
    _10 = core::ptr::addr_of!(_13);
    (*_10) = _28.0 as u128;
    (*_10) = _28.0 as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 1009_u16;
    Goto(bb22)
    }
    bb22 = {
    _27.1.0.0 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _31.2 = !_28.0;
    _34 = ((-7295357027475145492_i64), _12, 18407592305919234832_u64, _12);
    _34.1 = _12;
    (*_33) = Adt23::Variant3 { fld0: Field::<u16>(Variant(_11, 1), 1),fld1: _26,fld2: _34,fld3: _4.1,fld4: 2298_i16,fld5: (-122157768_i32),fld6: _34.0 };
    (*_33) = Adt23::Variant2 { fld0: _3,fld1: _2,fld2: Field::<u16>(Variant(_11, 1), 1),fld3: _4.1 };
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    _11 = Adt37::Variant1 { fld0: _27.1.1,fld1: Field::<u16>(Variant((*_33), 2), 2) };
    (*_10) = 9158230659305310029007600979989637135_u128 << _31.2;
    place!(Field::<char>(Variant(_32.1, 2), 1)) = _18;
    _40 = _6 * _21;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _2;
    _34.0 = _34.2 as i64;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) ^ Field::<u16>(Variant(_11, 1), 1);
    _39.0 = -_5;
    match _34.2 {
    0 => bb2,
    1 => bb23,
    2 => bb24,
    18407592305919234832 => bb26,
    _ => bb25
    }
    }
    bb23 = {
    _31.1 = _5;
    _27.1.0.0 = _27.1.1 as f32;
    _27.1.2 = 11977364229076226965_usize as i8;
    _27.2 = core::ptr::addr_of_mut!(_14);
    _25 = _28.0 & _28.0;
    _34.2 = Field::<u16>(Variant(_11, 1), 1) as u64;
    _32.0 = _18;
    _31.2 = !_28.0;
    _28.0 = _25 >> _13;
    _34.1 = _12 * _12;
    _5 = -_31.1;
    _12 = -_34.1;
    _33 = core::ptr::addr_of_mut!(_32.1);
    _27.1.1 = Field::<i128>(Variant(_11, 1), 0) ^ Field::<i128>(Variant(_11, 1), 0);
    place!(Field::<u16>(Variant(_11, 1), 1)) = !40579_u16;
    _22 = [(-30146_i16),(-26222_i16),(-10790_i16),10037_i16,3142_i16];
    _3 = false & true;
    _10 = core::ptr::addr_of!(_13);
    (*_10) = _28.0 as u128;
    (*_10) = _28.0 as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 1009_u16;
    Goto(bb22)
    }
    bb24 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb25 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb26 = {
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    _45 = core::ptr::addr_of_mut!((*_33));
    place!(Field::<i8>(Variant((*_33), 2), 3)) = 1594037533_i32 as i8;
    place!(Field::<char>(Variant((*_45), 2), 1)) = _26;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = !_3;
    match Field::<u16>(Variant((*_33), 2), 2) {
    0 => bb1,
    1 => bb9,
    2 => bb14,
    3 => bb8,
    1009 => bb27,
    _ => bb16
    }
    }
    bb27 = {
    place!(Field::<char>(Variant((*_45), 2), 1)) = _26;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _15;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = _3;
    _49 = Move(_10);
    match Field::<u16>(Variant(_11, 1), 1) {
    0 => bb13,
    1 => bb7,
    2 => bb20,
    3 => bb14,
    4 => bb5,
    1009 => bb28,
    _ => bb15
    }
    }
    bb28 = {
    place!(Field::<u16>(Variant((*_45), 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<u16>(Variant((*_45), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) >> _34.0;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = _28.0 as u16;
    _49 = core::ptr::addr_of!(_13);
    match _34.2 {
    0 => bb1,
    1 => bb24,
    18407592305919234832 => bb29,
    _ => bb23
    }
    }
    bb29 = {
    place!(Field::<char>(Variant((*_33), 2), 1)) = _18;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = !_27.1.2;
    _24 = !Field::<bool>(Variant((*_33), 2), 0);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _12 as i8;
    _27.0 = [18590_i16];
    _27.1.2 = Field::<i8>(Variant((*_33), 2), 3) + Field::<i8>(Variant((*_33), 2), 3);
    _27.1.0.0 = _31.1 * _31.1;
    place!(Field::<u16>(Variant(_32.1, 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    _48 = 61_u8 as f32;
    _8 = &_34.0;
    _48 = _5 - _39.0;
    _27.0 = [(-26299_i16)];
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    _15 = _26;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    _31.2 = _28.0 | _28.0;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _26;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) & Field::<u16>(Variant(_11, 1), 1);
    (*_49) = !78276990533292518278102444358800324968_u128;
    Goto(bb30)
    }
    bb30 = {
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _34.1 as i8;
    _26 = Field::<char>(Variant((*_33), 2), 1);
    (*_33) = Adt23::Variant3 { fld0: Field::<u16>(Variant(_11, 1), 1),fld1: _26,fld2: _34,fld3: _4.1,fld4: (-32571_i16),fld5: (-1194489886_i32),fld6: (*_8) };
    place!(Field::<(i64, f64, u64, f64)>(Variant((*_33), 3), 2)).2 = _34.2;
    match Field::<(i64, f64, u64, f64)>(Variant((*_33), 3), 2).2 {
    0 => bb28,
    1 => bb15,
    2 => bb31,
    18407592305919234832 => bb33,
    _ => bb32
    }
    }
    bb31 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb32 = {
    _3 = true & false;
    _7.0 = [11867507041459519536_usize,13724474385580746139_usize,7438917731926625091_usize,11365595774188544259_usize];
    place!(Field::<u16>(Variant(_11, 1), 1)) = !9553_u16;
    _5 = 11754551799273949439_u64 as f32;
    _12 = _6 as f64;
    _5 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _10 = core::ptr::addr_of!(_13);
    place!(Field::<i128>(Variant(_11, 1), 0)) = (-88580482689832352598022062157731619478_i128);
    (*_10) = _5 as u128;
    _13 = 233437239051543352661187751406502511134_u128;
    (*_10) = Field::<u16>(Variant(_11, 1), 1) as u128;
    _10 = core::ptr::addr_of!(_13);
    _13 = 198656565254066278031301625631312061736_u128;
    (*_10) = !187659027172093731054364050386578224468_u128;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    (*_10) = !275812894598613889813301642881342035545_u128;
    _18 = _9;
    (*_10) = Field::<i128>(Variant(_11, 1), 0) as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 53572_u16;
    (*_10) = !190441905127532750994206685139561984381_u128;
    _2 = _9;
    (*_10) = !232877247950407113719271022848306934072_u128;
    (*_10) = 287722626832034867355948429598962211844_u128 + 150478443462976017974420383011493314678_u128;
    Call((*_10) = core::intrinsics::transmute(Field::<i128>(Variant(_11, 1), 0)), ReturnTo(bb5), UnwindUnreachable())
    }
    bb33 = {
    (*_33) = Adt23::Variant2 { fld0: _3,fld1: _9,fld2: Field::<u16>(Variant(_11, 1), 1),fld3: _4.1 };
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) * Field::<u16>(Variant(_11, 1), 1);
    _9 = Field::<char>(Variant((*_33), 2), 1);
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    _60 = Move(_11);
    place!(Field::<i8>(Variant((*_33), 2), 3)) = (*_49) as i8;
    _62 = -_27.1.0.0;
    _56 = 6_usize * 0_usize;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1) / Field::<u16>(Variant(_60, 1), 1);
    _36 = !(*_49);
    place!(Field::<bool>(Variant((*_33), 2), 0)) = !_24;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1) - Field::<u16>(Variant(_60, 1), 1);
    Goto(bb34)
    }
    bb34 = {
    _11 = Move(_60);
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _27.1.2;
    _60 = Move(_11);
    place!(Field::<bool>(Variant((*_33), 2), 0)) = Field::<i8>(Variant((*_33), 2), 3) != Field::<i8>(Variant((*_33), 2), 3);
    place!(Field::<bool>(Variant((*_33), 2), 0)) = _24;
    (*_49) = _36 >> _31.2;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = (-1607137551_i32) as i8;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1) >> (*_49);
    match _34.2 {
    0 => bb35,
    1 => bb36,
    2 => bb37,
    18407592305919234832 => bb39,
    _ => bb38
    }
    }
    bb35 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb36 = {
    _3 = true & false;
    _7.0 = [11867507041459519536_usize,13724474385580746139_usize,7438917731926625091_usize,11365595774188544259_usize];
    place!(Field::<u16>(Variant(_11, 1), 1)) = !9553_u16;
    _5 = 11754551799273949439_u64 as f32;
    _12 = _6 as f64;
    _5 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _10 = core::ptr::addr_of!(_13);
    place!(Field::<i128>(Variant(_11, 1), 0)) = (-88580482689832352598022062157731619478_i128);
    (*_10) = _5 as u128;
    _13 = 233437239051543352661187751406502511134_u128;
    (*_10) = Field::<u16>(Variant(_11, 1), 1) as u128;
    _10 = core::ptr::addr_of!(_13);
    _13 = 198656565254066278031301625631312061736_u128;
    (*_10) = !187659027172093731054364050386578224468_u128;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    (*_10) = !275812894598613889813301642881342035545_u128;
    _18 = _9;
    (*_10) = Field::<i128>(Variant(_11, 1), 0) as u128;
    place!(Field::<u16>(Variant(_11, 1), 1)) = 53572_u16;
    (*_10) = !190441905127532750994206685139561984381_u128;
    _2 = _9;
    (*_10) = !232877247950407113719271022848306934072_u128;
    (*_10) = 287722626832034867355948429598962211844_u128 + 150478443462976017974420383011493314678_u128;
    Call((*_10) = core::intrinsics::transmute(Field::<i128>(Variant(_11, 1), 0)), ReturnTo(bb5), UnwindUnreachable())
    }
    bb37 = {
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _7.1 = _4.1 as i32;
    _6 = (-118_isize) >> _7.1;
    _3 = true;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _4.2 = Move(_4.0);
    _3 = !true;
    _9 = _2;
    _4.0 = Move(_4.2);
    _4.1 = (-76595682563667675738085350144636037103_i128) as i8;
    _12 = 43476_u16 as f64;
    _3 = _9 != _2;
    RET = [_4.1,_4.1,_4.1,_4.1,_4.1];
    _14 = !_6;
    _1 = Move(_4.0);
    _13 = 179009829012879726876904003886438057870_u128 >> _4.1;
    _14 = _6;
    _7.0 = [5_usize,9812909183402978420_usize,12049145182267600481_usize,6_usize];
    _5 = _4.1 as f32;
    _4.0 = Move(_1);
    _15 = _9;
    Call(_7 = fn15(Move(_4.0), _14, _13, _14, _9, _3), ReturnTo(bb3), UnwindUnreachable())
    }
    bb38 = {
    _27.1.0.0 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _31.2 = !_28.0;
    _34 = ((-7295357027475145492_i64), _12, 18407592305919234832_u64, _12);
    _34.1 = _12;
    (*_33) = Adt23::Variant3 { fld0: Field::<u16>(Variant(_11, 1), 1),fld1: _26,fld2: _34,fld3: _4.1,fld4: 2298_i16,fld5: (-122157768_i32),fld6: _34.0 };
    (*_33) = Adt23::Variant2 { fld0: _3,fld1: _2,fld2: Field::<u16>(Variant(_11, 1), 1),fld3: _4.1 };
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    _11 = Adt37::Variant1 { fld0: _27.1.1,fld1: Field::<u16>(Variant((*_33), 2), 2) };
    (*_10) = 9158230659305310029007600979989637135_u128 << _31.2;
    place!(Field::<char>(Variant(_32.1, 2), 1)) = _18;
    _40 = _6 * _21;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _2;
    _34.0 = _34.2 as i64;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) ^ Field::<u16>(Variant(_11, 1), 1);
    _39.0 = -_5;
    match _34.2 {
    0 => bb2,
    1 => bb23,
    2 => bb24,
    18407592305919234832 => bb26,
    _ => bb25
    }
    }
    bb39 = {
    _17 = Move(_27.2);
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    (*_49) = !_36;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = !_27.1.2;
    _20 = _40 >> Field::<u16>(Variant((*_33), 2), 2);
    place!(Field::<bool>(Variant((*_33), 2), 0)) = Field::<u16>(Variant((*_33), 2), 2) < Field::<u16>(Variant((*_33), 2), 2);
    (*_49) = !_36;
    (*_49) = _34.3 as u128;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = _20 as u16;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _2;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _9;
    _57 = !Field::<i8>(Variant(_32.1, 2), 3);
    _23.0 = [Field::<i128>(Variant(_60, 1), 0),Field::<i128>(Variant(_60, 1), 0),Field::<i128>(Variant(_60, 1), 0),Field::<i128>(Variant(_60, 1), 0),Field::<i128>(Variant(_60, 1), 0),_27.1.1];
    _46 = _20 << Field::<u16>(Variant((*_33), 2), 2);
    _14 = _46;
    _19 = Field::<i8>(Variant((*_33), 2), 3) as isize;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _2;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = (*_8) < (*_8);
    (*_33) = Adt23::Variant2 { fld0: _24,fld1: _9,fld2: Field::<u16>(Variant(_60, 1), 1),fld3: _4.1 };
    _27.0 = [(-17515_i16)];
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1) ^ Field::<u16>(Variant(_60, 1), 1);
    _31.2 = _28.0 | _25;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _4.1 - _57;
    match _34.2 {
    0 => bb32,
    1 => bb8,
    2 => bb40,
    18407592305919234832 => bb42,
    _ => bb41
    }
    }
    bb40 = {
    _26 = _18;
    _27.2 = core::ptr::addr_of_mut!(_19);
    _33 = core::ptr::addr_of_mut!(_32.1);
    Call(_23 = fn17(Move(_27.2), _9, _14, Move(_33), _4.1, _9, Field::<i128>(Variant(_11, 1), 0), _15, _6, _18, Field::<u16>(Variant(_11, 1), 1)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb41 = {
    _27.1.0.0 = Field::<u16>(Variant(_11, 1), 1) as f32;
    _31.2 = !_28.0;
    _34 = ((-7295357027475145492_i64), _12, 18407592305919234832_u64, _12);
    _34.1 = _12;
    (*_33) = Adt23::Variant3 { fld0: Field::<u16>(Variant(_11, 1), 1),fld1: _26,fld2: _34,fld3: _4.1,fld4: 2298_i16,fld5: (-122157768_i32),fld6: _34.0 };
    (*_33) = Adt23::Variant2 { fld0: _3,fld1: _2,fld2: Field::<u16>(Variant(_11, 1), 1),fld3: _4.1 };
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    _11 = Adt37::Variant1 { fld0: _27.1.1,fld1: Field::<u16>(Variant((*_33), 2), 2) };
    (*_10) = 9158230659305310029007600979989637135_u128 << _31.2;
    place!(Field::<char>(Variant(_32.1, 2), 1)) = _18;
    _40 = _6 * _21;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _2;
    _34.0 = _34.2 as i64;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) ^ Field::<u16>(Variant(_11, 1), 1);
    _39.0 = -_5;
    match _34.2 {
    0 => bb2,
    1 => bb23,
    2 => bb24,
    18407592305919234832 => bb26,
    _ => bb25
    }
    }
    bb42 = {
    place!(Field::<char>(Variant((*_33), 2), 1)) = _26;
    _73 = _28.0;
    (*_33) = Adt23::Variant2 { fld0: _24,fld1: _9,fld2: Field::<u16>(Variant(_60, 1), 1),fld3: _27.1.2 };
    _65 = [_34.2];
    _25 = _28.0 + _73;
    _63 = !_56;
    _28.0 = _31.2 + _25;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = !_3;
    _64 = Field::<char>(Variant((*_33), 2), 1);
    _66 = _28.0;
    _20 = _46;
    _10 = core::ptr::addr_of!(_13);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1) / Field::<u16>(Variant(_60, 1), 1);
    _39 = (_48, Move(_8));
    _55 = _34.3;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_60, 1), 1);
    match Field::<u16>(Variant((*_33), 2), 2) {
    0 => bb43,
    1 => bb44,
    1009 => bb46,
    _ => bb45
    }
    }
    bb43 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb44 = {
    _3 = true;
    _4.2 = Move(_1);
    _1 = Move(_4.2);
    RET = [(-101_i8),126_i8,86_i8,(-40_i8),121_i8];
    RET = [84_i8,36_i8,(-80_i8),15_i8,87_i8];
    _4.0 = Move(_1);
    _4.1 = (-19_i8) | 17_i8;
    _2 = '\u{8db9a}';
    Goto(bb2)
    }
    bb45 = {
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _34.1 as i8;
    _26 = Field::<char>(Variant((*_33), 2), 1);
    (*_33) = Adt23::Variant3 { fld0: Field::<u16>(Variant(_11, 1), 1),fld1: _26,fld2: _34,fld3: _4.1,fld4: (-32571_i16),fld5: (-1194489886_i32),fld6: (*_8) };
    place!(Field::<(i64, f64, u64, f64)>(Variant((*_33), 3), 2)).2 = _34.2;
    match Field::<(i64, f64, u64, f64)>(Variant((*_33), 3), 2).2 {
    0 => bb28,
    1 => bb15,
    2 => bb31,
    18407592305919234832 => bb33,
    _ => bb32
    }
    }
    bb46 = {
    place!(Field::<u16>(Variant((*_33), 2), 2)) = !Field::<u16>(Variant(_60, 1), 1);
    _39.0 = _27.1.0.0;
    _27.2 = Move(_17);
    _71 = _34.0 as f32;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _27.1.2 << _40;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = (-15150_i16) as i8;
    _50 = !Field::<bool>(Variant((*_33), 2), 0);
    _80 = !Field::<i128>(Variant(_60, 1), 0);
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _48 as i8;
    (*_10) = _36 >> _25;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = _48 as u16;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = -_27.1.2;
    (*_10) = _36 * _36;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = !_3;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _64;
    _27.1.0.1 = &_34.0;
    _3 = !Field::<bool>(Variant((*_33), 2), 0);
    match _34.2 {
    0 => bb23,
    1 => bb30,
    2 => bb3,
    3 => bb4,
    4 => bb29,
    5 => bb21,
    6 => bb22,
    18407592305919234832 => bb48,
    _ => bb47
    }
    }
    bb47 = {
    place!(Field::<char>(Variant((*_33), 2), 1)) = _18;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = !_27.1.2;
    _24 = !Field::<bool>(Variant((*_33), 2), 0);
    place!(Field::<u16>(Variant((*_33), 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _12 as i8;
    _27.0 = [18590_i16];
    _27.1.2 = Field::<i8>(Variant((*_33), 2), 3) + Field::<i8>(Variant((*_33), 2), 3);
    _27.1.0.0 = _31.1 * _31.1;
    place!(Field::<u16>(Variant(_32.1, 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    _48 = 61_u8 as f32;
    _8 = &_34.0;
    _48 = _5 - _39.0;
    _27.0 = [(-26299_i16)];
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    _15 = _26;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = !Field::<u16>(Variant(_11, 1), 1);
    _31.2 = _28.0 | _28.0;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _26;
    place!(Field::<u16>(Variant((*_33), 2), 2)) = Field::<u16>(Variant(_11, 1), 1) & Field::<u16>(Variant(_11, 1), 1);
    (*_49) = !78276990533292518278102444358800324968_u128;
    Goto(bb30)
    }
    bb48 = {
    _12 = Field::<u16>(Variant((*_33), 2), 2) as f64;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = _3 & _24;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = _27.1.2 << _66;
    _71 = _39.0;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _9;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = !_27.1.2;
    place!(Field::<i8>(Variant((*_33), 2), 3)) = Field::<bool>(Variant((*_33), 2), 0) as i8;
    RET = [Field::<i8>(Variant((*_33), 2), 3),Field::<i8>(Variant((*_33), 2), 3),Field::<i8>(Variant((*_33), 2), 3),Field::<i8>(Variant((*_33), 2), 3),Field::<i8>(Variant((*_33), 2), 3)];
    _42 = _46 * _14;
    _58 = (_23.0,);
    place!(Field::<char>(Variant((*_33), 2), 1)) = _15;
    _62 = _39.0 * _71;
    _48 = _5;
    Goto(bb49)
    }
    bb49 = {
    place!(Field::<i8>(Variant((*_33), 2), 3)) = -_57;
    (*_49) = _36 - _36;
    place!(Field::<char>(Variant((*_33), 2), 1)) = _32.0;
    place!(Field::<bool>(Variant((*_33), 2), 0)) = !_3;
    (*_49) = Field::<i8>(Variant((*_33), 2), 3) as u128;
    _74 = Field::<char>(Variant((*_33), 2), 1);
    _84.3 = _14 as i32;
    _26 = Field::<char>(Variant((*_33), 2), 1);
    Goto(bb50)
    }
    bb50 = {
    Call(_85 = dump_var(14_usize, 13_usize, Move(_13), 7_usize, Move(_7), 3_usize, Move(_3), 25_usize, Move(_25)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    Call(_85 = dump_var(14_usize, 36_usize, Move(_36), 74_usize, Move(_74), 58_usize, Move(_58), 63_usize, Move(_63)), ReturnTo(bb52), UnwindUnreachable())
    }
    bb52 = {
    Call(_85 = dump_var(14_usize, 18_usize, Move(_18), 19_usize, Move(_19), 73_usize, Move(_73), 57_usize, Move(_57)), ReturnTo(bb53), UnwindUnreachable())
    }
    bb53 = {
    Call(_85 = dump_var(14_usize, 46_usize, Move(_46), 42_usize, Move(_42), 9_usize, Move(_9), 2_usize, Move(_2)), ReturnTo(bb54), UnwindUnreachable())
    }
    bb54 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(
    mut _1: *const (&'static mut i32, isize, bool, i32),
    mut _2: isize,
    mut _3: u128,
    mut _4: isize,
    mut _5: char,
    mut _6: bool,
) -> ([usize; 4], i32) {
    mir! {
    type RET = ([usize; 4], i32);
    let _7: &'static [i8; 2];
    let _8: u128;
    let _9: i8;
    let _10: isize;
    let _11: *mut ((f32, &'static i64), i128, i8);
    let _12: &'static mut [i128; 6];
    let _13: &'static mut i32;
    let _14: *const [char; 1];
    let _15: isize;
    let _16: *mut isize;
    let _17: i16;
    let _18: u16;
    let _19: f64;
    let _20: u8;
    let _21: u128;
    let _22: (*const (&'static mut i32, isize, bool, i32), i8, *const (&'static mut i32, isize, bool, i32));
    let _23: *const i16;
    let _24: bool;
    let _25: *const (&'static mut i32, isize, bool, i32);
    let _26: &'static *mut isize;
    let _27: &'static mut i32;
    let _28: [u64; 4];
    let _29: [i128; 5];
    let _30: (&'static mut i128, *mut ((f32, &'static i64), i128, i8));
    let _31: Adt74;
    let _32: u16;
    let _33: i32;
    let _34: &'static mut (u32, &'static mut i32);
    let _35: *mut isize;
    let _36: ();
    let _37: ();
    {
    _6 = _4 != _2;
    _2 = (-77221252183672118165228305073774823885_i128) as isize;
    RET.1 = 1385267502_i32 * 1076503674_i32;
    _6 = !true;
    _5 = '\u{cbb5e}';
    _5 = '\u{eeb1c}';
    _8 = !_3;
    RET.0 = [10407254008553484003_usize,2280012047520765247_usize,6_usize,6_usize];
    RET.0 = [6_usize,16528700579596732976_usize,2_usize,10075332592093388120_usize];
    RET.1 = (-1369966415_i32) << _2;
    _8 = 6_usize as u128;
    RET.0 = [6_usize,3225768999733302017_usize,1768685355540043590_usize,174887438293274047_usize];
    RET.1 = !(-226563016_i32);
    _4 = !_2;
    RET.1 = (-1446322849_i32) << _8;
    _5 = '\u{6a1e}';
    _4 = _2 ^ _2;
    _9 = _5 as i8;
    _9 = (-46_i8);
    _10 = _2;
    _8 = _3;
    _9 = (-64_i8) - (-80_i8);
    Goto(bb1)
    }
    bb1 = {
    _6 = _2 <= _4;
    _2 = _4 >> _9;
    _4 = _2 * _2;
    _5 = '\u{b288c}';
    _5 = '\u{ac66b}';
    _2 = _4;
    _5 = '\u{87eb1}';
    _4 = _10;
    _9 = (-16_i8) >> _2;
    _10 = _2 ^ _2;
    _5 = '\u{4898f}';
    RET.0 = [1_usize,4109951993578913097_usize,15007831512025225859_usize,12650484965230727099_usize];
    _15 = -_10;
    _10 = _15 - _15;
    _8 = !_3;
    _13 = &mut RET.1;
    _15 = _10 ^ _10;
    _8 = !_3;
    (*_13) = !439314431_i32;
    Goto(bb2)
    }
    bb2 = {
    _15 = _10;
    _16 = core::ptr::addr_of_mut!(_10);
    (*_13) = 2120370145_i32 + 1092973096_i32;
    (*_13) = _5 as i32;
    (*_13) = -(-1843346496_i32);
    (*_16) = _15;
    _16 = core::ptr::addr_of_mut!(_2);
    _22.0 = Move(_1);
    _18 = 206_u8 as u16;
    _3 = !_8;
    (*_13) = (-2104698793_i32) ^ (-2009990966_i32);
    Goto(bb3)
    }
    bb3 = {
    _6 = (*_16) < (*_16);
    _3 = !_8;
    (*_13) = (-1957777646_i32) | (-1901931418_i32);
    _22.1 = -_9;
    (*_16) = _5 as isize;
    (*_16) = _18 as isize;
    (*_13) = !1972682906_i32;
    _23 = core::ptr::addr_of!(_17);
    (*_16) = _15 >> (*_13);
    (*_13) = (-882775022_i32);
    (*_23) = -14130_i16;
    (*_23) = 167319862292874864603853336543182716598_i128 as i16;
    _16 = core::ptr::addr_of_mut!(_15);
    (*_16) = -_2;
    Goto(bb4)
    }
    bb4 = {
    (*_16) = !_10;
    _20 = _5 as u8;
    match (*_13) {
    0 => bb1,
    340282366920938463463374607430885436434 => bb5,
    _ => bb3
    }
    }
    bb5 = {
    _4 = -(*_16);
    (*_16) = _9 as isize;
    (*_16) = _4 >> _2;
    (*_23) = 11899196895856252235_u64 as i16;
    Call((*_16) = core::intrinsics::bswap(_4), ReturnTo(bb6), UnwindUnreachable())
    }
    bb6 = {
    (*_23) = (-2195_i16) | (-18624_i16);
    _5 = '\u{60523}';
    (*_23) = !30358_i16;
    (*_13) = !762464325_i32;
    _28 = [3985312499908403048_u64,10438390544662497006_u64,11718789857898266722_u64,16071415082134843154_u64];
    (*_23) = (-29931_i16);
    (*_16) = 2754540669_u32 as isize;
    _2 = _4 + _4;
    (*_13) = (-851533158_i32) >> (*_23);
    _26 = &_16;
    (*_16) = _4 + _4;
    (*_13) = (-82473528_i32) ^ (-2113706885_i32);
    (*_16) = _10 & _10;
    _22.2 = Move(_22.0);
    (*_23) = 18392_i16;
    _22.1 = _6 as i8;
    (*_13) = _5 as i32;
    (*_23) = 6569_i16 | 21101_i16;
    (*_23) = (-17178_i16) & 10948_i16;
    (*_16) = (*_23) as isize;
    (*_13) = (-563074700_i32);
    (*_16) = _5 as isize;
    _3 = !_8;
    (*_16) = _2;
    match (*_13) {
    0 => bb4,
    1 => bb7,
    2 => bb8,
    340282366920938463463374607431205136756 => bb10,
    _ => bb9
    }
    }
    bb7 = {
    _15 = _10;
    _16 = core::ptr::addr_of_mut!(_10);
    (*_13) = 2120370145_i32 + 1092973096_i32;
    (*_13) = _5 as i32;
    (*_13) = -(-1843346496_i32);
    (*_16) = _15;
    _16 = core::ptr::addr_of_mut!(_2);
    _22.0 = Move(_1);
    _18 = 206_u8 as u16;
    _3 = !_8;
    (*_13) = (-2104698793_i32) ^ (-2009990966_i32);
    Goto(bb3)
    }
    bb8 = {
    (*_16) = !_10;
    _20 = _5 as u8;
    match (*_13) {
    0 => bb1,
    340282366920938463463374607430885436434 => bb5,
    _ => bb3
    }
    }
    bb9 = {
    _6 = _2 <= _4;
    _2 = _4 >> _9;
    _4 = _2 * _2;
    _5 = '\u{b288c}';
    _5 = '\u{ac66b}';
    _2 = _4;
    _5 = '\u{87eb1}';
    _4 = _10;
    _9 = (-16_i8) >> _2;
    _10 = _2 ^ _2;
    _5 = '\u{4898f}';
    RET.0 = [1_usize,4109951993578913097_usize,15007831512025225859_usize,12650484965230727099_usize];
    _15 = -_10;
    _10 = _15 - _15;
    _8 = !_3;
    _13 = &mut RET.1;
    _15 = _10 ^ _10;
    _8 = !_3;
    (*_13) = !439314431_i32;
    Goto(bb2)
    }
    bb10 = {
    _32 = !_18;
    (*_13) = (-1274436792_i32) << (*_16);
    (*_13) = !1971965661_i32;
    _19 = 6997281201621577430_i64 as f64;
    (*_16) = _2 + _2;
    (*_13) = (-2041327328_i32) >> (*_16);
    Goto(bb11)
    }
    bb11 = {
    Call(_36 = dump_var(15_usize, 18_usize, Move(_18), 4_usize, Move(_4), 3_usize, Move(_3), 17_usize, Move(_17)), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    Call(_36 = dump_var(15_usize, 6_usize, Move(_6), 2_usize, Move(_2), 28_usize, Move(_28), 37_usize, _37), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(
    mut _1: char,
    mut _2: u32,
    mut _3: [i128; 6],
    mut _4: isize,
    mut _5: *mut isize,
    mut _6: *const u128,
    mut _7: char,
    mut _8: isize,
    mut _9: [i8; 5],
    mut _10: isize,
    mut _11: isize,
    mut _12: char,
) -> u128 {
    mir! {
    type RET = u128;
    let _13: [i16; 7];
    let _14: (i32, isize);
    let _15: &'static i64;
    let _16: *mut [i16; 7];
    let _17: u128;
    let _18: &'static i64;
    let _19: &'static mut [i128; 6];
    let _20: ();
    let _21: ();
    {
    _9 = [102_i8,(-115_i8),(-45_i8),4_i8,29_i8];
    _10 = _11;
    _8 = !_11;
    RET = 247094688608789468863316535009978021562_u128 * 214590019425977367360513019261512403262_u128;
    _12 = _1;
    _11 = _10 + _8;
    _2 = !3603154831_u32;
    _1 = _7;
    _11 = _10 + _10;
    _3 = [(-6212938309797559796105029632622036488_i128),(-79187832525722957751512765279029066473_i128),3485686187243167561769080918037104744_i128,83462690600458156791282737096388885878_i128,(-25932350411899800651374421569576228831_i128),68702794129653248754071193305904323587_i128];
    _8 = _10 | _10;
    _6 = core::ptr::addr_of!(RET);
    _2 = 306352638_u32;
    Goto(bb1)
    }
    bb1 = {
    (*_6) = 259631067958316015834793367354707051740_u128 + 240528844685384787324461501605444765094_u128;
    (*_6) = !255845417695693933759555862432829396039_u128;
    RET = 164041092106854417294609946116569249086_u128;
    (*_6) = 229044923756385540879888880361369831007_u128 - 269629030114200369491999616783904401361_u128;
    (*_6) = 26556670573776751709746276050213921703_u128;
    _9 = [32_i8,79_i8,(-55_i8),(-78_i8),(-101_i8)];
    _8 = _11;
    (*_6) = !317677109301853773565006279595123005103_u128;
    (*_6) = 20122139436546400825604531309566994268_u128 + 79719183138580292199844256087372324796_u128;
    (*_6) = 122910029294680447986705469098195033295_u128;
    (*_6) = 52111_u16 as u128;
    (*_6) = !207913142390476380439105208909434535496_u128;
    _8 = _11 + _11;
    (*_6) = 314207051236825125823179350660102758505_u128;
    (*_6) = !263268696115416015861654593490084246046_u128;
    _13 = [(-23293_i16),(-8956_i16),(-4531_i16),12005_i16,(-11552_i16),(-9650_i16),(-20735_i16)];
    match _2 {
    0 => bb2,
    1 => bb3,
    306352638 => bb5,
    _ => bb4
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    (*_6) = (-807511178_i32) as u128;
    _14.1 = _8 + _8;
    _4 = _10 ^ _8;
    (*_6) = 86323151933353367902841675301689405577_u128 + 92536491356994802018422923537667695899_u128;
    (*_6) = 208216590149474268534836466978040283721_u128 & 128518105504028265938261185289633292731_u128;
    _10 = _4;
    _8 = (-14740014963793824339370808213186974068_i128) as isize;
    match _2 {
    0 => bb1,
    1 => bb2,
    306352638 => bb6,
    _ => bb3
    }
    }
    bb6 = {
    _12 = _1;
    (*_6) = 184280856270970995398001277282488152676_u128 << _14.1;
    _5 = core::ptr::addr_of_mut!(_4);
    _6 = core::ptr::addr_of!((*_6));
    Goto(bb7)
    }
    bb7 = {
    Call(_20 = dump_var(16_usize, 12_usize, Move(_12), 7_usize, Move(_7), 4_usize, Move(_4), 8_usize, Move(_8)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb8 = {
    Call(_20 = dump_var(16_usize, 11_usize, Move(_11), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb9), UnwindUnreachable())
    }
    bb9 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(
    mut _1: *mut isize,
    mut _2: char,
    mut _3: isize,
    mut _4: *mut Adt23,
    mut _5: i8,
    mut _6: char,
    mut _7: i128,
    mut _8: char,
    mut _9: isize,
    mut _10: char,
    mut _11: u16,
) -> ([i128; 6],) {
    mir! {
    type RET = ([i128; 6],);
    let _12: *mut isize;
    let _13: (i32, u128, *const u128, [i64; 8]);
    let _14: char;
    let _15: isize;
    let _16: (((f32, &'static i64), i128, i8),);
    let _17: [usize; 4];
    let _18: *mut [i128; 1];
    let _19: i8;
    let _20: isize;
    let _21: u64;
    let _22: &'static u16;
    let _23: *const u128;
    let _24: *const (i32, isize);
    let _25: *const i16;
    let _26: [i16; 6];
    let _27: &'static mut (u32, &'static mut i32);
    let _28: &'static mut i32;
    let _29: [usize; 4];
    let _30: f32;
    let _31: u32;
    let _32: *mut Adt23;
    let _33: bool;
    let _34: f32;
    let _35: bool;
    let _36: i16;
    let _37: ();
    let _38: ();
    {
    RET.0 = [_7,_7,_7,_7,_7,_7];
    _2 = _8;
    _7 = (-140997591528338286784343960135989453403_i128);
    match _7 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    199284775392600176679030647295778758053 => bb7,
    _ => bb6
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _12 = core::ptr::addr_of_mut!(_3);
    _12 = core::ptr::addr_of_mut!((*_12));
    (*_12) = _9 ^ _9;
    (*_12) = _9;
    (*_12) = !_9;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_12) = _9;
    (*_12) = _9;
    (*_12) = _9 | _9;
    (*_12) = true as isize;
    (*_12) = _9;
    (*_12) = _9 >> _11;
    _7 = 22054136021581431792905191821417647571_i128;
    _8 = _6;
    (*_12) = _9 << _5;
    (*_12) = _9;
    _1 = Move(_12);
    _12 = core::ptr::addr_of_mut!(_9);
    _2 = _6;
    (*_12) = _3 * _3;
    (*_12) = _3 & _3;
    _7 = !25114422067617978614700539371465517344_i128;
    _8 = _2;
    (*_12) = _3;
    (*_12) = _3 + _3;
    Goto(bb8)
    }
    bb8 = {
    (*_12) = _3;
    (*_12) = -_3;
    (*_12) = _5 as isize;
    (*_12) = _3;
    (*_12) = _3;
    (*_12) = _3 * _3;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_12) = -_3;
    _13.1 = 153236050399201495394295400112642625281_u128 * 286535417908433843211952077011087395929_u128;
    _13.3 = [(-4489719430040899343_i64),(-614355474091012624_i64),(-7395482388358910090_i64),5348508893888716425_i64,(-1547216885552065914_i64),2615939252725414308_i64,6992756696445286389_i64,(-6733151320832881043_i64)];
    _8 = _6;
    _3 = (*_12) - (*_12);
    _1 = core::ptr::addr_of_mut!((*_12));
    _13.2 = core::ptr::addr_of!(_13.1);
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_1) = _3 & _3;
    _5 = (-14_i8);
    (*_12) = _3;
    _2 = _6;
    _7 = (-120000546307698781724939989345502903280_i128) - 162138525176356814654830875238999404172_i128;
    _9 = !_3;
    (*_12) = _3 - _3;
    match _5 {
    0 => bb6,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb9,
    340282366920938463463374607431768211442 => bb11,
    _ => bb10
    }
    }
    bb9 = {
    _12 = core::ptr::addr_of_mut!(_3);
    _12 = core::ptr::addr_of_mut!((*_12));
    (*_12) = _9 ^ _9;
    (*_12) = _9;
    (*_12) = !_9;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_12) = _9;
    (*_12) = _9;
    (*_12) = _9 | _9;
    (*_12) = true as isize;
    (*_12) = _9;
    (*_12) = _9 >> _11;
    _7 = 22054136021581431792905191821417647571_i128;
    _8 = _6;
    (*_12) = _9 << _5;
    (*_12) = _9;
    _1 = Move(_12);
    _12 = core::ptr::addr_of_mut!(_9);
    _2 = _6;
    (*_12) = _3 * _3;
    (*_12) = _3 & _3;
    _7 = !25114422067617978614700539371465517344_i128;
    _8 = _2;
    (*_12) = _3;
    (*_12) = _3 + _3;
    Goto(bb8)
    }
    bb10 = {
    Return()
    }
    bb11 = {
    _3 = !(*_12);
    (*_12) = _3 << _11;
    _13.2 = core::ptr::addr_of!(_13.1);
    RET.0 = [_7,_7,_7,_7,_7,_7];
    Goto(bb12)
    }
    bb12 = {
    _13.0 = 1640273384_i32;
    _10 = _2;
    _10 = _2;
    _10 = _6;
    (*_12) = true as isize;
    _1 = core::ptr::addr_of_mut!((*_12));
    _1 = core::ptr::addr_of_mut!((*_12));
    (*_1) = false as isize;
    (*_1) = -_3;
    (*_1) = !_3;
    _15 = _13.1 as isize;
    (*_12) = _3 >> _5;
    match _13.0 {
    0 => bb13,
    1 => bb14,
    1640273384 => bb16,
    _ => bb15
    }
    }
    bb13 = {
    Return()
    }
    bb14 = {
    Return()
    }
    bb15 = {
    _12 = core::ptr::addr_of_mut!(_3);
    _12 = core::ptr::addr_of_mut!((*_12));
    (*_12) = _9 ^ _9;
    (*_12) = _9;
    (*_12) = !_9;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_12) = _9;
    (*_12) = _9;
    (*_12) = _9 | _9;
    (*_12) = true as isize;
    (*_12) = _9;
    (*_12) = _9 >> _11;
    _7 = 22054136021581431792905191821417647571_i128;
    _8 = _6;
    (*_12) = _9 << _5;
    (*_12) = _9;
    _1 = Move(_12);
    _12 = core::ptr::addr_of_mut!(_9);
    _2 = _6;
    (*_12) = _3 * _3;
    (*_12) = _3 & _3;
    _7 = !25114422067617978614700539371465517344_i128;
    _8 = _2;
    (*_12) = _3;
    (*_12) = _3 + _3;
    Goto(bb8)
    }
    bb16 = {
    _16.0.0.0 = _13.0 as f32;
    _10 = _6;
    (*_12) = _15 | _3;
    _10 = _2;
    (*_12) = _3 << _15;
    _5 = 90_i8;
    _13.0 = (-2044576695_i32);
    _13.0 = 172_u8 as i32;
    _14 = _10;
    _13.1 = 4021091785612000001_u64 as u128;
    _16.0.2 = _5;
    (*_12) = _3 << _5;
    (*_12) = -_3;
    _7 = -(-124943098853894432682513571254153984664_i128);
    Goto(bb17)
    }
    bb17 = {
    _12 = core::ptr::addr_of_mut!((*_12));
    (*_12) = _3;
    (*_12) = _3 - _3;
    _7 = 166299872592584735925207970907816225864_i128 >> _9;
    _11 = !51419_u16;
    (*_12) = _15;
    (*_12) = _15;
    _15 = _11 as isize;
    _20 = (*_12) ^ (*_12);
    _19 = 223_u8 as i8;
    (*_12) = _3;
    _21 = !8160606894884115906_u64;
    _21 = 14919110382803817862_u64;
    (*_12) = _3 | _20;
    (*_12) = _3 - _3;
    (*_12) = -_3;
    (*_12) = _3 + _3;
    (*_12) = !_20;
    _9 = -_20;
    _10 = _6;
    match _16.0.2 {
    0 => bb1,
    90 => bb18,
    _ => bb7
    }
    }
    bb18 = {
    (*_12) = _3 + _20;
    (*_12) = _3 - _15;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_12) = _20 + _3;
    _17 = [12575928853630090520_usize,4356168326833432745_usize,2490362668275025112_usize,12373958938796806559_usize];
    _12 = core::ptr::addr_of_mut!((*_12));
    _13.2 = core::ptr::addr_of!(_13.1);
    (*_12) = 172_u8 as isize;
    _22 = &_11;
    _8 = _2;
    _13.3 = [(-8088836044141901838_i64),(-7833661299416720225_i64),1970121459079558529_i64,(-1759649196134497852_i64),(-7376019430931590669_i64),(-2779264024122218427_i64),5429973992267056608_i64,6771713626367158251_i64];
    _20 = 398845578_u32 as isize;
    (*_12) = _3 ^ _3;
    (*_12) = !_3;
    _16.0.1 = _5 as i128;
    (*_12) = _3 + _3;
    Goto(bb19)
    }
    bb19 = {
    _23 = core::ptr::addr_of!(_13.1);
    _14 = _2;
    _19 = _5;
    (*_12) = _3;
    (*_23) = !324628139671876186153258530732591020102_u128;
    (*_23) = 216_u8 as u128;
    (*_12) = _3 << _7;
    _15 = _16.0.0.0 as isize;
    _14 = _10;
    (*_23) = _13.0 as u128;
    (*_23) = 110517590427703364239794259524402876901_u128 << (*_12);
    (*_12) = _3;
    _14 = _8;
    _2 = _10;
    _19 = _16.0.2 | _16.0.2;
    _26 = [(-24656_i16),5395_i16,(-10437_i16),(-6661_i16),(-668_i16),(-27294_i16)];
    _13.1 = 95656022171209025085577798507470731609_u128;
    (*_23) = 213704037005749261679128607301703466541_u128;
    Call(_7 = fn18(Move(_12), Move(_1), Move(_13)), ReturnTo(bb20), UnwindUnreachable())
    }
    bb20 = {
    (*_23) = 105726474031607825389908480138854336633_u128 * 289958128222944495672747015083154806247_u128;
    _13.0 = _16.0.0.0 as i32;
    _17 = [0_usize,5_usize,13968234958757955891_usize,1_usize];
    _13.3 = [(-2830410776820554102_i64),8156302512278915787_i64,6961481698193517340_i64,1433985244372537649_i64,7774437347492207567_i64,2057876990316665777_i64,(-1657385079328665594_i64),6541505377057654497_i64];
    _5 = _19 ^ _19;
    _20 = !_3;
    (*_23) = _7 as u128;
    _12 = core::ptr::addr_of_mut!(_15);
    (*_12) = !_3;
    (*_23) = (*_12) as u128;
    _11 = 35057_u16 * 60759_u16;
    (*_23) = 188673314680326202276881256262808750817_u128 * 50525514821537273916704833327235384078_u128;
    _5 = _16.0.2 * _16.0.2;
    _13.2 = core::ptr::addr_of!((*_23));
    (*_23) = 3777289005976392512496341657508984614_u128;
    (*_12) = _8 as isize;
    RET.0 = [_7,_7,_7,_7,_7,_7];
    (*_23) = 23512483164884105305371835568743232750_u128;
    (*_12) = !_20;
    _13.1 = !113960849919514403829822463492374183710_u128;
    (*_23) = 22505313933880973851904899554659879448_u128 | 288277411988070364551569908739209461535_u128;
    (*_12) = _9;
    _9 = (*_12);
    _29 = [14414961411079904276_usize,16846669363814232216_usize,13367937836150650090_usize,5_usize];
    _25 = core::ptr::addr_of!(_36);
    Goto(bb21)
    }
    bb21 = {
    Call(_37 = dump_var(17_usize, 15_usize, Move(_15), 10_usize, Move(_10), 17_usize, Move(_17), 6_usize, Move(_6)), ReturnTo(bb22), UnwindUnreachable())
    }
    bb22 = {
    Call(_37 = dump_var(17_usize, 29_usize, Move(_29), 3_usize, Move(_3), 5_usize, Move(_5), 2_usize, Move(_2)), ReturnTo(bb23), UnwindUnreachable())
    }
    bb23 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(
    mut _1: *mut isize,
    mut _2: *mut isize,
    mut _3: (i32, u128, *const u128, [i64; 8]),
) -> i128 {
    mir! {
    type RET = i128;
    let _4: [u64; 1];
    let _5: f32;
    let _6: &'static *mut isize;
    let _7: u128;
    let _8: &'static i64;
    let _9: [u64; 1];
    let _10: isize;
    let _11: (u32, &'static mut i32);
    let _12: *const i16;
    let _13: isize;
    let _14: [usize; 6];
    let _15: isize;
    let _16: f64;
    let _17: u16;
    let _18: u128;
    let _19: char;
    let _20: bool;
    let _21: u32;
    let _22: *const [char; 1];
    let _23: *const u128;
    let _24: i32;
    let _25: isize;
    let _26: u8;
    let _27: (char, Adt23);
    let _28: (i32, isize);
    let _29: *const (u32, &'static mut i32);
    let _30: f64;
    let _31: [u64; 4];
    let _32: &'static mut i32;
    let _33: &'static *mut isize;
    let _34: u16;
    let _35: [i128; 1];
    let _36: u8;
    let _37: (f64,);
    let _38: &'static mut i128;
    let _39: isize;
    let _40: isize;
    let _41: bool;
    let _42: f32;
    let _43: i32;
    let _44: *const (&'static mut i32, isize, bool, i32);
    let _45: &'static mut i32;
    let _46: i128;
    let _47: usize;
    let _48: Adt74;
    let _49: bool;
    let _50: &'static mut (u32, &'static mut i32);
    let _51: &'static [i8; 5];
    let _52: Adt37;
    let _53: char;
    let _54: char;
    let _55: ();
    let _56: ();
    {
    _3.1 = 166594140487673221902883019056614241686_u128 & 320839766913387583761981633504263787967_u128;
    _4 = [8551463453762136266_u64];
    RET = '\u{98cac}' as i128;
    _3.1 = '\u{528e9}' as u128;
    RET = -(-56767254596521263738213923599112649875_i128);
    _4 = [6016044999052277633_u64];
    _4 = [17299375692774069945_u64];
    _5 = 24919_i16 as f32;
    Goto(bb1)
    }
    bb1 = {
    RET = 153035043091271455458849455007353235653_i128 & (-17709952900528154716380182195564392317_i128);
    _3.0 = !(-1852867323_i32);
    _6 = &_1;
    _3.0 = (-148033920_i32) * 1448251223_i32;
    _3.2 = core::ptr::addr_of!(_3.1);
    _7 = !_3.1;
    _3.1 = !_7;
    Goto(bb2)
    }
    bb2 = {
    _10 = -(-9223372036854775808_isize);
    _2 = core::ptr::addr_of_mut!(_10);
    (*_2) = !(-68_isize);
    _3.0 = (-1536191052_i32) & (-1086678950_i32);
    _6 = &_2;
    Goto(bb3)
    }
    bb3 = {
    _11.0 = !244911079_u32;
    _7 = 6_usize as u128;
    _3.3 = [(-2481221451648992511_i64),6933618985715992511_i64,1956124933419010291_i64,(-2401462977162896163_i64),760117423763639524_i64,351294980013849346_i64,(-7525661409695716197_i64),7529057462985081206_i64];
    RET = 159470922885164729947324156496343729102_i128 + (-162392809593492276598401177886973543068_i128);
    (*_2) = 20754_i16 as isize;
    (*_2) = 9223372036854775807_isize << _11.0;
    (*_2) = 52_isize * 9223372036854775807_isize;
    (*_2) = 207_u8 as isize;
    _1 = core::ptr::addr_of_mut!((*_2));
    (*_2) = (-9223372036854775808_isize) << _7;
    (*_2) = 9223372036854775807_isize & 9223372036854775807_isize;
    _11.1 = &mut _3.0;
    Goto(bb4)
    }
    bb4 = {
    (*_2) = (-9223372036854775808_isize) & 9223372036854775807_isize;
    (*_2) = (-9223372036854775808_isize) * (-104_isize);
    (*_2) = !(-9223372036854775808_isize);
    _14 = [7_usize,10247156412438132700_usize,3_usize,18444591645372401751_usize,6_usize,11814665970881128371_usize];
    (*_2) = 44032_u16 as isize;
    _1 = core::ptr::addr_of_mut!((*_2));
    Goto(bb5)
    }
    bb5 = {
    (*_2) = 9223372036854775807_isize << RET;
    RET = -(-160450845779069346404942876813479270653_i128);
    (*_2) = 39976_u16 as isize;
    (*_2) = 78_isize;
    (*_2) = (-21070_i16) as isize;
    _14 = [14785798182809388816_usize,7_usize,11043795186985841512_usize,5_usize,2_usize,4_usize];
    (*_2) = -(-114_isize);
    _23 = core::ptr::addr_of!(_18);
    (*_23) = _7;
    (*_2) = -(-110_isize);
    (*_2) = (-106_isize) * (-9223372036854775808_isize);
    _13 = -(*_2);
    (*_2) = (-64_i8) as isize;
    (*_23) = _7;
    _9 = [4764312517274764930_u64];
    _10 = _13 - _13;
    (*_23) = !_7;
    (*_23) = _7 & _7;
    _20 = !true;
    (*_2) = _13 * _13;
    (*_2) = !_13;
    (*_2) = _13 * _13;
    (*_2) = _13 >> (*_23);
    Call((*_23) = core::intrinsics::transmute(_7), ReturnTo(bb6), UnwindUnreachable())
    }
    bb6 = {
    (*_2) = _13 * _13;
    (*_2) = _13 - _13;
    (*_2) = _13;
    _10 = -_13;
    _18 = _7;
    (*_2) = 14303960301967868629_u64 as isize;
    (*_2) = -_13;
    (*_2) = _13 << _13;
    _19 = '\u{a2693}';
    _25 = 0_u8 as isize;
    _16 = 17701_u16 as f64;
    _26 = 56_u8 << (*_2);
    (*_23) = _7 | _7;
    _1 = core::ptr::addr_of_mut!(_10);
    _17 = _26 as u16;
    (*_1) = -_13;
    (*_23) = _7;
    (*_23) = _7 + _7;
    (*_1) = _13 - _13;
    (*_2) = -_25;
    (*_2) = !_13;
    (*_23) = _7 - _7;
    (*_2) = _25 - _25;
    (*_23) = _11.0 as u128;
    (*_23) = !_7;
    _27.0 = _19;
    (*_23) = _7 | _7;
    Goto(bb7)
    }
    bb7 = {
    (*_2) = !_13;
    _29 = core::ptr::addr_of!(_11);
    _7 = (*_23) + (*_23);
    (*_2) = -_13;
    (*_29).0 = 489786302_u32 >> (*_2);
    Call((*_2) = fn19(Move((*_29)), Move(_29)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb8 = {
    (*_23) = _7;
    _20 = (*_2) <= (*_2);
    _17 = !61156_u16;
    (*_23) = _7 << (*_2);
    (*_2) = _13;
    _28.0 = (-763161773_i32) ^ 1954977762_i32;
    (*_2) = _13;
    (*_23) = _7;
    _11.1 = &mut _28.0;
    (*_2) = _13 & _13;
    _34 = !_17;
    (*_2) = 1_usize as isize;
    _24 = 1549888487_i32;
    _25 = (*_2) << (*_23);
    (*_2) = _25 * _25;
    _20 = !false;
    _37 = (_16,);
    _7 = !(*_23);
    _35 = [RET];
    (*_23) = !_7;
    _38 = &mut RET;
    _26 = 92_u8;
    _11.1 = &mut _24;
    (*_2) = -_13;
    Call((*_2) = core::intrinsics::bswap(_25), ReturnTo(bb9), UnwindUnreachable())
    }
    bb9 = {
    (*_2) = _25 >> (*_23);
    _31 = [6830555574823903002_u64,12445978518051551581_u64,527696125814652834_u64,12673382720423403760_u64];
    (*_38) = 61722015072862683074891237685795932031_i128 - (-71120020956705913347771328549064219991_i128);
    (*_2) = -_25;
    (*_23) = _7 | _7;
    (*_23) = _7;
    (*_2) = _25 & _25;
    (*_38) = -142346777194250223075501053349798961015_i128;
    Call(_4 = core::intrinsics::transmute(_13), ReturnTo(bb10), UnwindUnreachable())
    }
    bb10 = {
    _25 = (*_2) >> (*_2);
    _27.0 = _19;
    (*_2) = _17 as isize;
    (*_38) = 63215514801891564764943685018851174758_i128 << (*_23);
    (*_23) = _7 ^ _7;
    _43 = 1589145935_i32 | 1498574895_i32;
    _17 = _34 + _34;
    (*_38) = (-67973932140539939512861989606334253183_i128);
    (*_23) = _7 - _7;
    (*_2) = _13 ^ _25;
    (*_23) = _7 >> _25;
    _41 = (*_2) > (*_2);
    _6 = &_1;
    _21 = !231266446_u32;
    _29 = core::ptr::addr_of!(_11);
    (*_23) = _7;
    (*_23) = !_7;
    match (*_38) {
    0 => bb3,
    1 => bb11,
    272308434780398523950512617825433958273 => bb13,
    _ => bb12
    }
    }
    bb11 = {
    (*_2) = (-9223372036854775808_isize) & 9223372036854775807_isize;
    (*_2) = (-9223372036854775808_isize) * (-104_isize);
    (*_2) = !(-9223372036854775808_isize);
    _14 = [7_usize,10247156412438132700_usize,3_usize,18444591645372401751_usize,6_usize,11814665970881128371_usize];
    (*_2) = 44032_u16 as isize;
    _1 = core::ptr::addr_of_mut!((*_2));
    Goto(bb5)
    }
    bb12 = {
    (*_2) = !_13;
    _29 = core::ptr::addr_of!(_11);
    _7 = (*_23) + (*_23);
    (*_2) = -_13;
    (*_29).0 = 489786302_u32 >> (*_2);
    Call((*_2) = fn19(Move((*_29)), Move(_29)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb13 = {
    _43 = !(-1099430502_i32);
    _31 = [10197822728058117655_u64,5917914485942857074_u64,11492663987346720815_u64,7713558668224809219_u64];
    (*_2) = !_25;
    (*_23) = !_7;
    _27.0 = _19;
    (*_23) = !_7;
    _17 = _34;
    _46 = (*_23) as i128;
    (*_38) = _46 >> (*_23);
    (*_29).1 = &mut _43;
    _21 = 2526372075_u32;
    _40 = (*_23) as isize;
    (*_23) = _7 << (*_2);
    Goto(bb14)
    }
    bb14 = {
    (*_38) = _46;
    (*_29).0 = _21 % _21;
    (*_29).0 = _21 ^ _21;
    _33 = &_2;
    (*_23) = _7;
    _47 = 7776680671602031958_usize ^ 15357925902380670506_usize;
    (*_2) = _26 as isize;
    _39 = _13 ^ _25;
    _11.0 = !_21;
    Goto(bb15)
    }
    bb15 = {
    (*_2) = _39 | _39;
    (*_23) = _7;
    (*_38) = _46 >> (*_2);
    _38 = &mut _46;
    (*_29).0 = _21;
    (*_2) = !_25;
    _27.1 = Adt23::Variant2 { fld0: _41,fld1: _19,fld2: _17,fld3: 87_i8 };
    _53 = _19;
    (*_29).0 = !_21;
    (*_38) = 74205620944817035516049620453097964497_i128 - (-66752500561888043052973645936786697892_i128);
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_2) = (*_23) as isize;
    (*_29).0 = _21 * _21;
    _50 = &mut (*_29);
    _13 = 1159675250001697023_u64 as isize;
    (*_50).0 = _16 as u32;
    Goto(bb16)
    }
    bb16 = {
    Call(_55 = dump_var(18_usize, 9_usize, Move(_9), 41_usize, Move(_41), 53_usize, Move(_53), 14_usize, Move(_14)), ReturnTo(bb17), UnwindUnreachable())
    }
    bb17 = {
    Call(_55 = dump_var(18_usize, 13_usize, Move(_13), 19_usize, Move(_19), 10_usize, Move(_10), 46_usize, Move(_46)), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    Call(_55 = dump_var(18_usize, 39_usize, Move(_39), 21_usize, Move(_21), 34_usize, Move(_34), 25_usize, Move(_25)), ReturnTo(bb19), UnwindUnreachable())
    }
    bb19 = {
    Return()
    }

    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: (u32, &'static mut i32), mut _2: *const (u32, &'static mut i32)) -> isize {
    mir! {
    type RET = isize;
    let _3: *mut Adt23;
    let _4: u32;
    let _5: i64;
    let _6: &'static char;
    let _7: (&'static u16,);
    let _8: ((f32, &'static i64), usize, [usize; 6], &'static mut i32);
    let _9: bool;
    let _10: *mut [i128; 1];
    let _11: Adt17;
    let _12: f64;
    let _13: i8;
    let _14: i128;
    let _15: u16;
    let _16: [i16; 1];
    let _17: [i16; 1];
    let _18: [i16; 6];
    let _19: &'static u16;
    let _20: &'static *mut isize;
    let _21: u128;
    let _22: isize;
    let _23: [u64; 4];
    let _24: isize;
    let _25: f64;
    let _26: *const [char; 1];
    let _27: char;
    let _28: isize;
    let _29: isize;
    let _30: usize;
    let _31: ();
    let _32: ();
    {
    RET = !(-66_isize);
    _4 = _1.0 * _1.0;
    _4 = RET as u32;
    _1.0 = !_4;
    _5 = RET as i64;
    _4 = (-53810854538286777594212973209246853829_i128) as u32;
    _1.0 = _5 as u32;
    _5 = (-784195616749990061_i64);
    RET = 71_u8 as isize;
    _1.0 = !_4;
    _5 = 9108915369572899513_i64;
    _4 = _1.0 ^ _1.0;
    _5 = 1736185294104731402_i64 + 5601870407701414581_i64;
    _4 = !_1.0;
    RET = (-9223372036854775808_isize);
    _4 = _1.0 * _1.0;
    _1.0 = _4;
    _5 = (-4839767838593333679_i64) << _1.0;
    _4 = _1.0;
    _4 = !_1.0;
    _5 = (-152334840419817577969331458010231988221_i128) as i64;
    _4 = _1.0;
    _4 = _1.0 | _1.0;
    Goto(bb1)
    }
    bb1 = {
    _5 = 5525008098957592053_i64 | (-382307879075198307_i64);
    _5 = (-8641543256765967815_i64) & (-4077601453659218117_i64);
    RET = 14582753527219203656_u64 as isize;
    _4 = _1.0 - _1.0;
    _5 = 4629700406581184927_i64 | (-6545430672235356283_i64);
    RET = (-9223372036854775808_isize) << _4;
    RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
    _1.0 = RET as u32;
    _1.0 = _4 ^ _4;
    RET = -9223372036854775807_isize;
    _4 = !_1.0;
    _8.0.0 = 49_i8 as f32;
    Goto(bb2)
    }
    bb2 = {
    _8.0.0 = 158_u8 as f32;
    _8.0.0 = _4 as f32;
    _8.1 = 7_usize;
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    _4 = _1.0;
    _11 = Adt17::Variant1 { fld0: 52917_u16 };
    _9 = true ^ true;
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    place!(Field::<u16>(Variant(_11, 1), 0)) = !20366_u16;
    _8.1 = 3_usize;
    _8.0.1 = &_5;
    _11 = Adt17::Variant2 { fld0: _5,fld1: 10873806200229704472_u64 };
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{e53f5}',fld2: _4,fld3: 54_i8,fld4: 331929173674210699162773322590784706413_u128,fld5: 387266051_i32,fld6: 129_u8,fld7: 284896312613596587_u64 };
    place!(Field::<i32>(Variant(_11, 3), 5)) = '\u{5d5a5}' as i32;
    _11 = Adt17::Variant2 { fld0: _5,fld1: 15822397627836643911_u64 };
    match _8.1 {
    0 => bb1,
    3 => bb4,
    _ => bb3
    }
    }
    bb3 = {
    _5 = 5525008098957592053_i64 | (-382307879075198307_i64);
    _5 = (-8641543256765967815_i64) & (-4077601453659218117_i64);
    RET = 14582753527219203656_u64 as isize;
    _4 = _1.0 - _1.0;
    _5 = 4629700406581184927_i64 | (-6545430672235356283_i64);
    RET = (-9223372036854775808_isize) << _4;
    RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
    _1.0 = RET as u32;
    _1.0 = _4 ^ _4;
    RET = -9223372036854775807_isize;
    _4 = !_1.0;
    _8.0.0 = 49_i8 as f32;
    Goto(bb2)
    }
    bb4 = {
    _8.1 = _5 as usize;
    _12 = RET as f64;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _5 ^ _5;
    place!(Field::<u64>(Variant(_11, 2), 1)) = 2202060850326865485_u64 + 5904256032004717607_u64;
    _11 = Adt17::Variant0 { fld0: _8.0.0,fld1: _12,fld2: 14065_u16 };
    place!(Field::<f64>(Variant(_11, 0), 1)) = _12 * _12;
    Goto(bb5)
    }
    bb5 = {
    place!(Field::<u16>(Variant(_11, 0), 2)) = 44988_u16;
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{ad39c}',fld2: _1.0,fld3: 90_i8,fld4: 332043441358583153039929575468797418483_u128,fld5: (-1569231207_i32),fld6: 172_u8,fld7: 3222196157803484703_u64 };
    _13 = -(-95_i8);
    place!(Field::<u8>(Variant(_11, 3), 6)) = 241_u8 + 182_u8;
    place!(Field::<u8>(Variant(_11, 3), 6)) = 127_u8;
    _14 = _9 as i128;
    place!(Field::<u64>(Variant(_11, 3), 7)) = !12079977756021020705_u64;
    _14 = !(-82865205072205436802352727051081747116_i128);
    RET = 9223372036854775807_isize << _13;
    place!(Field::<i8>(Variant(_11, 3), 3)) = !_13;
    _5 = -5701934805306530849_i64;
    place!(Field::<i8>(Variant(_11, 3), 3)) = _13 & _13;
    _16 = [20752_i16];
    _14 = 34626090851644928802010516753984201863_i128 & (-34562963178295533887354615942551129382_i128);
    _11 = Adt17::Variant1 { fld0: 16715_u16 };
    _17 = _16;
    _11 = Adt17::Variant1 { fld0: 2577_u16 };
    _15 = 52926_u16 * 7058_u16;
    _15 = 40455_u16 << _4;
    _13 = !(-25_i8);
    Goto(bb6)
    }
    bb6 = {
    _11 = Adt17::Variant2 { fld0: _5,fld1: 14535767320763113586_u64 };
    _14 = 72331947822394241318832216111274895453_i128 + 100791313024051381323156410324276920439_i128;
    _8.0.0 = 167430400746224881330869665965507374814_u128 as f32;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _5;
    _5 = Field::<i64>(Variant(_11, 2), 0) - Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 12836991516770772505_usize;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _9 as i64;
    _5 = Field::<i64>(Variant(_11, 2), 0) * Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 1_usize;
    _7.0 = &_15;
    _1.0 = _4 + _4;
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{d8e1d}',fld2: _1.0,fld3: _13,fld4: 214388213249645681625777319366749661786_u128,fld5: 1607655307_i32,fld6: 0_u8,fld7: 1222988062120526222_u64 };
    _5 = 62_u8 as i64;
    _11 = Adt17::Variant1 { fld0: _15 };
    _18 = [(-31278_i16),(-8473_i16),(-9624_i16),(-31464_i16),(-6823_i16),(-8016_i16)];
    _15 = Field::<u16>(Variant(_11, 1), 0);
    _18 = [28030_i16,(-11544_i16),(-8083_i16),13908_i16,27748_i16,12859_i16];
    _8.0.0 = 17146152862676343670_u64 as f32;
    _21 = 216187532264602936144932208753860278315_u128 + 265525628512466598399918977565363500169_u128;
    _13 = _1.0 as i8;
    RET = (-9223372036854775808_isize);
    Goto(bb7)
    }
    bb7 = {
    _7.0 = &place!(Field::<u16>(Variant(_11, 1), 0));
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    _19 = &_15;
    _15 = Field::<u16>(Variant(_11, 1), 0);
    _17 = _16;
    _8.0.0 = _12 as f32;
    _19 = &place!(Field::<u16>(Variant(_11, 1), 0));
    RET = !(-18_isize);
    _7.0 = &_15;
    _9 = (*_19) >= (*_19);
    _8.1 = 3_usize;
    _19 = &_15;
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    _23 = [4663308535944903332_u64,7171847135318739923_u64,4967887205552009469_u64,17851995092022871074_u64];
    _23 = [6544359058570339093_u64,4121786401814495861_u64,15781668149610679151_u64,11107413727327880637_u64];
    _23 = [14696117349568909724_u64,5906070636677372826_u64,11580003740088657051_u64,7442874082004775434_u64];
    _24 = RET * RET;
    RET = _5 as isize;
    place!(Field::<u16>(Variant(_11, 1), 0)) = !(*_19);
    _21 = 142880576546660258902478727721037056520_u128 * 138056665859100107158393193545364102189_u128;
    _13 = !(-111_i8);
    match _8.1 {
    0 => bb4,
    1 => bb8,
    3 => bb10,
    _ => bb9
    }
    }
    bb8 = {
    _11 = Adt17::Variant2 { fld0: _5,fld1: 14535767320763113586_u64 };
    _14 = 72331947822394241318832216111274895453_i128 + 100791313024051381323156410324276920439_i128;
    _8.0.0 = 167430400746224881330869665965507374814_u128 as f32;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _5;
    _5 = Field::<i64>(Variant(_11, 2), 0) - Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 12836991516770772505_usize;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _9 as i64;
    _5 = Field::<i64>(Variant(_11, 2), 0) * Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 1_usize;
    _7.0 = &_15;
    _1.0 = _4 + _4;
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{d8e1d}',fld2: _1.0,fld3: _13,fld4: 214388213249645681625777319366749661786_u128,fld5: 1607655307_i32,fld6: 0_u8,fld7: 1222988062120526222_u64 };
    _5 = 62_u8 as i64;
    _11 = Adt17::Variant1 { fld0: _15 };
    _18 = [(-31278_i16),(-8473_i16),(-9624_i16),(-31464_i16),(-6823_i16),(-8016_i16)];
    _15 = Field::<u16>(Variant(_11, 1), 0);
    _18 = [28030_i16,(-11544_i16),(-8083_i16),13908_i16,27748_i16,12859_i16];
    _8.0.0 = 17146152862676343670_u64 as f32;
    _21 = 216187532264602936144932208753860278315_u128 + 265525628512466598399918977565363500169_u128;
    _13 = _1.0 as i8;
    RET = (-9223372036854775808_isize);
    Goto(bb7)
    }
    bb9 = {
    _5 = 5525008098957592053_i64 | (-382307879075198307_i64);
    _5 = (-8641543256765967815_i64) & (-4077601453659218117_i64);
    RET = 14582753527219203656_u64 as isize;
    _4 = _1.0 - _1.0;
    _5 = 4629700406581184927_i64 | (-6545430672235356283_i64);
    RET = (-9223372036854775808_isize) << _4;
    RET = (-9223372036854775808_isize) * (-9223372036854775808_isize);
    _1.0 = RET as u32;
    _1.0 = _4 ^ _4;
    RET = -9223372036854775807_isize;
    _4 = !_1.0;
    _8.0.0 = 49_i8 as f32;
    Goto(bb2)
    }
    bb10 = {
    _14 = 103759743460806087214923395847705258896_i128 >> (*_19);
    _16 = [(-21280_i16)];
    Call(_14 = core::intrinsics::transmute(_21), ReturnTo(bb11), UnwindUnreachable())
    }
    bb11 = {
    _19 = Move(_7.0);
    _27 = '\u{1cba3}';
    _25 = _12;
    _11 = Adt17::Variant2 { fld0: _5,fld1: 14073061772945485776_u64 };
    _4 = _1.0 + _1.0;
    _13 = (-42_i8);
    _22 = _24 << _15;
    _12 = _21 as f64;
    place!(Field::<u64>(Variant(_11, 2), 1)) = !3429069731282227384_u64;
    match _8.1 {
    0 => bb5,
    1 => bb2,
    2 => bb3,
    4 => bb12,
    3 => bb14,
    _ => bb13
    }
    }
    bb12 = {
    place!(Field::<u16>(Variant(_11, 0), 2)) = 44988_u16;
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{ad39c}',fld2: _1.0,fld3: 90_i8,fld4: 332043441358583153039929575468797418483_u128,fld5: (-1569231207_i32),fld6: 172_u8,fld7: 3222196157803484703_u64 };
    _13 = -(-95_i8);
    place!(Field::<u8>(Variant(_11, 3), 6)) = 241_u8 + 182_u8;
    place!(Field::<u8>(Variant(_11, 3), 6)) = 127_u8;
    _14 = _9 as i128;
    place!(Field::<u64>(Variant(_11, 3), 7)) = !12079977756021020705_u64;
    _14 = !(-82865205072205436802352727051081747116_i128);
    RET = 9223372036854775807_isize << _13;
    place!(Field::<i8>(Variant(_11, 3), 3)) = !_13;
    _5 = -5701934805306530849_i64;
    place!(Field::<i8>(Variant(_11, 3), 3)) = _13 & _13;
    _16 = [20752_i16];
    _14 = 34626090851644928802010516753984201863_i128 & (-34562963178295533887354615942551129382_i128);
    _11 = Adt17::Variant1 { fld0: 16715_u16 };
    _17 = _16;
    _11 = Adt17::Variant1 { fld0: 2577_u16 };
    _15 = 52926_u16 * 7058_u16;
    _15 = 40455_u16 << _4;
    _13 = !(-25_i8);
    Goto(bb6)
    }
    bb13 = {
    _11 = Adt17::Variant2 { fld0: _5,fld1: 14535767320763113586_u64 };
    _14 = 72331947822394241318832216111274895453_i128 + 100791313024051381323156410324276920439_i128;
    _8.0.0 = 167430400746224881330869665965507374814_u128 as f32;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _5;
    _5 = Field::<i64>(Variant(_11, 2), 0) - Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 12836991516770772505_usize;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _9 as i64;
    _5 = Field::<i64>(Variant(_11, 2), 0) * Field::<i64>(Variant(_11, 2), 0);
    _8.1 = 1_usize;
    _7.0 = &_15;
    _1.0 = _4 + _4;
    _11 = Adt17::Variant3 { fld0: _9,fld1: '\u{d8e1d}',fld2: _1.0,fld3: _13,fld4: 214388213249645681625777319366749661786_u128,fld5: 1607655307_i32,fld6: 0_u8,fld7: 1222988062120526222_u64 };
    _5 = 62_u8 as i64;
    _11 = Adt17::Variant1 { fld0: _15 };
    _18 = [(-31278_i16),(-8473_i16),(-9624_i16),(-31464_i16),(-6823_i16),(-8016_i16)];
    _15 = Field::<u16>(Variant(_11, 1), 0);
    _18 = [28030_i16,(-11544_i16),(-8083_i16),13908_i16,27748_i16,12859_i16];
    _8.0.0 = 17146152862676343670_u64 as f32;
    _21 = 216187532264602936144932208753860278315_u128 + 265525628512466598399918977565363500169_u128;
    _13 = _1.0 as i8;
    RET = (-9223372036854775808_isize);
    Goto(bb7)
    }
    bb14 = {
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    _25 = _12;
    _23 = [Field::<u64>(Variant(_11, 2), 1),Field::<u64>(Variant(_11, 2), 1),Field::<u64>(Variant(_11, 2), 1),Field::<u64>(Variant(_11, 2), 1)];
    _16 = _17;
    _9 = !false;
    _17 = [1355_i16];
    _13 = !(-16_i8);
    place!(Field::<u64>(Variant(_11, 2), 1)) = _15 as u64;
    _14 = (-119426138991253137146852178442968772769_i128) >> _4;
    _8.2 = [_8.1,_8.1,_8.1,_8.1,_8.1,_8.1];
    _19 = &_15;
    _7.0 = &_15;
    _1.0 = !_4;
    _19 = Move(_7.0);
    _8.0.0 = (-9908_i16) as f32;
    place!(Field::<i64>(Variant(_11, 2), 0)) = _5;
    _28 = _22 >> _4;
    _13 = (-110_i8) - 87_i8;
    RET = _28;
    _8.0.1 = &place!(Field::<i64>(Variant(_11, 2), 0));
    _27 = '\u{10e687}';
    _7.0 = &_15;
    Goto(bb15)
    }
    bb15 = {
    Call(_31 = dump_var(19_usize, 22_usize, Move(_22), 5_usize, Move(_5), 27_usize, Move(_27), 23_usize, Move(_23)), ReturnTo(bb16), UnwindUnreachable())
    }
    bb16 = {
    Call(_31 = dump_var(19_usize, 18_usize, Move(_18), 24_usize, Move(_24), 28_usize, Move(_28), 32_usize, _32), ReturnTo(bb17), UnwindUnreachable())
    }
    bb17 = {
    Return()
    }

    }
}
pub fn main() {
    fn0(
        std::hint::black_box(false),
        std::hint::black_box(17577772524001372761_u64),
        std::hint::black_box((-9223372036854775808_isize)),
        std::hint::black_box(101_i8),
        std::hint::black_box((-2884_i16)),
        std::hint::black_box((-1064136922_i32)),
        std::hint::black_box((-3706950848628087390_i64)),
        std::hint::black_box(116575887552891751927859649926474386719_u128),
        std::hint::black_box(1_usize),
        std::hint::black_box(21_u8),
        std::hint::black_box(27795_u16),
        std::hint::black_box(3859860552_u32),
    );
}
#[derive(Debug)]
pub enum Adt17 {
    Variant0 {
        fld0: f32,
        fld1: f64,
        fld2: u16,
    },
    Variant1 {
        fld0: u16,
    },
    Variant2 {
        fld0: i64,
        fld1: u64,
    },
    Variant3 {
        fld0: bool,
        fld1: char,
        fld2: u32,
        fld3: i8,
        fld4: u128,
        fld5: i32,
        fld6: u8,
        fld7: u64,
    },
}
#[derive(Debug)]
pub enum Adt23 {
    Variant0 {
        fld0: [i8; 5],
        fld1: (i64, f64, u64, f64),
        fld2: u16,
        fld3: (f64,),
    },
    Variant1 {
        fld0: (f64,),
        fld1: Adt17,
        fld2: isize,
        fld3: [i8; 5],
        fld4: i128,
        fld5: f32,
    },
    Variant2 {
        fld0: bool,
        fld1: char,
        fld2: u16,
        fld3: i8,
    },
    Variant3 {
        fld0: u16,
        fld1: char,
        fld2: (i64, f64, u64, f64),
        fld3: i8,
        fld4: i16,
        fld5: i32,
        fld6: i64,
    },
}
#[derive(Debug)]
pub enum Adt37 {
    Variant0 {
        fld0: bool,
        fld1: (f64,),
        fld2: i128,
        fld3: (char, Adt23),
        fld4: u64,
        fld5: u16,
        fld6: i64,
    },
    Variant1 {
        fld0: i128,
        fld1: u16,
    },
}
#[derive(Debug)]
pub enum Adt52 {
    Variant0 {
        fld0: *mut isize,
        fld1: [char; 1],
        fld2: [i16; 7],
        fld3: (char, Adt23),
        fld4: u32,
    },
    Variant1 {
        fld0: [u64; 1],
    },
    Variant2 {
        fld0: Adt23,
        fld1: char,
        fld2: (f64,),
        fld3: Adt37,
        fld4: [i16; 6],
        fld5: i32,
        fld6: (i32, isize),
    },
}
#[derive(Debug)]
pub enum Adt53 {
    Variant0 {
        fld0: [u64; 1],
        fld1: [i16; 6],
        fld2: u16,
        fld3: (char, Adt23),
        fld4: i32,
    },
    Variant1 {
        fld0: u32,
        fld1: *mut isize,
        fld2: f32,
        fld3: u16,
        fld4: [usize; 6],
        fld5: [u64; 1],
        fld6: u64,
    },
}
#[derive(Debug)]
pub struct Adt68 {
    fld0: i32,
    fld1: [i8; 5],
    fld2: f64,
    fld3: *mut [i128; 1],
    fld4: [i128; 6],
}
#[derive(Debug)]
pub enum Adt71 {
    Variant0 {
        fld0: [char; 1],
        fld1: [i128; 1],
        fld2: (i32, isize),
        fld3: [i16; 6],
        fld4: [i128; 5],
        fld5: (f64,),
        fld6: *mut [i128; 1],
        fld7: usize,
    },
    Variant1 {
        fld0: (i64, f64, u64, f64),
        fld1: (i32, u128, *const u128, [i64; 8]),
        fld2: isize,
        fld3: *const u128,
        fld4: Adt52,
        fld5: *mut [i128; 1],
        fld6: u8,
        fld7: *mut isize,
    },
}
#[derive(Debug)]
pub enum Adt74 {
    Variant0 { fld0: Adt23, fld1: *mut [i128; 1], fld2: [i8; 2] },
    Variant1 { fld0: usize, fld1: Adt53 },
    Variant2 { fld0: [u64; 1], fld1: *const u128 },
}
