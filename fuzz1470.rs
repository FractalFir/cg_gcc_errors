#![recursion_limit = "1024"]
#![feature(custom_mir, core_intrinsics, lazy_get)]
#![allow(unused_parens, unused_assignments, overflowing_literals)]
extern crate core;
use core::intrinsics::mir::*;
use std::fmt::Debug;
#[inline(never)]
fn dump_var(
    f: usize,
    var0: usize,
    val0: impl Debug,
    var1: usize,
    val1: impl Debug,
    var2: usize,
    val2: impl Debug,
    var3: usize,
    val3: impl Debug,
) {
    println!(
        "fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}"
    );
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(
    mut _1: bool,
    mut _2: u64,
    mut _3: isize,
    mut _4: i8,
    mut _5: i16,
    mut _6: u16,
    mut _7: i64,
    mut _8: u128,
    mut _9: u8,
) -> bool {
    mir! {
    type RET = bool;
    let _10: u64;
    let _11: *mut bool;
    let _12: i8;
    let _13: *const &'static mut (i32,);
    let _14: isize;
    let _15: f64;
    let _16: &'static [isize; 3];
    let _17: isize;
    let _18: ([u128; 8], (char,));
    let _19: [u16; 8];
    let _20: usize;
    let _21: f64;
    let _22: isize;
    let _23: *const &'static [isize; 3];
    let _24: Adt35;
    let _25: &'static *mut i16;
    let _26: u8;
    let _27: i64;
    let _28: f64;
    let _29: Adt29;
    let _30: *mut Adt45;
    let _31: u32;
    let _32: (i64, *const [i8; 6]);
    let _33: &'static mut &'static *mut i16;
    let _34: isize;
    let _35: i8;
    let _36: u8;
    let _37: (Adt32, Adt45, [i8; 6]);
    let _38: &'static [u128; 2];
    let _39: *const &'static mut (i32,);
    let _40: isize;
    let _41: isize;
    let _42: [u64; 7];
    let _43: &'static &'static mut [isize; 3];
    let _44: *const i32;
    let _45: *mut Adt45;
    let _46: &'static mut u8;
    let _47: Adt35;
    let _48: &'static mut &'static *mut i16;
    let _49: isize;
    let _50: (i16, *mut *mut &'static (u128,), *mut i32, Adt45);
    let _51: isize;
    let _52: [u64; 7];
    let _53: i128;
    let _54: f64;
    let _55: i32;
    let _56: Adt58;
    let _57: i16;
    let _58: (u128,);
    let _59: isize;
    let _60: char;
    let _61: [i8; 3];
    let _62: isize;
    let _63: &'static (u128,);
    let _64: i64;
    let _65: ();
    let _66: ();
    {
    _10 = 10065683106813995214_u64 + 4479285737202817792_u64;
    _6 = 743_u16 >> _10;
    _3 = (-45_isize);
    _4 = 7_i8 - 84_i8;
    _2 = _10;
    _11 = core::ptr::addr_of_mut!(RET);
    _6 = !41576_u16;
    (*_11) = false & true;
    _5 = _10 as i16;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = true & false;
    (*_11) = true;
    (*_11) = _5 >= _5;
    (*_11) = !true;
    (*_11) = !true;
    (*_11) = _2 == _10;
    _7 = !4456376917539914052_i64;
    (*_11) = !true;
    _12 = _4 ^ _4;
    (*_11) = true ^ true;
    (*_11) = true & false;
    _5 = (-4337_i16) - 25512_i16;
    (*_11) = !false;
    (*_11) = true;
    (*_11) = true;
    _12 = _4 ^ _4;
    Goto(bb1)
    }
    bb1 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb2 = {
    _5 = !(-933_i16);
    _8 = 319540465587718625497838955568094584265_u128 - 336951478250333593838565189122960691776_u128;
    _5 = 848_i16;
    _22 = (-95688182597662994353188213486239864889_i128) as isize;
    _4 = !_12;
    match _5 {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    848 => bb7,
    _ => bb6
    }
    }
    bb3 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _9 = 37_u8 * 152_u8;
    _19 = [_6,_6,_6,_6,_6,_6,_6,_6];
    _15 = _8 as f64;
    _12 = _4 ^ _4;
    _11 = core::ptr::addr_of_mut!(_1);
    (*_11) = RET & RET;
    (*_11) = !RET;
    _1 = RET;
    (*_11) = RET;
    _7 = _9 as i64;
    (*_11) = RET;
    (*_11) = !RET;
    _26 = _5 as u8;
    Goto(bb8)
    }
    bb8 = {
    _20 = 3_usize ^ 3_usize;
    _8 = 27360241576738725235189605541791351610_u128 | 46992371692077702392144847087411080475_u128;
    (*_11) = _4 >= _4;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = !RET;
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_11) = RET;
    _8 = !127201607503352651491287579707401017906_u128;
    _14 = _3;
    _12 = _4 ^ _4;
    (*_11) = _15 == _15;
    match _3 {
    0 => bb1,
    1 => bb9,
    2 => bb10,
    3 => bb11,
    4 => bb12,
    340282366920938463463374607431768211411 => bb14,
    _ => bb13
    }
    }
    bb9 = {
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _9 = 37_u8 * 152_u8;
    _19 = [_6,_6,_6,_6,_6,_6,_6,_6];
    _15 = _8 as f64;
    _12 = _4 ^ _4;
    _11 = core::ptr::addr_of_mut!(_1);
    (*_11) = RET & RET;
    (*_11) = !RET;
    _1 = RET;
    (*_11) = RET;
    _7 = _9 as i64;
    (*_11) = RET;
    (*_11) = !RET;
    _26 = _5 as u8;
    Goto(bb8)
    }
    bb10 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb11 = {
    Return()
    }
    bb12 = {
    Return()
    }
    bb13 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb14 = {
    _18.1.0 = '\u{5ef91}';
    (*_11) = _3 < _22;
    RET = !(*_11);
    _21 = _15 * _15;
    (*_11) = RET;
    _28 = _15 * _15;
    (*_11) = _21 <= _15;
    (*_11) = !RET;
    (*_11) = RET & RET;
    (*_11) = RET;
    _28 = _21 + _15;
    _27 = _7 >> _20;
    (*_11) = !RET;
    (*_11) = _9 != _9;
    (*_11) = !RET;
    (*_11) = RET;
    (*_11) = _4 < _4;
    (*_11) = RET;
    _2 = !_10;
    (*_11) = _21 < _15;
    _18.1.0 = '\u{32684}';
    _11 = core::ptr::addr_of_mut!((*_11));
    _18.1.0 = '\u{1af20}';
    (*_11) = _28 == _28;
    (*_11) = !RET;
    (*_11) = _9 < _9;
    (*_11) = !RET;
    RET = !(*_11);
    _22 = _3;
    _24 = Adt35::Variant0 { fld0: _20,fld1: _27 };
    _4 = _12 << _7;
    match _5 {
    0 => bb11,
    848 => bb16,
    _ => bb15
    }
    }
    bb15 = {
    Return()
    }
    bb16 = {
    (*_11) = RET | RET;
    _22 = !_14;
    (*_11) = RET ^ RET;
    _8 = !182528096000367710575871867650197004734_u128;
    _2 = _10;
    _3 = _17;
    _15 = _28 - _21;
    RET = (*_11);
    _20 = (*_11) as usize;
    _6 = 32170_u16 * 44731_u16;
    (*_11) = RET;
    _20 = !Field::<usize>(Variant(_24, 0), 0);
    _26 = !_9;
    _21 = _28;
    _20 = _9 as usize;
    _1 = RET >= RET;
    _22 = _3 & _17;
    _3 = _22;
    match _5 {
    0 => bb1,
    1 => bb11,
    2 => bb3,
    3 => bb15,
    4 => bb9,
    5 => bb14,
    6 => bb7,
    848 => bb17,
    _ => bb8
    }
    }
    bb17 = {
    (*_11) = RET;
    _18.1.0 = '\u{31640}';
    (*_11) = !RET;
    (*_11) = _4 == _12;
    (*_11) = RET & RET;
    (*_11) = _8 == _8;
    _32.0 = -Field::<i64>(Variant(_24, 0), 1);
    _27 = Field::<i64>(Variant(_24, 0), 1) ^ _32.0;
    (*_11) = RET ^ RET;
    _36 = !_26;
    match _14 {
    0 => bb1,
    1 => bb12,
    2 => bb6,
    3 => bb4,
    4 => bb16,
    340282366920938463463374607431768211411 => bb19,
    _ => bb18
    }
    }
    bb18 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb19 = {
    _36 = _21 as u8;
    _32.0 = Field::<i64>(Variant(_24, 0), 1);
    _34 = _21 as isize;
    _36 = 86140575189086928230363803357317004733_i128 as u8;
    (*_11) = RET;
    (*_11) = !RET;
    (*_11) = _3 == _34;
    _18.1.0 = '\u{aa182}';
    _30 = core::ptr::addr_of_mut!(_37.1);
    _17 = _22 ^ _22;
    _14 = -_17;
    (*_30) = Adt45::Variant2 { fld0: _15,fld1: (-97426459534455639075295370730670890620_i128) };
    place!(Field::<i128>(Variant((*_30), 2), 1)) = -(-156019981487622970105836084261911718535_i128);
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 31695338631856585122420198752887318404_i128;
    _17 = _18.1.0 as isize;
    _32.0 = _20 as i64;
    _32.1 = core::ptr::addr_of!(_37.2);
    place!(Field::<i128>(Variant((*_30), 2), 1)) = (-105759555880459883093922942111572189461_i128);
    (*_30) = Adt45::Variant2 { fld0: _21,fld1: (-94844357704959111040614219891948890046_i128) };
    match _5 {
    0 => bb20,
    1 => bb21,
    2 => bb22,
    848 => bb24,
    _ => bb23
    }
    }
    bb20 = {
    Return()
    }
    bb21 = {
    (*_11) = RET;
    _18.1.0 = '\u{31640}';
    (*_11) = !RET;
    (*_11) = _4 == _12;
    (*_11) = RET & RET;
    (*_11) = _8 == _8;
    _32.0 = -Field::<i64>(Variant(_24, 0), 1);
    _27 = Field::<i64>(Variant(_24, 0), 1) ^ _32.0;
    (*_11) = RET ^ RET;
    _36 = !_26;
    match _14 {
    0 => bb1,
    1 => bb12,
    2 => bb6,
    3 => bb4,
    4 => bb16,
    340282366920938463463374607431768211411 => bb19,
    _ => bb18
    }
    }
    bb22 = {
    _18.1.0 = '\u{5ef91}';
    (*_11) = _3 < _22;
    RET = !(*_11);
    _21 = _15 * _15;
    (*_11) = RET;
    _28 = _15 * _15;
    (*_11) = _21 <= _15;
    (*_11) = !RET;
    (*_11) = RET & RET;
    (*_11) = RET;
    _28 = _21 + _15;
    _27 = _7 >> _20;
    (*_11) = !RET;
    (*_11) = _9 != _9;
    (*_11) = !RET;
    (*_11) = RET;
    (*_11) = _4 < _4;
    (*_11) = RET;
    _2 = !_10;
    (*_11) = _21 < _15;
    _18.1.0 = '\u{32684}';
    _11 = core::ptr::addr_of_mut!((*_11));
    _18.1.0 = '\u{1af20}';
    (*_11) = _28 == _28;
    (*_11) = !RET;
    (*_11) = _9 < _9;
    (*_11) = !RET;
    RET = !(*_11);
    _22 = _3;
    _24 = Adt35::Variant0 { fld0: _20,fld1: _27 };
    _4 = _12 << _7;
    match _5 {
    0 => bb11,
    848 => bb16,
    _ => bb15
    }
    }
    bb23 = {
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _9 = 37_u8 * 152_u8;
    _19 = [_6,_6,_6,_6,_6,_6,_6,_6];
    _15 = _8 as f64;
    _12 = _4 ^ _4;
    _11 = core::ptr::addr_of_mut!(_1);
    (*_11) = RET & RET;
    (*_11) = !RET;
    _1 = RET;
    (*_11) = RET;
    _7 = _9 as i64;
    (*_11) = RET;
    (*_11) = !RET;
    _26 = _5 as u8;
    Goto(bb8)
    }
    bb24 = {
    _37.2 = [_4,_4,_12,_4,_12,_12];
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    place!(Field::<i128>(Variant(_37.1, 2), 1)) = -(-81009031567001261333751700027956020652_i128);
    _30 = core::ptr::addr_of_mut!((*_30));
    _35 = _12;
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    Goto(bb25)
    }
    bb25 = {
    (*_11) = RET & RET;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 16185965272270842762579833302950976909_i128 * (-11316215504478690877336417385098984173_i128);
    _22 = Field::<i128>(Variant((*_30), 2), 1) as isize;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _28 - _15;
    _36 = _26;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _10 as i128;
    match _5 {
    0 => bb11,
    1 => bb2,
    2 => bb9,
    3 => bb10,
    848 => bb26,
    _ => bb8
    }
    }
    bb26 = {
    _37.2 = [_12,_4,_4,_4,_12,_12];
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _21;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 128219435186180110811576761741227318196_i128;
    _42 = [_2,_2,_2,_10,_10,_2,_10];
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _28;
    (*_11) = Field::<f64>(Variant((*_30), 2), 0) < Field::<f64>(Variant((*_30), 2), 0);
    _40 = Field::<f64>(Variant((*_30), 2), 0) as isize;
    (*_11) = Field::<f64>(Variant(_37.1, 2), 0) == Field::<f64>(Variant((*_30), 2), 0);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_15;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _40 as f64;
    _15 = _28 * Field::<f64>(Variant((*_30), 2), 0);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _28;
    place!(Field::<usize>(Variant(_24, 0), 0)) = _20 * _20;
    (*_11) = !RET;
    _8 = !234345288678489754148007138420862702702_u128;
    (*_11) = _27 >= Field::<i64>(Variant(_24, 0), 1);
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 7629125192206213339264567244623555659_i128 * 157027169872082827851048250815667697340_i128;
    (*_11) = RET | RET;
    match _5 {
    0 => bb27,
    1 => bb28,
    2 => bb29,
    3 => bb30,
    4 => bb31,
    848 => bb33,
    _ => bb32
    }
    }
    bb27 = {
    (*_11) = RET & RET;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 16185965272270842762579833302950976909_i128 * (-11316215504478690877336417385098984173_i128);
    _22 = Field::<i128>(Variant((*_30), 2), 1) as isize;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _28 - _15;
    _36 = _26;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _10 as i128;
    match _5 {
    0 => bb11,
    1 => bb2,
    2 => bb9,
    3 => bb10,
    848 => bb26,
    _ => bb8
    }
    }
    bb28 = {
    _37.2 = [_4,_4,_12,_4,_12,_12];
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    place!(Field::<i128>(Variant(_37.1, 2), 1)) = -(-81009031567001261333751700027956020652_i128);
    _30 = core::ptr::addr_of_mut!((*_30));
    _35 = _12;
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    Goto(bb25)
    }
    bb29 = {
    _18.1.0 = '\u{5ef91}';
    (*_11) = _3 < _22;
    RET = !(*_11);
    _21 = _15 * _15;
    (*_11) = RET;
    _28 = _15 * _15;
    (*_11) = _21 <= _15;
    (*_11) = !RET;
    (*_11) = RET & RET;
    (*_11) = RET;
    _28 = _21 + _15;
    _27 = _7 >> _20;
    (*_11) = !RET;
    (*_11) = _9 != _9;
    (*_11) = !RET;
    (*_11) = RET;
    (*_11) = _4 < _4;
    (*_11) = RET;
    _2 = !_10;
    (*_11) = _21 < _15;
    _18.1.0 = '\u{32684}';
    _11 = core::ptr::addr_of_mut!((*_11));
    _18.1.0 = '\u{1af20}';
    (*_11) = _28 == _28;
    (*_11) = !RET;
    (*_11) = _9 < _9;
    (*_11) = !RET;
    RET = !(*_11);
    _22 = _3;
    _24 = Adt35::Variant0 { fld0: _20,fld1: _27 };
    _4 = _12 << _7;
    match _5 {
    0 => bb11,
    848 => bb16,
    _ => bb15
    }
    }
    bb30 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb31 = {
    Return()
    }
    bb32 = {
    _20 = 3_usize ^ 3_usize;
    _8 = 27360241576738725235189605541791351610_u128 | 46992371692077702392144847087411080475_u128;
    (*_11) = _4 >= _4;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = !RET;
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_11) = RET;
    _8 = !127201607503352651491287579707401017906_u128;
    _14 = _3;
    _12 = _4 ^ _4;
    (*_11) = _15 == _15;
    match _3 {
    0 => bb1,
    1 => bb9,
    2 => bb10,
    3 => bb11,
    4 => bb12,
    340282366920938463463374607431768211411 => bb14,
    _ => bb13
    }
    }
    bb33 = {
    _18.1 = ('\u{777e8}',);
    _49 = _40 | _40;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = (-127575548114627738115655828377432636360_i128);
    _2 = Field::<i128>(Variant((*_30), 2), 1) as u64;
    (*_11) = Field::<f64>(Variant((*_30), 2), 0) != Field::<f64>(Variant((*_30), 2), 0);
    place!(Field::<i128>(Variant((*_30), 2), 1)) = 104480638323958842271489035052067696681_i128;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_15;
    _14 = _49 >> Field::<i128>(Variant((*_30), 2), 1);
    (*_11) = !RET;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _9 as f64;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = 877941232_u32 as f64;
    (*_11) = !RET;
    _7 = _18.1.0 as i64;
    _17 = _49 - _14;
    Call(_20 = core::intrinsics::transmute(_17), ReturnTo(bb34), UnwindUnreachable())
    }
    bb34 = {
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 + _15;
    (*_11) = RET;
    _49 = _14 | _14;
    _49 = _20 as isize;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = Field::<f64>(Variant((*_30), 2), 0) >= Field::<f64>(Variant((*_30), 2), 0);
    _50.0 = -_5;
    _1 = RET;
    _50.0 = !_5;
    _40 = _49;
    (*_11) = RET ^ RET;
    _20 = Field::<usize>(Variant(_24, 0), 0) & Field::<usize>(Variant(_24, 0), 0);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15;
    match Field::<i128>(Variant((*_30), 2), 1) {
    0 => bb20,
    104480638323958842271489035052067696681 => bb35,
    _ => bb2
    }
    }
    bb35 = {
    _29 = Adt29::Variant0 { fld0: 1395947540_u32,fld1: Field::<i128>(Variant((*_30), 2), 1),fld2: _36,fld3: _12,fld4: _6,fld5: (-887522499_i32) };
    (*_30) = Adt45::Variant2 { fld0: _15,fld1: Field::<i128>(Variant(_29, 0), 1) };
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_28;
    Goto(bb36)
    }
    bb36 = {
    _50.2 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_29, 0), 5)));
    place!(Field::<i32>(Variant(_29, 0), 5)) = !1247027088_i32;
    (*_30) = Adt45::Variant2 { fld0: _15,fld1: Field::<i128>(Variant(_29, 0), 1) };
    _50.2 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_29, 0), 5)));
    _27 = _7 & Field::<i64>(Variant(_24, 0), 1);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _28;
    _26 = _18.1.0 as u8;
    (*_30) = Adt45::Variant2 { fld0: _28,fld1: Field::<i128>(Variant(_29, 0), 1) };
    _19 = [_6,_6,_6,_6,Field::<u16>(Variant(_29, 0), 4),_6,Field::<u16>(Variant(_29, 0), 4),Field::<u16>(Variant(_29, 0), 4)];
    RET = (*_11);
    (*_30) = Adt45::Variant2 { fld0: _15,fld1: Field::<i128>(Variant(_29, 0), 1) };
    _50.3 = Move((*_30));
    _53 = -Field::<i128>(Variant(_50.3, 2), 1);
    (*_30) = Move(_50.3);
    _10 = _2 << Field::<i128>(Variant((*_30), 2), 1);
    _55 = Field::<i128>(Variant((*_30), 2), 1) as i32;
    _46 = &mut _26;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _20 as f64;
    (*_11) = _49 != _40;
    (*_46) = !_36;
    _21 = Field::<f64>(Variant((*_30), 2), 0) * Field::<f64>(Variant((*_30), 2), 0);
    (*_11) = RET;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_21;
    (*_30) = Adt45::Variant2 { fld0: _28,fld1: Field::<i128>(Variant(_29, 0), 1) };
    place!(Field::<i128>(Variant(_37.1, 2), 1)) = -Field::<i128>(Variant(_29, 0), 1);
    _41 = _40 + _40;
    _8 = 296469525388662750378085279998237642528_u128;
    _37.1 = Adt45::Variant2 { fld0: _15,fld1: _53 };
    match _5 {
    0 => bb19,
    1 => bb37,
    2 => bb38,
    3 => bb39,
    848 => bb41,
    _ => bb40
    }
    }
    bb37 = {
    Return()
    }
    bb38 = {
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 + _15;
    (*_11) = RET;
    _49 = _14 | _14;
    _49 = _20 as isize;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = Field::<f64>(Variant((*_30), 2), 0) >= Field::<f64>(Variant((*_30), 2), 0);
    _50.0 = -_5;
    _1 = RET;
    _50.0 = !_5;
    _40 = _49;
    (*_11) = RET ^ RET;
    _20 = Field::<usize>(Variant(_24, 0), 0) & Field::<usize>(Variant(_24, 0), 0);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15;
    match Field::<i128>(Variant((*_30), 2), 1) {
    0 => bb20,
    104480638323958842271489035052067696681 => bb35,
    _ => bb2
    }
    }
    bb39 = {
    (*_11) = RET;
    _18.1.0 = '\u{31640}';
    (*_11) = !RET;
    (*_11) = _4 == _12;
    (*_11) = RET & RET;
    (*_11) = _8 == _8;
    _32.0 = -Field::<i64>(Variant(_24, 0), 1);
    _27 = Field::<i64>(Variant(_24, 0), 1) ^ _32.0;
    (*_11) = RET ^ RET;
    _36 = !_26;
    match _14 {
    0 => bb1,
    1 => bb12,
    2 => bb6,
    3 => bb4,
    4 => bb16,
    340282366920938463463374607431768211411 => bb19,
    _ => bb18
    }
    }
    bb40 = {
    Return()
    }
    bb41 = {
    _49 = _14;
    _53 = !Field::<i128>(Variant((*_30), 2), 1);
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21 * _15;
    _60 = _18.1.0;
    _22 = -_49;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _32.0 as i128;
    (*_46) = Field::<f64>(Variant((*_30), 2), 0) as u8;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15;
    _60 = _18.1.0;
    _32.0 = _27 >> (*_46);
    _46 = &mut place!(Field::<u8>(Variant(_29, 0), 2));
    _50.2 = core::ptr::addr_of_mut!(_55);
    (*_46) = _6 as u8;
    _59 = !_14;
    _9 = (*_46);
    _55 = (-1345022074_i32) ^ (-875873493_i32);
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53 >> _41;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21 * _28;
    (*_11) = Field::<f64>(Variant((*_30), 2), 0) <= Field::<f64>(Variant(_37.1, 2), 0);
    _14 = _41 << Field::<i128>(Variant(_37.1, 2), 1);
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _15;
    _35 = _12 & _12;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 + _21;
    (*_46) = _36 ^ _9;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _28;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53;
    (*_11) = RET & RET;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = -_53;
    _17 = -_14;
    match _5 {
    0 => bb1,
    1 => bb14,
    2 => bb17,
    3 => bb15,
    4 => bb11,
    5 => bb6,
    6 => bb42,
    848 => bb44,
    _ => bb43
    }
    }
    bb42 = {
    _20 = 3_usize ^ 3_usize;
    _8 = 27360241576738725235189605541791351610_u128 | 46992371692077702392144847087411080475_u128;
    (*_11) = _4 >= _4;
    _11 = core::ptr::addr_of_mut!((*_11));
    (*_11) = !RET;
    _18.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_11) = RET;
    _8 = !127201607503352651491287579707401017906_u128;
    _14 = _3;
    _12 = _4 ^ _4;
    (*_11) = _15 == _15;
    match _3 {
    0 => bb1,
    1 => bb9,
    2 => bb10,
    3 => bb11,
    4 => bb12,
    340282366920938463463374607431768211411 => bb14,
    _ => bb13
    }
    }
    bb43 = {
    Return()
    }
    bb44 = {
    _17 = _22 - _14;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53;
    _51 = _14 | _14;
    _6 = (*_46) as u16;
    place!(Field::<i128>(Variant(_37.1, 2), 1)) = !_53;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53 >> _14;
    _9 = (*_46) << _32.0;
    _51 = _55 as isize;
    _27 = _32.0;
    place!(Field::<f64>(Variant(_37.1, 2), 0)) = _15;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = -_53;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = !_53;
    (*_30) = Adt45::Variant2 { fld0: _21,fld1: _53 };
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21 + _15;
    _57 = _50.0 + _5;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_28;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = !_53;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53 & _53;
    RET = (*_46) != (*_46);
    (*_11) = _17 == _41;
    (*_46) = _9;
    _35 = _10 as i8;
    Goto(bb45)
    }
    bb45 = {
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _15;
    match _5 {
    848 => bb47,
    _ => bb46
    }
    }
    bb46 = {
    _29 = Adt29::Variant0 { fld0: 1395947540_u32,fld1: Field::<i128>(Variant((*_30), 2), 1),fld2: _36,fld3: _12,fld4: _6,fld5: (-887522499_i32) };
    (*_30) = Adt45::Variant2 { fld0: _15,fld1: Field::<i128>(Variant(_29, 0), 1) };
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_28;
    Goto(bb36)
    }
    bb47 = {
    (*_11) = RET;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _15;
    (*_46) = _9 ^ _9;
    _4 = _12;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = -_53;
    (*_11) = RET;
    (*_46) = _9 << _9;
    (*_11) = RET;
    _58.0 = _8 / _8;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _41 as f64;
    Goto(bb48)
    }
    bb48 = {
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _15 * _15;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _55 as f64;
    (*_11) = RET & RET;
    match _8 {
    0 => bb49,
    1 => bb50,
    2 => bb51,
    3 => bb52,
    4 => bb53,
    5 => bb54,
    296469525388662750378085279998237642528 => bb56,
    _ => bb55
    }
    }
    bb49 = {
    Return()
    }
    bb50 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb51 = {
    _5 = !(-933_i16);
    _8 = 319540465587718625497838955568094584265_u128 - 336951478250333593838565189122960691776_u128;
    _5 = 848_i16;
    _22 = (-95688182597662994353188213486239864889_i128) as isize;
    _4 = !_12;
    match _5 {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    848 => bb7,
    _ => bb6
    }
    }
    bb52 = {
    _17 = _22 - _14;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53;
    _51 = _14 | _14;
    _6 = (*_46) as u16;
    place!(Field::<i128>(Variant(_37.1, 2), 1)) = !_53;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53 >> _14;
    _9 = (*_46) << _32.0;
    _51 = _55 as isize;
    _27 = _32.0;
    place!(Field::<f64>(Variant(_37.1, 2), 0)) = _15;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = -_53;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = !_53;
    (*_30) = Adt45::Variant2 { fld0: _21,fld1: _53 };
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21 + _15;
    _57 = _50.0 + _5;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = -_28;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = !_53;
    place!(Field::<i128>(Variant((*_30), 2), 1)) = _53 & _53;
    RET = (*_46) != (*_46);
    (*_11) = _17 == _41;
    (*_46) = _9;
    _35 = _10 as i8;
    Goto(bb45)
    }
    bb53 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb54 = {
    Return()
    }
    bb55 = {
    _10 = !_2;
    (*_11) = !false;
    (*_11) = true;
    _10 = !_2;
    (*_11) = true | true;
    _7 = 212105271298182059_i64;
    _9 = 239_u8 + 232_u8;
    _12 = !_4;
    (*_11) = false;
    (*_11) = !false;
    _9 = 24_u8 - 242_u8;
    (*_11) = _2 == _10;
    (*_11) = _4 <= _4;
    _17 = -_3;
    _12 = _4 & _4;
    _12 = !_4;
    _15 = _2 as f64;
    RET = true;
    Call(_14 = fn1(Move(_11), _6), ReturnTo(bb2), UnwindUnreachable())
    }
    bb56 = {
    _35 = -_12;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _28 - _15;
    _34 = _41;
    _41 = _55 as isize;
    place!(Field::<f64>(Variant((*_30), 2), 0)) = _21 * _21;
    _59 = _14 ^ _22;
    _18.0 = [_58.0,_58.0,_58.0,_58.0,_58.0,_8,_58.0,_8];
    Goto(bb57)
    }
    bb57 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: *mut bool, mut _2: u16) -> isize {
    mir! {
    type RET = isize;
    let _3: f64;
    let _4: f32;
    let _5: *const Adt32;
    let _6: f32;
    let _7: [usize; 6];
    let _8: (char,);
    let _9: [i16; 2];
    let _10: isize;
    let _11: isize;
    let _12: [i32; 7];
    let _13: (u128,);
    let _14: *mut i32;
    let _15: (i32,);
    let _16: u32;
    let _17: &'static [isize; 3];
    let _18: *const &'static mut (i32,);
    let _19: *const &'static [isize; 3];
    let _20: bool;
    let _21: u8;
    let _22: (char,);
    let _23: char;
    let _24: char;
    let _25: i32;
    let _26: bool;
    let _27: [u64; 8];
    let _28: &'static Adt35;
    let _29: u32;
    let _30: &'static (f32, &'static mut (i32,));
    let _31: Adt32;
    let _32: f32;
    let _33: usize;
    let _34: isize;
    let _35: f32;
    let _36: u64;
    let _37: [u64; 7];
    let _38: *mut bool;
    let _39: bool;
    let _40: f64;
    let _41: *const [i8; 6];
    let _42: [u16; 1];
    let _43: isize;
    let _44: bool;
    let _45: *mut Adt45;
    let _46: [usize; 6];
    let _47: *const [i8; 6];
    let _48: u64;
    let _49: &'static Adt35;
    let _50: &'static &'static mut [isize; 3];
    let _51: Adt35;
    let _52: *const i128;
    let _53: isize;
    let _54: &'static [isize; 3];
    let _55: (f32, &'static mut (i32,));
    let _56: *mut *mut &'static (u128,);
    let _57: f64;
    let _58: &'static mut f64;
    let _59: Adt45;
    let _60: bool;
    let _61: &'static *mut i16;
    let _62: char;
    let _63: usize;
    let _64: f32;
    let _65: i32;
    let _66: u16;
    let _67: *mut i32;
    let _68: i64;
    let _69: [u128; 2];
    let _70: isize;
    let _71: &'static Adt35;
    let _72: char;
    let _73: [i8; 6];
    let _74: isize;
    let _75: char;
    let _76: &'static u64;
    let _77: *const &'static mut (i32,);
    let _78: char;
    let _79: [isize; 3];
    let _80: [u128; 2];
    let _81: bool;
    let _82: *const i16;
    let _83: &'static *mut i16;
    let _84: i64;
    let _85: *mut bool;
    let _86: (u128,);
    let _87: [u16; 8];
    let _88: f64;
    let _89: u32;
    let _90: [u8; 1];
    let _91: *mut bool;
    let _92: char;
    let _93: f64;
    let _94: [u16; 1];
    let _95: f32;
    let _96: Adt29;
    let _97: f64;
    let _98: [u64; 7];
    let _99: i64;
    let _100: f32;
    let _101: i8;
    let _102: [usize; 6];
    let _103: &'static mut (i32,);
    let _104: char;
    let _105: &'static mut f64;
    let _106: f64;
    let _107: char;
    let _108: *const [i8; 6];
    let _109: isize;
    let _110: (u16, Adt27, [isize; 3], Adt35);
    let _111: ();
    let _112: ();
    {
    RET = 44_isize | 9223372036854775807_isize;
    _2 = 33377_u16 - 28142_u16;
    RET = 79_isize;
    RET = 277044241968357232744954196416148220370_u128 as isize;
    RET = 28791_i16 as isize;
    _2 = !49425_u16;
    Call(_2 = fn2(Move(_1), RET, RET, RET, RET, RET, RET, RET), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    RET = (-9223372036854775808_isize);
    RET = (-9223372036854775808_isize) & 13_isize;
    _3 = 5929149935482410141_i64 as f64;
    _3 = RET as f64;
    RET = -9223372036854775807_isize;
    _2 = _3 as u16;
    _3 = (-7_i8) as f64;
    _2 = 14646_u16;
    RET = 219024759409217098730513846211863490366_u128 as isize;
    _3 = 177545395909879598_usize as f64;
    _3 = 8219781214994161430_usize as f64;
    _3 = _2 as f64;
    _3 = 190885044039886496263641404331733330495_u128 as f64;
    RET = 5382942086297752414_i64 as isize;
    _3 = (-12977_i16) as f64;
    _2 = 16763_u16;
    _2 = 0_usize as u16;
    _2 = 23697_u16 & 36444_u16;
    RET = !(-9223372036854775808_isize);
    RET = -(-9223372036854775808_isize);
    _2 = 4255587536526023999_u64 as u16;
    _3 = 5769409708362831728_i64 as f64;
    _3 = 9135_i16 as f64;
    _4 = 295285161674593051826439609087185003397_u128 as f32;
    Goto(bb2)
    }
    bb2 = {
    _3 = 217_u8 as f64;
    _4 = 5824658027362313945_u64 as f32;
    _6 = 112_u8 as f32;
    Goto(bb3)
    }
    bb3 = {
    _6 = _4;
    _2 = 26912_u16;
    _7 = [13953581843520880695_usize,15027244788580573288_usize,13445813196529228257_usize,4_usize,6932887174693258199_usize,3_usize];
    _4 = 39_i8 as f32;
    _3 = _6 as f64;
    _2 = 1274443718_i32 as u16;
    _7 = [16502291346647583319_usize,1_usize,13926153773650313_usize,4_usize,3_usize,2_usize];
    RET = 9223372036854775807_isize >> _2;
    _2 = 7307_u16;
    _4 = -_6;
    _8.0 = '\u{aeb23}';
    _8.0 = '\u{c82ac}';
    _6 = 44_i8 as f32;
    _3 = RET as f64;
    RET = 8637482506300903381_u64 as isize;
    _4 = _2 as f32;
    _7 = [18116748375932136771_usize,17852997385616215018_usize,17075868071606934271_usize,6_usize,2199782508176786547_usize,0_usize];
    _8.0 = '\u{50f2f}';
    _2 = 58111_u16;
    match _2 {
    58111 => bb4,
    _ => bb2
    }
    }
    bb4 = {
    _3 = 916946880530942681_i64 as f64;
    _7 = [8958714436163416079_usize,3_usize,5628954271431260929_usize,2_usize,3_usize,7429576693750047519_usize];
    _10 = _2 as isize;
    _8 = ('\u{665b3}',);
    _4 = _6;
    _6 = 238937981_i32 as f32;
    _9 = [(-30263_i16),12587_i16];
    _8 = ('\u{650f1}',);
    _3 = 55_u8 as f64;
    _8.0 = '\u{8d52b}';
    _6 = _4 * _4;
    _8.0 = '\u{9b9b6}';
    RET = 137_u8 as isize;
    _3 = _2 as f64;
    _3 = 101_i8 as f64;
    _12 = [(-915950671_i32),(-178097303_i32),(-2075209519_i32),(-1756137736_i32),(-1692891874_i32),57573492_i32,563908635_i32];
    _6 = 39211415613351739526538242886920204326_i128 as f32;
    _9 = [(-9173_i16),(-14645_i16)];
    _9 = [(-23067_i16),26748_i16];
    _11 = 98224911461535353397366895865562485408_u128 as isize;
    _4 = (-105_i8) as f32;
    match _2 {
    0 => bb5,
    1 => bb6,
    2 => bb7,
    58111 => bb9,
    _ => bb8
    }
    }
    bb5 = {
    _6 = _4;
    _2 = 26912_u16;
    _7 = [13953581843520880695_usize,15027244788580573288_usize,13445813196529228257_usize,4_usize,6932887174693258199_usize,3_usize];
    _4 = 39_i8 as f32;
    _3 = _6 as f64;
    _2 = 1274443718_i32 as u16;
    _7 = [16502291346647583319_usize,1_usize,13926153773650313_usize,4_usize,3_usize,2_usize];
    RET = 9223372036854775807_isize >> _2;
    _2 = 7307_u16;
    _4 = -_6;
    _8.0 = '\u{aeb23}';
    _8.0 = '\u{c82ac}';
    _6 = 44_i8 as f32;
    _3 = RET as f64;
    RET = 8637482506300903381_u64 as isize;
    _4 = _2 as f32;
    _7 = [18116748375932136771_usize,17852997385616215018_usize,17075868071606934271_usize,6_usize,2199782508176786547_usize,0_usize];
    _8.0 = '\u{50f2f}';
    _2 = 58111_u16;
    match _2 {
    58111 => bb4,
    _ => bb2
    }
    }
    bb6 = {
    _3 = 217_u8 as f64;
    _4 = 5824658027362313945_u64 as f32;
    _6 = 112_u8 as f32;
    Goto(bb3)
    }
    bb7 = {
    RET = (-9223372036854775808_isize);
    RET = (-9223372036854775808_isize) & 13_isize;
    _3 = 5929149935482410141_i64 as f64;
    _3 = RET as f64;
    RET = -9223372036854775807_isize;
    _2 = _3 as u16;
    _3 = (-7_i8) as f64;
    _2 = 14646_u16;
    RET = 219024759409217098730513846211863490366_u128 as isize;
    _3 = 177545395909879598_usize as f64;
    _3 = 8219781214994161430_usize as f64;
    _3 = _2 as f64;
    _3 = 190885044039886496263641404331733330495_u128 as f64;
    RET = 5382942086297752414_i64 as isize;
    _3 = (-12977_i16) as f64;
    _2 = 16763_u16;
    _2 = 0_usize as u16;
    _2 = 23697_u16 & 36444_u16;
    RET = !(-9223372036854775808_isize);
    RET = -(-9223372036854775808_isize);
    _2 = 4255587536526023999_u64 as u16;
    _3 = 5769409708362831728_i64 as f64;
    _3 = 9135_i16 as f64;
    _4 = 295285161674593051826439609087185003397_u128 as f32;
    Goto(bb2)
    }
    bb8 = {
    Return()
    }
    bb9 = {
    _4 = _6 * _6;
    _8 = ('\u{583d7}',);
    _9 = [3840_i16,7880_i16];
    _9 = [14816_i16,(-25461_i16)];
    _2 = 39666_u16 ^ 43975_u16;
    RET = !_11;
    _12 = [665365655_i32,2081132001_i32,1418578554_i32,(-1919987117_i32),(-1011902954_i32),(-1125265349_i32),483453994_i32];
    _2 = 8699_u16 >> RET;
    _8.0 = '\u{b516}';
    _3 = 11614728215414056811_u64 as f64;
    Goto(bb10)
    }
    bb10 = {
    _7 = [2687985092254182755_usize,3_usize,7201045558227039048_usize,17883480254328891733_usize,5_usize,5_usize];
    _3 = 33993036146836056284981023985094340167_u128 as f64;
    _12 = [(-842354380_i32),1451263541_i32,33410613_i32,1635327312_i32,451488347_i32,199851743_i32,1178694934_i32];
    _13 = (183241005333410438925588069449929247808_u128,);
    _7 = [4_usize,1241455714963912130_usize,18165016375334812912_usize,12498795633622216718_usize,10322845093298109352_usize,1_usize];
    _2 = 11729_u16 | 59699_u16;
    _8.0 = '\u{942eb}';
    _12 = [933858818_i32,980718512_i32,634839568_i32,(-862139156_i32),(-1862019086_i32),754459342_i32,1948382753_i32];
    _6 = -_4;
    _4 = RET as f32;
    _15 = (846268668_i32,);
    RET = _13.0 as isize;
    _9 = [20818_i16,(-6269_i16)];
    _14 = core::ptr::addr_of_mut!(_15.0);
    _13 = (119127638440821720990075241697190634685_u128,);
    (*_14) = (-260118783_i32) | 1934651573_i32;
    (*_14) = (-1347635989_i32) * (-1855471285_i32);
    (*_14) = 677545370_i32 | (-2129668591_i32);
    (*_14) = -800554382_i32;
    _8.0 = '\u{ff9a7}';
    _7 = [6_usize,13621948973846409508_usize,7_usize,14123455789289196976_usize,16937183611755456182_usize,0_usize];
    _6 = -_4;
    (*_14) = _13.0 as i32;
    (*_14) = _2 as i32;
    _7 = [6174722368065620189_usize,2_usize,2_usize,4_usize,2_usize,4885143223157217977_usize];
    Goto(bb11)
    }
    bb11 = {
    (*_14) = !(-1099756529_i32);
    (*_14) = 1391694521_i32 ^ (-1102638622_i32);
    (*_14) = (-146095018_i32);
    _11 = RET * RET;
    _9 = [25879_i16,(-24765_i16)];
    _14 = core::ptr::addr_of_mut!((*_14));
    (*_14) = (-1557304655_i32) * (-505970270_i32);
    (*_14) = _6 as i32;
    _9 = [(-675_i16),(-15075_i16)];
    (*_14) = -(-1009126642_i32);
    _22.0 = _8.0;
    Goto(bb12)
    }
    bb12 = {
    _6 = _4 * _4;
    _8 = (_22.0,);
    _1 = core::ptr::addr_of_mut!(_20);
    (*_1) = !false;
    _15.0 = 498965935_i32 - (-1607678545_i32);
    (*_14) = 1602781531_i32;
    (*_1) = (*_14) >= (*_14);
    (*_14) = (-2110018026_i32) << RET;
    _13.0 = _3 as u128;
    (*_14) = 131798584393953590994184351052974011354_i128 as i32;
    _23 = _22.0;
    (*_14) = (-1174584332_i32);
    _13.0 = !258458412584126691553957051459184563054_u128;
    _24 = _22.0;
    _16 = 2583151634_u32 + 2908451181_u32;
    _15.0 = (-87731215_i32) >> _11;
    _24 = _23;
    (*_1) = !true;
    (*_14) = (-1971709143_i32) + (-1165587804_i32);
    (*_14) = !(-1558027493_i32);
    (*_1) = _13.0 > _13.0;
    (*_1) = true;
    (*_14) = -(-1641915678_i32);
    (*_14) = (-2032773903_i32) + (-863922320_i32);
    Goto(bb13)
    }
    bb13 = {
    (*_14) = 6_usize as i32;
    _11 = _10;
    (*_1) = _6 != _6;
    (*_14) = (-1046773877_i32);
    (*_14) = (*_1) as i32;
    (*_14) = (-1219524680_i32) + (-1175496300_i32);
    _15.0 = _13.0 as i32;
    (*_14) = _16 as i32;
    (*_14) = (-7923793_i32);
    _2 = 11898_u16 * 57181_u16;
    (*_14) = _2 as i32;
    _27 = [4919619642341140000_u64,10285227447358544960_u64,7621930444105490038_u64,9490101093949245195_u64,1821629377100950805_u64,3725109936573855532_u64,15886477650363968395_u64,15221434378444820471_u64];
    (*_1) = true & false;
    (*_14) = _16 as i32;
    _6 = _4 + _4;
    _6 = _4 - _4;
    (*_14) = 612913773_i32;
    (*_14) = _2 as i32;
    _27 = [10659133331034290065_u64,9515311766194365588_u64,15507464573692396121_u64,13305316862695738266_u64,11070811877188058878_u64,5551825170134068804_u64,17581648362240396010_u64,4025166314757654028_u64];
    _4 = _6 + _6;
    Call((*_14) = core::intrinsics::bswap((-1646758104_i32)), ReturnTo(bb14), UnwindUnreachable())
    }
    bb14 = {
    (*_14) = _3 as i32;
    (*_1) = true ^ true;
    (*_1) = _11 >= _10;
    _2 = !35459_u16;
    _8 = (_24,);
    (*_1) = true & false;
    _16 = 2692414_u32 << (*_14);
    _9 = [23721_i16,17256_i16];
    (*_14) = (-1971365262_i32);
    _6 = -_4;
    _3 = 2100312655415652979_i64 as f64;
    (*_1) = _6 > _6;
    match (*_14) {
    340282366920938463463374607429796846194 => bb16,
    _ => bb15
    }
    }
    bb15 = {
    _3 = 916946880530942681_i64 as f64;
    _7 = [8958714436163416079_usize,3_usize,5628954271431260929_usize,2_usize,3_usize,7429576693750047519_usize];
    _10 = _2 as isize;
    _8 = ('\u{665b3}',);
    _4 = _6;
    _6 = 238937981_i32 as f32;
    _9 = [(-30263_i16),12587_i16];
    _8 = ('\u{650f1}',);
    _3 = 55_u8 as f64;
    _8.0 = '\u{8d52b}';
    _6 = _4 * _4;
    _8.0 = '\u{9b9b6}';
    RET = 137_u8 as isize;
    _3 = _2 as f64;
    _3 = 101_i8 as f64;
    _12 = [(-915950671_i32),(-178097303_i32),(-2075209519_i32),(-1756137736_i32),(-1692891874_i32),57573492_i32,563908635_i32];
    _6 = 39211415613351739526538242886920204326_i128 as f32;
    _9 = [(-9173_i16),(-14645_i16)];
    _9 = [(-23067_i16),26748_i16];
    _11 = 98224911461535353397366895865562485408_u128 as isize;
    _4 = (-105_i8) as f32;
    match _2 {
    0 => bb5,
    1 => bb6,
    2 => bb7,
    58111 => bb9,
    _ => bb8
    }
    }
    bb16 = {
    _16 = 1131320266_u32 - 3120639169_u32;
    _12 = [(*_14),_15.0,(*_14),(*_14),(*_14),(*_14),(*_14)];
    _21 = _11 as u8;
    _2 = 6259_u16 << (*_14);
    (*_14) = (-155635387_i32) | (-718875198_i32);
    (*_1) = (*_14) < (*_14);
    (*_1) = false | false;
    _31 = Adt32::Variant2 { fld0: (*_1),fld1: _16,fld2: _21,fld3: _2,fld4: _22 };
    _23 = _8.0;
    (*_1) = Field::<bool>(Variant(_31, 2), 0) & Field::<bool>(Variant(_31, 2), 0);
    _32 = -_4;
    (*_14) = 3622746998521157816_i64 as i32;
    (*_1) = Field::<bool>(Variant(_31, 2), 0);
    _35 = _32 * _32;
    (*_1) = Field::<bool>(Variant(_31, 2), 0) & Field::<bool>(Variant(_31, 2), 0);
    _2 = !Field::<u16>(Variant(_31, 2), 3);
    (*_14) = (-32046_i16) as i32;
    _40 = _3 + _3;
    Goto(bb17)
    }
    bb17 = {
    place!(Field::<u8>(Variant(_31, 2), 2)) = !_21;
    RET = _10;
    (*_1) = Field::<bool>(Variant(_31, 2), 0) ^ Field::<bool>(Variant(_31, 2), 0);
    (*_1) = Field::<bool>(Variant(_31, 2), 0);
    (*_1) = (*_14) > (*_14);
    _34 = _11;
    _5 = core::ptr::addr_of!(_31);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = !(*_1);
    place!(Field::<u32>(Variant((*_5), 2), 1)) = !_16;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = !_16;
    place!(Field::<bool>(Variant((*_5), 2), 0)) = Field::<u32>(Variant((*_5), 2), 1) == Field::<u32>(Variant((*_5), 2), 1);
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _16,fld2: _21,fld3: _2,fld4: _8 };
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _35 as u8;
    _11 = -RET;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = (-73706342683236983152936582075954816136_i128) as u8;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 + _16;
    Goto(bb18)
    }
    bb18 = {
    _32 = _4 - _6;
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1);
    _9 = [15258_i16,(-17128_i16)];
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _21 | _21;
    _13.0 = !161652880682040385152013951454139363051_u128;
    place!(Field::<bool>(Variant((*_5), 2), 0)) = Field::<u32>(Variant(_31, 2), 1) != Field::<u32>(Variant((*_5), 2), 1);
    Goto(bb19)
    }
    bb19 = {
    _6 = _32 * _4;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) | (*_1);
    place!(Field::<u32>(Variant((*_5), 2), 1)) = !_16;
    _7 = [1_usize,1078281298168455593_usize,15880121815564139735_usize,5_usize,8968541679452804065_usize,3424091453488625955_usize];
    (*_14) = (-1668571538_i32);
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _21 | _21;
    _44 = (*_1);
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _16,fld2: _21,fld3: _2,fld4: _8 };
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 - _16;
    _12 = [(*_14),(*_14),(*_14),(*_14),(*_14),(*_14),(*_14)];
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 | _16;
    place!(Field::<u16>(Variant((*_5), 2), 3)) = Field::<u8>(Variant((*_5), 2), 2) as u16;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    (*_14) = !(-952282848_i32);
    place!(Field::<u32>(Variant(_31, 2), 1)) = 17778260798925359947_u64 as u32;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0) > _44;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = !_21;
    Goto(bb20)
    }
    bb20 = {
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2 * _2;
    Goto(bb21)
    }
    bb21 = {
    _46 = _7;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _8.0;
    (*_14) = 1485389533_i32 + (-614286170_i32);
    (*_1) = Field::<u8>(Variant((*_5), 2), 2) == Field::<u8>(Variant((*_5), 2), 2);
    _15.0 = (-1553924415_i32) | 956389715_i32;
    (*_14) = (-1516764849_i32) & (-1072484853_i32);
    place!(Field::<u8>(Variant((*_5), 2), 2)) = !_21;
    (*_1) = _35 <= _35;
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _16,fld2: _21,fld3: _2,fld4: _8 };
    place!(Field::<u32>(Variant((*_5), 2), 1)) = !_16;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = (*_14) as u8;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 << Field::<u8>(Variant((*_5), 2), 2);
    (*_1) = Field::<u32>(Variant((*_5), 2), 1) == Field::<u32>(Variant((*_5), 2), 1);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_8.0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _24;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_23,);
    (*_5) = Adt32::Variant0 { fld0: 758630069329662844_i64,fld1: 15478712573906997752_usize,fld2: _16,fld3: _13,fld4: _21,fld5: (*_14) };
    place!(Field::<usize>(Variant((*_5), 0), 1)) = 120_i8 as usize;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-102813759191674309343458059976779608697_i128) as i64;
    Call(place!(Field::<usize>(Variant((*_5), 0), 1)) = core::intrinsics::transmute(RET), ReturnTo(bb22), UnwindUnreachable())
    }
    bb22 = {
    _20 = _44;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 | _21;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _16 ^ _16;
    (*_1) = !_44;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) | (*_14);
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-3205365570517946765_i64) >> Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) - (*_14);
    place!(Field::<i64>(Variant((*_5), 0), 0)) = -(-96019170030696897_i64);
    place!(Field::<usize>(Variant((*_5), 0), 1)) = 13077101425120789998_usize ^ 1775840404933958173_usize;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 ^ _21;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_1) as i32;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = Field::<i32>(Variant((*_5), 0), 5) as u32;
    _13.0 = Field::<u8>(Variant((*_5), 0), 4) as u128;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-1885460888193560728_i64) + (-4944097012580283174_i64);
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 + _21;
    _26 = (*_1) & (*_1);
    (*_5) = Adt32::Variant0 { fld0: 1131715003243005049_i64,fld1: 2_usize,fld2: _16,fld3: _13,fld4: _21,fld5: (*_14) };
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) & (*_14);
    (*_1) = _26;
    Goto(bb23)
    }
    bb23 = {
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _16;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = !_21;
    place!(Field::<usize>(Variant((*_5), 0), 1)) = 4_usize | 3_usize;
    _29 = Field::<u32>(Variant((*_5), 0), 2) >> Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _16 & _29;
    place!(Field::<usize>(Variant((*_5), 0), 1)) = 11989925379854044660_usize;
    place!(Field::<i32>(Variant(_31, 0), 5)) = (*_14);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_13.0,);
    place!(Field::<i64>(Variant((*_5), 0), 0)) = 1052033048369880154_i64;
    _25 = Field::<u32>(Variant((*_5), 0), 2) as i32;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = !_21;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    _46 = [Field::<usize>(Variant((*_5), 0), 1),Field::<usize>(Variant((*_5), 0), 1),Field::<usize>(Variant((*_5), 0), 1),Field::<usize>(Variant((*_5), 0), 1),Field::<usize>(Variant((*_5), 0), 1),Field::<usize>(Variant((*_5), 0), 1)];
    match Field::<i64>(Variant((*_5), 0), 0) {
    0 => bb7,
    1052033048369880154 => bb25,
    _ => bb24
    }
    }
    bb24 = {
    _3 = 217_u8 as f64;
    _4 = 5824658027362313945_u64 as f32;
    _6 = 112_u8 as f32;
    Goto(bb3)
    }
    bb25 = {
    place!(Field::<usize>(Variant((*_5), 0), 1)) = Field::<i64>(Variant((*_5), 0), 0) as usize;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-5156430289586098768_i64);
    place!(Field::<i64>(Variant((*_5), 0), 0)) = 2718756920797919607_i64 + 4550832823786364058_i64;
    place!(Field::<(u128,)>(Variant(_31, 0), 3)) = (_13.0,);
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _2,fld2: _35,fld3: 120_i8,fld4: _29,fld5: (*_14),fld6: 15742587543797195438_usize };
    place!(Field::<usize>(Variant((*_5), 3), 6)) = !10981551828133172696_usize;
    place!(Field::<u32>(Variant((*_5), 3), 4)) = !_29;
    place!(Field::<i8>(Variant((*_5), 3), 3)) = (-34_i8);
    (*_5) = Adt32::Variant0 { fld0: (-6146545129336218983_i64),fld1: 0_usize,fld2: _16,fld3: _13,fld4: _21,fld5: (*_14) };
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_13.0,);
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _29,fld2: _21,fld3: _2,fld4: _8 };
    _42 = [Field::<u16>(Variant((*_5), 2), 3)];
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_8.0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_23,);
    _25 = (*_14);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2;
    _33 = 7583341008834630632_usize | 6_usize;
    place!(Field::<u16>(Variant((*_5), 2), 3)) = Field::<(char,)>(Variant((*_5), 2), 4).0 as u16;
    _2 = Field::<u16>(Variant((*_5), 2), 3);
    _1 = core::ptr::addr_of_mut!(_20);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _24;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    RET = _34 | _11;
    _36 = 3073173731456213052_u64;
    Call((*_14) = core::intrinsics::bswap(_25), ReturnTo(bb26), UnwindUnreachable())
    }
    bb26 = {
    place!(Field::<u8>(Variant((*_5), 2), 2)) = !_21;
    _39 = (*_1);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) != (*_1);
    _14 = core::ptr::addr_of_mut!((*_14));
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_8.0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_24,);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = !_2;
    (*_14) = _25;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _21 << Field::<u32>(Variant((*_5), 2), 1);
    _67 = core::ptr::addr_of_mut!((*_14));
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16;
    (*_14) = -_25;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 << Field::<u8>(Variant((*_5), 2), 2);
    _65 = (*_14) >> Field::<u8>(Variant((*_5), 2), 2);
    _8 = Field::<(char,)>(Variant((*_5), 2), 4);
    _8 = (Field::<(char,)>(Variant((*_5), 2), 4).0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    (*_14) = _65 - _65;
    _55.1 = &mut _15;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = 4205993806874327887_i64 as u8;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0) <= Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2 + _2;
    _63 = 115_i8 as usize;
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _29,fld2: _21,fld3: _2,fld4: _8 };
    _37 = [_36,_36,_36,_36,_36,_36,_36];
    Goto(bb27)
    }
    bb27 = {
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    (*_1) = !Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    Goto(bb28)
    }
    bb28 = {
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) >= (*_1);
    _65 = !_25;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _33 as u8;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    match _36 {
    3073173731456213052 => bb30,
    _ => bb29
    }
    }
    bb29 = {
    _20 = _44;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 | _21;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _16 ^ _16;
    (*_1) = !_44;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) | (*_14);
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-3205365570517946765_i64) >> Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) - (*_14);
    place!(Field::<i64>(Variant((*_5), 0), 0)) = -(-96019170030696897_i64);
    place!(Field::<usize>(Variant((*_5), 0), 1)) = 13077101425120789998_usize ^ 1775840404933958173_usize;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 ^ _21;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_1) as i32;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = Field::<i32>(Variant((*_5), 0), 5) as u32;
    _13.0 = Field::<u8>(Variant((*_5), 0), 4) as u128;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-1885460888193560728_i64) + (-4944097012580283174_i64);
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 + _21;
    _26 = (*_1) & (*_1);
    (*_5) = Adt32::Variant0 { fld0: 1131715003243005049_i64,fld1: 2_usize,fld2: _16,fld3: _13,fld4: _21,fld5: (*_14) };
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (*_14) & (*_14);
    (*_1) = _26;
    Goto(bb23)
    }
    bb30 = {
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _29;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _29 + _16;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0);
    _53 = !RET;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_22.0,);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) <= (*_1);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _23;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = 77202856715491837309719010011168387908_i128 as u8;
    (*_1) = !Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2 << Field::<u32>(Variant((*_5), 2), 1);
    _2 = _25 as u16;
    _55.0 = _32 * _35;
    _66 = Field::<u32>(Variant((*_5), 2), 1) as u16;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = Field::<u16>(Variant((*_5), 2), 3) as u32;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = !_21;
    _64 = -_4;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0) > Field::<bool>(Variant((*_5), 2), 0);
    (*_5) = Adt32::Variant0 { fld0: (-5510417004429210111_i64),fld1: _33,fld2: _29,fld3: _13,fld4: _21,fld5: _25 };
    _45 = core::ptr::addr_of_mut!(_59);
    Goto(bb31)
    }
    bb31 = {
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-23464_i16) as i64;
    (*_1) = !_26;
    _3 = _40;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = (-2300723959868488824_i64) >> Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<u32>(Variant((*_5), 0), 2)) = !_29;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = Field::<u8>(Variant((*_5), 0), 4) as u128;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_13.0,);
    place!(Field::<i32>(Variant((*_5), 0), 5)) = (-105_i8) as i32;
    _22 = _8;
    _44 = (*_1) & (*_1);
    _35 = _2 as f32;
    _51 = Adt35::Variant0 { fld0: Field::<usize>(Variant((*_5), 0), 1),fld1: Field::<i64>(Variant((*_5), 0), 0) };
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0 * _13.0;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = Field::<i64>(Variant(_51, 0), 1);
    _30 = &_55;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0;
    _62 = _8.0;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = -_65;
    _42 = [_2];
    _65 = Field::<i32>(Variant((*_5), 0), 5) << Field::<(u128,)>(Variant((*_5), 0), 3).0;
    place!(Field::<i64>(Variant((*_5), 0), 0)) = Field::<i64>(Variant(_51, 0), 1) ^ Field::<i64>(Variant(_51, 0), 1);
    _69 = [Field::<(u128,)>(Variant((*_5), 0), 3).0,Field::<(u128,)>(Variant((*_5), 0), 3).0];
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _66,fld2: (*_30).0,fld3: 82_i8,fld4: _29,fld5: _65,fld6: _33 };
    Goto(bb32)
    }
    bb32 = {
    place!(Field::<usize>(Variant((*_5), 3), 6)) = Field::<usize>(Variant(_51, 0), 0) | _33;
    place!(Field::<f32>(Variant((*_5), 3), 2)) = (*_30).0 - (*_30).0;
    place!(Field::<i8>(Variant((*_5), 3), 3)) = (-55_i8) - 74_i8;
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _2,fld2: (*_30).0,fld3: 52_i8,fld4: _29,fld5: _65,fld6: Field::<usize>(Variant(_51, 0), 0) };
    place!(Field::<usize>(Variant((*_5), 3), 6)) = Field::<usize>(Variant(_51, 0), 0);
    _28 = &_51;
    _60 = !(*_1);
    _71 = &(*_28);
    Goto(bb33)
    }
    bb33 = {
    _5 = core::ptr::addr_of!((*_5));
    (*_45) = Adt45::Variant2 { fld0: _3,fld1: (-50097890481038959904910391010217453154_i128) };
    place!(Field::<f32>(Variant((*_5), 3), 2)) = (*_30).0 * _55.0;
    place!(Field::<u32>(Variant((*_5), 3), 4)) = _16 ^ _16;
    place!(Field::<u16>(Variant((*_5), 3), 1)) = _66;
    _21 = Field::<u8>(Variant((*_5), 3), 0);
    (*_5) = Adt32::Variant0 { fld0: Field::<i64>(Variant((*_28), 0), 1),fld1: Field::<usize>(Variant((*_71), 0), 0),fld2: _29,fld3: _13,fld4: _21,fld5: _25 };
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21;
    _47 = core::ptr::addr_of!(_73);
    (*_5) = Adt32::Variant0 { fld0: Field::<i64>(Variant((*_71), 0), 1),fld1: Field::<usize>(Variant((*_71), 0), 0),fld2: _29,fld3: _13,fld4: _21,fld5: _65 };
    _25 = Field::<(u128,)>(Variant((*_5), 0), 3).0 as i32;
    (*_47) = [51_i8,36_i8,(-45_i8),82_i8,(-102_i8),123_i8];
    match _36 {
    0 => bb16,
    1 => bb20,
    2 => bb34,
    3 => bb35,
    3073173731456213052 => bb37,
    _ => bb36
    }
    }
    bb34 = {
    (*_14) = 6_usize as i32;
    _11 = _10;
    (*_1) = _6 != _6;
    (*_14) = (-1046773877_i32);
    (*_14) = (*_1) as i32;
    (*_14) = (-1219524680_i32) + (-1175496300_i32);
    _15.0 = _13.0 as i32;
    (*_14) = _16 as i32;
    (*_14) = (-7923793_i32);
    _2 = 11898_u16 * 57181_u16;
    (*_14) = _2 as i32;
    _27 = [4919619642341140000_u64,10285227447358544960_u64,7621930444105490038_u64,9490101093949245195_u64,1821629377100950805_u64,3725109936573855532_u64,15886477650363968395_u64,15221434378444820471_u64];
    (*_1) = true & false;
    (*_14) = _16 as i32;
    _6 = _4 + _4;
    _6 = _4 - _4;
    (*_14) = 612913773_i32;
    (*_14) = _2 as i32;
    _27 = [10659133331034290065_u64,9515311766194365588_u64,15507464573692396121_u64,13305316862695738266_u64,11070811877188058878_u64,5551825170134068804_u64,17581648362240396010_u64,4025166314757654028_u64];
    _4 = _6 + _6;
    Call((*_14) = core::intrinsics::bswap((-1646758104_i32)), ReturnTo(bb14), UnwindUnreachable())
    }
    bb35 = {
    place!(Field::<u8>(Variant((*_5), 2), 2)) = !_21;
    _39 = (*_1);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) != (*_1);
    _14 = core::ptr::addr_of_mut!((*_14));
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_8.0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = (_24,);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = !_2;
    (*_14) = _25;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = _21 << Field::<u32>(Variant((*_5), 2), 1);
    _67 = core::ptr::addr_of_mut!((*_14));
    place!(Field::<(char,)>(Variant((*_5), 2), 4)).0 = _22.0;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16;
    (*_14) = -_25;
    place!(Field::<u32>(Variant((*_5), 2), 1)) = _16 << Field::<u8>(Variant((*_5), 2), 2);
    _65 = (*_14) >> Field::<u8>(Variant((*_5), 2), 2);
    _8 = Field::<(char,)>(Variant((*_5), 2), 4);
    _8 = (Field::<(char,)>(Variant((*_5), 2), 4).0,);
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    (*_14) = _65 - _65;
    _55.1 = &mut _15;
    place!(Field::<u8>(Variant((*_5), 2), 2)) = 4205993806874327887_i64 as u8;
    place!(Field::<(char,)>(Variant((*_5), 2), 4)) = _22;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0) <= Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2 + _2;
    _63 = 115_i8 as usize;
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _29,fld2: _21,fld3: _2,fld4: _8 };
    _37 = [_36,_36,_36,_36,_36,_36,_36];
    Goto(bb27)
    }
    bb36 = {
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _2 * _2;
    Goto(bb21)
    }
    bb37 = {
    place!(Field::<usize>(Variant((*_5), 0), 1)) = Field::<usize>(Variant((*_71), 0), 0) * Field::<usize>(Variant((*_28), 0), 0);
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _29,fld2: _21,fld3: _66,fld4: _22 };
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _66 << Field::<u8>(Variant((*_5), 2), 2);
    _79 = [_53,_34,RET];
    place!(Field::<bool>(Variant((*_5), 2), 0)) = Field::<i64>(Variant((*_71), 0), 1) > Field::<i64>(Variant((*_28), 0), 1);
    _36 = 178161502678206037_u64 << Field::<u16>(Variant((*_5), 2), 3);
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1) <= (*_1);
    _36 = Field::<f64>(Variant((*_45), 2), 0) as u64;
    (*_5) = Adt32::Variant0 { fld0: Field::<i64>(Variant((*_28), 0), 1),fld1: Field::<usize>(Variant((*_28), 0), 0),fld2: _29,fld3: _13,fld4: _21,fld5: _65 };
    (*_1) = !_26;
    _3 = Field::<f64>(Variant((*_45), 2), 0) + Field::<f64>(Variant((*_45), 2), 0);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _53 as i128;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 80964175700007098051897228293708110276_i128 | 68473987566285591649257482854670865430_i128;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !(-71199808000325238509854803929462907906_i128);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = Field::<usize>(Variant((*_5), 0), 1) as f64;
    place!(Field::<usize>(Variant((*_5), 0), 1)) = Field::<usize>(Variant((*_28), 0), 0) - Field::<usize>(Variant((*_28), 0), 0);
    (*_1) = _26 | _26;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_13.0,);
    Goto(bb38)
    }
    bb38 = {
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _29 + _16;
    (*_1) = Field::<u32>(Variant(_31, 0), 2) == Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_13.0,);
    Goto(bb39)
    }
    bb39 = {
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = !_13.0;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _62 as u8;
    place!(Field::<(u128,)>(Variant(_31, 0), 3)).0 = _13.0 << Field::<u32>(Variant((*_5), 0), 2);
    (*_1) = !_39;
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _66,fld2: _55.0,fld3: (-45_i8),fld4: _16,fld5: _65,fld6: Field::<usize>(Variant((*_71), 0), 0) };
    _9 = [(-26819_i16),(-513_i16)];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (-132527722772739300990909383539199034347_i128) >> Field::<i32>(Variant((*_5), 3), 5);
    _70 = _53 | _53;
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _66,fld2: _55.0,fld3: (-42_i8),fld4: _16,fld5: _25,fld6: Field::<usize>(Variant((*_28), 0), 0) };
    place!(Field::<u16>(Variant((*_5), 3), 1)) = !_66;
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _66,fld2: (*_30).0,fld3: 19_i8,fld4: _16,fld5: _65,fld6: Field::<usize>(Variant((*_71), 0), 0) };
    _37 = [_36,_36,_36,_36,_36,_36,_36];
    place!(Field::<u32>(Variant((*_5), 3), 4)) = _29 + _29;
    Goto(bb40)
    }
    bb40 = {
    _7 = [Field::<usize>(Variant((*_71), 0), 0),Field::<usize>(Variant((*_5), 3), 6),Field::<usize>(Variant((*_71), 0), 0),Field::<usize>(Variant((*_5), 3), 6),Field::<usize>(Variant((*_71), 0), 0),Field::<usize>(Variant((*_71), 0), 0)];
    Goto(bb41)
    }
    bb41 = {
    _37 = [_36,_36,_36,_36,_36,_36,_36];
    place!(Field::<usize>(Variant((*_5), 3), 6)) = _63;
    _6 = (*_30).0 + (*_30).0;
    _25 = !Field::<i32>(Variant((*_5), 3), 5);
    _80 = _69;
    _88 = Field::<f64>(Variant((*_45), 2), 0) - Field::<f64>(Variant((*_45), 2), 0);
    place!(Field::<f32>(Variant((*_5), 3), 2)) = (*_30).0 + (*_30).0;
    place!(Field::<i8>(Variant(_31, 3), 3)) = 126_i8;
    _22 = (_24,);
    (*_5) = Adt32::Variant2 { fld0: (*_1),fld1: _29,fld2: _21,fld3: _66,fld4: _8 };
    _84 = !Field::<i64>(Variant((*_28), 0), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !81600414679178685043184526342374521656_i128;
    _76 = &_36;
    (*_1) = Field::<bool>(Variant((*_5), 2), 0);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 155864091263116262221487222362742119445_i128 ^ 61579971116726353360861670626955192289_i128;
    _87 = [Field::<u16>(Variant((*_5), 2), 3),_66,Field::<u16>(Variant((*_5), 2), 3),Field::<u16>(Variant(_31, 2), 3),Field::<u16>(Variant((*_5), 2), 3),Field::<u16>(Variant((*_5), 2), 3),Field::<u16>(Variant((*_5), 2), 3),Field::<u16>(Variant((*_5), 2), 3)];
    _52 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_59, 2), 1)));
    (*_1) = _26;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !14303822680453745765248559512071809086_i128;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = (*_76) as f64;
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _66 | _66;
    place!(Field::<u16>(Variant((*_5), 2), 3)) = _66;
    Goto(bb42)
    }
    bb42 = {
    place!(Field::<bool>(Variant((*_5), 2), 0)) = (*_1);
    _29 = Field::<u32>(Variant((*_5), 2), 1);
    (*_47) = [50_i8,(-67_i8),(-84_i8),(-76_i8),60_i8,52_i8];
    (*_5) = Adt32::Variant0 { fld0: Field::<i64>(Variant((*_28), 0), 1),fld1: Field::<usize>(Variant((*_28), 0), 0),fld2: _16,fld3: _13,fld4: _21,fld5: _25 };
    _89 = Field::<u32>(Variant((*_5), 0), 2) * Field::<u32>(Variant((*_5), 0), 2);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = _13;
    _45 = core::ptr::addr_of_mut!((*_45));
    _44 = !(*_1);
    _58 = &mut place!(Field::<f64>(Variant((*_45), 2), 0));
    place!(Field::<(u128,)>(Variant(_31, 0), 3)).0 = _13.0 << Field::<i32>(Variant((*_5), 0), 5);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 40762537671071812811960442605298972635_i128 - (-89220481875080215900596285334307747293_i128);
    _54 = &_79;
    (*_58) = (-27753_i16) as f64;
    (*_58) = (-11_i8) as f64;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _13.0 | _13.0;
    _24 = _8.0;
    (*_1) = Field::<i64>(Variant((*_5), 0), 0) == Field::<i64>(Variant((*_71), 0), 1);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)).0 = _66 as u128;
    (*_58) = _88 + _88;
    _98 = [(*_76),(*_76),(*_76),(*_76),(*_76),(*_76),_36];
    Goto(bb43)
    }
    bb43 = {
    place!(Field::<u32>(Variant((*_5), 0), 2)) = !_89;
    (*_47) = [(-78_i8),96_i8,(-18_i8),(-35_i8),104_i8,(-74_i8)];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = -(-117943319333313602402498489098798519639_i128);
    _99 = Field::<i64>(Variant((*_5), 0), 0) ^ Field::<i64>(Variant((*_28), 0), 1);
    _25 = (*_1) as i32;
    _19 = core::ptr::addr_of!(_54);
    (*_47) = [(-85_i8),61_i8,69_i8,(-98_i8),11_i8,55_i8];
    _36 = !962226703818688724_u64;
    _86 = Field::<(u128,)>(Variant((*_5), 0), 3);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = _86;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 91645114592665755119771889557986780071_i128 + 47352860700299960489795401475036261466_i128;
    _66 = _2 & _2;
    Goto(bb44)
    }
    bb44 = {
    place!(Field::<i64>(Variant((*_5), 0), 0)) = Field::<i64>(Variant((*_28), 0), 1) >> Field::<u8>(Variant((*_5), 0), 4);
    (*_47) = [40_i8,117_i8,(-127_i8),50_i8,(-93_i8),(-54_i8)];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _86.0 as i128;
    (*_1) = _39 | _39;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _29 & _16;
    _78 = _23;
    Goto(bb45)
    }
    bb45 = {
    place!(Field::<u8>(Variant((*_5), 0), 4)) = !_21;
    _78 = _22.0;
    Goto(bb46)
    }
    bb46 = {
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _16;
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = _86;
    (*_47) = [109_i8,(-79_i8),106_i8,13_i8,85_i8,123_i8];
    place!(Field::<usize>(Variant((*_5), 0), 1)) = Field::<usize>(Variant((*_28), 0), 0);
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _62 as u32;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _89;
    _77 = core::ptr::addr_of!((*_30).1);
    _36 = 12219090904030248315_u64;
    place!(Field::<(u128,)>(Variant(_31, 0), 3)).0 = Field::<u8>(Variant(_31, 0), 4) as u128;
    place!(Field::<u32>(Variant((*_5), 0), 2)) = _89 & _29;
    place!(Field::<usize>(Variant((*_5), 0), 1)) = _33;
    _42 = [_66];
    _36 = 3390374891103845091_u64 << Field::<i64>(Variant((*_28), 0), 1);
    place!(Field::<u8>(Variant((*_5), 0), 4)) = _21 | _21;
    place!(Field::<i32>(Variant((*_5), 0), 5)) = _65 - _65;
    (*_58) = _70 as f64;
    _106 = (*_30).0 as f64;
    _22.0 = _24;
    _19 = core::ptr::addr_of!((*_19));
    _78 = _22.0;
    _105 = &mut (*_58);
    _103 = Move(_55.1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 131349923986872374703795392597183164290_i128 ^ 130529081165451289032437057562326857111_i128;
    place!(Field::<u8>(Variant((*_5), 0), 4)) = Field::<(u128,)>(Variant((*_5), 0), 3).0 as u8;
    Goto(bb47)
    }
    bb47 = {
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = (_86.0,);
    place!(Field::<(u128,)>(Variant((*_5), 0), 3)) = _86;
    (*_5) = Adt32::Variant3 { fld0: _21,fld1: _66,fld2: (*_30).0,fld3: (-114_i8),fld4: _29,fld5: _25,fld6: Field::<usize>(Variant((*_71), 0), 0) };
    place!(Field::<f32>(Variant((*_5), 3), 2)) = (*_30).0;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !(-109069633171929064942154337508993750531_i128);
    Call(place!(Field::<usize>(Variant((*_5), 3), 6)) = core::intrinsics::bswap(Field::<usize>(Variant((*_71), 0), 0)), ReturnTo(bb48), UnwindUnreachable())
    }
    bb48 = {
    place!(Field::<i32>(Variant((*_5), 3), 5)) = (*_1) as i32;
    _29 = _89 * Field::<u32>(Variant((*_5), 3), 4);
    place!(Field::<u16>(Variant((*_5), 3), 1)) = !_66;
    _27 = [_36,_36,_36,_36,_36,_36,_36,_36];
    _21 = Field::<u8>(Variant((*_5), 3), 0);
    place!(Field::<u8>(Variant((*_5), 3), 0)) = _21;
    _100 = _55.0;
    place!(Field::<usize>(Variant((*_5), 3), 6)) = Field::<usize>(Variant((*_28), 0), 0) - Field::<usize>(Variant((*_28), 0), 0);
    _35 = -Field::<f32>(Variant((*_5), 3), 2);
    _95 = Field::<f32>(Variant((*_5), 3), 2) + (*_30).0;
    (*_105) = -_3;
    (*_47) = [109_i8,(-22_i8),(-7_i8),53_i8,(-6_i8),62_i8];
    RET = _53 >> Field::<u32>(Variant((*_5), 3), 4);
    place!(Field::<i8>(Variant((*_5), 3), 3)) = _78 as i8;
    _23 = _24;
    _44 = !(*_1);
    Goto(bb49)
    }
    bb49 = {
    place!(Field::<i8>(Variant((*_5), 3), 3)) = (-5_i8);
    _70 = Field::<i64>(Variant((*_28), 0), 1) as isize;
    _41 = Move(_47);
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(
    mut _1: *mut bool,
    mut _2: isize,
    mut _3: isize,
    mut _4: isize,
    mut _5: isize,
    mut _6: isize,
    mut _7: isize,
    mut _8: isize,
) -> u16 {
    mir! {
    type RET = u16;
    let _9: [u128; 4];
    let _10: &'static mut u8;
    let _11: [i32; 7];
    let _12: f64;
    let _13: u128;
    let _14: *mut *mut &'static (u128,);
    let _15: i8;
    let _16: isize;
    let _17: char;
    let _18: f32;
    let _19: *mut &'static (u128,);
    let _20: char;
    let _21: &'static [u128; 2];
    let _22: isize;
    let _23: isize;
    let _24: (u16, Adt27, [isize; 3], Adt35);
    let _25: i128;
    let _26: isize;
    let _27: Adt35;
    let _28: (bool, i16, u64);
    let _29: [u128; 2];
    let _30: f32;
    let _31: &'static u64;
    let _32: i32;
    let _33: Adt29;
    let _34: ([u128; 8], (char,));
    let _35: [u16; 1];
    let _36: ([u64; 8], [isize; 3], &'static &'static mut [isize; 3]);
    let _37: &'static Adt35;
    let _38: isize;
    let _39: i8;
    let _40: *const i16;
    let _41: f32;
    let _42: (Adt32, Adt45, [i8; 6]);
    let _43: u32;
    let _44: *mut *mut &'static (u128,);
    let _45: i128;
    let _46: Adt58;
    let _47: i16;
    let _48: &'static mut &'static *mut i16;
    let _49: (bool, i16, u64);
    let _50: f64;
    let _51: *const i16;
    let _52: bool;
    let _53: [u64; 7];
    let _54: *const Adt32;
    let _55: isize;
    let _56: f64;
    let _57: &'static *mut i16;
    let _58: &'static mut (i32,);
    let _59: &'static (u128,);
    let _60: char;
    let _61: (i64, *const [i8; 6]);
    let _62: isize;
    let _63: *mut bool;
    let _64: f32;
    let _65: u64;
    let _66: bool;
    let _67: ();
    let _68: ();
    {
    _2 = _5 << _8;
    _3 = !_6;
    _3 = _7 << _5;
    _8 = _2 - _7;
    _7 = _2;
    _6 = _8 * _8;
    _9 = [265479246219860111525029746240148016655_u128,325649992035288666531333910633105365370_u128,2688119362025093690617590707141816621_u128,123507439997518848051096306136663837968_u128];
    _9 = [81616772855871557134855508808076228963_u128,259200548286213364808484913340431042454_u128,166568019316061798573894689675135114186_u128,307231592982938786396213131828637879861_u128];
    _2 = -_4;
    _5 = !_4;
    _4 = -_7;
    RET = !42482_u16;
    _4 = (-872_i16) as isize;
    _4 = !_6;
    _7 = 7578166714885686557_u64 as isize;
    _9 = [313957424795057920495198617720859073821_u128,275576992627983221569844536802362235481_u128,288995905819343060039836454472680109557_u128,92112234264848562932995168473098338694_u128];
    _7 = _4 >> _5;
    _3 = _4 << _6;
    _8 = _7 + _3;
    _2 = _8 - _8;
    _6 = _7 | _2;
    _8 = _2;
    _9 = [275225811960623810858275027947692252312_u128,76028311255282622123197854976185083756_u128,158664768901735337632924400263271026903_u128,230595448991260529815204872054021959331_u128];
    Goto(bb1)
    }
    bb1 = {
    _12 = 1088639751_u32 as f64;
    _6 = !_3;
    _9 = [218161296272460619339576506932356477701_u128,4492010736717439867038533099988698611_u128,76889513168171622061278734142966540384_u128,136573429733006835913665196897175951501_u128];
    _6 = 3443410047117952083_u64 as isize;
    _7 = !_3;
    _5 = _8 ^ _2;
    RET = 64074_u16;
    _13 = !71816028005043002544367217073929423790_u128;
    _11 = [(-1201633187_i32),(-735686235_i32),(-370531340_i32),1603307486_i32,869819585_i32,850174047_i32,1697177555_i32];
    _3 = !_8;
    _9 = [_13,_13,_13,_13];
    _11 = [(-1342387892_i32),481721860_i32,(-380634675_i32),(-221444962_i32),(-1285306119_i32),680711359_i32,(-317092281_i32)];
    _6 = -_3;
    _9 = [_13,_13,_13,_13];
    _11 = [1017198394_i32,(-802944851_i32),(-1194584946_i32),1644300094_i32,1376374640_i32,(-113412492_i32),515932556_i32];
    _13 = !251987603529571220443366633416984752850_u128;
    _4 = _6;
    _6 = !_5;
    _7 = _4;
    _13 = 1503036816_i32 as u128;
    match RET {
    64074 => bb3,
    _ => bb2
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb4 = {
    _11 = [(-1487590048_i32),(-986334536_i32),334232336_i32,(-570357724_i32),949523575_i32,496766462_i32,(-1492191436_i32)];
    _17 = '\u{3411e}';
    _11 = [84954944_i32,1809862327_i32,(-856885301_i32),(-1464604559_i32),(-925161408_i32),(-908414902_i32),(-1687977087_i32)];
    _17 = '\u{77b}';
    _7 = -_6;
    _7 = _17 as isize;
    _17 = '\u{60690}';
    _4 = _5;
    _12 = RET as f64;
    _2 = -_3;
    _16 = -_5;
    _13 = !18800150548059649693630656530727109029_u128;
    match RET {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb5,
    4 => bb6,
    5 => bb7,
    6 => bb8,
    64074 => bb10,
    _ => bb9
    }
    }
    bb5 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _12 = 1088639751_u32 as f64;
    _6 = !_3;
    _9 = [218161296272460619339576506932356477701_u128,4492010736717439867038533099988698611_u128,76889513168171622061278734142966540384_u128,136573429733006835913665196897175951501_u128];
    _6 = 3443410047117952083_u64 as isize;
    _7 = !_3;
    _5 = _8 ^ _2;
    RET = 64074_u16;
    _13 = !71816028005043002544367217073929423790_u128;
    _11 = [(-1201633187_i32),(-735686235_i32),(-370531340_i32),1603307486_i32,869819585_i32,850174047_i32,1697177555_i32];
    _3 = !_8;
    _9 = [_13,_13,_13,_13];
    _11 = [(-1342387892_i32),481721860_i32,(-380634675_i32),(-221444962_i32),(-1285306119_i32),680711359_i32,(-317092281_i32)];
    _6 = -_3;
    _9 = [_13,_13,_13,_13];
    _11 = [1017198394_i32,(-802944851_i32),(-1194584946_i32),1644300094_i32,1376374640_i32,(-113412492_i32),515932556_i32];
    _13 = !251987603529571220443366633416984752850_u128;
    _4 = _6;
    _6 = !_5;
    _7 = _4;
    _13 = 1503036816_i32 as u128;
    match RET {
    64074 => bb3,
    _ => bb2
    }
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    _9 = [_13,_13,_13,_13];
    _7 = _5 + _2;
    RET = !27762_u16;
    _9 = [_13,_13,_13,_13];
    _18 = 2_usize as f32;
    _4 = _16;
    _14 = core::ptr::addr_of_mut!(_19);
    _4 = 5378347618259901698_u64 as isize;
    _13 = 232728052102527237722484842598987190541_u128;
    _3 = !_7;
    RET = true as u16;
    _7 = -_5;
    _18 = _13 as f32;
    _3 = _5 ^ _16;
    _11 = [876503646_i32,(-1618615350_i32),1376245545_i32,(-610715875_i32),1213201114_i32,(-1504224301_i32),1268358506_i32];
    _15 = -(-122_i8);
    _16 = -_8;
    RET = !8095_u16;
    _20 = _17;
    _11 = [(-567149850_i32),436411373_i32,(-1720067551_i32),861367436_i32,(-1400716790_i32),(-666982840_i32),(-901861547_i32)];
    Call(_3 = fn3(Move(_14), _11, _18, Move(_1), _7, _4), ReturnTo(bb11), UnwindUnreachable())
    }
    bb11 = {
    _8 = _6;
    _4 = -_2;
    _3 = -_8;
    _2 = _16 & _8;
    _12 = 16597051394691536659_usize as f64;
    _7 = _2;
    _14 = core::ptr::addr_of_mut!(_19);
    _12 = 2_usize as f64;
    _3 = !_4;
    match _13 {
    0 => bb8,
    232728052102527237722484842598987190541 => bb12,
    _ => bb5
    }
    }
    bb12 = {
    _11 = [(-1344334438_i32),(-1877477846_i32),(-803240427_i32),455615582_i32,(-247843103_i32),1342711702_i32,1894813436_i32];
    _8 = _2 << _5;
    _9 = [_13,_13,_13,_13];
    _18 = 7_usize as f32;
    RET = !38471_u16;
    _3 = 1564498678_i32 as isize;
    RET = !51120_u16;
    _24.0 = _17 as u16;
    _24.2 = [_4,_2,_4];
    _9 = [_13,_13,_13,_13];
    _24.1.fld1 = _20;
    _24.1.fld4 = (193777971_i32,);
    _1 = core::ptr::addr_of_mut!(_24.1.fld0);
    _17 = _20;
    _17 = _20;
    (*_1) = _7 <= _7;
    (*_1) = !false;
    (*_1) = true ^ true;
    _18 = _13 as f32;
    match _13 {
    0 => bb5,
    1 => bb2,
    2 => bb11,
    3 => bb6,
    4 => bb13,
    232728052102527237722484842598987190541 => bb15,
    _ => bb14
    }
    }
    bb13 = {
    Return()
    }
    bb14 = {
    _12 = 1088639751_u32 as f64;
    _6 = !_3;
    _9 = [218161296272460619339576506932356477701_u128,4492010736717439867038533099988698611_u128,76889513168171622061278734142966540384_u128,136573429733006835913665196897175951501_u128];
    _6 = 3443410047117952083_u64 as isize;
    _7 = !_3;
    _5 = _8 ^ _2;
    RET = 64074_u16;
    _13 = !71816028005043002544367217073929423790_u128;
    _11 = [(-1201633187_i32),(-735686235_i32),(-370531340_i32),1603307486_i32,869819585_i32,850174047_i32,1697177555_i32];
    _3 = !_8;
    _9 = [_13,_13,_13,_13];
    _11 = [(-1342387892_i32),481721860_i32,(-380634675_i32),(-221444962_i32),(-1285306119_i32),680711359_i32,(-317092281_i32)];
    _6 = -_3;
    _9 = [_13,_13,_13,_13];
    _11 = [1017198394_i32,(-802944851_i32),(-1194584946_i32),1644300094_i32,1376374640_i32,(-113412492_i32),515932556_i32];
    _13 = !251987603529571220443366633416984752850_u128;
    _4 = _6;
    _6 = !_5;
    _7 = _4;
    _13 = 1503036816_i32 as u128;
    match RET {
    64074 => bb3,
    _ => bb2
    }
    }
    bb15 = {
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    (*_1) = false;
    _23 = _5 * _8;
    _24.1.fld5 = _18 + _18;
    _1 = core::ptr::addr_of_mut!((*_1));
    _24.2 = [_8,_5,_2];
    _5 = _23;
    (*_1) = !false;
    _12 = RET as f64;
    _4 = _7 + _6;
    (*_1) = _2 != _23;
    _7 = _6 | _8;
    _6 = -_5;
    _29 = [_13,_13];
    (*_1) = true;
    (*_1) = _7 != _5;
    match _24.1.fld4.0 {
    0 => bb13,
    1 => bb2,
    2 => bb3,
    3 => bb8,
    4 => bb5,
    5 => bb16,
    6 => bb17,
    193777971 => bb19,
    _ => bb18
    }
    }
    bb16 = {
    Return()
    }
    bb17 = {
    _11 = [(-1487590048_i32),(-986334536_i32),334232336_i32,(-570357724_i32),949523575_i32,496766462_i32,(-1492191436_i32)];
    _17 = '\u{3411e}';
    _11 = [84954944_i32,1809862327_i32,(-856885301_i32),(-1464604559_i32),(-925161408_i32),(-908414902_i32),(-1687977087_i32)];
    _17 = '\u{77b}';
    _7 = -_6;
    _7 = _17 as isize;
    _17 = '\u{60690}';
    _4 = _5;
    _12 = RET as f64;
    _2 = -_3;
    _16 = -_5;
    _13 = !18800150548059649693630656530727109029_u128;
    match RET {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb5,
    4 => bb6,
    5 => bb7,
    6 => bb8,
    64074 => bb10,
    _ => bb9
    }
    }
    bb18 = {
    _11 = [(-1344334438_i32),(-1877477846_i32),(-803240427_i32),455615582_i32,(-247843103_i32),1342711702_i32,1894813436_i32];
    _8 = _2 << _5;
    _9 = [_13,_13,_13,_13];
    _18 = 7_usize as f32;
    RET = !38471_u16;
    _3 = 1564498678_i32 as isize;
    RET = !51120_u16;
    _24.0 = _17 as u16;
    _24.2 = [_4,_2,_4];
    _9 = [_13,_13,_13,_13];
    _24.1.fld1 = _20;
    _24.1.fld4 = (193777971_i32,);
    _1 = core::ptr::addr_of_mut!(_24.1.fld0);
    _17 = _20;
    _17 = _20;
    (*_1) = _7 <= _7;
    (*_1) = !false;
    (*_1) = true ^ true;
    _18 = _13 as f32;
    match _13 {
    0 => bb5,
    1 => bb2,
    2 => bb11,
    3 => bb6,
    4 => bb13,
    232728052102527237722484842598987190541 => bb15,
    _ => bb14
    }
    }
    bb19 = {
    (*_1) = _5 != _23;
    _26 = _2 ^ _2;
    _21 = &_29;
    _24.1.fld6 = !2769033182988330452_i64;
    _28.1 = (-21175_i16);
    _24.1.fld4.0 = 1524913224_i32;
    _28 = ((*_1), 7240_i16, 1822591669926787155_u64);
    _24.1.fld5 = _18;
    (*_1) = _28.0 | _28.0;
    _27 = Adt35::Variant0 { fld0: 6397391649183905565_usize,fld1: _24.1.fld6 };
    _24.1.fld2 = -_4;
    _12 = RET as f64;
    _1 = core::ptr::addr_of_mut!(_28.0);
    _9 = [_13,_13,_13,_13];
    _24.1.fld0 = !(*_1);
    match _28.2 {
    0 => bb3,
    1 => bb14,
    2 => bb20,
    3 => bb21,
    1822591669926787155 => bb23,
    _ => bb22
    }
    }
    bb20 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb21 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb22 = {
    Return()
    }
    bb23 = {
    _28 = (_24.1.fld0, 25327_i16, 7109270430178754409_u64);
    _24.1.fld4 = (1194747453_i32,);
    (*_1) = _8 <= _8;
    (*_1) = !_24.1.fld0;
    (*_1) = !_24.1.fld0;
    _36.0 = [_28.2,_28.2,_28.2,_28.2,_28.2,_28.2,_28.2,_28.2];
    _24.1.fld3 = _28.2 << _24.1.fld2;
    _24.1.fld5 = -_18;
    _36.1 = [_6,_5,_6];
    _31 = &_24.1.fld3;
    (*_1) = !_24.1.fld0;
    _1 = core::ptr::addr_of_mut!((*_1));
    _33 = Adt29::Variant3 { fld0: (*_31) };
    (*_1) = !_24.1.fld0;
    _22 = _2;
    _7 = !_23;
    (*_1) = !_24.1.fld0;
    match _28.2 {
    0 => bb24,
    1 => bb25,
    2 => bb26,
    3 => bb27,
    4 => bb28,
    5 => bb29,
    6 => bb30,
    7109270430178754409 => bb32,
    _ => bb31
    }
    }
    bb24 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb25 = {
    Return()
    }
    bb26 = {
    _11 = [(-1344334438_i32),(-1877477846_i32),(-803240427_i32),455615582_i32,(-247843103_i32),1342711702_i32,1894813436_i32];
    _8 = _2 << _5;
    _9 = [_13,_13,_13,_13];
    _18 = 7_usize as f32;
    RET = !38471_u16;
    _3 = 1564498678_i32 as isize;
    RET = !51120_u16;
    _24.0 = _17 as u16;
    _24.2 = [_4,_2,_4];
    _9 = [_13,_13,_13,_13];
    _24.1.fld1 = _20;
    _24.1.fld4 = (193777971_i32,);
    _1 = core::ptr::addr_of_mut!(_24.1.fld0);
    _17 = _20;
    _17 = _20;
    (*_1) = _7 <= _7;
    (*_1) = !false;
    (*_1) = true ^ true;
    _18 = _13 as f32;
    match _13 {
    0 => bb5,
    1 => bb2,
    2 => bb11,
    3 => bb6,
    4 => bb13,
    232728052102527237722484842598987190541 => bb15,
    _ => bb14
    }
    }
    bb27 = {
    (*_1) = _5 != _23;
    _26 = _2 ^ _2;
    _21 = &_29;
    _24.1.fld6 = !2769033182988330452_i64;
    _28.1 = (-21175_i16);
    _24.1.fld4.0 = 1524913224_i32;
    _28 = ((*_1), 7240_i16, 1822591669926787155_u64);
    _24.1.fld5 = _18;
    (*_1) = _28.0 | _28.0;
    _27 = Adt35::Variant0 { fld0: 6397391649183905565_usize,fld1: _24.1.fld6 };
    _24.1.fld2 = -_4;
    _12 = RET as f64;
    _1 = core::ptr::addr_of_mut!(_28.0);
    _9 = [_13,_13,_13,_13];
    _24.1.fld0 = !(*_1);
    match _28.2 {
    0 => bb3,
    1 => bb14,
    2 => bb20,
    3 => bb21,
    1822591669926787155 => bb23,
    _ => bb22
    }
    }
    bb28 = {
    _11 = [(-1487590048_i32),(-986334536_i32),334232336_i32,(-570357724_i32),949523575_i32,496766462_i32,(-1492191436_i32)];
    _17 = '\u{3411e}';
    _11 = [84954944_i32,1809862327_i32,(-856885301_i32),(-1464604559_i32),(-925161408_i32),(-908414902_i32),(-1687977087_i32)];
    _17 = '\u{77b}';
    _7 = -_6;
    _7 = _17 as isize;
    _17 = '\u{60690}';
    _4 = _5;
    _12 = RET as f64;
    _2 = -_3;
    _16 = -_5;
    _13 = !18800150548059649693630656530727109029_u128;
    match RET {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb5,
    4 => bb6,
    5 => bb7,
    6 => bb8,
    64074 => bb10,
    _ => bb9
    }
    }
    bb29 = {
    _12 = 1088639751_u32 as f64;
    _6 = !_3;
    _9 = [218161296272460619339576506932356477701_u128,4492010736717439867038533099988698611_u128,76889513168171622061278734142966540384_u128,136573429733006835913665196897175951501_u128];
    _6 = 3443410047117952083_u64 as isize;
    _7 = !_3;
    _5 = _8 ^ _2;
    RET = 64074_u16;
    _13 = !71816028005043002544367217073929423790_u128;
    _11 = [(-1201633187_i32),(-735686235_i32),(-370531340_i32),1603307486_i32,869819585_i32,850174047_i32,1697177555_i32];
    _3 = !_8;
    _9 = [_13,_13,_13,_13];
    _11 = [(-1342387892_i32),481721860_i32,(-380634675_i32),(-221444962_i32),(-1285306119_i32),680711359_i32,(-317092281_i32)];
    _6 = -_3;
    _9 = [_13,_13,_13,_13];
    _11 = [1017198394_i32,(-802944851_i32),(-1194584946_i32),1644300094_i32,1376374640_i32,(-113412492_i32),515932556_i32];
    _13 = !251987603529571220443366633416984752850_u128;
    _4 = _6;
    _6 = !_5;
    _7 = _4;
    _13 = 1503036816_i32 as u128;
    match RET {
    64074 => bb3,
    _ => bb2
    }
    }
    bb30 = {
    Return()
    }
    bb31 = {
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    (*_1) = false;
    _23 = _5 * _8;
    _24.1.fld5 = _18 + _18;
    _1 = core::ptr::addr_of_mut!((*_1));
    _24.2 = [_8,_5,_2];
    _5 = _23;
    (*_1) = !false;
    _12 = RET as f64;
    _4 = _7 + _6;
    (*_1) = _2 != _23;
    _7 = _6 | _8;
    _6 = -_5;
    _29 = [_13,_13];
    (*_1) = true;
    (*_1) = _7 != _5;
    match _24.1.fld4.0 {
    0 => bb13,
    1 => bb2,
    2 => bb3,
    3 => bb8,
    4 => bb5,
    5 => bb16,
    6 => bb17,
    193777971 => bb19,
    _ => bb18
    }
    }
    bb32 = {
    _42.2 = [_15,_15,_15,_15,_15,_15];
    Goto(bb33)
    }
    bb33 = {
    _41 = 86_u8 as f32;
    RET = _24.0;
    (*_1) = _24.1.fld0;
    place!(Field::<i64>(Variant(_27, 0), 1)) = -_24.1.fld6;
    (*_1) = (*_31) <= (*_31);
    _22 = _7 ^ _2;
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    _13 = _24.1.fld1 as u128;
    _28.1 = !(-28246_i16);
    (*_1) = _8 <= _4;
    _30 = -_18;
    _35 = [RET];
    _6 = _4 + _5;
    _36.0 = [Field::<u64>(Variant(_33, 3), 0),(*_31),(*_31),(*_31),(*_31),(*_31),(*_31),(*_31)];
    _24.0 = !RET;
    place!(Field::<usize>(Variant(_27, 0), 0)) = 38_u8 as usize;
    _32 = -_24.1.fld4.0;
    _1 = core::ptr::addr_of_mut!((*_1));
    match _28.2 {
    0 => bb8,
    1 => bb23,
    2 => bb34,
    3 => bb35,
    4 => bb36,
    5 => bb37,
    7109270430178754409 => bb39,
    _ => bb38
    }
    }
    bb34 = {
    _9 = [_13,_13,_13,_13];
    _7 = _5 + _2;
    RET = !27762_u16;
    _9 = [_13,_13,_13,_13];
    _18 = 2_usize as f32;
    _4 = _16;
    _14 = core::ptr::addr_of_mut!(_19);
    _4 = 5378347618259901698_u64 as isize;
    _13 = 232728052102527237722484842598987190541_u128;
    _3 = !_7;
    RET = true as u16;
    _7 = -_5;
    _18 = _13 as f32;
    _3 = _5 ^ _16;
    _11 = [876503646_i32,(-1618615350_i32),1376245545_i32,(-610715875_i32),1213201114_i32,(-1504224301_i32),1268358506_i32];
    _15 = -(-122_i8);
    _16 = -_8;
    RET = !8095_u16;
    _20 = _17;
    _11 = [(-567149850_i32),436411373_i32,(-1720067551_i32),861367436_i32,(-1400716790_i32),(-666982840_i32),(-901861547_i32)];
    Call(_3 = fn3(Move(_14), _11, _18, Move(_1), _7, _4), ReturnTo(bb11), UnwindUnreachable())
    }
    bb35 = {
    (*_1) = _5 != _23;
    _26 = _2 ^ _2;
    _21 = &_29;
    _24.1.fld6 = !2769033182988330452_i64;
    _28.1 = (-21175_i16);
    _24.1.fld4.0 = 1524913224_i32;
    _28 = ((*_1), 7240_i16, 1822591669926787155_u64);
    _24.1.fld5 = _18;
    (*_1) = _28.0 | _28.0;
    _27 = Adt35::Variant0 { fld0: 6397391649183905565_usize,fld1: _24.1.fld6 };
    _24.1.fld2 = -_4;
    _12 = RET as f64;
    _1 = core::ptr::addr_of_mut!(_28.0);
    _9 = [_13,_13,_13,_13];
    _24.1.fld0 = !(*_1);
    match _28.2 {
    0 => bb3,
    1 => bb14,
    2 => bb20,
    3 => bb21,
    1822591669926787155 => bb23,
    _ => bb22
    }
    }
    bb36 = {
    Return()
    }
    bb37 = {
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    (*_1) = false;
    _23 = _5 * _8;
    _24.1.fld5 = _18 + _18;
    _1 = core::ptr::addr_of_mut!((*_1));
    _24.2 = [_8,_5,_2];
    _5 = _23;
    (*_1) = !false;
    _12 = RET as f64;
    _4 = _7 + _6;
    (*_1) = _2 != _23;
    _7 = _6 | _8;
    _6 = -_5;
    _29 = [_13,_13];
    (*_1) = true;
    (*_1) = _7 != _5;
    match _24.1.fld4.0 {
    0 => bb13,
    1 => bb2,
    2 => bb3,
    3 => bb8,
    4 => bb5,
    5 => bb16,
    6 => bb17,
    193777971 => bb19,
    _ => bb18
    }
    }
    bb38 = {
    _4 = _3 | _6;
    _11 = [(-1215124244_i32),1285488027_i32,940646044_i32,1670687789_i32,10613355_i32,919722369_i32,(-300366874_i32)];
    Goto(bb4)
    }
    bb39 = {
    (*_1) = (*_31) != (*_31);
    _42.1 = Adt45::Variant2 { fld0: _12,fld1: 113177630128706738748287425856874610825_i128 };
    _42.2 = [_15,_15,_15,_15,_15,_15];
    place!(Field::<u64>(Variant(_33, 3), 0)) = (*_31) * (*_31);
    _29 = [_13,_13];
    (*_1) = _24.1.fld0;
    _28.1 = 28433_i16 - (-21801_i16);
    _36.1 = _24.2;
    _34.0 = [_13,_13,_13,_13,_13,_13,_13,_13];
    _42.2 = [_15,_15,_15,_15,_15,_15];
    _36.0 = [(*_31),(*_31),_28.2,(*_31),(*_31),(*_31),Field::<u64>(Variant(_33, 3), 0),(*_31)];
    _28.1 = 39693026477192571374194281760600977270_i128 as i16;
    _24.2 = [_4,_2,_23];
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_1) = _24.1.fld0;
    _25 = !90592867389624279723800160507483233240_i128;
    _24.0 = RET | RET;
    _40 = core::ptr::addr_of!(_47);
    Call((*_40) = fn4(_35, Move(_14), Move(_27), _24.1.fld4.0, Move(_21), (*_31), Move(_33), _24.1.fld2, Move(_40), _2), ReturnTo(bb40), UnwindUnreachable())
    }
    bb40 = {
    _25 = (-37705682618022192692438228844041751183_i128) + 90504770579664748345350191340670236518_i128;
    (*_1) = _24.1.fld0;
    _7 = _16 * _23;
    _1 = core::ptr::addr_of_mut!((*_1));
    _34.1 = (_24.1.fld1,);
    _16 = _6;
    (*_1) = !_24.1.fld0;
    (*_1) = _24.1.fld0;
    (*_1) = !_24.1.fld0;
    _24.1.fld4 = (_32,);
    (*_1) = _24.1.fld0;
    _24.1.fld7 = core::ptr::addr_of_mut!(_28.1);
    _38 = !_7;
    (*_1) = !_24.1.fld0;
    _34.1.0 = _24.1.fld1;
    _49 = ((*_1), _47, (*_31));
    _16 = _2;
    (*_1) = (*_31) != _24.1.fld3;
    Goto(bb41)
    }
    bb41 = {
    _12 = Field::<f64>(Variant(_42.1, 2), 0) * Field::<f64>(Variant(_42.1, 2), 0);
    _49.1 = !_47;
    (*_1) = _24.1.fld0;
    _24.2 = [_23,_4,_26];
    (*_1) = _49.0 & _49.0;
    _30 = _5 as f32;
    place!(Field::<f64>(Variant(_42.1, 2), 0)) = _24.1.fld4.0 as f64;
    (*_1) = !_49.0;
    _36.1 = [_4,_26,_4];
    _36.0 = [(*_31),(*_31),(*_31),(*_31),(*_31),(*_31),(*_31),_28.2];
    _39 = _15;
    (*_1) = _24.1.fld0;
    _43 = 2747062358_u32 * 2114043882_u32;
    _9 = [_13,_13,_13,_13];
    (*_1) = !_49.0;
    _6 = (*_31) as isize;
    _8 = _6 | _4;
    _52 = !(*_1);
    _53 = [(*_31),(*_31),_28.2,(*_31),(*_31),(*_31),(*_31)];
    (*_1) = _49.0 & _49.0;
    (*_1) = _49.0 ^ _49.0;
    (*_1) = (*_31) >= (*_31);
    (*_1) = !_49.0;
    Goto(bb42)
    }
    bb42 = {
    _14 = core::ptr::addr_of_mut!(_19);
    _24.1.fld4.0 = !_32;
    _24.1.fld2 = _22 - _2;
    _50 = 4956319505227712773_usize as f64;
    _51 = core::ptr::addr_of!(_47);
    place!(Field::<i128>(Variant(_42.1, 2), 1)) = _25 << _23;
    (*_1) = _4 <= _23;
    (*_1) = (*_51) > (*_51);
    (*_51) = _49.1 >> _6;
    (*_51) = _49.1 & _49.1;
    _29 = [_13,_13];
    (*_1) = _49.0 | _49.0;
    _49.2 = _28.2;
    _26 = _13 as isize;
    _24.1.fld6 = !5355985418155272816_i64;
    (*_51) = _49.1 >> _7;
    _24.1.fld5 = RET as f32;
    (*_51) = _49.1 - _49.1;
    _46 = Adt58::Variant2 { fld0: _24.2,fld1: 183_u8,fld2: Move(_24.1.fld7),fld3: Move(_24.1),fld4: _28 };
    place!(Field::<(bool, i16, u64)>(Variant(_46, 2), 4)).2 = _28.2 << (*_51);
    (*_1) = _38 == Field::<Adt27>(Variant(_46, 2), 3).fld2;
    _24.1.fld4 = (Field::<Adt27>(Variant(_46, 2), 3).fld4.0,);
    _21 = &_29;
    _24.3 = Adt35::Variant2 { fld0: _24.1.fld4,fld1: Field::<Adt27>(Variant(_46, 2), 3).fld1,fld2: _24.2,fld3: _39,fld4: _24.0,fld5: _43 };
    place!(Field::<Adt27>(Variant(_46, 2), 3)).fld1 = _20;
    match _28.2 {
    0 => bb3,
    1 => bb43,
    2 => bb44,
    3 => bb45,
    4 => bb46,
    7109270430178754409 => bb48,
    _ => bb47
    }
    }
    bb43 = {
    Return()
    }
    bb44 = {
    _9 = [_13,_13,_13,_13];
    _7 = _5 + _2;
    RET = !27762_u16;
    _9 = [_13,_13,_13,_13];
    _18 = 2_usize as f32;
    _4 = _16;
    _14 = core::ptr::addr_of_mut!(_19);
    _4 = 5378347618259901698_u64 as isize;
    _13 = 232728052102527237722484842598987190541_u128;
    _3 = !_7;
    RET = true as u16;
    _7 = -_5;
    _18 = _13 as f32;
    _3 = _5 ^ _16;
    _11 = [876503646_i32,(-1618615350_i32),1376245545_i32,(-610715875_i32),1213201114_i32,(-1504224301_i32),1268358506_i32];
    _15 = -(-122_i8);
    _16 = -_8;
    RET = !8095_u16;
    _20 = _17;
    _11 = [(-567149850_i32),436411373_i32,(-1720067551_i32),861367436_i32,(-1400716790_i32),(-666982840_i32),(-901861547_i32)];
    Call(_3 = fn3(Move(_14), _11, _18, Move(_1), _7, _4), ReturnTo(bb11), UnwindUnreachable())
    }
    bb45 = {
    _42.2 = [_15,_15,_15,_15,_15,_15];
    Goto(bb33)
    }
    bb46 = {
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    (*_1) = false;
    _23 = _5 * _8;
    _24.1.fld5 = _18 + _18;
    _1 = core::ptr::addr_of_mut!((*_1));
    _24.2 = [_8,_5,_2];
    _5 = _23;
    (*_1) = !false;
    _12 = RET as f64;
    _4 = _7 + _6;
    (*_1) = _2 != _23;
    _7 = _6 | _8;
    _6 = -_5;
    _29 = [_13,_13];
    (*_1) = true;
    (*_1) = _7 != _5;
    match _24.1.fld4.0 {
    0 => bb13,
    1 => bb2,
    2 => bb3,
    3 => bb8,
    4 => bb5,
    5 => bb16,
    6 => bb17,
    193777971 => bb19,
    _ => bb18
    }
    }
    bb47 = {
    _11 = [_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0,_24.1.fld4.0];
    (*_1) = false;
    _23 = _5 * _8;
    _24.1.fld5 = _18 + _18;
    _1 = core::ptr::addr_of_mut!((*_1));
    _24.2 = [_8,_5,_2];
    _5 = _23;
    (*_1) = !false;
    _12 = RET as f64;
    _4 = _7 + _6;
    (*_1) = _2 != _23;
    _7 = _6 | _8;
    _6 = -_5;
    _29 = [_13,_13];
    (*_1) = true;
    (*_1) = _7 != _5;
    match _24.1.fld4.0 {
    0 => bb13,
    1 => bb2,
    2 => bb3,
    3 => bb8,
    4 => bb5,
    5 => bb16,
    6 => bb17,
    193777971 => bb19,
    _ => bb18
    }
    }
    bb48 = {
    _9 = [_13,_13,_13,_13];
    _24.1.fld4 = (_32,);
    (*_51) = -_49.1;
    (*_51) = !_49.1;
    _24.1.fld7 = core::ptr::addr_of_mut!((*_51));
    _56 = _50 - _12;
    (*_51) = _49.1 * _49.1;
    _33 = Adt29::Variant1 { fld0: Move(_24.1.fld7) };
    (*_51) = !_49.1;
    _53 = [_49.2,_28.2,_49.2,_28.2,Field::<(bool, i16, u64)>(Variant(_46, 2), 4).2,Field::<(bool, i16, u64)>(Variant(_46, 2), 4).2,_28.2];
    (*_1) = _52 ^ _52;
    _3 = -_4;
    _40 = Move(_51);
    (*_1) = !Field::<(bool, i16, u64)>(Variant(_46, 2), 4).0;
    _13 = 237566487178621251954988160482223453017_u128 & 240581693906285987460720509359650103471_u128;
    Goto(bb49)
    }
    bb49 = {
    place!(Field::<*mut i16>(Variant(_46, 2), 2)) = core::ptr::addr_of_mut!(_28.1);
    (*_1) = !Field::<(bool, i16, u64)>(Variant(_46, 2), 4).0;
    place!(Field::<(bool, i16, u64)>(Variant(_46, 2), 4)).2 = !_49.2;
    place!(Field::<i8>(Variant(_24.3, 2), 3)) = -_15;
    _24.1.fld7 = core::ptr::addr_of_mut!(_28.1);
    place!(Field::<Adt27>(Variant(_46, 2), 3)).fld3 = Field::<i128>(Variant(_42.1, 2), 1) as u64;
    _25 = _30 as i128;
    _54 = core::ptr::addr_of!(_42.0);
    _28.2 = Field::<Adt27>(Variant(_46, 2), 3).fld3 % _49.2;
    _1 = core::ptr::addr_of_mut!((*_1));
    _25 = Field::<i128>(Variant(_42.1, 2), 1);
    _41 = _28.2 as f32;
    _26 = _24.0 as isize;
    _8 = !_2;
    _58 = &mut place!(Field::<Adt27>(Variant(_46, 2), 3)).fld4;
    (*_1) = _52;
    (*_1) = _49.0 | _49.0;
    _24.1 = Adt27 { fld0: _52,fld1: _34.1.0,fld2: _3,fld3: _49.2,fld4: (*_58),fld5: _30,fld6: 1446357953754350163_i64,fld7: Move(Field::<*mut i16>(Variant(_33, 1), 0)) };
    (*_58).0 = _13 as i32;
    _49.2 = _28.2 ^ _28.2;
    _47 = _49.1;
    _36.0 = [_24.1.fld3,_49.2,_49.2,_24.1.fld3,_49.2,_24.1.fld3,_24.1.fld3,_49.2];
    _28.2 = !_24.1.fld3;
    _62 = _23 << _22;
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(
    mut _1: *mut *mut &'static (u128,),
    mut _2: [i32; 7],
    mut _3: f32,
    mut _4: *mut bool,
    mut _5: isize,
    mut _6: isize,
) -> isize {
    mir! {
    type RET = isize;
    let _7: u32;
    let _8: i8;
    let _9: u16;
    let _10: *mut Adt42;
    let _11: f64;
    let _12: i32;
    let _13: *const i16;
    let _14: ();
    let _15: ();
    {
    _2 = [(-1874991484_i32),(-1748817624_i32),97385778_i32,(-1881010542_i32),(-1936964843_i32),(-1777884997_i32),824254178_i32];
    _6 = 8294990427179798369_usize as isize;
    RET = _5;
    RET = _5;
    _2 = [(-1491972830_i32),(-807141014_i32),1363656479_i32,(-985653549_i32),(-1086197621_i32),(-154226066_i32),(-557416940_i32)];
    _5 = RET + RET;
    RET = _5 >> _5;
    _8 = (-70_i8) >> _5;
    _7 = !2435379796_u32;
    _5 = -RET;
    _6 = !RET;
    _8 = (-72_i8) - (-128_i8);
    _6 = RET << _5;
    _8 = 108_i8 << RET;
    _3 = _7 as f32;
    _11 = (-29809_i16) as f64;
    _7 = !58508541_u32;
    _9 = 43765_u16;
    _8 = -(-96_i8);
    _3 = 179_u8 as f32;
    _11 = _3 as f64;
    _6 = -RET;
    Goto(bb1)
    }
    bb1 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(
    mut _1: [u16; 1],
    mut _2: *mut *mut &'static (u128,),
    mut _3: Adt35,
    mut _4: i32,
    mut _5: &'static [u128; 2],
    mut _6: u64,
    mut _7: Adt29,
    mut _8: isize,
    mut _9: *const i16,
    mut _10: isize,
) -> i16 {
    mir! {
    type RET = i16;
    let _11: bool;
    let _12: char;
    let _13: u128;
    let _14: &'static mut [isize; 3];
    let _15: f32;
    let _16: isize;
    let _17: *const i16;
    let _18: [u128; 4];
    let _19: char;
    let _20: bool;
    let _21: f64;
    let _22: isize;
    let _23: i8;
    let _24: usize;
    let _25: isize;
    let _26: f32;
    let _27: (i32,);
    let _28: f64;
    let _29: &'static *mut i16;
    let _30: *const Adt32;
    let _31: [isize; 3];
    let _32: f32;
    let _33: *mut i16;
    let _34: *mut i16;
    let _35: *mut Adt42;
    let _36: &'static Adt35;
    let _37: [i16; 2];
    let _38: [i8; 3];
    let _39: u32;
    let _40: f64;
    let _41: *const &'static [isize; 3];
    let _42: *mut bool;
    let _43: char;
    let _44: &'static mut u8;
    let _45: ();
    let _46: ();
    {
    _1 = [26207_u16];
    _8 = 60995_u16 as isize;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _6;
    _12 = '\u{5b5d9}';
    _11 = Field::<u64>(Variant(_7, 3), 0) == Field::<u64>(Variant(_7, 3), 0);
    _8 = _10;
    _10 = _8 >> _6;
    _6 = Field::<u64>(Variant(_7, 3), 0) * Field::<u64>(Variant(_7, 3), 0);
    Goto(bb1)
    }
    bb1 = {
    _8 = _10;
    _6 = Field::<u64>(Variant(_7, 3), 0) - Field::<u64>(Variant(_7, 3), 0);
    place!(Field::<i64>(Variant(_3, 0), 1)) = !(-6148583506926056340_i64);
    RET = -15473_i16;
    _9 = core::ptr::addr_of!(RET);
    _11 = false;
    _13 = !6224571737776516360551294454102975269_u128;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _4 as u64;
    (*_9) = (-21535_i16);
    _8 = Field::<usize>(Variant(_3, 0), 0) as isize;
    RET = 30451_i16 << _10;
    place!(Field::<usize>(Variant(_3, 0), 0)) = 6_usize;
    (*_9) = !(-772_i16);
    (*_9) = (-7210888052645481867652571567695708981_i128) as i16;
    place!(Field::<i64>(Variant(_3, 0), 1)) = (-7490241375942226902_i64);
    (*_9) = (-22159_i16);
    _4 = 477261533_i32 * (-1276617881_i32);
    _12 = '\u{278d1}';
    _12 = '\u{285e}';
    RET = 21316_i16 - 1387_i16;
    (*_9) = Field::<i64>(Variant(_3, 0), 1) as i16;
    (*_9) = (-29182_i16) & (-29055_i16);
    _11 = false;
    (*_9) = -(-28546_i16);
    match Field::<i64>(Variant(_3, 0), 1) {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    340282366920938463455884366055825984554 => bb6,
    _ => bb5
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    _11 = !true;
    _18 = [_13,_13,_13,_13];
    (*_9) = 25875_i16;
    _21 = 2586718301_u32 as f64;
    match (*_9) {
    0 => bb1,
    1 => bb3,
    2 => bb7,
    3 => bb8,
    4 => bb9,
    25875 => bb11,
    _ => bb10
    }
    }
    bb7 = {
    _8 = _10;
    _6 = Field::<u64>(Variant(_7, 3), 0) - Field::<u64>(Variant(_7, 3), 0);
    place!(Field::<i64>(Variant(_3, 0), 1)) = !(-6148583506926056340_i64);
    RET = -15473_i16;
    _9 = core::ptr::addr_of!(RET);
    _11 = false;
    _13 = !6224571737776516360551294454102975269_u128;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _4 as u64;
    (*_9) = (-21535_i16);
    _8 = Field::<usize>(Variant(_3, 0), 0) as isize;
    RET = 30451_i16 << _10;
    place!(Field::<usize>(Variant(_3, 0), 0)) = 6_usize;
    (*_9) = !(-772_i16);
    (*_9) = (-7210888052645481867652571567695708981_i128) as i16;
    place!(Field::<i64>(Variant(_3, 0), 1)) = (-7490241375942226902_i64);
    (*_9) = (-22159_i16);
    _4 = 477261533_i32 * (-1276617881_i32);
    _12 = '\u{278d1}';
    _12 = '\u{285e}';
    RET = 21316_i16 - 1387_i16;
    (*_9) = Field::<i64>(Variant(_3, 0), 1) as i16;
    (*_9) = (-29182_i16) & (-29055_i16);
    _11 = false;
    (*_9) = -(-28546_i16);
    match Field::<i64>(Variant(_3, 0), 1) {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    340282366920938463455884366055825984554 => bb6,
    _ => bb5
    }
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    Return()
    }
    bb11 = {
    place!(Field::<u64>(Variant(_7, 3), 0)) = !_6;
    (*_9) = !(-11246_i16);
    _16 = _10 << Field::<u64>(Variant(_7, 3), 0);
    (*_9) = (-14566_i16);
    _16 = _10;
    Call(_16 = fn5(Move(_2), Move(_7), _12, _4, (*_9), Move(_3), (*_9), Move(_9), (*_9), (*_9)), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    _15 = _6 as f32;
    _19 = _12;
    _1 = [48759_u16];
    _13 = 317608115121235866349914979057906901587_u128 & 110818163525140843231068236205830799356_u128;
    _13 = 44254549367760710521868181679437002712_u128 & 7762436255526012498229597227635727864_u128;
    _16 = _10 * _10;
    _10 = !_16;
    _24 = 17350676258025126765_usize + 1_usize;
    _20 = !_11;
    _11 = !_20;
    _7 = Adt29::Variant3 { fld0: _6 };
    place!(Field::<u64>(Variant(_7, 3), 0)) = _6 & _6;
    _9 = core::ptr::addr_of!(RET);
    _23 = !(-56_i8);
    (*_9) = (-5596_i16);
    _12 = _19;
    _15 = 4266326522_u32 as f32;
    (*_9) = 12053_i16 + 16892_i16;
    Goto(bb13)
    }
    bb13 = {
    _4 = -(-1002476269_i32);
    (*_9) = (-25241_i16);
    (*_9) = 12623_i16;
    (*_9) = 194_i16 >> _6;
    (*_9) = 942975621_u32 as i16;
    (*_9) = (-16673_i16);
    (*_9) = -(-20978_i16);
    (*_9) = -12389_i16;
    (*_9) = 2233_i16;
    match (*_9) {
    0 => bb10,
    1 => bb6,
    2233 => bb14,
    _ => bb8
    }
    }
    bb14 = {
    place!(Field::<u64>(Variant(_7, 3), 0)) = _6;
    _17 = core::ptr::addr_of!((*_9));
    match (*_17) {
    0 => bb10,
    1 => bb13,
    2 => bb3,
    3 => bb15,
    4 => bb16,
    5 => bb17,
    6 => bb18,
    2233 => bb20,
    _ => bb19
    }
    }
    bb15 = {
    _11 = !true;
    _18 = [_13,_13,_13,_13];
    (*_9) = 25875_i16;
    _21 = 2586718301_u32 as f64;
    match (*_9) {
    0 => bb1,
    1 => bb3,
    2 => bb7,
    3 => bb8,
    4 => bb9,
    25875 => bb11,
    _ => bb10
    }
    }
    bb16 = {
    Return()
    }
    bb17 = {
    Return()
    }
    bb18 = {
    _8 = _10;
    _6 = Field::<u64>(Variant(_7, 3), 0) - Field::<u64>(Variant(_7, 3), 0);
    place!(Field::<i64>(Variant(_3, 0), 1)) = !(-6148583506926056340_i64);
    RET = -15473_i16;
    _9 = core::ptr::addr_of!(RET);
    _11 = false;
    _13 = !6224571737776516360551294454102975269_u128;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _4 as u64;
    (*_9) = (-21535_i16);
    _8 = Field::<usize>(Variant(_3, 0), 0) as isize;
    RET = 30451_i16 << _10;
    place!(Field::<usize>(Variant(_3, 0), 0)) = 6_usize;
    (*_9) = !(-772_i16);
    (*_9) = (-7210888052645481867652571567695708981_i128) as i16;
    place!(Field::<i64>(Variant(_3, 0), 1)) = (-7490241375942226902_i64);
    (*_9) = (-22159_i16);
    _4 = 477261533_i32 * (-1276617881_i32);
    _12 = '\u{278d1}';
    _12 = '\u{285e}';
    RET = 21316_i16 - 1387_i16;
    (*_9) = Field::<i64>(Variant(_3, 0), 1) as i16;
    (*_9) = (-29182_i16) & (-29055_i16);
    _11 = false;
    (*_9) = -(-28546_i16);
    match Field::<i64>(Variant(_3, 0), 1) {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    340282366920938463455884366055825984554 => bb6,
    _ => bb5
    }
    }
    bb19 = {
    Return()
    }
    bb20 = {
    _1 = [24250_u16];
    Goto(bb21)
    }
    bb21 = {
    (*_17) = !(-9397_i16);
    (*_9) = (-13934_i16) * (-22305_i16);
    _25 = _10;
    (*_9) = 9779_i16 >> Field::<u64>(Variant(_7, 3), 0);
    _24 = !5_usize;
    _18 = [_13,_13,_13,_13];
    _13 = _20 as u128;
    _8 = _10;
    _27 = (_4,);
    (*_9) = 19370_i16;
    _19 = _12;
    _25 = _8 << _10;
    _26 = _15 - _15;
    match (*_9) {
    0 => bb22,
    1 => bb23,
    2 => bb24,
    3 => bb25,
    19370 => bb27,
    _ => bb26
    }
    }
    bb22 = {
    _8 = _10;
    _6 = Field::<u64>(Variant(_7, 3), 0) - Field::<u64>(Variant(_7, 3), 0);
    place!(Field::<i64>(Variant(_3, 0), 1)) = !(-6148583506926056340_i64);
    RET = -15473_i16;
    _9 = core::ptr::addr_of!(RET);
    _11 = false;
    _13 = !6224571737776516360551294454102975269_u128;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _4 as u64;
    (*_9) = (-21535_i16);
    _8 = Field::<usize>(Variant(_3, 0), 0) as isize;
    RET = 30451_i16 << _10;
    place!(Field::<usize>(Variant(_3, 0), 0)) = 6_usize;
    (*_9) = !(-772_i16);
    (*_9) = (-7210888052645481867652571567695708981_i128) as i16;
    place!(Field::<i64>(Variant(_3, 0), 1)) = (-7490241375942226902_i64);
    (*_9) = (-22159_i16);
    _4 = 477261533_i32 * (-1276617881_i32);
    _12 = '\u{278d1}';
    _12 = '\u{285e}';
    RET = 21316_i16 - 1387_i16;
    (*_9) = Field::<i64>(Variant(_3, 0), 1) as i16;
    (*_9) = (-29182_i16) & (-29055_i16);
    _11 = false;
    (*_9) = -(-28546_i16);
    match Field::<i64>(Variant(_3, 0), 1) {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    340282366920938463455884366055825984554 => bb6,
    _ => bb5
    }
    }
    bb23 = {
    Return()
    }
    bb24 = {
    Return()
    }
    bb25 = {
    Return()
    }
    bb26 = {
    _11 = !true;
    _18 = [_13,_13,_13,_13];
    (*_9) = 25875_i16;
    _21 = 2586718301_u32 as f64;
    match (*_9) {
    0 => bb1,
    1 => bb3,
    2 => bb7,
    3 => bb8,
    4 => bb9,
    25875 => bb11,
    _ => bb10
    }
    }
    bb27 = {
    _13 = 302692485973246327227499502620198738644_u128 - 231349051944824590031885074515352077645_u128;
    _25 = _10 * _10;
    (*_9) = 23240_i16 * 7551_i16;
    _24 = 8797438550316783292_usize << _25;
    Goto(bb28)
    }
    bb28 = {
    _18 = [_13,_13,_13,_13];
    (*_9) = 9796_i16 | 21406_i16;
    _17 = core::ptr::addr_of!((*_9));
    (*_17) = _19 as i16;
    Goto(bb29)
    }
    bb29 = {
    (*_17) = 4562_i16 | 29273_i16;
    _32 = _26;
    (*_17) = _21 as i16;
    (*_9) = (-19274_i16) & (-6918_i16);
    _31 = [_25,_25,_10];
    (*_9) = 5605_i16;
    (*_9) = 29777_i16 & 19016_i16;
    (*_9) = _11 as i16;
    (*_9) = 25123_i16;
    _21 = 1938514564_u32 as f64;
    _15 = _26;
    _8 = _16;
    _18 = [_13,_13,_13,_13];
    (*_9) = -(-5622_i16);
    Goto(bb30)
    }
    bb30 = {
    (*_9) = _19 as i16;
    (*_9) = -(-2239_i16);
    _27.0 = -_4;
    (*_9) = 32206_i16 << _10;
    (*_9) = (-32223_i16) ^ (-21269_i16);
    (*_9) = (-8986_i16);
    _14 = &mut _31;
    (*_9) = 45765_u16 as i16;
    _18 = [_13,_13,_13,_13];
    _3 = Adt35::Variant2 { fld0: _27,fld1: _19,fld2: (*_14),fld3: _23,fld4: 58268_u16,fld5: 3432914939_u32 };
    (*_9) = !703_i16;
    _12 = Field::<char>(Variant(_3, 2), 1);
    (*_9) = 3784_i16 - 18420_i16;
    _27.0 = _13 as i32;
    (*_9) = 17740_i16;
    (*_14) = Field::<[isize; 3]>(Variant(_3, 2), 2);
    (*_9) = 25736_i16 << _8;
    _21 = 7313311362242086654_i64 as f64;
    _18 = [_13,_13,_13,_13];
    _16 = -_8;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _6 - _6;
    (*_9) = (-22583_i16);
    _20 = _25 == _25;
    match (*_9) {
    0 => bb28,
    1 => bb18,
    2 => bb31,
    3 => bb32,
    340282366920938463463374607431768188873 => bb34,
    _ => bb33
    }
    }
    bb31 = {
    _8 = _10;
    _6 = Field::<u64>(Variant(_7, 3), 0) - Field::<u64>(Variant(_7, 3), 0);
    place!(Field::<i64>(Variant(_3, 0), 1)) = !(-6148583506926056340_i64);
    RET = -15473_i16;
    _9 = core::ptr::addr_of!(RET);
    _11 = false;
    _13 = !6224571737776516360551294454102975269_u128;
    place!(Field::<u64>(Variant(_7, 3), 0)) = _4 as u64;
    (*_9) = (-21535_i16);
    _8 = Field::<usize>(Variant(_3, 0), 0) as isize;
    RET = 30451_i16 << _10;
    place!(Field::<usize>(Variant(_3, 0), 0)) = 6_usize;
    (*_9) = !(-772_i16);
    (*_9) = (-7210888052645481867652571567695708981_i128) as i16;
    place!(Field::<i64>(Variant(_3, 0), 1)) = (-7490241375942226902_i64);
    (*_9) = (-22159_i16);
    _4 = 477261533_i32 * (-1276617881_i32);
    _12 = '\u{278d1}';
    _12 = '\u{285e}';
    RET = 21316_i16 - 1387_i16;
    (*_9) = Field::<i64>(Variant(_3, 0), 1) as i16;
    (*_9) = (-29182_i16) & (-29055_i16);
    _11 = false;
    (*_9) = -(-28546_i16);
    match Field::<i64>(Variant(_3, 0), 1) {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    340282366920938463455884366055825984554 => bb6,
    _ => bb5
    }
    }
    bb32 = {
    Return()
    }
    bb33 = {
    _11 = !true;
    _18 = [_13,_13,_13,_13];
    (*_9) = 25875_i16;
    _21 = 2586718301_u32 as f64;
    match (*_9) {
    0 => bb1,
    1 => bb3,
    2 => bb7,
    3 => bb8,
    4 => bb9,
    25875 => bb11,
    _ => bb10
    }
    }
    bb34 = {
    place!(Field::<(i32,)>(Variant(_3, 2), 0)).0 = _20 as i32;
    (*_9) = !21194_i16;
    _37 = [(*_9),(*_9)];
    _23 = Field::<i8>(Variant(_3, 2), 3) + Field::<i8>(Variant(_3, 2), 3);
    _14 = &mut place!(Field::<[isize; 3]>(Variant(_3, 2), 2));
    _34 = core::ptr::addr_of_mut!((*_9));
    (*_9) = (-27186_i16) | (-13757_i16);
    _28 = (-118678366337158088017081503948823263148_i128) as f64;
    (*_9) = (-12477_i16) * (-32310_i16);
    _34 = core::ptr::addr_of_mut!((*_9));
    _16 = RET as isize;
    _13 = 338045317829301050645374209194229465985_u128 & 320030083915502217035001512121439896850_u128;
    _39 = _12 as u32;
    _27 = (_4,);
    (*_34) = _24 as i16;
    _25 = !_10;
    _11 = (*_34) != (*_34);
    _13 = 93711664149330484317707821053134692164_u128 | 171236050420815747964360276250913832253_u128;
    Goto(bb35)
    }
    bb35 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(
    mut _1: *mut *mut &'static (u128,),
    mut _2: Adt29,
    mut _3: char,
    mut _4: i32,
    mut _5: i16,
    mut _6: Adt35,
    mut _7: i16,
    mut _8: *const i16,
    mut _9: i16,
    mut _10: i16,
) -> isize {
    mir! {
    type RET = isize;
    let _11: ([u128; 8], (char,));
    let _12: [i8; 3];
    let _13: isize;
    let _14: i16;
    let _15: bool;
    let _16: isize;
    let _17: *mut i16;
    let _18: *const i128;
    let _19: f32;
    let _20: &'static mut f64;
    let _21: isize;
    let _22: char;
    let _23: (i64, *const [i8; 6]);
    let _24: (f32, &'static mut (i32,));
    let _25: u32;
    let _26: *mut i32;
    let _27: ([u64; 8], [isize; 3], &'static &'static mut [isize; 3]);
    let _28: isize;
    let _29: *mut bool;
    let _30: f64;
    let _31: u16;
    let _32: &'static mut f64;
    let _33: char;
    let _34: bool;
    let _35: char;
    let _36: i32;
    let _37: *mut *mut *mut &'static (u128,);
    let _38: char;
    let _39: (i64, *const [i8; 6]);
    let _40: *const i16;
    let _41: i8;
    let _42: f64;
    let _43: i128;
    let _44: *mut *mut &'static (u128,);
    let _45: isize;
    let _46: u128;
    let _47: i32;
    let _48: *const Adt32;
    let _49: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _50: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _51: *const Adt27;
    let _52: f32;
    let _53: f64;
    let _54: u32;
    let _55: &'static (u128,);
    let _56: isize;
    let _57: *const &'static mut (i32,);
    let _58: *const i32;
    let _59: isize;
    let _60: ();
    let _61: ();
    {
    _5 = _10 - _9;
    RET = 9223372036854775807_isize | (-75_isize);
    _10 = _9 & _5;
    _8 = core::ptr::addr_of!(_5);
    _5 = Field::<usize>(Variant(_6, 0), 0) as i16;
    (*_8) = _7 + _10;
    (*_8) = 132886344290869517149422472251658550832_i128 as i16;
    (*_8) = _10 * _9;
    (*_8) = _10;
    _11.1.0 = _3;
    (*_8) = _10 | _9;
    (*_8) = -_9;
    _11.0 = [32419573633908388816911765171541143004_u128,313107141848794322982543973829403013263_u128,191430974396814129720683913533031754115_u128,222561461000422647630935776983650560877_u128,214839837953846324687242949867203882490_u128,207099099815441315862843680401647235241_u128,64879541796252484021282136901677008229_u128,112112359882170142707277999441058914571_u128];
    _11.1 = (_3,);
    (*_8) = _7 & _9;
    _11.0 = [199445933291798167138343326494408742911_u128,50098310295578812136673173707919226953_u128,128272353854683549397302626849949650312_u128,16208275167555341506855915720377541989_u128,195112711852568151371452409030580996982_u128,160074318950729633308557714709545453035_u128,162578975310541494443290200998981046389_u128,333661116092434097204844269224927666106_u128];
    _14 = Field::<usize>(Variant(_6, 0), 0) as i16;
    (*_8) = _10;
    (*_8) = _10 << Field::<u64>(Variant(_2, 3), 0);
    Goto(bb1)
    }
    bb1 = {
    _2 = Adt29::Variant0 { fld0: 107662614_u32,fld1: 155992500419241110276729123275084223539_i128,fld2: 26_u8,fld3: (-79_i8),fld4: 64318_u16,fld5: _4 };
    _12 = [(-114_i8),49_i8,(-53_i8)];
    place!(Field::<u32>(Variant(_2, 0), 0)) = !2481003718_u32;
    (*_8) = _10;
    _16 = RET << (*_8);
    _11.0 = [282704492637767070763008701213410210280_u128,140737263578000795667171447045359436440_u128,41615373715849028185295466952110202692_u128,106742930271978573130640894900251927826_u128,169207438676723534238425972192499456556_u128,252956856908508390055295817994208379207_u128,213081907798965911612813030160178497584_u128,72055554906335095969563494388247302240_u128];
    _9 = -(*_8);
    _15 = (*_8) >= (*_8);
    _13 = (-77806825021423645659166078765970076603_i128) as isize;
    _3 = _11.1.0;
    (*_8) = _10;
    place!(Field::<u8>(Variant(_2, 0), 2)) = Field::<usize>(Variant(_6, 0), 0) as u8;
    _3 = _11.1.0;
    (*_8) = (-146921963116905593114310384249171271039_i128) as i16;
    (*_8) = _7;
    _18 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_2, 0), 1)));
    _11.1 = (_3,);
    (*_18) = 105102267076637535685993576000883688837_i128 & 41747026821511849267516836308244419063_i128;
    Goto(bb2)
    }
    bb2 = {
    (*_18) = Field::<u32>(Variant(_2, 0), 0) as i128;
    _9 = _5;
    (*_18) = 169898698547131673418371211895492509760_i128;
    (*_18) = 103693905673761177881375465835508182528_i128;
    (*_18) = 113987791624117203859161477830576661049_i128;
    _11.1 = (_3,);
    (*_8) = _9 | _7;
    (*_18) = -827979251348914846059998625769838653_i128;
    (*_18) = (-78356426858441994665957091613624098478_i128) >> (*_8);
    _14 = (*_8) & (*_8);
    match Field::<i64>(Variant(_6, 0), 1) {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    340282366920938463455884366055825984554 => bb11,
    _ => bb10
    }
    }
    bb3 = {
    _2 = Adt29::Variant0 { fld0: 107662614_u32,fld1: 155992500419241110276729123275084223539_i128,fld2: 26_u8,fld3: (-79_i8),fld4: 64318_u16,fld5: _4 };
    _12 = [(-114_i8),49_i8,(-53_i8)];
    place!(Field::<u32>(Variant(_2, 0), 0)) = !2481003718_u32;
    (*_8) = _10;
    _16 = RET << (*_8);
    _11.0 = [282704492637767070763008701213410210280_u128,140737263578000795667171447045359436440_u128,41615373715849028185295466952110202692_u128,106742930271978573130640894900251927826_u128,169207438676723534238425972192499456556_u128,252956856908508390055295817994208379207_u128,213081907798965911612813030160178497584_u128,72055554906335095969563494388247302240_u128];
    _9 = -(*_8);
    _15 = (*_8) >= (*_8);
    _13 = (-77806825021423645659166078765970076603_i128) as isize;
    _3 = _11.1.0;
    (*_8) = _10;
    place!(Field::<u8>(Variant(_2, 0), 2)) = Field::<usize>(Variant(_6, 0), 0) as u8;
    _3 = _11.1.0;
    (*_8) = (-146921963116905593114310384249171271039_i128) as i16;
    (*_8) = _7;
    _18 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_2, 0), 1)));
    _11.1 = (_3,);
    (*_18) = 105102267076637535685993576000883688837_i128 & 41747026821511849267516836308244419063_i128;
    Goto(bb2)
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    Return()
    }
    bb11 = {
    (*_8) = 15596_u16 as i16;
    place!(Field::<i8>(Variant(_2, 0), 3)) = 64_i8 & 75_i8;
    (*_18) = Field::<u32>(Variant(_2, 0), 0) as i128;
    (*_18) = _16 as i128;
    RET = !_13;
    _22 = _3;
    _11.0 = [207554328326887417924389368612945068312_u128,249352993491972801449944644302434901447_u128,12331703762618084119782127548677739920_u128,90668684356666609676068521664750179121_u128,87109041401478851425858072937509430551_u128,210216042302196569554065519719131890651_u128,234717962404687084373131122965545335677_u128,266970895050858848018064328841820144028_u128];
    place!(Field::<i128>(Variant(_2, 0), 1)) = (-105639054429627417110520881987706517780_i128);
    place!(Field::<u32>(Variant(_2, 0), 0)) = 2439526798_u32 * 3065545441_u32;
    _14 = (*_8) | _10;
    (*_18) = 25083013790604223068295151055714850871_i128;
    _9 = (*_18) as i16;
    place!(Field::<i128>(Variant(_2, 0), 1)) = -37964353280895112826033576646904606729_i128;
    (*_18) = _22 as i128;
    _18 = core::ptr::addr_of!((*_18));
    (*_8) = _9 & _10;
    (*_18) = (-134535713677614863969144980866348354452_i128) - (-30117487863039855064259583692450290866_i128);
    RET = _16 >> (*_8);
    _4 = Field::<i8>(Variant(_2, 0), 3) as i32;
    (*_18) = 97714718524327536676686622234400480795_i128 - (-105178466241919857001428773013602142307_i128);
    _19 = Field::<i32>(Variant(_2, 0), 5) as f32;
    (*_8) = !_10;
    _5 = _9 >> (*_18);
    place!(Field::<i64>(Variant(_6, 0), 1)) = (-8708059087602261447_i64) - (-1874819116119700405_i64);
    (*_18) = (-144329393954367321272563505253831485256_i128);
    _7 = (*_8) << _10;
    (*_8) = _10;
    _16 = RET >> Field::<usize>(Variant(_6, 0), 0);
    Call((*_8) = core::intrinsics::bswap(_7), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    _11.1.0 = _22;
    (*_8) = -_7;
    _14 = (*_8) << (*_8);
    (*_8) = _14 * _7;
    match (*_18) {
    195952972966571142190811102177936726200 => bb14,
    _ => bb13
    }
    }
    bb13 = {
    Return()
    }
    bb14 = {
    place!(Field::<i64>(Variant(_6, 0), 1)) = 5315599969175180697_i64;
    (*_18) = !(-36650554351787164598453161914631063484_i128);
    Goto(bb15)
    }
    bb15 = {
    place!(Field::<usize>(Variant(_6, 0), 0)) = !2_usize;
    place!(Field::<i8>(Variant(_2, 0), 3)) = 210489598372862292850466369499250521067_u128 as i8;
    place!(Field::<i8>(Variant(_2, 0), 3)) = -(-120_i8);
    _16 = _4 as isize;
    (*_8) = _14 * _7;
    (*_18) = (-88728985263048030058246556178653464840_i128) << (*_8);
    _13 = RET;
    (*_8) = Field::<u8>(Variant(_2, 0), 2) as i16;
    _14 = (*_8);
    (*_8) = _10 & _9;
    _14 = (*_8);
    _16 = !RET;
    _27.1 = [RET,_13,RET];
    _27.0 = [18440011877300860421_u64,10185827680929032688_u64,6319596653318922800_u64,17973687050760621255_u64,16065060057815741310_u64,13587590723493235241_u64,10588151032879955975_u64,3539388431310755760_u64];
    (*_8) = _9 * _14;
    (*_18) = (-52079428480932861180376110196375222031_i128) >> RET;
    _26 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_2, 0), 5)));
    (*_18) = 16015357836134551333_u64 as i128;
    Goto(bb16)
    }
    bb16 = {
    (*_8) = Field::<i64>(Variant(_6, 0), 1) as i16;
    Goto(bb17)
    }
    bb17 = {
    (*_26) = Field::<i64>(Variant(_6, 0), 1) as i32;
    (*_26) = -_4;
    (*_8) = !_14;
    (*_18) = (-79304409961963693681332709628469072068_i128);
    _11.0 = [322068612427413476214496004588937934660_u128,336105102790223868166684522792623023752_u128,146491914077072904976774550132223314201_u128,331146244912137059738698285331888333567_u128,62009040007656085491770386779878098902_u128,112510735688216168545988507096532866727_u128,284483588004377288232657648813814082224_u128,136914332580332538391724228015646303523_u128];
    (*_26) = _4 | _4;
    Call(_6 = fn6(Move(_8), Move(_1), (*_18), Move(_26), (*_18), Field::<i128>(Variant(_2, 0), 1), Move(_18), _27.1, (*_26), (*_8), (*_18)), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    _23.0 = Field::<i64>(Variant(_6, 0), 1) | Field::<i64>(Variant(_6, 0), 1);
    _25 = 227150917110868071654047890167050533663_u128 as u32;
    place!(Field::<usize>(Variant(_6, 0), 0)) = 5_usize - 2946085601278405953_usize;
    _8 = core::ptr::addr_of!(_14);
    (*_8) = _10 ^ _7;
    (*_8) = 6469229713769438742_u64 as i16;
    (*_8) = _9 & _10;
    _4 = Field::<usize>(Variant(_6, 0), 0) as i32;
    (*_8) = _23.0 as i16;
    (*_8) = !_10;
    _9 = (*_8) ^ (*_8);
    _24.0 = _19;
    place!(Field::<u16>(Variant(_2, 0), 4)) = !45657_u16;
    _17 = core::ptr::addr_of_mut!(_14);
    _28 = _16 ^ RET;
    _26 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_2, 0), 5)));
    place!(Field::<i32>(Variant(_2, 0), 5)) = _4 & _4;
    place!(Field::<u16>(Variant(_2, 0), 4)) = 13700_u16;
    (*_8) = _7 & _5;
    Goto(bb19)
    }
    bb19 = {
    _30 = _13 as f64;
    (*_26) = _4 | _4;
    (*_8) = _7 << (*_26);
    _21 = _16 ^ _28;
    _11.1 = (_22,);
    (*_26) = _4 ^ _4;
    _16 = _21 - _13;
    _28 = !_16;
    (*_8) = Field::<u8>(Variant(_2, 0), 2) as i16;
    (*_26) = _4 - _4;
    _35 = _3;
    (*_26) = _4;
    _16 = 12378439575055394065_u64 as isize;
    _10 = Field::<usize>(Variant(_6, 0), 0) as i16;
    (*_26) = _4 & _4;
    _11.0 = [256625962191087316753692799304218812916_u128,30447363134307347332730639693404092068_u128,139506547195587715956557841108742917448_u128,48115350125878307523086767677566917895_u128,147183079947500209566656586813675665256_u128,95079456724850633048187642899336134788_u128,144633717249624276523513126204215981282_u128,206178544381613034353756134151768746735_u128];
    _13 = _28 & _28;
    Goto(bb20)
    }
    bb20 = {
    _18 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_2, 0), 1)));
    _23.0 = Field::<i64>(Variant(_6, 0), 1) * Field::<i64>(Variant(_6, 0), 1);
    (*_26) = _4;
    (*_18) = 2214421607944305249342625524311536480_i128 * (-87766853935166545215812331770211914003_i128);
    _19 = _24.0 + _24.0;
    (*_26) = _4 - _4;
    _11.1.0 = _35;
    _11.0 = [326638844093658169024526678093936173750_u128,47924726341661436962168709712305078288_u128,95240161462496961139050500448551568767_u128,255261047320818085083160319638626010968_u128,37101897763015751427664232305573085342_u128,5425868762975244796110356882025753110_u128,149569825742798911906664205402279048619_u128,261182604093533248603250970536882683607_u128];
    match Field::<u16>(Variant(_2, 0), 4) {
    0 => bb7,
    1 => bb3,
    13700 => bb22,
    _ => bb21
    }
    }
    bb21 = {
    Return()
    }
    bb22 = {
    _34 = _15 | _15;
    (*_8) = _9 * _9;
    _40 = core::ptr::addr_of!((*_8));
    (*_18) = _30 as i128;
    _38 = _22;
    (*_8) = _9 >> _28;
    _28 = Field::<usize>(Variant(_6, 0), 0) as isize;
    _37 = core::ptr::addr_of_mut!(_1);
    (*_18) = 86189958738751180912307717065666300470_i128;
    (*_8) = _13 as i16;
    (*_26) = _4;
    match (*_18) {
    86189958738751180912307717065666300470 => bb23,
    _ => bb1
    }
    }
    bb23 = {
    _29 = core::ptr::addr_of_mut!(_34);
    (*_8) = !_5;
    _45 = RET | _21;
    (*_29) = _15;
    (*_29) = _3 >= _22;
    _42 = _30;
    (*_26) = _4 << (*_8);
    RET = Field::<u16>(Variant(_2, 0), 4) as isize;
    _14 = _5 >> (*_26);
    _20 = &mut _30;
    (*_18) = 14439252432299692181416414447928961005_i128 + 90830950089459061635835974247019131761_i128;
    _7 = (*_8) - (*_8);
    (*_29) = _19 > _24.0;
    (*_20) = _42 * _42;
    (*_20) = -_42;
    (*_8) = _9 | _5;
    (*_20) = _42 + _42;
    (*_8) = -_7;
    (*_8) = -_7;
    _47 = (*_26) - (*_26);
    (*_8) = !_5;
    Goto(bb24)
    }
    bb24 = {
    (*_18) = (-89449232471027977840182483873669591235_i128) & (-91834951541202057135510187188921223155_i128);
    _5 = (*_8) << (*_26);
    (*_18) = (-67138046116368995068223400546167662870_i128) | (-150663846630390454623942188633965451556_i128);
    (*_26) = _47 >> (*_8);
    (*_20) = _42 - _42;
    _43 = (*_18);
    (*_8) = _9 >> _5;
    (*_18) = _43 >> (*_8);
    (*_18) = _43;
    _32 = &mut (*_20);
    (*_32) = _42 - _42;
    (*_18) = _43 ^ _43;
    (*_18) = _43 & _43;
    (*_18) = _43 | _43;
    (*_18) = _43;
    _52 = -_24.0;
    (*_8) = _7;
    (*_29) = _15;
    (*_26) = _4;
    _34 = (*_8) > (*_8);
    _41 = Field::<i8>(Variant(_2, 0), 3) * Field::<i8>(Variant(_2, 0), 3);
    (*_8) = _5 | _5;
    _18 = core::ptr::addr_of!((*_18));
    Goto(bb25)
    }
    bb25 = {
    _50.0 = core::ptr::addr_of!((*_8));
    (*_26) = -_47;
    match Field::<u16>(Variant(_2, 0), 4) {
    0 => bb1,
    1 => bb19,
    2 => bb6,
    3 => bb4,
    4 => bb11,
    5 => bb26,
    13700 => bb28,
    _ => bb27
    }
    }
    bb26 = {
    _2 = Adt29::Variant0 { fld0: 107662614_u32,fld1: 155992500419241110276729123275084223539_i128,fld2: 26_u8,fld3: (-79_i8),fld4: 64318_u16,fld5: _4 };
    _12 = [(-114_i8),49_i8,(-53_i8)];
    place!(Field::<u32>(Variant(_2, 0), 0)) = !2481003718_u32;
    (*_8) = _10;
    _16 = RET << (*_8);
    _11.0 = [282704492637767070763008701213410210280_u128,140737263578000795667171447045359436440_u128,41615373715849028185295466952110202692_u128,106742930271978573130640894900251927826_u128,169207438676723534238425972192499456556_u128,252956856908508390055295817994208379207_u128,213081907798965911612813030160178497584_u128,72055554906335095969563494388247302240_u128];
    _9 = -(*_8);
    _15 = (*_8) >= (*_8);
    _13 = (-77806825021423645659166078765970076603_i128) as isize;
    _3 = _11.1.0;
    (*_8) = _10;
    place!(Field::<u8>(Variant(_2, 0), 2)) = Field::<usize>(Variant(_6, 0), 0) as u8;
    _3 = _11.1.0;
    (*_8) = (-146921963116905593114310384249171271039_i128) as i16;
    (*_8) = _7;
    _18 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_2, 0), 1)));
    _11.1 = (_3,);
    (*_18) = 105102267076637535685993576000883688837_i128 & 41747026821511849267516836308244419063_i128;
    Goto(bb2)
    }
    bb27 = {
    (*_18) = Field::<u32>(Variant(_2, 0), 0) as i128;
    _9 = _5;
    (*_18) = 169898698547131673418371211895492509760_i128;
    (*_18) = 103693905673761177881375465835508182528_i128;
    (*_18) = 113987791624117203859161477830576661049_i128;
    _11.1 = (_3,);
    (*_8) = _9 | _7;
    (*_18) = -827979251348914846059998625769838653_i128;
    (*_18) = (-78356426858441994665957091613624098478_i128) >> (*_8);
    _14 = (*_8) & (*_8);
    match Field::<i64>(Variant(_6, 0), 1) {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    340282366920938463455884366055825984554 => bb11,
    _ => bb10
    }
    }
    bb28 = {
    (*_18) = _43 & _43;
    place!(Field::<usize>(Variant(_6, 0), 0)) = 11481508633478182206_usize - 4248028105877748220_usize;
    (*_29) = (*_8) >= _14;
    _27.1 = [_45,_45,_13];
    (*_8) = _22 as i16;
    (*_29) = _13 != _13;
    (*_26) = _4 + _47;
    (*_29) = !_15;
    _54 = _25;
    _49.2 = (206084164923473457998143691247584236835_u128,);
    Call((*_8) = core::intrinsics::transmute(Field::<u16>(Variant(_2, 0), 4)), ReturnTo(bb29), UnwindUnreachable())
    }
    bb29 = {
    _38 = _35;
    (*_26) = !_47;
    Goto(bb30)
    }
    bb30 = {
    (*_8) = _5 * _7;
    _5 = (*_8) << (*_8);
    (*_8) = _5 + _7;
    _50.3 = &_6;
    (*_26) = _47 ^ _4;
    _50.2 = _49.2;
    _49.2 = (_50.2.0,);
    _6 = Adt35::Variant0 { fld0: 11210907474534556162_usize,fld1: _23.0 };
    (*_26) = -_4;
    (*_18) = _43;
    (*_29) = _15;
    match _49.2.0 {
    0 => bb14,
    1 => bb2,
    2 => bb31,
    3 => bb32,
    4 => bb33,
    206084164923473457998143691247584236835 => bb35,
    _ => bb34
    }
    }
    bb31 = {
    _18 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_2, 0), 1)));
    _23.0 = Field::<i64>(Variant(_6, 0), 1) * Field::<i64>(Variant(_6, 0), 1);
    (*_26) = _4;
    (*_18) = 2214421607944305249342625524311536480_i128 * (-87766853935166545215812331770211914003_i128);
    _19 = _24.0 + _24.0;
    (*_26) = _4 - _4;
    _11.1.0 = _35;
    _11.0 = [326638844093658169024526678093936173750_u128,47924726341661436962168709712305078288_u128,95240161462496961139050500448551568767_u128,255261047320818085083160319638626010968_u128,37101897763015751427664232305573085342_u128,5425868762975244796110356882025753110_u128,149569825742798911906664205402279048619_u128,261182604093533248603250970536882683607_u128];
    match Field::<u16>(Variant(_2, 0), 4) {
    0 => bb7,
    1 => bb3,
    13700 => bb22,
    _ => bb21
    }
    }
    bb32 = {
    (*_18) = _43 & _43;
    place!(Field::<usize>(Variant(_6, 0), 0)) = 11481508633478182206_usize - 4248028105877748220_usize;
    (*_29) = (*_8) >= _14;
    _27.1 = [_45,_45,_13];
    (*_8) = _22 as i16;
    (*_29) = _13 != _13;
    (*_26) = _4 + _47;
    (*_29) = !_15;
    _54 = _25;
    _49.2 = (206084164923473457998143691247584236835_u128,);
    Call((*_8) = core::intrinsics::transmute(Field::<u16>(Variant(_2, 0), 4)), ReturnTo(bb29), UnwindUnreachable())
    }
    bb33 = {
    (*_8) = Field::<i64>(Variant(_6, 0), 1) as i16;
    Goto(bb17)
    }
    bb34 = {
    _30 = _13 as f64;
    (*_26) = _4 | _4;
    (*_8) = _7 << (*_26);
    _21 = _16 ^ _28;
    _11.1 = (_22,);
    (*_26) = _4 ^ _4;
    _16 = _21 - _13;
    _28 = !_16;
    (*_8) = Field::<u8>(Variant(_2, 0), 2) as i16;
    (*_26) = _4 - _4;
    _35 = _3;
    (*_26) = _4;
    _16 = 12378439575055394065_u64 as isize;
    _10 = Field::<usize>(Variant(_6, 0), 0) as i16;
    (*_26) = _4 & _4;
    _11.0 = [256625962191087316753692799304218812916_u128,30447363134307347332730639693404092068_u128,139506547195587715956557841108742917448_u128,48115350125878307523086767677566917895_u128,147183079947500209566656586813675665256_u128,95079456724850633048187642899336134788_u128,144633717249624276523513126204215981282_u128,206178544381613034353756134151768746735_u128];
    _13 = _28 & _28;
    Goto(bb20)
    }
    bb35 = {
    _53 = -(*_32);
    _8 = core::ptr::addr_of!((*_8));
    (*_26) = _47 << (*_8);
    (*_8) = _5 >> (*_26);
    _14 = _9 + _5;
    RET = _13 * _45;
    Goto(bb36)
    }
    bb36 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(
    mut _1: *const i16,
    mut _2: *mut *mut &'static (u128,),
    mut _3: i128,
    mut _4: *mut i32,
    mut _5: i128,
    mut _6: i128,
    mut _7: *const i128,
    mut _8: [isize; 3],
    mut _9: i32,
    mut _10: i16,
    mut _11: i128,
) -> Adt35 {
    mir! {
    type RET = Adt35;
    let _12: f64;
    let _13: Adt74;
    let _14: f32;
    let _15: &'static mut &'static *mut i16;
    let _16: i64;
    let _17: &'static (u128,);
    let _18: *mut *mut *mut &'static (u128,);
    let _19: &'static mut f64;
    let _20: ([u128; 8], (char,));
    let _21: u128;
    let _22: isize;
    let _23: &'static &'static mut [isize; 3];
    let _24: char;
    let _25: isize;
    let _26: &'static mut u8;
    let _27: f32;
    let _28: *mut *mut &'static (u128,);
    let _29: isize;
    let _30: [isize; 3];
    let _31: f32;
    let _32: [u8; 1];
    let _33: isize;
    let _34: *mut *mut *mut &'static (u128,);
    let _35: *const &'static [isize; 3];
    let _36: u8;
    let _37: i128;
    let _38: *const [i8; 6];
    let _39: i8;
    let _40: f32;
    let _41: bool;
    let _42: *const &'static [isize; 3];
    let _43: u16;
    let _44: *const Adt32;
    let _45: ();
    let _46: ();
    {
    _6 = 132_u8 as i128;
    _5 = _6 + _11;
    _4 = core::ptr::addr_of_mut!(_9);
    (*_4) = 1192518530_i32 | (-1643434485_i32);
    (*_4) = (-1699305223_i32);
    (*_4) = -38814003_i32;
    _12 = 96_i8 as f64;
    (*_4) = 1782997408_i32 ^ (-1699558392_i32);
    (*_4) = (-293544601_i32) >> _3;
    match _3 {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    5 => bb6,
    6 => bb7,
    260977956958974769782041897803299139388 => bb9,
    _ => bb8
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    (*_4) = 1371778468_i32 ^ (-1441840595_i32);
    (*_4) = 1202234173_i32 & 1842524839_i32;
    _5 = _3 & _6;
    (*_4) = 461322262_i32 + 2102522534_i32;
    (*_4) = 837345802_i32;
    _3 = _5;
    (*_4) = _3 as i32;
    _11 = 6654784281802418423_i64 as i128;
    _6 = 8804457908300074140_usize as i128;
    (*_4) = _12 as i32;
    RET = Adt35::Variant0 { fld0: 6_usize,fld1: 2420558643737649811_i64 };
    _14 = _12 as f32;
    (*_4) = (-1717162629_i32);
    _9 = (-1516944425_i32) - (-2060492787_i32);
    _4 = core::ptr::addr_of_mut!((*_4));
    place!(Field::<usize>(Variant(RET, 0), 0)) = 2033807322419301800_usize ^ 872304118549050109_usize;
    _6 = -_5;
    (*_4) = -(-1700401389_i32);
    (*_4) = 167133261_i32;
    _8 = [(-10_isize),(-9223372036854775808_isize),13_isize];
    _11 = _3 - _6;
    (*_4) = !(-325154243_i32);
    (*_4) = 2062463083_i32;
    (*_4) = 47032_u16 as i32;
    _7 = core::ptr::addr_of!(_6);
    place!(Field::<i64>(Variant(RET, 0), 1)) = false as i64;
    (*_7) = _3 & _5;
    Call((*_4) = core::intrinsics::bswap(1880904752_i32), ReturnTo(bb10), UnwindUnreachable())
    }
    bb10 = {
    (*_4) = -935283665_i32;
    (*_7) = false as i128;
    _12 = 10739489367233429383_u64 as f64;
    (*_4) = (-2067677537_i32);
    (*_4) = (-487576448_i32) ^ 380895426_i32;
    (*_4) = -1427663477_i32;
    (*_4) = (-1709958687_i32);
    (*_4) = _12 as i32;
    (*_7) = _11 - _3;
    _3 = (*_7) | (*_7);
    _16 = Field::<i64>(Variant(RET, 0), 1);
    (*_7) = -_3;
    (*_4) = (-73_i8) as i32;
    place!(Field::<usize>(Variant(RET, 0), 0)) = 92067531979035642570815420589770061547_u128 as usize;
    _10 = !24322_i16;
    _19 = &mut _12;
    (*_19) = (-9_i8) as f64;
    _14 = (*_7) as f32;
    _20.0 = [263408866471385987039942131485306668208_u128,206032768765898425275825591021745522385_u128,234605420418046341768376633906228075694_u128,250572605958183040695662067406101667267_u128,204807158020338250171463094300108179285_u128,20237489822551778576326257164015850178_u128,42536557257270954772668048228953060162_u128,198344922757621052041840015041950318811_u128];
    (*_4) = 464616443_i32;
    _18 = core::ptr::addr_of_mut!(_2);
    Call((*_4) = fn7(Move((*_18)), Move(_18), Move(_19), Move(_7), Move(_1), (*_7), (*_19)), ReturnTo(bb11), UnwindUnreachable())
    }
    bb11 = {
    _20.1.0 = '\u{1c7f1}';
    _5 = _6 << (*_4);
    place!(Field::<usize>(Variant(RET, 0), 0)) = 1_usize;
    (*_4) = (-1850187441_i32);
    _6 = 1919988126_u32 as i128;
    _4 = core::ptr::addr_of_mut!((*_4));
    Goto(bb12)
    }
    bb12 = {
    (*_4) = 1693556336_i32 | (-447736760_i32);
    (*_4) = (-1174871317_i32) ^ 582835124_i32;
    (*_4) = 1575927098_i32;
    (*_4) = (-1531417648_i32) * 1903445852_i32;
    _3 = _5;
    _20.1.0 = '\u{ae0e2}';
    _20.1 = ('\u{7ccc8}',);
    (*_4) = 690529876_i32;
    (*_4) = (-1356050594_i32) - 170155286_i32;
    _16 = Field::<i64>(Variant(RET, 0), 1);
    (*_4) = _3 as i32;
    Goto(bb13)
    }
    bb13 = {
    (*_4) = 3143740466641062158_u64 as i32;
    (*_4) = (-871144305_i32) | (-1227358037_i32);
    _6 = _3 ^ _3;
    _7 = core::ptr::addr_of!(_5);
    _11 = (*_7) & (*_7);
    (*_4) = 401204982_i32 - (-1677819897_i32);
    (*_7) = _6 >> _6;
    (*_4) = 1726101244_i32 * 1656952695_i32;
    (*_7) = _11 >> _6;
    (*_4) = 554693530_i32 - 587309665_i32;
    (*_7) = _11;
    _3 = (*_7);
    (*_7) = -_3;
    (*_4) = 394883429_i32 ^ 1915684966_i32;
    (*_7) = 18818574121234187515020823846383135923_u128 as i128;
    _6 = _3 >> _3;
    (*_7) = (*_4) as i128;
    _3 = (*_7) >> _11;
    (*_7) = _11 | _11;
    (*_4) = -(-447420241_i32);
    _20.1.0 = '\u{429fc}';
    (*_7) = !_6;
    (*_4) = (-434868763_i32) + 1464722967_i32;
    _14 = Field::<usize>(Variant(RET, 0), 0) as f32;
    _4 = core::ptr::addr_of_mut!((*_4));
    match Field::<usize>(Variant(RET, 0), 0) {
    0 => bb11,
    1 => bb16,
    _ => bb15
    }
    }
    bb14 = {
    Return()
    }
    bb15 = {
    Return()
    }
    bb16 = {
    (*_7) = -_6;
    _18 = core::ptr::addr_of_mut!(_2);
    _25 = (-119_isize) + (-9223372036854775808_isize);
    (*_4) = (-1027801372_i32);
    _20.1.0 = '\u{b19da}';
    place!(Field::<usize>(Variant(RET, 0), 0)) = 4_usize;
    (*_4) = (-1464691176_i32) << _11;
    _6 = -(*_7);
    (*_7) = !_3;
    _20.0 = [312625483453565716730009559896425846720_u128,57243322301376611339337642585863114190_u128,81105867844378136130179698891256888459_u128,33437898897822744647178579882921243676_u128,4160562384100561601129134971550357241_u128,199159970513714979619336977789116739369_u128,95286879002329154031158614977415121890_u128,219456253941413780465665753680236687292_u128];
    _29 = _25 >> (*_4);
    _27 = _14 * _14;
    _25 = _29 - _29;
    _32 = [177_u8];
    (*_4) = 1984025573_i32;
    match Field::<usize>(Variant(RET, 0), 0) {
    4 => bb17,
    _ => bb13
    }
    }
    bb17 = {
    _31 = 5958_u16 as f32;
    (*_4) = 716642766_i32;
    _25 = !_29;
    (*_4) = false as i32;
    _24 = _20.1.0;
    _32 = [214_u8];
    _4 = core::ptr::addr_of_mut!(_9);
    _21 = 236295115563733512840555430444911322929_u128 & 255179584040892267324724167223765735494_u128;
    (*_4) = !1938452922_i32;
    (*_7) = !_6;
    _33 = -_29;
    _24 = _20.1.0;
    _29 = _33 - _25;
    (*_4) = -(-712639872_i32);
    _1 = core::ptr::addr_of!(_10);
    (*_1) = 60103_u16 as i16;
    _36 = 25_u8;
    (*_7) = _6 & _3;
    (*_1) = 25556_i16 & (-15828_i16);
    (*_1) = 12150_i16;
    (*_4) = -1118054457_i32;
    _37 = (*_7);
    (*_7) = _3;
    (*_4) = _21 as i32;
    (*_1) = 29361_i16 << (*_7);
    Goto(bb18)
    }
    bb18 = {
    _8 = [_25,_29,_29];
    (*_7) = _6 << (*_1);
    (*_7) = !_6;
    _22 = _21 as isize;
    (*_1) = (-10458_i16) + 7117_i16;
    (*_1) = (-21823_i16) * (-22475_i16);
    (*_1) = (-11069_i16) ^ (-5289_i16);
    (*_1) = !(-17880_i16);
    (*_7) = _6 + _37;
    (*_4) = (-1425559771_i32) + 118232968_i32;
    (*_7) = (-65_i8) as i128;
    _5 = Field::<usize>(Variant(RET, 0), 0) as i128;
    match _36 {
    0 => bb16,
    1 => bb4,
    2 => bb13,
    3 => bb19,
    4 => bb20,
    5 => bb21,
    25 => bb23,
    _ => bb22
    }
    }
    bb19 = {
    Return()
    }
    bb20 = {
    (*_7) = -_6;
    _18 = core::ptr::addr_of_mut!(_2);
    _25 = (-119_isize) + (-9223372036854775808_isize);
    (*_4) = (-1027801372_i32);
    _20.1.0 = '\u{b19da}';
    place!(Field::<usize>(Variant(RET, 0), 0)) = 4_usize;
    (*_4) = (-1464691176_i32) << _11;
    _6 = -(*_7);
    (*_7) = !_3;
    _20.0 = [312625483453565716730009559896425846720_u128,57243322301376611339337642585863114190_u128,81105867844378136130179698891256888459_u128,33437898897822744647178579882921243676_u128,4160562384100561601129134971550357241_u128,199159970513714979619336977789116739369_u128,95286879002329154031158614977415121890_u128,219456253941413780465665753680236687292_u128];
    _29 = _25 >> (*_4);
    _27 = _14 * _14;
    _25 = _29 - _29;
    _32 = [177_u8];
    (*_4) = 1984025573_i32;
    match Field::<usize>(Variant(RET, 0), 0) {
    4 => bb17,
    _ => bb13
    }
    }
    bb21 = {
    Return()
    }
    bb22 = {
    (*_4) = -935283665_i32;
    (*_7) = false as i128;
    _12 = 10739489367233429383_u64 as f64;
    (*_4) = (-2067677537_i32);
    (*_4) = (-487576448_i32) ^ 380895426_i32;
    (*_4) = -1427663477_i32;
    (*_4) = (-1709958687_i32);
    (*_4) = _12 as i32;
    (*_7) = _11 - _3;
    _3 = (*_7) | (*_7);
    _16 = Field::<i64>(Variant(RET, 0), 1);
    (*_7) = -_3;
    (*_4) = (-73_i8) as i32;
    place!(Field::<usize>(Variant(RET, 0), 0)) = 92067531979035642570815420589770061547_u128 as usize;
    _10 = !24322_i16;
    _19 = &mut _12;
    (*_19) = (-9_i8) as f64;
    _14 = (*_7) as f32;
    _20.0 = [263408866471385987039942131485306668208_u128,206032768765898425275825591021745522385_u128,234605420418046341768376633906228075694_u128,250572605958183040695662067406101667267_u128,204807158020338250171463094300108179285_u128,20237489822551778576326257164015850178_u128,42536557257270954772668048228953060162_u128,198344922757621052041840015041950318811_u128];
    (*_4) = 464616443_i32;
    _18 = core::ptr::addr_of_mut!(_2);
    Call((*_4) = fn7(Move((*_18)), Move(_18), Move(_19), Move(_7), Move(_1), (*_7), (*_19)), ReturnTo(bb11), UnwindUnreachable())
    }
    bb23 = {
    _34 = core::ptr::addr_of_mut!((*_18));
    (*_4) = (-1026237030_i32) * 1583091216_i32;
    (*_4) = (-2055224520_i32);
    _4 = core::ptr::addr_of_mut!((*_4));
    (*_7) = 1879234150_u32 as i128;
    (*_4) = (-508212882_i32);
    (*_4) = 1835808699_i32 | (-612438317_i32);
    _14 = Field::<usize>(Variant(RET, 0), 0) as f32;
    _39 = (-124_i8) ^ 17_i8;
    Goto(bb24)
    }
    bb24 = {
    _21 = Field::<usize>(Variant(RET, 0), 0) as u128;
    (*_1) = (-18313_i16) + (-1341_i16);
    (*_1) = (-26669_i16) + 16992_i16;
    _30 = [_25,_33,_25];
    _14 = _27 - _31;
    (*_4) = 314301161_i32;
    _20.1.0 = _24;
    (*_1) = -17851_i16;
    (*_4) = 256555406_i32 + (-67153884_i32);
    _10 = !6648_i16;
    (*_1) = 21568_i16;
    (*_4) = 1084777902_i32 | 1915054142_i32;
    (*_1) = !16682_i16;
    (*_1) = 11678_i16 | 3101_i16;
    (*_7) = _6;
    (*_4) = -842866202_i32;
    _11 = (*_7) + (*_7);
    (*_1) = (-29557_i16) | (-26749_i16);
    _9 = _27 as i32;
    (*_4) = 357219696_u32 as i32;
    (*_1) = 30355_i16 >> (*_7);
    (*_4) = 1464459169_i32;
    (*_1) = 27983_i16 << (*_7);
    (*_1) = 14594_i16 & 31448_i16;
    (*_1) = _39 as i16;
    (*_1) = !12673_i16;
    _33 = _29 + _25;
    (*_4) = (-712569117_i32);
    _39 = !37_i8;
    match (*_4) {
    0 => bb1,
    1 => bb22,
    2 => bb3,
    3 => bb15,
    4 => bb20,
    340282366920938463463374607431055642339 => bb25,
    _ => bb8
    }
    }
    bb25 = {
    _36 = 233_u8;
    _36 = 113_u8 + 126_u8;
    place!(Field::<i64>(Variant(RET, 0), 1)) = !_16;
    (*_4) = 1076528379_i32;
    _20.1.0 = _24;
    _26 = &mut _36;
    (*_1) = 12585_i16 ^ (-11041_i16);
    _41 = (*_7) == (*_7);
    _18 = core::ptr::addr_of_mut!((*_18));
    (*_7) = _41 as i128;
    _20.1.0 = _24;
    _1 = core::ptr::addr_of!((*_1));
    (*_7) = !_11;
    match (*_4) {
    0 => bb22,
    1 => bb19,
    2 => bb17,
    3 => bb4,
    4 => bb12,
    5 => bb9,
    1076528379 => bb27,
    _ => bb26
    }
    }
    bb26 = {
    Return()
    }
    bb27 = {
    _7 = core::ptr::addr_of!((*_7));
    _7 = core::ptr::addr_of!(_5);
    _14 = _31 + _27;
    _25 = _29 * _29;
    (*_1) = 23503_i16;
    (*_1) = (-1715_i16) >> (*_7);
    (*_26) = 44_u8 | 162_u8;
    _27 = _14;
    _40 = _27 - _27;
    _4 = core::ptr::addr_of_mut!((*_4));
    (*_1) = (-25449_i16);
    _5 = _6 | _37;
    _10 = (-18725_i16) >> (*_4);
    _22 = _33 << (*_7);
    match (*_4) {
    0 => bb10,
    1 => bb24,
    1076528379 => bb28,
    _ => bb12
    }
    }
    bb28 = {
    (*_26) = 8_u8;
    _20.0 = [_21,_21,_21,_21,_21,_21,_21,_21];
    (*_1) = !(-5093_i16);
    _22 = _25;
    (*_7) = _6;
    (*_1) = !(-32267_i16);
    place!(Field::<usize>(Variant(RET, 0), 0)) = _33 as usize;
    (*_26) = 206_u8 | 15_u8;
    (*_7) = _37;
    (*_4) = (-1368521097_i32) ^ (-1880705026_i32);
    (*_1) = (-17242_i16);
    (*_26) = !164_u8;
    (*_26) = 55_u8 | 251_u8;
    Goto(bb29)
    }
    bb29 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *mut *mut *mut &'static (u128,),
    mut _3: &'static mut f64,
    mut _4: *const i128,
    mut _5: *const i16,
    mut _6: i128,
    mut _7: f64,
) -> i32 {
    mir! {
    type RET = i32;
    let _8: u128;
    let _9: isize;
    let _10: [u128; 8];
    let _11: isize;
    let _12: u32;
    let _13: isize;
    let _14: &'static [u128; 2];
    let _15: *const Adt27;
    let _16: f32;
    let _17: isize;
    let _18: u64;
    let _19: *const i16;
    let _20: &'static *mut i16;
    let _21: Adt74;
    let _22: char;
    let _23: isize;
    let _24: &'static mut &'static *mut i16;
    let _25: ([u128; 8], (char,));
    let _26: i32;
    let _27: isize;
    let _28: char;
    let _29: Adt74;
    let _30: Adt29;
    let _31: i32;
    let _32: [u16; 1];
    let _33: char;
    let _34: *mut &'static (u128,);
    let _35: bool;
    let _36: f64;
    let _37: &'static [u128; 2];
    let _38: f64;
    let _39: f32;
    let _40: isize;
    let _41: usize;
    let _42: &'static mut [isize; 3];
    let _43: u32;
    let _44: u8;
    let _45: &'static mut [isize; 3];
    let _46: char;
    let _47: f64;
    let _48: bool;
    let _49: &'static mut &'static *mut i16;
    let _50: bool;
    let _51: char;
    let _52: isize;
    let _53: i8;
    let _54: &'static &'static mut [isize; 3];
    let _55: f64;
    let _56: bool;
    let _57: i128;
    let _58: (i64, *const [i8; 6]);
    let _59: f64;
    let _60: Adt58;
    let _61: Adt32;
    let _62: *const Adt27;
    let _63: char;
    let _64: *const [i8; 6];
    let _65: isize;
    let _66: *mut i16;
    let _67: &'static *mut i16;
    let _68: &'static mut (i32,);
    let _69: u64;
    let _70: char;
    let _71: f64;
    let _72: f32;
    let _73: u8;
    let _74: f32;
    let _75: u16;
    let _76: i8;
    let _77: &'static [u128; 2];
    let _78: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _79: Adt29;
    let _80: *const [i8; 6];
    let _81: bool;
    let _82: &'static mut f64;
    let _83: [u64; 7];
    let _84: u16;
    let _85: [u128; 2];
    let _86: f32;
    let _87: i64;
    let _88: ();
    let _89: ();
    {
    _6 = (-122457115336495140244296937040593354923_i128);
    RET = 1796341396_i32 | 1582215351_i32;
    Call(_8 = fn8(Move(_1), Move(_2), Move(_5), _6, Move(_4)), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    _8 = 181242959549323521336254889983362944842_u128 << RET;
    _2 = core::ptr::addr_of_mut!(_1);
    _4 = core::ptr::addr_of!(_6);
    (*_4) = 9223372036854775807_isize as i128;
    (*_4) = (-65789038733461822724529519212217295980_i128) << _8;
    (*_4) = (-124358735170190957962295354987905638466_i128) << RET;
    (*_4) = (-136090232953462837240626294422153847708_i128);
    (*_4) = (-153011251518866232886431956362032215177_i128);
    (*_4) = (-36663277384312240983728526454078908751_i128) & 36489545217196645308859070828955643205_i128;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 53266823198658961609990558483648063672_i128 | 50018257451431300141300358870361949225_i128;
    (*_4) = (-24_isize) as i128;
    (*_4) = -(-146865338308797709067637725853371911683_i128);
    (*_4) = -(-111039506311831933761411711162813169715_i128);
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _7 = 147_u8 as f64;
    (*_4) = -14179422960019792535646070793126926505_i128;
    (*_4) = -61983092426008581459365887159664912193_i128;
    (*_4) = !(-27851376381736565140468328500005667905_i128);
    Goto(bb2)
    }
    bb2 = {
    (*_4) = 110690576048469284831358506558840782172_i128;
    _11 = 54_isize << (*_4);
    (*_4) = (-91885979170595653223852170129665623207_i128);
    _7 = 55221_u16 as f64;
    match (*_4) {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    3 => bb6,
    248396387750342810239522437302102588249 => bb8,
    _ => bb7
    }
    }
    bb3 = {
    _8 = 181242959549323521336254889983362944842_u128 << RET;
    _2 = core::ptr::addr_of_mut!(_1);
    _4 = core::ptr::addr_of!(_6);
    (*_4) = 9223372036854775807_isize as i128;
    (*_4) = (-65789038733461822724529519212217295980_i128) << _8;
    (*_4) = (-124358735170190957962295354987905638466_i128) << RET;
    (*_4) = (-136090232953462837240626294422153847708_i128);
    (*_4) = (-153011251518866232886431956362032215177_i128);
    (*_4) = (-36663277384312240983728526454078908751_i128) & 36489545217196645308859070828955643205_i128;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 53266823198658961609990558483648063672_i128 | 50018257451431300141300358870361949225_i128;
    (*_4) = (-24_isize) as i128;
    (*_4) = -(-146865338308797709067637725853371911683_i128);
    (*_4) = -(-111039506311831933761411711162813169715_i128);
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _7 = 147_u8 as f64;
    (*_4) = -14179422960019792535646070793126926505_i128;
    (*_4) = -61983092426008581459365887159664912193_i128;
    (*_4) = !(-27851376381736565140468328500005667905_i128);
    Goto(bb2)
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    (*_4) = 22075442641422196129639876529196664304_i128;
    (*_4) = (-112455149155451326655017846300657447478_i128);
    _12 = 2982764107_u32;
    _9 = _11 ^ _11;
    _13 = -_9;
    (*_4) = 144334355759460866561575966879059540321_i128 >> _13;
    (*_4) = '\u{244b}' as i128;
    (*_4) = false as i128;
    _16 = (-28_i8) as f32;
    _4 = core::ptr::addr_of!((*_4));
    _8 = (-91_i8) as u128;
    _8 = 31830646186977843689529805737418287879_u128 - 70562689676527493061826336317769448859_u128;
    (*_4) = (-611560945084648509_i64) as i128;
    (*_4) = 2667358963272738396_i64 as i128;
    (*_4) = 164898336607111279769872289593322128577_i128;
    _3 = &mut _7;
    (*_3) = 29595_i16 as f64;
    (*_4) = 14553414968593268990460358053085248956_i128;
    (*_3) = 10801527910775570242_usize as f64;
    (*_4) = (-141124629598311017342086162861246503038_i128) >> RET;
    (*_4) = (-45553078504267608369020205766874397069_i128) << _9;
    Goto(bb9)
    }
    bb9 = {
    (*_3) = 99_u8 as f64;
    (*_3) = RET as f64;
    (*_3) = _16 as f64;
    (*_4) = -158215531070916622037709041721391456139_i128;
    (*_3) = RET as f64;
    (*_3) = 2728254283506075833_usize as f64;
    (*_4) = !(-144976119016877517165228099575354825628_i128);
    (*_3) = 104_u8 as f64;
    (*_3) = (-55_i8) as f64;
    (*_4) = !(-142975370142596535531606495859714425659_i128);
    (*_3) = 5_usize as f64;
    (*_3) = 10356334759641535788_u64 as f64;
    (*_4) = !163959955351242692477389729212992545926_i128;
    _13 = !_11;
    (*_4) = 48407457396657502236314746155101795782_i128 * 76269333742013572683478594777513688460_i128;
    (*_3) = 28_i8 as f64;
    (*_3) = 24237_u16 as f64;
    _17 = _9 << (*_4);
    (*_3) = _16 as f64;
    Goto(bb10)
    }
    bb10 = {
    (*_4) = 42079500835679666465327400156540300119_i128 * (-30120973750884938179877827767876834871_i128);
    (*_4) = (-7036621549661050913420274706101301351_i128);
    (*_3) = 88_i8 as f64;
    _22 = '\u{75fa3}';
    Goto(bb11)
    }
    bb11 = {
    (*_4) = (-106324498238672376527309931409305580558_i128);
    (*_4) = (-157703281236606203306762686248733337931_i128) | 105792065139843158784408304586557098128_i128;
    (*_3) = (-13_i8) as f64;
    (*_4) = 88_u8 as i128;
    (*_4) = (-79733352914889077069360211168539459151_i128);
    _23 = _13 * _9;
    _13 = 52255_u16 as isize;
    (*_3) = 83_u8 as f64;
    (*_3) = (-99_i8) as f64;
    (*_3) = 92_i8 as f64;
    Goto(bb12)
    }
    bb12 = {
    (*_4) = RET as i128;
    _8 = 211802065191992053378419777612097126560_u128 & 194951036751381759433056245240965169731_u128;
    (*_3) = 45185_u16 as f64;
    Goto(bb13)
    }
    bb13 = {
    (*_3) = (*_4) as f64;
    _4 = core::ptr::addr_of!((*_4));
    (*_3) = (*_4) as f64;
    (*_4) = 31481707425021127325618876391616973270_i128 >> _13;
    (*_4) = (-9074518595441197966_i64) as i128;
    (*_3) = 4_usize as f64;
    match _12 {
    0 => bb12,
    2982764107 => bb14,
    _ => bb10
    }
    }
    bb14 = {
    (*_4) = 22506_i16 as i128;
    (*_3) = (*_4) as f64;
    (*_3) = _8 as f64;
    (*_4) = 165038867118829677158328162018662036014_i128 + (-105575947414839798747938932523500699493_i128);
    (*_4) = 59252642285638194441751700361365756825_i128;
    _12 = 3656090359_u32 | 1019544133_u32;
    _4 = core::ptr::addr_of!((*_4));
    (*_4) = -(-24610942505346228552169926275279497921_i128);
    _25.1.0 = _22;
    (*_3) = 4743293345055373666_i64 as f64;
    _12 = 3660424427_u32 & 2233248761_u32;
    (*_4) = !(-112289215807636755500941558328056162778_i128);
    _26 = _22 as i32;
    (*_3) = _12 as f64;
    Goto(bb15)
    }
    bb15 = {
    (*_3) = (-73_i8) as f64;
    _27 = _17 + _11;
    (*_3) = (-3549788908965825338_i64) as f64;
    (*_3) = 67_u8 as f64;
    _28 = _22;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_3) = (-17255_i16) as f64;
    (*_4) = 101527163486111257554011317322585618534_i128;
    (*_4) = (-19_i8) as i128;
    (*_3) = RET as f64;
    (*_4) = (*_3) as i128;
    _25.1.0 = _28;
    _8 = 243671919949190500349784789152039981314_u128 + 77419143227040186792437068596581932946_u128;
    (*_4) = (-44023214514280264711113108793832137015_i128) | 119811353543262610688349548726084151383_i128;
    (*_4) = _8 as i128;
    _26 = RET << _13;
    (*_4) = (-118_i8) as i128;
    _11 = _23;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_3) = 6846529610877999639_i64 as f64;
    (*_4) = (-123107992727608270761036086036827587359_i128);
    _25.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 21063785445742792639166913157218908092_i128 & (-87696935805750797132396357644670814853_i128);
    Goto(bb16)
    }
    bb16 = {
    (*_3) = 99_i8 as f64;
    _16 = 58_u8 as f32;
    (*_4) = _26 as i128;
    _25.1 = (_28,);
    (*_3) = 4891021103028746224_usize as f64;
    _9 = _23 & _23;
    _18 = 14761278500019775159_u64 ^ 7188373879096106931_u64;
    Goto(bb17)
    }
    bb17 = {
    (*_3) = 21890_i16 as f64;
    (*_3) = 6_usize as f64;
    (*_3) = 3_usize as f64;
    (*_3) = (-83_i8) as f64;
    (*_4) = 126845772910619175935834647834170516169_i128;
    _11 = _9 | _9;
    _8 = 2869954281226482157681946936010144396_u128 >> _9;
    (*_3) = 26170_i16 as f64;
    (*_2) = core::ptr::addr_of_mut!(_34);
    (*_3) = _11 as f64;
    (*_4) = 67305894425593517398423003137423056497_i128;
    (*_3) = 5_usize as f64;
    _18 = 13769466891561082965_u64 - 8432524576262810703_u64;
    (*_3) = 80_u8 as f64;
    (*_3) = _6 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = -74793337751301941729753466117964214528_i128;
    (*_3) = (-6677066666854790264_i64) as f64;
    (*_4) = _26 as i128;
    _36 = -(*_3);
    (*_4) = 27218_i16 as i128;
    (*_4) = (-30602493257696836788774362080393811416_i128) ^ (-75593990611402135701603069599679753428_i128);
    Goto(bb18)
    }
    bb18 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_34);
    (*_4) = _18 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _13 = _23 - _9;
    (*_3) = _36 * _36;
    (*_4) = (-47935540633599187299226533581843566125_i128) - 55418867721019566539005498429827000168_i128;
    (*_3) = 28_i8 as f64;
    (*_3) = (-5183327654731588843_i64) as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = -_36;
    (*_4) = 98671311658635844392416873013536000172_i128 | 120966748292524434105891292462170738178_i128;
    (*_3) = -_36;
    _40 = -_27;
    Goto(bb19)
    }
    bb19 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _38 = (*_3) * (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _35 = true;
    _25.1.0 = _22;
    _44 = _12 as u8;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _35 = (*_4) == (*_4);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = _16 as i128;
    _28 = _25.1.0;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _36 * _38;
    (*_3) = _38;
    (*_3) = _38;
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_4) = (-87661162124425703380724256339348934056_i128);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 19036400870223463551127957254037133545_i128;
    match (*_4) {
    0 => bb20,
    1 => bb21,
    2 => bb22,
    19036400870223463551127957254037133545 => bb24,
    _ => bb23
    }
    }
    bb20 = {
    (*_4) = 42079500835679666465327400156540300119_i128 * (-30120973750884938179877827767876834871_i128);
    (*_4) = (-7036621549661050913420274706101301351_i128);
    (*_3) = 88_i8 as f64;
    _22 = '\u{75fa3}';
    Goto(bb11)
    }
    bb21 = {
    _8 = 181242959549323521336254889983362944842_u128 << RET;
    _2 = core::ptr::addr_of_mut!(_1);
    _4 = core::ptr::addr_of!(_6);
    (*_4) = 9223372036854775807_isize as i128;
    (*_4) = (-65789038733461822724529519212217295980_i128) << _8;
    (*_4) = (-124358735170190957962295354987905638466_i128) << RET;
    (*_4) = (-136090232953462837240626294422153847708_i128);
    (*_4) = (-153011251518866232886431956362032215177_i128);
    (*_4) = (-36663277384312240983728526454078908751_i128) & 36489545217196645308859070828955643205_i128;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 53266823198658961609990558483648063672_i128 | 50018257451431300141300358870361949225_i128;
    (*_4) = (-24_isize) as i128;
    (*_4) = -(-146865338308797709067637725853371911683_i128);
    (*_4) = -(-111039506311831933761411711162813169715_i128);
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _7 = 147_u8 as f64;
    (*_4) = -14179422960019792535646070793126926505_i128;
    (*_4) = -61983092426008581459365887159664912193_i128;
    (*_4) = !(-27851376381736565140468328500005667905_i128);
    Goto(bb2)
    }
    bb22 = {
    Return()
    }
    bb23 = {
    (*_3) = (*_4) as f64;
    _4 = core::ptr::addr_of!((*_4));
    (*_3) = (*_4) as f64;
    (*_4) = 31481707425021127325618876391616973270_i128 >> _13;
    (*_4) = (-9074518595441197966_i64) as i128;
    (*_3) = 4_usize as f64;
    match _12 {
    0 => bb12,
    2982764107 => bb14,
    _ => bb10
    }
    }
    bb24 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 56821518963948486888391179732388352011_i128 * 53096136665092251400688568407224171840_i128;
    (*_4) = 10597545381653368982948918056411506101_i128 >> _11;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _4 = core::ptr::addr_of!((*_4));
    _18 = 9656709817520841308_u64 | 14834721647792996807_u64;
    (*_4) = (-47842822759912347799146007722907187587_i128);
    _18 = 1669576088058254290_u64 + 16418236803763659696_u64;
    (*_3) = _38 - _36;
    _8 = 58021582622207173222908241208167648184_u128 * 150175232037041161416777228047352911208_u128;
    (*_4) = 104245153317385073756338058224685873678_i128 ^ (-130209179490775240622198846039190034690_i128);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _18 = 4422645838784961251_i64 as u64;
    Goto(bb25)
    }
    bb25 = {
    (*_3) = _38;
    _32 = [41717_u16];
    (*_3) = 114_i8 as f64;
    (*_3) = _38 - _36;
    _25.1.0 = _22;
    (*_4) = 28999167433512988102507833407996364138_i128 * (-79056574775270298513660155351588315411_i128);
    (*_4) = (-13460050060304015135476242708867712005_i128) * (-32310852029836858819320752283138862829_i128);
    (*_3) = _38;
    _41 = !5674072894602564172_usize;
    _31 = !_26;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _40 = _9 - _23;
    _46 = _25.1.0;
    (*_4) = _16 as i128;
    (*_3) = _38 + _36;
    _8 = _16 as u128;
    (*_4) = (-116218785885674773985750258340224879504_i128) << _17;
    _35 = (*_3) == (*_3);
    (*_4) = !106149781080349830615184528299617801287_i128;
    _13 = !_23;
    Goto(bb26)
    }
    bb26 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 130695698321397619030613579600400089640_i128 << _40;
    (*_3) = -_38;
    (*_3) = -_38;
    Goto(bb27)
    }
    bb27 = {
    _25.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 70452769915266255221022258072490808380_i128 ^ (-165359594772097445662925501517127420733_i128);
    _50 = !_35;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_3) = _38 - _36;
    (*_3) = _36 + _38;
    (*_4) = (-35598085097019500875916539682040630166_i128) & (-45277503069380793490834208046632012755_i128);
    (*_3) = _38 - _38;
    _36 = (*_3);
    (*_3) = _36;
    (*_4) = 117680659844135773043191574863310603448_i128;
    _32 = [42253_u16];
    (*_4) = _40 as i128;
    _26 = _31 >> (*_4);
    _39 = (*_3) as f32;
    _4 = core::ptr::addr_of!((*_4));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _36 = _41 as f64;
    _9 = _27 + _11;
    (*_3) = -_36;
    (*_3) = _38 * _36;
    _51 = _46;
    _41 = !12259067483384898777_usize;
    _38 = (*_3) + (*_3);
    Goto(bb28)
    }
    bb28 = {
    _33 = _51;
    (*_3) = _38 * _38;
    _3 = &mut _36;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 89313563996627501857013838664503917176_i128 + (-168447775375811894844618583511737991974_i128);
    _30 = Adt29::Variant3 { fld0: _18 };
    _39 = _16 + _16;
    _52 = !_13;
    (*_3) = _38 + _38;
    _26 = RET;
    Call((*_3) = core::intrinsics::transmute(_13), ReturnTo(bb29), UnwindUnreachable())
    }
    bb29 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _6 = 107800527070263131864390524799413711126_i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 147353083081171680777768336282438079868_i128;
    (*_4) = (-73114067021282669466556236932267089955_i128) ^ (-70612931913767622852033804030482491592_i128);
    _46 = _22;
    (*_2) = core::ptr::addr_of_mut!(_34);
    _50 = !_35;
    _28 = _22;
    Goto(bb30)
    }
    bb30 = {
    (*_3) = _38 * _38;
    _3 = &mut _38;
    _48 = _50;
    _35 = (*_3) <= (*_3);
    (*_4) = -125274678613200862395784665245000968251_i128;
    (*_4) = (-38367403044865660847939243055636401791_i128) + (-48510357117212078465355024576188252426_i128);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = (-7977034466238507368_i64) as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = -7957732009048866307666890172725531354_i128;
    Goto(bb31)
    }
    bb31 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _26 = -_31;
    _58.0 = (-6923054006022133178_i64);
    _57 = (*_4);
    (*_4) = _57;
    _56 = _48 & _50;
    (*_3) = 48291_u16 as f64;
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_4) = -_57;
    _43 = Field::<u64>(Variant(_30, 3), 0) as u32;
    (*_3) = (-26316_i16) as f64;
    (*_3) = _41 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    _52 = _27 - _23;
    _52 = _9 << _40;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _13 = _8 as isize;
    _47 = (*_3) + (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = _57;
    _56 = _35;
    _61 = Adt32::Variant3 { fld0: _44,fld1: 593_u16,fld2: _39,fld3: 84_i8,fld4: _12,fld5: _31,fld6: _41 };
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb32)
    }
    bb32 = {
    _12 = 13312_u16 as u32;
    (*_4) = _39 as i128;
    _10 = _25.0;
    (*_3) = _9 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    match _58.0 {
    0 => bb23,
    1 => bb2,
    340282366920938463456451553425746078278 => bb34,
    _ => bb33
    }
    }
    bb33 = {
    (*_3) = 21890_i16 as f64;
    (*_3) = 6_usize as f64;
    (*_3) = 3_usize as f64;
    (*_3) = (-83_i8) as f64;
    (*_4) = 126845772910619175935834647834170516169_i128;
    _11 = _9 | _9;
    _8 = 2869954281226482157681946936010144396_u128 >> _9;
    (*_3) = 26170_i16 as f64;
    (*_2) = core::ptr::addr_of_mut!(_34);
    (*_3) = _11 as f64;
    (*_4) = 67305894425593517398423003137423056497_i128;
    (*_3) = 5_usize as f64;
    _18 = 13769466891561082965_u64 - 8432524576262810703_u64;
    (*_3) = 80_u8 as f64;
    (*_3) = _6 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = -74793337751301941729753466117964214528_i128;
    (*_3) = (-6677066666854790264_i64) as f64;
    (*_4) = _26 as i128;
    _36 = -(*_3);
    (*_4) = 27218_i16 as i128;
    (*_4) = (-30602493257696836788774362080393811416_i128) ^ (-75593990611402135701603069599679753428_i128);
    Goto(bb18)
    }
    bb34 = {
    _32 = [28096_u16];
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _3 = &mut _47;
    _22 = _28;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    place!(Field::<usize>(Variant(_61, 3), 6)) = _58.0 as usize;
    place!(Field::<i32>(Variant(_61, 3), 5)) = -_26;
    _58.0 = 2736628981699128532_i64;
    (*_3) = 2414_u16 as f64;
    _32 = [10213_u16];
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 16203_i16 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _69 = !Field::<u64>(Variant(_30, 3), 0);
    _61 = Adt32::Variant3 { fld0: _44,fld1: 40513_u16,fld2: _16,fld3: 90_i8,fld4: _12,fld5: _26,fld6: _41 };
    (*_4) = -_57;
    (*_3) = _8 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _17 = _39 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb35)
    }
    bb35 = {
    _1 = core::ptr::addr_of_mut!((*_1));
    _50 = !_35;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _46 = _25.1.0;
    _28 = _25.1.0;
    _71 = (*_3) - (*_3);
    _59 = (*_3) + (*_3);
    (*_3) = _59 * _71;
    _53 = (-15_i8) * 1_i8;
    place!(Field::<usize>(Variant(_61, 3), 6)) = _44 as usize;
    (*_4) = _57;
    _12 = _43;
    _50 = _56;
    _26 = _31;
    _57 = (*_4) ^ (*_4);
    _9 = _52 | _52;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _71;
    (*_3) = _59;
    _41 = Field::<usize>(Variant(_61, 3), 6) | Field::<usize>(Variant(_61, 3), 6);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    match _58.0 {
    0 => bb12,
    1 => bb36,
    2 => bb37,
    3 => bb38,
    4 => bb39,
    5 => bb40,
    6 => bb41,
    2736628981699128532 => bb43,
    _ => bb42
    }
    }
    bb36 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 130695698321397619030613579600400089640_i128 << _40;
    (*_3) = -_38;
    (*_3) = -_38;
    Goto(bb27)
    }
    bb37 = {
    Return()
    }
    bb38 = {
    Return()
    }
    bb39 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _26 = -_31;
    _58.0 = (-6923054006022133178_i64);
    _57 = (*_4);
    (*_4) = _57;
    _56 = _48 & _50;
    (*_3) = 48291_u16 as f64;
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_4) = -_57;
    _43 = Field::<u64>(Variant(_30, 3), 0) as u32;
    (*_3) = (-26316_i16) as f64;
    (*_3) = _41 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    _52 = _27 - _23;
    _52 = _9 << _40;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _13 = _8 as isize;
    _47 = (*_3) + (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = _57;
    _56 = _35;
    _61 = Adt32::Variant3 { fld0: _44,fld1: 593_u16,fld2: _39,fld3: 84_i8,fld4: _12,fld5: _31,fld6: _41 };
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb32)
    }
    bb40 = {
    Return()
    }
    bb41 = {
    (*_3) = 21890_i16 as f64;
    (*_3) = 6_usize as f64;
    (*_3) = 3_usize as f64;
    (*_3) = (-83_i8) as f64;
    (*_4) = 126845772910619175935834647834170516169_i128;
    _11 = _9 | _9;
    _8 = 2869954281226482157681946936010144396_u128 >> _9;
    (*_3) = 26170_i16 as f64;
    (*_2) = core::ptr::addr_of_mut!(_34);
    (*_3) = _11 as f64;
    (*_4) = 67305894425593517398423003137423056497_i128;
    (*_3) = 5_usize as f64;
    _18 = 13769466891561082965_u64 - 8432524576262810703_u64;
    (*_3) = 80_u8 as f64;
    (*_3) = _6 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = -74793337751301941729753466117964214528_i128;
    (*_3) = (-6677066666854790264_i64) as f64;
    (*_4) = _26 as i128;
    _36 = -(*_3);
    (*_4) = 27218_i16 as i128;
    (*_4) = (-30602493257696836788774362080393811416_i128) ^ (-75593990611402135701603069599679753428_i128);
    Goto(bb18)
    }
    bb42 = {
    _8 = 181242959549323521336254889983362944842_u128 << RET;
    _2 = core::ptr::addr_of_mut!(_1);
    _4 = core::ptr::addr_of!(_6);
    (*_4) = 9223372036854775807_isize as i128;
    (*_4) = (-65789038733461822724529519212217295980_i128) << _8;
    (*_4) = (-124358735170190957962295354987905638466_i128) << RET;
    (*_4) = (-136090232953462837240626294422153847708_i128);
    (*_4) = (-153011251518866232886431956362032215177_i128);
    (*_4) = (-36663277384312240983728526454078908751_i128) & 36489545217196645308859070828955643205_i128;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 53266823198658961609990558483648063672_i128 | 50018257451431300141300358870361949225_i128;
    (*_4) = (-24_isize) as i128;
    (*_4) = -(-146865338308797709067637725853371911683_i128);
    (*_4) = -(-111039506311831933761411711162813169715_i128);
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _7 = 147_u8 as f64;
    (*_4) = -14179422960019792535646070793126926505_i128;
    (*_4) = -61983092426008581459365887159664912193_i128;
    (*_4) = !(-27851376381736565140468328500005667905_i128);
    Goto(bb2)
    }
    bb43 = {
    (*_3) = _71;
    (*_4) = _57 & _57;
    _48 = _35 | _35;
    (*_4) = !_57;
    (*_4) = _57 >> _11;
    place!(Field::<u8>(Variant(_61, 3), 0)) = _44;
    _39 = -_16;
    Goto(bb44)
    }
    bb44 = {
    RET = Field::<i32>(Variant(_61, 3), 5) * _31;
    _57 = -(*_4);
    (*_3) = _69 as f64;
    (*_3) = _59;
    place!(Field::<u8>(Variant(_61, 3), 0)) = _44 + _44;
    _31 = _58.0 as i32;
    (*_3) = _71 - _71;
    (*_3) = _71 - _71;
    _35 = Field::<u8>(Variant(_61, 3), 0) >= Field::<u8>(Variant(_61, 3), 0);
    _51 = _25.1.0;
    _72 = -_16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = _58.0 as i128;
    _22 = _46;
    Goto(bb45)
    }
    bb45 = {
    _75 = 54226_u16 ^ 29718_u16;
    _73 = !_44;
    _63 = _28;
    place!(Field::<f32>(Variant(_61, 3), 2)) = _72 * _16;
    (*_3) = _59;
    place!(Field::<i8>(Variant(_61, 3), 3)) = _53;
    _4 = core::ptr::addr_of!(_6);
    (*_3) = (*_4) as f64;
    (*_4) = _41 as i128;
    _33 = _51;
    _72 = Field::<f32>(Variant(_61, 3), 2) - _39;
    (*_4) = -_57;
    _72 = Field::<f32>(Variant(_61, 3), 2) + _39;
    (*_3) = -_71;
    _53 = -Field::<i8>(Variant(_61, 3), 3);
    (*_4) = -_57;
    _23 = _9 * _9;
    (*_3) = _71;
    _3 = &mut _71;
    _55 = (*_3) + (*_3);
    place!(Field::<f32>(Variant(_61, 3), 2)) = _72 + _16;
    (*_4) = _57;
    (*_4) = _57;
    (*_4) = _57 & _57;
    (*_4) = _57 >> _23;
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_4) = !_57;
    _27 = _9;
    Goto(bb46)
    }
    bb46 = {
    _25.1.0 = _22;
    (*_4) = _57 * _57;
    place!(Field::<u32>(Variant(_61, 3), 4)) = _12 | _12;
    _10 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _25.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    _46 = _25.1.0;
    _33 = _51;
    _74 = Field::<f32>(Variant(_61, 3), 2);
    (*_3) = -_59;
    (*_4) = _58.0 as i128;
    _2 = core::ptr::addr_of_mut!((*_2));
    Goto(bb47)
    }
    bb47 = {
    _81 = _23 < _23;
    (*_3) = _72 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = _57 ^ _57;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _55 + _55;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _27 = -_11;
    (*_3) = Field::<u32>(Variant(_61, 3), 4) as f64;
    (*_3) = _55 * _55;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _23 = _52 >> (*_4);
    _11 = _23;
    _27 = _9;
    (*_2) = core::ptr::addr_of_mut!(_34);
    _55 = (*_3) - (*_3);
    (*_3) = _55;
    _35 = !_81;
    match _58.0 {
    0 => bb44,
    1 => bb28,
    2 => bb45,
    3 => bb30,
    4 => bb22,
    5 => bb6,
    2736628981699128532 => bb49,
    _ => bb48
    }
    }
    bb48 = {
    _25.0 = [_8,_8,_8,_8,_8,_8,_8,_8];
    (*_4) = 70452769915266255221022258072490808380_i128 ^ (-165359594772097445662925501517127420733_i128);
    _50 = !_35;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_3) = _38 - _36;
    (*_3) = _36 + _38;
    (*_4) = (-35598085097019500875916539682040630166_i128) & (-45277503069380793490834208046632012755_i128);
    (*_3) = _38 - _38;
    _36 = (*_3);
    (*_3) = _36;
    (*_4) = 117680659844135773043191574863310603448_i128;
    _32 = [42253_u16];
    (*_4) = _40 as i128;
    _26 = _31 >> (*_4);
    _39 = (*_3) as f32;
    _4 = core::ptr::addr_of!((*_4));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _36 = _41 as f64;
    _9 = _27 + _11;
    (*_3) = -_36;
    (*_3) = _38 * _36;
    _51 = _46;
    _41 = !12259067483384898777_usize;
    _38 = (*_3) + (*_3);
    Goto(bb28)
    }
    bb49 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _55;
    _78.2.0 = _8 ^ _8;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    place!(Field::<u32>(Variant(_61, 3), 4)) = _43;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _53 = !Field::<i8>(Variant(_61, 3), 3);
    (*_4) = _57 * _57;
    (*_4) = _57 | _57;
    (*_4) = _57;
    _17 = _23;
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *mut *mut *mut &'static (u128,),
    mut _3: *const i16,
    mut _4: i128,
    mut _5: *const i128,
) -> u128 {
    mir! {
    type RET = u128;
    let _6: &'static &'static mut [isize; 3];
    let _7: i128;
    let _8: *const Adt32;
    let _9: &'static (u128,);
    let _10: u32;
    let _11: (char,);
    let _12: u64;
    let _13: &'static (f32, &'static mut (i32,));
    let _14: *const &'static [isize; 3];
    let _15: (i32,);
    let _16: [u8; 1];
    let _17: [u16; 1];
    let _18: *mut i32;
    let _19: i8;
    let _20: Adt74;
    let _21: *mut Adt42;
    let _22: u16;
    let _23: f64;
    let _24: *mut &'static (u128,);
    let _25: &'static mut [isize; 3];
    let _26: u8;
    let _27: (i16, *mut *mut &'static (u128,), *mut i32, Adt45);
    let _28: u64;
    let _29: isize;
    let _30: isize;
    let _31: u32;
    let _32: i32;
    let _33: i64;
    let _34: usize;
    let _35: *const i32;
    let _36: *const &'static mut (i32,);
    let _37: u32;
    let _38: i128;
    let _39: (Adt32, Adt45, [i8; 6]);
    let _40: Adt45;
    let _41: *const &'static mut (i32,);
    let _42: *mut *mut &'static (u128,);
    let _43: ([u128; 8], (char,));
    let _44: bool;
    let _45: &'static u64;
    let _46: isize;
    let _47: isize;
    let _48: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _49: [i8; 6];
    let _50: f32;
    let _51: f32;
    let _52: bool;
    let _53: i64;
    let _54: &'static Adt35;
    let _55: *mut Adt42;
    let _56: usize;
    let _57: char;
    let _58: &'static mut u8;
    let _59: bool;
    let _60: &'static u64;
    let _61: f64;
    let _62: &'static [isize; 3];
    let _63: ([u128; 8], (char,));
    let _64: f64;
    let _65: i32;
    let _66: *const i16;
    let _67: u8;
    let _68: isize;
    let _69: u32;
    let _70: i8;
    let _71: f32;
    let _72: i16;
    let _73: &'static (f32, &'static mut (i32,));
    let _74: Adt42;
    let _75: [u16; 1];
    let _76: *const i128;
    let _77: [u8; 1];
    let _78: i16;
    let _79: u128;
    let _80: u32;
    let _81: bool;
    let _82: bool;
    let _83: *mut i16;
    let _84: isize;
    let _85: &'static *mut i16;
    let _86: f32;
    let _87: *mut *mut &'static (u128,);
    let _88: u8;
    let _89: isize;
    let _90: isize;
    let _91: (Adt32, Adt45, [i8; 6]);
    let _92: *mut *mut *mut &'static (u128,);
    let _93: *const i32;
    let _94: Adt27;
    let _95: u32;
    let _96: f64;
    let _97: *mut i32;
    let _98: Adt29;
    let _99: f32;
    let _100: ();
    let _101: ();
    {
    _2 = core::ptr::addr_of_mut!(_1);
    _7 = _4 * _4;
    _7 = _4 << _4;
    _7 = 4272472564557498063_i64 as i128;
    RET = 170838181430733166163025668010194783087_u128 + 302064304993523620325572398637933503175_u128;
    _4 = _7;
    RET = 224128312454960729372832200752340879115_u128 | 294617046853806997758446417537727648456_u128;
    _4 = _7 ^ _7;
    _5 = core::ptr::addr_of!(_7);
    (*_5) = _4 << _4;
    (*_5) = _4 << RET;
    (*_5) = _4;
    (*_5) = (-6236012965903162140_i64) as i128;
    Goto(bb1)
    }
    bb1 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb2 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb3 = {
    _15.0 = 1827084770_i32;
    _15 = (253393567_i32,);
    _12 = 4918959270131165863_u64;
    _4 = !_7;
    _7 = -_4;
    _2 = core::ptr::addr_of_mut!(_1);
    _17 = [31781_u16];
    _11 = ('\u{17a91}',);
    _19 = 9565412208859654367_usize as i8;
    _4 = _7;
    _17 = [22280_u16];
    _5 = core::ptr::addr_of!(_4);
    _15 = (1439405453_i32,);
    (*_5) = _7;
    (*_5) = !_7;
    (*_5) = _7 ^ _7;
    (*_5) = _7 - _7;
    _15 = (558536390_i32,);
    _16 = [24_u8];
    (*_5) = _7;
    (*_5) = -_7;
    match _15.0 {
    0 => bb4,
    558536390 => bb6,
    _ => bb5
    }
    }
    bb4 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb5 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb6 = {
    _16 = [44_u8];
    (*_5) = _7;
    (*_5) = -_7;
    _5 = core::ptr::addr_of!((*_5));
    (*_5) = _7 * _7;
    (*_5) = _7;
    (*_5) = _7 - _7;
    (*_5) = _7 * _7;
    (*_5) = 228_u8 as i128;
    _11.0 = '\u{f1f2}';
    (*_5) = _7;
    (*_5) = (-6331485080928524926_i64) as i128;
    _5 = core::ptr::addr_of!(_7);
    (*_2) = core::ptr::addr_of_mut!(_24);
    _23 = _10 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb7)
    }
    bb7 = {
    _11.0 = '\u{8f043}';
    match _12 {
    0 => bb5,
    1 => bb2,
    4918959270131165863 => bb8,
    _ => bb3
    }
    }
    bb8 = {
    (*_5) = 1_usize as i128;
    (*_5) = _4 - _4;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _28 = _12;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _27.0 = (-10897_i16) + (-1679_i16);
    (*_5) = _28 as i128;
    _16 = [133_u8];
    _17 = [57685_u16];
    (*_5) = !_4;
    _15 = ((-205846000_i32),);
    _4 = (*_5) + (*_5);
    _23 = RET as f64;
    (*_5) = _4;
    _28 = !_12;
    _29 = _11.0 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _18 = core::ptr::addr_of_mut!(_15.0);
    _27.2 = core::ptr::addr_of_mut!((*_18));
    (*_5) = -_4;
    (*_18) = _19 as i32;
    match _12 {
    0 => bb1,
    4918959270131165863 => bb10,
    _ => bb9
    }
    }
    bb9 = {
    _16 = [44_u8];
    (*_5) = _7;
    (*_5) = -_7;
    _5 = core::ptr::addr_of!((*_5));
    (*_5) = _7 * _7;
    (*_5) = _7;
    (*_5) = _7 - _7;
    (*_5) = _7 * _7;
    (*_5) = 228_u8 as i128;
    _11.0 = '\u{f1f2}';
    (*_5) = _7;
    (*_5) = (-6331485080928524926_i64) as i128;
    _5 = core::ptr::addr_of!(_7);
    (*_2) = core::ptr::addr_of_mut!(_24);
    _23 = _10 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb7)
    }
    bb10 = {
    (*_18) = 1328452599_i32 >> (*_5);
    _15 = (1915343421_i32,);
    _23 = _28 as f64;
    (*_5) = -_4;
    (*_18) = 16_u8 as i32;
    (*_18) = (-1455066790_i32) ^ 971621547_i32;
    (*_5) = !_4;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _23 = _27.0 as f64;
    (*_5) = 160_u8 as i128;
    (*_5) = _4 | _4;
    (*_18) = 2112960815_i32 << (*_5);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_18) = (-174037802_i32) << (*_5);
    _22 = !21503_u16;
    match _12 {
    0 => bb1,
    1 => bb8,
    2 => bb6,
    3 => bb9,
    4 => bb11,
    4918959270131165863 => bb13,
    _ => bb12
    }
    }
    bb11 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb12 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb13 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 << (*_18);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _26 = (*_18) as u8;
    RET = 142750011667819070445395754293298393815_u128 + 267126912062665972366800669360346867962_u128;
    _31 = _10 ^ _10;
    (*_18) = _26 as i32;
    RET = 267628455055243594176447301681441052098_u128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _10 = _31 * _31;
    _31 = _10 + _10;
    (*_18) = (-185364354_i32);
    Goto(bb14)
    }
    bb14 = {
    (*_5) = _23 as i128;
    (*_5) = _29 as i128;
    _18 = Move(_27.2);
    (*_5) = _4;
    _31 = (*_5) as u32;
    (*_2) = core::ptr::addr_of_mut!(_24);
    (*_5) = _4;
    (*_5) = -_4;
    match _12 {
    0 => bb1,
    1 => bb13,
    2 => bb7,
    3 => bb6,
    4 => bb5,
    5 => bb15,
    6 => bb16,
    4918959270131165863 => bb18,
    _ => bb17
    }
    }
    bb15 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb16 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb17 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb18 = {
    _15.0 = -(-1006717595_i32);
    (*_5) = _4;
    _28 = _19 as u64;
    _5 = core::ptr::addr_of!((*_5));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _16 = [_26];
    _28 = _12 << _10;
    _18 = core::ptr::addr_of_mut!(_32);
    (*_5) = _4 & _4;
    (*_18) = 8140062738078263250_usize as i32;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_18) = -_15.0;
    Goto(bb19)
    }
    bb19 = {
    _11.0 = '\u{44196}';
    _34 = _10 as usize;
    (*_18) = -_15.0;
    _1 = core::ptr::addr_of_mut!((*_1));
    _37 = _31 * _10;
    _19 = (-10_i8) ^ (-83_i8);
    match _12 {
    0 => bb1,
    1 => bb10,
    2 => bb3,
    3 => bb20,
    4 => bb21,
    4918959270131165863 => bb23,
    _ => bb22
    }
    }
    bb20 = {
    (*_5) = 1_usize as i128;
    (*_5) = _4 - _4;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _28 = _12;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _27.0 = (-10897_i16) + (-1679_i16);
    (*_5) = _28 as i128;
    _16 = [133_u8];
    _17 = [57685_u16];
    (*_5) = !_4;
    _15 = ((-205846000_i32),);
    _4 = (*_5) + (*_5);
    _23 = RET as f64;
    (*_5) = _4;
    _28 = !_12;
    _29 = _11.0 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _18 = core::ptr::addr_of_mut!(_15.0);
    _27.2 = core::ptr::addr_of_mut!((*_18));
    (*_5) = -_4;
    (*_18) = _19 as i32;
    match _12 {
    0 => bb1,
    4918959270131165863 => bb10,
    _ => bb9
    }
    }
    bb21 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 << (*_18);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _26 = (*_18) as u8;
    RET = 142750011667819070445395754293298393815_u128 + 267126912062665972366800669360346867962_u128;
    _31 = _10 ^ _10;
    (*_18) = _26 as i32;
    RET = 267628455055243594176447301681441052098_u128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _10 = _31 * _31;
    _31 = _10 + _10;
    (*_18) = (-185364354_i32);
    Goto(bb14)
    }
    bb22 = {
    _11.0 = '\u{8f043}';
    match _12 {
    0 => bb5,
    1 => bb2,
    4918959270131165863 => bb8,
    _ => bb3
    }
    }
    bb23 = {
    _5 = core::ptr::addr_of!((*_5));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 + _4;
    _32 = _15.0 * _15.0;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _42 = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_42));
    _7 = _23 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 + _4;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_42));
    _3 = core::ptr::addr_of!(_27.0);
    _42 = core::ptr::addr_of_mut!((*_42));
    (*_2) = core::ptr::addr_of_mut!((*_42));
    _27.0 = (-4664_i16) | 31624_i16;
    (*_2) = core::ptr::addr_of_mut!((*_42));
    (*_18) = !_15.0;
    (*_5) = _4 << _26;
    _11.0 = '\u{cab98}';
    (*_18) = _15.0 + _15.0;
    (*_5) = _4 ^ _4;
    (*_5) = !_4;
    (*_5) = _4 & _4;
    (*_18) = _15.0 & _15.0;
    match RET {
    267628455055243594176447301681441052098 => bb24,
    _ => bb3
    }
    }
    bb24 = {
    (*_3) = -21674_i16;
    (*_2) = core::ptr::addr_of_mut!((*_42));
    (*_5) = _31 as i128;
    (*_18) = _15.0;
    _15 = ((*_18),);
    (*_3) = (-2095_i16);
    (*_2) = core::ptr::addr_of_mut!((*_42));
    (*_18) = _15.0 - _15.0;
    (*_3) = _22 as i16;
    _22 = 40111_u16 | 8704_u16;
    (*_5) = -_4;
    _12 = _28 * _28;
    _4 = !(*_5);
    (*_18) = _15.0 ^ _15.0;
    (*_3) = (-29809_i16) ^ 13437_i16;
    _44 = !true;
    (*_5) = _4 * _4;
    (*_3) = (-18654_i16) + 5161_i16;
    (*_18) = _15.0 & _15.0;
    _43.1.0 = _11.0;
    match RET {
    0 => bb13,
    1 => bb25,
    267628455055243594176447301681441052098 => bb27,
    _ => bb26
    }
    }
    bb25 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb26 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb27 = {
    _23 = _22 as f64;
    _23 = (*_5) as f64;
    _48.0 = core::ptr::addr_of!((*_3));
    _18 = core::ptr::addr_of_mut!((*_18));
    Goto(bb28)
    }
    bb28 = {
    (*_18) = RET as i32;
    (*_5) = _4 << _28;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    (*_5) = _4 >> _37;
    _45 = &_28;
    (*_18) = _15.0 >> (*_5);
    (*_3) = 22153_i16;
    _22 = _19 as u16;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _46 = _29 + _29;
    _16 = [_26];
    _49 = [_19,_19,_19,_19,_19,_19];
    (*_5) = _4;
    (*_18) = _15.0 + _15.0;
    (*_3) = (-9103_i16) << (*_45);
    (*_5) = _15.0 as i128;
    (*_18) = _15.0 >> (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = !_4;
    (*_3) = (-28918_i16) >> (*_45);
    match RET {
    0 => bb5,
    1 => bb6,
    2 => bb27,
    3 => bb25,
    4 => bb29,
    267628455055243594176447301681441052098 => bb31,
    _ => bb30
    }
    }
    bb29 = {
    (*_5) = -_4;
    (*_5) = !_4;
    (*_5) = RET as i128;
    (*_5) = _4;
    Call((*_5) = fn9(Move((*_2)), Move(_5), Move(_2), Move(_3), _11, _10, _11.0, RET, _4, _10, _11.0, _10), ReturnTo(bb3), UnwindUnreachable())
    }
    bb30 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 << (*_18);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _26 = (*_18) as u8;
    RET = 142750011667819070445395754293298393815_u128 + 267126912062665972366800669360346867962_u128;
    _31 = _10 ^ _10;
    (*_18) = _26 as i32;
    RET = 267628455055243594176447301681441052098_u128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _10 = _31 * _31;
    _31 = _10 + _10;
    (*_18) = (-185364354_i32);
    Goto(bb14)
    }
    bb31 = {
    _19 = 119_i8 & 52_i8;
    _8 = core::ptr::addr_of!(_39.0);
    _38 = RET as i128;
    _37 = _31 * _10;
    (*_5) = -_4;
    (*_18) = !_15.0;
    (*_5) = -_38;
    _30 = _11.0 as isize;
    _39.2 = [_19,_19,_19,_19,_19,_19];
    (*_3) = (-25701_i16) >> (*_45);
    (*_3) = 13071_i16 + 5957_i16;
    _48.1 = &mut _15;
    (*_3) = (-8979_i16) | (-9329_i16);
    _52 = !_44;
    match RET {
    0 => bb23,
    1 => bb12,
    2 => bb32,
    267628455055243594176447301681441052098 => bb34,
    _ => bb33
    }
    }
    bb32 = {
    (*_18) = RET as i32;
    (*_5) = _4 << _28;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    (*_5) = _4 >> _37;
    _45 = &_28;
    (*_18) = _15.0 >> (*_5);
    (*_3) = 22153_i16;
    _22 = _19 as u16;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _46 = _29 + _29;
    _16 = [_26];
    _49 = [_19,_19,_19,_19,_19,_19];
    (*_5) = _4;
    (*_18) = _15.0 + _15.0;
    (*_3) = (-9103_i16) << (*_45);
    (*_5) = _15.0 as i128;
    (*_18) = _15.0 >> (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = !_4;
    (*_3) = (-28918_i16) >> (*_45);
    match RET {
    0 => bb5,
    1 => bb6,
    2 => bb27,
    3 => bb25,
    4 => bb29,
    267628455055243594176447301681441052098 => bb31,
    _ => bb30
    }
    }
    bb33 = {
    (*_5) = 1_usize as i128;
    (*_5) = _4 - _4;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _28 = _12;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _27.0 = (-10897_i16) + (-1679_i16);
    (*_5) = _28 as i128;
    _16 = [133_u8];
    _17 = [57685_u16];
    (*_5) = !_4;
    _15 = ((-205846000_i32),);
    _4 = (*_5) + (*_5);
    _23 = RET as f64;
    (*_5) = _4;
    _28 = !_12;
    _29 = _11.0 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = -_4;
    _18 = core::ptr::addr_of_mut!(_15.0);
    _27.2 = core::ptr::addr_of_mut!((*_18));
    (*_5) = -_4;
    (*_18) = _19 as i32;
    match _12 {
    0 => bb1,
    4918959270131165863 => bb10,
    _ => bb9
    }
    }
    bb34 = {
    (*_3) = 17246_i16 - (-13226_i16);
    (*_18) = _11.0 as i32;
    _28 = _12 | _12;
    Goto(bb35)
    }
    bb35 = {
    _27.1 = core::ptr::addr_of_mut!((*_1));
    (*_5) = _4 & _4;
    (*_3) = _46 as i16;
    _51 = (*_3) as f32;
    _27.3 = Adt45::Variant2 { fld0: _23,fld1: (*_5) };
    (*_2) = core::ptr::addr_of_mut!((*_42));
    Goto(bb36)
    }
    bb36 = {
    _59 = _44;
    _18 = core::ptr::addr_of_mut!((*_18));
    (*_3) = 25818_i16 & 18638_i16;
    _63 = (_43.0, _11);
    (*_18) = !(-2135965373_i32);
    (*_3) = _43.1.0 as i16;
    _27.0 = (-6492_i16);
    match (*_3) {
    340282366920938463463374607431768204964 => bb37,
    _ => bb7
    }
    }
    bb37 = {
    _63.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _7 = _4;
    (*_3) = 24255_i16 + (-444_i16);
    place!(Field::<f64>(Variant(_27.3, 2), 0)) = _46 as f64;
    (*_5) = Field::<i128>(Variant(_27.3, 2), 1) ^ Field::<i128>(Variant(_27.3, 2), 1);
    _66 = core::ptr::addr_of!((*_3));
    (*_18) = 1233518638_i32 | (-395302666_i32);
    _10 = _37;
    (*_8) = Adt32::Variant2 { fld0: _59,fld1: _37,fld2: _26,fld3: _22,fld4: _43.1 };
    (*_3) = Field::<u32>(Variant((*_8), 2), 1) as i16;
    place!(Field::<u16>(Variant((*_8), 2), 3)) = _22 - _22;
    place!(Field::<(char,)>(Variant((*_8), 2), 4)) = (_63.1.0,);
    _48.2.0 = RET & RET;
    place!(Field::<u16>(Variant((*_8), 2), 3)) = _22 ^ _22;
    place!(Field::<(char,)>(Variant((*_8), 2), 4)) = _11;
    _38 = RET as i128;
    place!(Field::<bool>(Variant((*_8), 2), 0)) = _52 ^ _52;
    place!(Field::<u32>(Variant(_39.0, 2), 1)) = !_10;
    Goto(bb38)
    }
    bb38 = {
    _50 = Field::<u32>(Variant((*_8), 2), 1) as f32;
    place!(Field::<u16>(Variant(_39.0, 2), 3)) = _22 | _22;
    _63.1 = Field::<(char,)>(Variant((*_8), 2), 4);
    (*_18) = 280234317_i32;
    (*_18) = 1488006902_i32 + 1197228819_i32;
    place!(Field::<u32>(Variant((*_8), 2), 1)) = _37 ^ _37;
    (*_18) = (-1036818585_i32) & (-659657608_i32);
    (*_5) = _38;
    (*_8) = Adt32::Variant3 { fld0: _26,fld1: _22,fld2: _50,fld3: _19,fld4: _37,fld5: (*_18),fld6: _34 };
    place!(Field::<i32>(Variant((*_8), 3), 5)) = (*_18);
    _27.2 = Move(_18);
    match RET {
    0 => bb24,
    1 => bb32,
    2 => bb39,
    267628455055243594176447301681441052098 => bb41,
    _ => bb40
    }
    }
    bb39 = {
    _63.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _7 = _4;
    (*_3) = 24255_i16 + (-444_i16);
    place!(Field::<f64>(Variant(_27.3, 2), 0)) = _46 as f64;
    (*_5) = Field::<i128>(Variant(_27.3, 2), 1) ^ Field::<i128>(Variant(_27.3, 2), 1);
    _66 = core::ptr::addr_of!((*_3));
    (*_18) = 1233518638_i32 | (-395302666_i32);
    _10 = _37;
    (*_8) = Adt32::Variant2 { fld0: _59,fld1: _37,fld2: _26,fld3: _22,fld4: _43.1 };
    (*_3) = Field::<u32>(Variant((*_8), 2), 1) as i16;
    place!(Field::<u16>(Variant((*_8), 2), 3)) = _22 - _22;
    place!(Field::<(char,)>(Variant((*_8), 2), 4)) = (_63.1.0,);
    _48.2.0 = RET & RET;
    place!(Field::<u16>(Variant((*_8), 2), 3)) = _22 ^ _22;
    place!(Field::<(char,)>(Variant((*_8), 2), 4)) = _11;
    _38 = RET as i128;
    place!(Field::<bool>(Variant((*_8), 2), 0)) = _52 ^ _52;
    place!(Field::<u32>(Variant(_39.0, 2), 1)) = !_10;
    Goto(bb38)
    }
    bb40 = {
    (*_18) = RET as i32;
    (*_5) = _4 << _28;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    (*_5) = _4 >> _37;
    _45 = &_28;
    (*_18) = _15.0 >> (*_5);
    (*_3) = 22153_i16;
    _22 = _19 as u16;
    _43.0 = [RET,RET,RET,RET,RET,RET,RET,RET];
    _46 = _29 + _29;
    _16 = [_26];
    _49 = [_19,_19,_19,_19,_19,_19];
    (*_5) = _4;
    (*_18) = _15.0 + _15.0;
    (*_3) = (-9103_i16) << (*_45);
    (*_5) = _15.0 as i128;
    (*_18) = _15.0 >> (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_5) = !_4;
    (*_3) = (-28918_i16) >> (*_45);
    match RET {
    0 => bb5,
    1 => bb6,
    2 => bb27,
    3 => bb25,
    4 => bb29,
    267628455055243594176447301681441052098 => bb31,
    _ => bb30
    }
    }
    bb41 = {
    place!(Field::<i8>(Variant((*_8), 3), 3)) = !_19;
    place!(Field::<f32>(Variant((*_8), 3), 2)) = _50;
    place!(Field::<u16>(Variant((*_8), 3), 1)) = _12 as u16;
    (*_3) = _59 as i16;
    place!(Field::<i32>(Variant((*_8), 3), 5)) = -_32;
    place!(Field::<u8>(Variant(_39.0, 3), 0)) = _26 * _26;
    (*_8) = Adt32::Variant0 { fld0: (-6998048786304632485_i64),fld1: _34,fld2: _37,fld3: _48.2,fld4: _26,fld5: _32 };
    (*_3) = (-15197_i16) >> Field::<u32>(Variant((*_8), 0), 2);
    Goto(bb42)
    }
    bb42 = {
    place!(Field::<usize>(Variant((*_8), 0), 1)) = _34 ^ _34;
    (*_8) = Adt32::Variant3 { fld0: _26,fld1: _22,fld2: _50,fld3: _19,fld4: _37,fld5: _32,fld6: _34 };
    place!(Field::<f32>(Variant((*_8), 3), 2)) = RET as f32;
    place!(Field::<f32>(Variant((*_8), 3), 2)) = _51 * _50;
    Goto(bb43)
    }
    bb43 = {
    _74.fld0.0 = !_48.2.0;
    place!(Field::<u32>(Variant((*_8), 3), 4)) = !_10;
    _39.1 = Adt45::Variant2 { fld0: Field::<f64>(Variant(_27.3, 2), 0),fld1: (*_5) };
    _67 = Field::<u8>(Variant((*_8), 3), 0) ^ Field::<u8>(Variant((*_8), 3), 0);
    place!(Field::<f32>(Variant((*_8), 3), 2)) = -_50;
    _56 = Field::<usize>(Variant((*_8), 3), 6) + Field::<usize>(Variant((*_8), 3), 6);
    _27.1 = core::ptr::addr_of_mut!((*_1));
    place!(Field::<usize>(Variant((*_8), 3), 6)) = _34 | _34;
    place!(Field::<i32>(Variant((*_8), 3), 5)) = _32 - _32;
    place!(Field::<usize>(Variant((*_8), 3), 6)) = _56 & _34;
    _77 = [Field::<u8>(Variant((*_8), 3), 0)];
    _78 = (*_3) << Field::<usize>(Variant((*_8), 3), 6);
    _37 = Field::<u32>(Variant((*_8), 3), 4) << Field::<usize>(Variant((*_8), 3), 6);
    _79 = (*_5) as u128;
    place!(Field::<u32>(Variant((*_8), 3), 4)) = _37 << Field::<usize>(Variant((*_8), 3), 6);
    place!(Field::<u16>(Variant((*_8), 3), 1)) = !_22;
    _28 = _12 | _12;
    _35 = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_8), 3), 5)));
    place!(Field::<u32>(Variant((*_8), 3), 4)) = _10;
    place!(Field::<u32>(Variant((*_8), 3), 4)) = !_37;
    _45 = &_12;
    place!(Field::<i8>(Variant((*_8), 3), 3)) = _19;
    match RET {
    0 => bb33,
    267628455055243594176447301681441052098 => bb44,
    _ => bb13
    }
    }
    bb44 = {
    place!(Field::<u8>(Variant((*_8), 3), 0)) = _48.2.0 as u8;
    _72 = (*_3) ^ _78;
    _82 = Field::<usize>(Variant((*_8), 3), 6) >= Field::<usize>(Variant((*_8), 3), 6);
    place!(Field::<i32>(Variant((*_8), 3), 5)) = _32 >> Field::<u32>(Variant((*_8), 3), 4);
    place!(Field::<f32>(Variant((*_8), 3), 2)) = -_50;
    _55 = core::ptr::addr_of_mut!(_74);
    (*_55) = Adt42 { fld0: _48.2,fld1: _23,fld2: Move(_35),fld3: _63.1 };
    (*_5) = _38;
    _39.1 = Move(_27.3);
    place!(Field::<u8>(Variant(_39.0, 3), 0)) = Field::<u32>(Variant((*_8), 3), 4) as u8;
    (*_8) = Adt32::Variant2 { fld0: _82,fld1: _10,fld2: _67,fld3: _22,fld4: (*_55).fld3 };
    place!(Field::<i128>(Variant(_39.1, 2), 1)) = _4 & (*_5);
    (*_8) = Adt32::Variant3 { fld0: _67,fld1: _22,fld2: _51,fld3: _19,fld4: _37,fld5: _32,fld6: _56 };
    place!(Field::<u32>(Variant((*_8), 3), 4)) = Field::<u8>(Variant((*_8), 3), 0) as u32;
    _9 = &(*_55).fld0;
    (*_55).fld0.0 = !_79;
    _58 = &mut _67;
    place!(Field::<usize>(Variant((*_8), 3), 6)) = _30 as usize;
    place!(Field::<i8>(Variant(_39.0, 3), 3)) = _19 << Field::<u32>(Variant((*_8), 3), 4);
    (*_3) = (*_58) as i16;
    (*_58) = Field::<u8>(Variant((*_8), 3), 0) | Field::<u8>(Variant((*_8), 3), 0);
    place!(Field::<u16>(Variant((*_8), 3), 1)) = _22 + _22;
    place!(Field::<usize>(Variant((*_8), 3), 6)) = _56 & _34;
    place!(Field::<u32>(Variant((*_8), 3), 4)) = _37;
    _28 = (*_45);
    (*_1) = core::ptr::addr_of_mut!(_9);
    Goto(bb45)
    }
    bb45 = {
    _48.2.0 = _30 as u128;
    (*_55).fld3 = _43.1;
    place!(Field::<i32>(Variant((*_8), 3), 5)) = Field::<usize>(Variant(_39.0, 3), 6) as i32;
    _10 = Field::<u32>(Variant((*_8), 3), 4) & Field::<u32>(Variant((*_8), 3), 4);
    (*_55).fld3.0 = _63.1.0;
    (*_55).fld3.0 = _11.0;
    (*_8) = Adt32::Variant2 { fld0: _82,fld1: _37,fld2: (*_58),fld3: _22,fld4: (*_55).fld3 };
    _74.fld3.0 = Field::<(char,)>(Variant((*_8), 2), 4).0;
    place!(Field::<u8>(Variant((*_8), 2), 2)) = !(*_58);
    (*_5) = -_4;
    _69 = Field::<u32>(Variant((*_8), 2), 1);
    place!(Field::<bool>(Variant((*_8), 2), 0)) = Field::<u8>(Variant((*_8), 2), 2) == Field::<u8>(Variant((*_8), 2), 2);
    (*_55).fld3 = (_11.0,);
    place!(Field::<(char,)>(Variant((*_8), 2), 4)).0 = (*_55).fld3.0;
    (*_24) = &_48.2;
    (*_42) = core::ptr::addr_of_mut!((*_24));
    (*_55).fld3.0 = Field::<(char,)>(Variant((*_8), 2), 4).0;
    _88 = !Field::<u8>(Variant((*_8), 2), 2);
    (*_24) = &(*_55).fld0;
    place!(Field::<u32>(Variant((*_8), 2), 1)) = _10 & _10;
    Goto(bb46)
    }
    bb46 = {
    _43.1 = (Field::<(char,)>(Variant((*_8), 2), 4).0,);
    (*_24) = &_48.2;
    (*_8) = Adt32::Variant2 { fld0: _82,fld1: _69,fld2: (*_58),fld3: _22,fld4: _63.1 };
    match RET {
    0 => bb7,
    1 => bb27,
    267628455055243594176447301681441052098 => bb47,
    _ => bb3
    }
    }
    bb47 = {
    _4 = (*_5);
    (*_2) = core::ptr::addr_of_mut!((*_42));
    match RET {
    267628455055243594176447301681441052098 => bb49,
    _ => bb48
    }
    }
    bb48 = {
    (*_5) = _4 * _4;
    (*_5) = _4;
    (*_5) = 2983747653_u32 as i128;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = true as i128;
    (*_5) = _4 >> RET;
    _7 = _4 >> RET;
    (*_5) = _4;
    (*_5) = _4;
    (*_5) = _4 & _4;
    _12 = 75_isize as u64;
    _11 = ('\u{3d66c}',);
    (*_5) = !_4;
    (*_5) = _4;
    _7 = !_4;
    (*_5) = _4 >> _12;
    _10 = 244968734_u32 >> (*_5);
    RET = !31028712785832850990017073951076044065_u128;
    (*_5) = _4 >> _12;
    (*_5) = (-8253_i16) as i128;
    Goto(bb2)
    }
    bb49 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_24) = &(*_55).fld0;
    (*_55).fld1 = Field::<f64>(Variant(_39.1, 2), 0) * _23;
    (*_55).fld3 = (Field::<(char,)>(Variant((*_8), 2), 4).0,);
    (*_55).fld0 = (_48.2.0,);
    (*_55).fld3 = (Field::<(char,)>(Variant((*_8), 2), 4).0,);
    _63.1.0 = (*_55).fld3.0;
    _7 = _4 >> Field::<u8>(Variant((*_8), 2), 2);
    _76 = core::ptr::addr_of!((*_5));
    (*_42) = core::ptr::addr_of_mut!((*_24));
    (*_3) = _78 << (*_58);
    (*_2) = core::ptr::addr_of_mut!((*_42));
    (*_5) = (*_55).fld1 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _94.fld5 = _50 + _50;
    (*_24) = &_48.2;
    (*_55).fld3 = Field::<(char,)>(Variant((*_8), 2), 4);
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *const i128,
    mut _3: *mut *mut *mut &'static (u128,),
    mut _4: *const i16,
    mut _5: (char,),
    mut _6: u32,
    mut _7: char,
    mut _8: u128,
    mut _9: i128,
    mut _10: u32,
    mut _11: char,
    mut _12: u32,
) -> i128 {
    mir! {
    type RET = i128;
    let _13: (f32, &'static mut (i32,));
    let _14: *const &'static [isize; 3];
    let _15: i128;
    let _16: [u8; 1];
    let _17: isize;
    let _18: &'static Adt35;
    let _19: &'static mut f64;
    let _20: i8;
    let _21: [i8; 6];
    let _22: &'static mut u8;
    let _23: u32;
    let _24: char;
    let _25: *const i16;
    let _26: i8;
    let _27: (u16, Adt27, [isize; 3], Adt35);
    let _28: (u128,);
    let _29: usize;
    let _30: &'static mut (i32,);
    let _31: isize;
    let _32: isize;
    let _33: f32;
    let _34: &'static mut &'static *mut i16;
    let _35: i128;
    let _36: *mut Adt42;
    let _37: u128;
    let _38: [u128; 4];
    let _39: bool;
    let _40: &'static [u128; 2];
    let _41: bool;
    let _42: isize;
    let _43: &'static mut f64;
    let _44: [i8; 6];
    let _45: (f32, &'static mut (i32,));
    let _46: ();
    let _47: ();
    {
    _11 = _7;
    _3 = core::ptr::addr_of_mut!(_1);
    RET = -_9;
    _8 = !283117537600816468062366392974355745454_u128;
    _7 = _5.0;
    _3 = core::ptr::addr_of_mut!((*_3));
    _13.0 = 2997050169412512406_usize as f32;
    _13.0 = 9223372036854775807_isize as f32;
    _12 = !_10;
    _6 = 4177923349005408260_i64 as u32;
    _12 = 45_u8 as u32;
    _10 = _6 ^ _6;
    _13.0 = (-6430_i16) as f32;
    _3 = core::ptr::addr_of_mut!((*_3));
    _6 = 1778687931_i32 as u32;
    _11 = _5.0;
    _11 = _5.0;
    _5 = (_7,);
    _5 = (_7,);
    _9 = RET ^ RET;
    _9 = RET ^ RET;
    _6 = _10 + _10;
    _3 = core::ptr::addr_of_mut!((*_3));
    _8 = !44149685035134589283009919602012370614_u128;
    _7 = _5.0;
    _3 = core::ptr::addr_of_mut!((*_3));
    _7 = _11;
    _8 = 6927709649983931566803743414605175325_u128;
    match _8 {
    0 => bb1,
    6927709649983931566803743414605175325 => bb3,
    _ => bb2
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    _3 = core::ptr::addr_of_mut!((*_3));
    _17 = 120_isize + 9223372036854775807_isize;
    _17 = 9223372036854775807_isize >> _6;
    _9 = RET;
    RET = -_9;
    _6 = _10;
    _11 = _5.0;
    _15 = _10 as i128;
    _9 = (-15022_i16) as i128;
    _16 = [125_u8];
    _10 = _12;
    _2 = core::ptr::addr_of!(_9);
    _17 = (-9223372036854775808_isize);
    _16 = [225_u8];
    (*_2) = _8 as i128;
    RET = _9 + _9;
    (*_2) = !RET;
    _8 = !141690918592731116325867361075957208721_u128;
    (*_2) = _15;
    (*_2) = (-27_i8) as i128;
    (*_2) = RET;
    (*_2) = _6 as i128;
    Call(_8 = fn10(Move((*_3)), Move(_3), Move(_2), Move(_4)), ReturnTo(bb4), UnwindUnreachable())
    }
    bb4 = {
    _20 = (-126_i8) * 105_i8;
    _17 = 9223372036854775807_isize;
    _13.0 = (-938050099_i32) as f32;
    _2 = core::ptr::addr_of!(_15);
    _17 = -93_isize;
    _6 = _10 & _10;
    (*_2) = (-7307401996526033734_i64) as i128;
    (*_2) = _9 | _9;
    (*_2) = !_9;
    _5.0 = _7;
    _20 = (*_2) as i8;
    _15 = !_9;
    (*_2) = -RET;
    Goto(bb5)
    }
    bb5 = {
    _12 = _7 as u32;
    _12 = false as u32;
    _10 = _12 << (*_2);
    (*_2) = RET & RET;
    _8 = 279157695453535387034440756205046492227_u128 << (*_2);
    (*_2) = RET;
    _21 = [_20,_20,_20,_20,_20,_20];
    (*_2) = _9 - _9;
    _5.0 = _11;
    _8 = (*_2) as u128;
    Goto(bb6)
    }
    bb6 = {
    (*_2) = -_9;
    _20 = false as i8;
    (*_2) = _9;
    _21 = [_20,_20,_20,_20,_20,_20];
    (*_2) = RET | RET;
    (*_2) = RET ^ _9;
    _13.0 = 1577032080_i32 as f32;
    _5 = (_11,);
    (*_2) = !_9;
    _3 = core::ptr::addr_of_mut!(_1);
    (*_2) = 0_usize as i128;
    (*_2) = RET;
    _3 = core::ptr::addr_of_mut!((*_3));
    (*_2) = -RET;
    _12 = !_6;
    _23 = _13.0 as u32;
    _13.0 = _12 as f32;
    _10 = _17 as u32;
    (*_2) = _9 >> _9;
    (*_2) = RET >> _6;
    _5.0 = _11;
    (*_2) = RET;
    (*_2) = _9 + _9;
    (*_2) = !RET;
    _3 = core::ptr::addr_of_mut!((*_3));
    Goto(bb7)
    }
    bb7 = {
    RET = (*_2);
    _27.1.fld5 = _13.0 - _13.0;
    _23 = _12 + _12;
    (*_2) = RET * RET;
    _27.1.fld4.0 = (-2063987427_i32);
    _27.2 = [_17,_17,_17];
    _29 = 7_usize;
    _24 = _7;
    _9 = RET + (*_2);
    match _27.1.fld4.0 {
    0 => bb3,
    1 => bb2,
    2 => bb8,
    3 => bb9,
    4 => bb10,
    340282366920938463463374607429704224029 => bb12,
    _ => bb11
    }
    }
    bb8 = {
    Return()
    }
    bb9 = {
    _12 = _7 as u32;
    _12 = false as u32;
    _10 = _12 << (*_2);
    (*_2) = RET & RET;
    _8 = 279157695453535387034440756205046492227_u128 << (*_2);
    (*_2) = RET;
    _21 = [_20,_20,_20,_20,_20,_20];
    (*_2) = _9 - _9;
    _5.0 = _11;
    _8 = (*_2) as u128;
    Goto(bb6)
    }
    bb10 = {
    _20 = (-126_i8) * 105_i8;
    _17 = 9223372036854775807_isize;
    _13.0 = (-938050099_i32) as f32;
    _2 = core::ptr::addr_of!(_15);
    _17 = -93_isize;
    _6 = _10 & _10;
    (*_2) = (-7307401996526033734_i64) as i128;
    (*_2) = _9 | _9;
    (*_2) = !_9;
    _5.0 = _7;
    _20 = (*_2) as i8;
    _15 = !_9;
    (*_2) = -RET;
    Goto(bb5)
    }
    bb11 = {
    _3 = core::ptr::addr_of_mut!((*_3));
    _17 = 120_isize + 9223372036854775807_isize;
    _17 = 9223372036854775807_isize >> _6;
    _9 = RET;
    RET = -_9;
    _6 = _10;
    _11 = _5.0;
    _15 = _10 as i128;
    _9 = (-15022_i16) as i128;
    _16 = [125_u8];
    _10 = _12;
    _2 = core::ptr::addr_of!(_9);
    _17 = (-9223372036854775808_isize);
    _16 = [225_u8];
    (*_2) = _8 as i128;
    RET = _9 + _9;
    (*_2) = !RET;
    _8 = !141690918592731116325867361075957208721_u128;
    (*_2) = _15;
    (*_2) = (-27_i8) as i128;
    (*_2) = RET;
    (*_2) = _6 as i128;
    Call(_8 = fn10(Move((*_3)), Move(_3), Move(_2), Move(_4)), ReturnTo(bb4), UnwindUnreachable())
    }
    bb12 = {
    RET = (*_2);
    _26 = _11 as i8;
    _11 = _7;
    _30 = &mut _27.1.fld4;
    (*_30).0 = -(-1145636229_i32);
    _13.1 = &mut (*_30);
    (*_2) = 8063106676517936780_u64 as i128;
    _28 = (_8,);
    _15 = !_9;
    _32 = _17 ^ _17;
    _15 = RET;
    _7 = _11;
    (*_2) = 255_u8 as i128;
    _17 = !_32;
    _30 = Move(_13.1);
    (*_2) = RET;
    _29 = (*_2) as usize;
    (*_2) = _9;
    _10 = _12 & _23;
    _13.0 = (*_2) as f32;
    _20 = _26;
    _10 = _28.0 as u32;
    (*_2) = -_9;
    _20 = _26 - _26;
    (*_2) = _9 | RET;
    _11 = _7;
    _11 = _7;
    Goto(bb13)
    }
    bb13 = {
    (*_2) = -_9;
    _13.0 = 7511320365770953053_u64 as f32;
    _23 = _17 as u32;
    _23 = _10 << RET;
    (*_2) = RET | _9;
    _6 = _23 ^ _10;
    (*_2) = _9 & _9;
    _32 = _29 as isize;
    (*_2) = _9;
    (*_2) = _9 | _9;
    Goto(bb14)
    }
    bb14 = {
    _8 = 51283682083667331_i64 as u128;
    _11 = _5.0;
    _33 = -_13.0;
    _28 = (_8,);
    (*_2) = !RET;
    (*_2) = RET ^ _9;
    _12 = _10;
    _20 = -_26;
    _9 = (*_2) & (*_2);
    _12 = !_6;
    _5 = (_24,);
    (*_2) = _9;
    (*_2) = _9 - _9;
    _7 = _24;
    (*_2) = _9;
    _31 = _32 ^ _17;
    _28.0 = !_8;
    _15 = _9 & _9;
    _15 = _9 & _9;
    Goto(bb15)
    }
    bb15 = {
    (*_2) = _33 as i128;
    _13.0 = _33 * _33;
    _39 = false & true;
    (*_2) = 86662274_i32 as i128;
    (*_2) = 5372303666483480701_u64 as i128;
    _29 = !3_usize;
    _16 = [251_u8];
    (*_2) = -_9;
    _41 = !_39;
    (*_2) = _13.0 as i128;
    Goto(bb16)
    }
    bb16 = {
    (*_2) = _9 >> _17;
    _11 = _5.0;
    (*_2) = -_9;
    (*_2) = RET;
    _42 = _17;
    _42 = _31;
    RET = (*_2) | _9;
    _17 = !_42;
    _41 = _39;
    _6 = !_23;
    (*_2) = _9 >> _42;
    (*_2) = _9 - RET;
    _33 = _13.0 - _13.0;
    (*_2) = _29 as i128;
    (*_2) = RET | _9;
    _15 = -RET;
    _21 = [_20,_26,_20,_26,_26,_20];
    _38 = [_8,_8,_28.0,_28.0];
    _29 = !2_usize;
    _23 = _6;
    _41 = !_39;
    _21 = [_20,_20,_20,_20,_20,_26];
    _10 = _12;
    _31 = _17;
    (*_2) = _26 as i128;
    _35 = !_15;
    Goto(bb17)
    }
    bb17 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *mut *mut *mut &'static (u128,),
    mut _3: *const i128,
    mut _4: *const i16,
) -> u128 {
    mir! {
    type RET = u128;
    let _5: &'static u64;
    let _6: [u128; 4];
    let _7: f64;
    let _8: *mut &'static (u128,);
    let _9: f64;
    let _10: &'static [u128; 2];
    let _11: isize;
    let _12: *mut i32;
    let _13: u64;
    let _14: *const i32;
    let _15: *mut Adt42;
    let _16: *mut &'static (u128,);
    let _17: isize;
    let _18: u8;
    let _19: *const &'static mut (i32,);
    let _20: u128;
    let _21: [usize; 6];
    let _22: f32;
    let _23: i128;
    let _24: Adt27;
    let _25: u128;
    let _26: f32;
    let _27: [i8; 6];
    let _28: char;
    let _29: &'static Adt35;
    let _30: i128;
    let _31: isize;
    let _32: [u64; 8];
    let _33: &'static mut (i32,);
    let _34: (f32, &'static mut (i32,));
    let _35: *mut bool;
    let _36: i16;
    let _37: isize;
    let _38: isize;
    let _39: char;
    let _40: u16;
    let _41: isize;
    let _42: isize;
    let _43: char;
    let _44: f64;
    let _45: f32;
    let _46: [isize; 3];
    let _47: (i32,);
    let _48: i32;
    let _49: (char,);
    let _50: &'static [u128; 2];
    let _51: Adt29;
    let _52: u64;
    let _53: f32;
    let _54: (Adt32, Adt45, [i8; 6]);
    let _55: char;
    let _56: f32;
    let _57: *mut *mut *mut &'static (u128,);
    let _58: &'static mut (i32,);
    let _59: (u16, Adt27, [isize; 3], Adt35);
    let _60: [usize; 6];
    let _61: f64;
    let _62: i8;
    let _63: f32;
    let _64: u32;
    let _65: f64;
    let _66: &'static mut u8;
    let _67: ();
    let _68: ();
    {
    RET = 136936087985524362320325994615263139614_u128;
    _2 = core::ptr::addr_of_mut!(_1);
    match RET {
    0 => bb1,
    1 => bb2,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    5 => bb6,
    6 => bb7,
    136936087985524362320325994615263139614 => bb9,
    _ => bb8
    }
    }
    bb1 = {
    Return()
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    RET = 253681817302635392410313158217704590029_u128;
    _2 = core::ptr::addr_of_mut!((*_2));
    RET = 188623143863283042055324002078396387418_u128;
    RET = 8005735206399279827196165104844494017_u128;
    RET = 170778777372985809201292873650279494188_u128 & 91261851570690000262475844525647948009_u128;
    _2 = core::ptr::addr_of_mut!((*_2));
    RET = 18502_i16 as u128;
    Goto(bb10)
    }
    bb10 = {
    RET = 156024095189690252771422710799061217001_u128 * 22489089270290249367354250644872026644_u128;
    RET = 274992865367390181759231084668616236687_u128;
    RET = 33958281582672266870169709489088957163_u128 - 98772470164426065355007513346375746747_u128;
    RET = 168041678999391807334079550027480403915_u128 >> 266686831588725670656512348566230539571_u128;
    RET = 6047648_u32 as u128;
    _6 = [RET,RET,RET,RET];
    _7 = (-76_isize) as f64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_2) = core::ptr::addr_of_mut!(_8);
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _7 = 1742075134471970273_u64 as f64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb11)
    }
    bb11 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _11 = (-6672398193475817660667996386098431337_i128) as isize;
    _1 = core::ptr::addr_of_mut!((*_1));
    _11 = 9223372036854775807_isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_8);
    _9 = _7 + _7;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _2 = core::ptr::addr_of_mut!((*_2));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    match _11 {
    0 => bb5,
    1 => bb6,
    2 => bb12,
    3 => bb13,
    4 => bb14,
    5 => bb15,
    9223372036854775807 => bb17,
    _ => bb16
    }
    }
    bb12 = {
    Return()
    }
    bb13 = {
    RET = 253681817302635392410313158217704590029_u128;
    _2 = core::ptr::addr_of_mut!((*_2));
    RET = 188623143863283042055324002078396387418_u128;
    RET = 8005735206399279827196165104844494017_u128;
    RET = 170778777372985809201292873650279494188_u128 & 91261851570690000262475844525647948009_u128;
    _2 = core::ptr::addr_of_mut!((*_2));
    RET = 18502_i16 as u128;
    Goto(bb10)
    }
    bb14 = {
    Return()
    }
    bb15 = {
    Return()
    }
    bb16 = {
    Return()
    }
    bb17 = {
    _11 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb18)
    }
    bb18 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    _13 = 42_i8 as u64;
    _13 = 7944106382632512465_u64 ^ 11206421291213437775_u64;
    _11 = 52_isize >> _13;
    _11 = -(-9223372036854775808_isize);
    _18 = 170_u8 | 104_u8;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _5 = &_13;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _24.fld0 = (*_5) > (*_5);
    _6 = [RET,RET,RET,RET];
    _24.fld6 = (-3936567049810227627_i64) << (*_5);
    Call(_12 = fn11(Move((*_2)), Move(_2), Move(_3), Move(_4), Move(_5), _18, (*_5)), ReturnTo(bb19), UnwindUnreachable())
    }
    bb19 = {
    _24.fld5 = 23402_u16 as f32;
    _7 = -_9;
    _11 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
    _2 = core::ptr::addr_of_mut!(_1);
    (*_2) = core::ptr::addr_of_mut!(_8);
    _24.fld4 = (1418160840_i32,);
    match _24.fld4.0 {
    0 => bb20,
    1 => bb21,
    1418160840 => bb23,
    _ => bb22
    }
    }
    bb20 = {
    Return()
    }
    bb21 = {
    _11 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb18)
    }
    bb22 = {
    Return()
    }
    bb23 = {
    _14 = core::ptr::addr_of!(_24.fld4.0);
    _11 = -(-20_isize);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_14) = 35218843_i32;
    (*_14) = _18 as i32;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_14) = (-387489590_i32);
    (*_14) = (-306511985_i32) - 797376421_i32;
    (*_14) = !1319302715_i32;
    _3 = core::ptr::addr_of!(_23);
    _24.fld2 = _11;
    _24.fld1 = '\u{23d4d}';
    _24.fld3 = _13 >> (*_14);
    (*_3) = 92830310115015564667302725184716013920_i128;
    _13 = _24.fld3 * _24.fld3;
    Call(_7 = core::intrinsics::fmaf64(_9, _9, _9), ReturnTo(bb24), UnwindUnreachable())
    }
    bb24 = {
    _17 = _24.fld2 >> _11;
    _21 = [1_usize,10352258224418651027_usize,6_usize,7_usize,3343492267854272719_usize,3_usize];
    _20 = 47485_u16 as u128;
    Goto(bb25)
    }
    bb25 = {
    (*_2) = core::ptr::addr_of_mut!(_16);
    _22 = _7 as f32;
    (*_14) = (-1248966696_i32);
    _11 = (-97_i8) as isize;
    (*_14) = _7 as i32;
    (*_3) = _22 as i128;
    (*_3) = 4245956661378023592060781144089283025_i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = 151889165956347874611599521849044579565_i128 & 36914974419250009285922523591264428526_i128;
    Goto(bb26)
    }
    bb26 = {
    (*_3) = 94754294820455184279717859753221613936_i128 * 23224990560474841308221426276424993761_i128;
    (*_3) = (-85253699548761161953362997287040365992_i128);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    match (*_3) {
    0 => bb14,
    255028667372177301510011610144727845464 => bb28,
    _ => bb27
    }
    }
    bb27 = {
    Return()
    }
    bb28 = {
    _13 = !_24.fld3;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_14) = 127667722_i32;
    _9 = _7;
    _23 = 46018081893674748955836251826362401414_i128 - 81948948029431360854297086754986245305_i128;
    _24.fld1 = '\u{f2c0d}';
    _24.fld6 = 767921363901861135_i64;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    RET = _20 - _20;
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!(_8);
    _26 = _22 + _22;
    _28 = _24.fld1;
    (*_14) = 1991138415_i32;
    (*_2) = core::ptr::addr_of_mut!(_8);
    _9 = _7;
    (*_14) = 7_i8 as i32;
    (*_14) = 2011010828_i32;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    _3 = core::ptr::addr_of!((*_3));
    (*_3) = 82531282078932312986276219300196008308_i128 << (*_14);
    _24.fld3 = _13 ^ _13;
    (*_3) = (-153135763984505946828511930370458424653_i128) + 12764984415237214834646497362176111197_i128;
    _24.fld5 = _26 * _22;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_14) = 1059917024_i32 + (-1233325765_i32);
    Goto(bb29)
    }
    bb29 = {
    _5 = &_13;
    (*_14) = 619897789_i32 << (*_5);
    _22 = -_26;
    _33 = &mut _24.fld4;
    (*_33) = ((-1293381497_i32),);
    (*_33) = (708120660_i32,);
    _30 = _23 - (*_3);
    (*_3) = _30 ^ _30;
    _27 = [92_i8,(-99_i8),(-52_i8),(-119_i8),37_i8,(-81_i8)];
    (*_33) = (934884295_i32,);
    _34.1 = &mut (*_33);
    Call(_11 = core::intrinsics::transmute((*_5)), ReturnTo(bb30), UnwindUnreachable())
    }
    bb30 = {
    _18 = 94_u8 << (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _33 = Move(_34.1);
    Goto(bb31)
    }
    bb31 = {
    (*_3) = _30 ^ _30;
    _13 = 194267131640161460_u64 ^ 10586154715299716877_u64;
    _27 = [90_i8,66_i8,(-27_i8),(-122_i8),20_i8,(-11_i8)];
    _7 = -_9;
    (*_3) = -_30;
    _25 = !_20;
    _31 = _9 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _23 = !_30;
    (*_3) = _30;
    _28 = '\u{45d44}';
    (*_3) = !_30;
    (*_3) = !_30;
    (*_3) = _28 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = -_30;
    Goto(bb32)
    }
    bb32 = {
    _23 = _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = 167040500_i32 as i128;
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30 << _13;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _3 = core::ptr::addr_of!(_23);
    (*_3) = _30;
    _13 = (-100_i8) as u64;
    _37 = _11 ^ _17;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _25 = RET | RET;
    _23 = _30 ^ _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30 >> _11;
    (*_3) = !_30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _28 = '\u{2985a}';
    Goto(bb33)
    }
    bb33 = {
    (*_3) = _30 + _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = !_30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _41 = !_17;
    (*_3) = _30;
    (*_3) = _30 << RET;
    (*_3) = _25 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _38 = _31;
    _4 = core::ptr::addr_of!(_36);
    _38 = _11;
    _25 = _20;
    _6 = [_25,_25,RET,RET];
    (*_3) = _30;
    _30 = 1016239674_i32 as i128;
    (*_4) = 18877_i16 + (-25477_i16);
    _23 = _30 + _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 2439_i16 & (-29980_i16);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _7 = -_9;
    (*_4) = 6647_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_4) = -(-10141_i16);
    _44 = -_9;
    Goto(bb34)
    }
    bb34 = {
    (*_4) = (-25538_i16) * 8083_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = (*_4) as i128;
    _40 = RET as u16;
    _7 = _40 as f64;
    (*_3) = _28 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = (-7175_i16) * 105_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _45 = -_26;
    _23 = _30;
    _21 = [1_usize,6_usize,0_usize,1547770381347796479_usize,2594339890356065620_usize,15034057314731040172_usize];
    Goto(bb35)
    }
    bb35 = {
    (*_3) = -_30;
    _43 = _28;
    (*_4) = !21518_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _6 = [_20,_25,_25,RET];
    (*_3) = _30 - _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30 + _30;
    (*_3) = 603302436_u32 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _7 = _44 * _44;
    _38 = (-91707367_i32) as isize;
    _4 = core::ptr::addr_of!((*_4));
    _47.0 = (-1139683245_i32);
    _11 = _41 | _41;
    _12 = core::ptr::addr_of_mut!(_47.0);
    _34.1 = &mut _47;
    (*_4) = (-10362_i16) | 5698_i16;
    _26 = (-59_i8) as f32;
    Goto(bb36)
    }
    bb36 = {
    (*_3) = _30 - _30;
    _7 = _9 - _9;
    _39 = _28;
    _11 = _37 * _41;
    (*_4) = 13577_i16 - (-15612_i16);
    Goto(bb37)
    }
    bb37 = {
    _9 = (-1215506009_i32) as f64;
    _1 = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _9 = -_7;
    (*_3) = _30 + _30;
    (*_4) = 7243_i16 - 86_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30 & _30;
    _28 = _43;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_4) = 24343_i16 ^ (-26049_i16);
    (*_4) = 4828_i16 | (-14612_i16);
    (*_3) = -_30;
    (*_4) = (-12734_i16);
    _27 = [33_i8,61_i8,35_i8,38_i8,23_i8,(-87_i8)];
    _30 = 7_usize as i128;
    _36 = 11604_i16;
    _34.0 = _22;
    _44 = _9;
    Goto(bb38)
    }
    bb38 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = !_30;
    (*_4) = (-27649_i16) >> _30;
    (*_3) = _30 << (*_4);
    _40 = 4882_u16 + 60822_u16;
    _42 = 35090659_u32 as isize;
    (*_4) = 4988_i16 + 31908_i16;
    Goto(bb39)
    }
    bb39 = {
    (*_4) = 22382_i16;
    (*_4) = 10053_i16;
    _52 = _13 >> (*_3);
    _44 = RET as f64;
    _3 = core::ptr::addr_of!((*_3));
    (*_3) = _30;
    _49 = (_43,);
    (*_3) = _30 + _30;
    (*_3) = (*_4) as i128;
    (*_3) = _30 >> _18;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _53 = _45 + _22;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30 | _30;
    (*_3) = !_30;
    (*_4) = 13630_i16 & (-23948_i16);
    (*_4) = 28013_i16 >> (*_3);
    (*_3) = _30;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _54.0 = Adt32::Variant2 { fld0: false,fld1: 93630922_u32,fld2: _18,fld3: _40,fld4: _49 };
    (*_4) = 19874_i16 * 19281_i16;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = _30;
    (*_3) = 3504135201_u32 as i128;
    Goto(bb40)
    }
    bb40 = {
    _32 = [_52,_13,_52,_13,_52,_52,_52,_52];
    Goto(bb41)
    }
    bb41 = {
    (*_3) = _30 + _30;
    _51 = Adt29::Variant0 { fld0: 3083391493_u32,fld1: (*_3),fld2: Field::<u8>(Variant(_54.0, 2), 2),fld3: 26_i8,fld4: Field::<u16>(Variant(_54.0, 2), 3),fld5: 2003076259_i32 };
    _44 = _9 - _7;
    _48 = 840079051_i32 & 1227169739_i32;
    _55 = _39;
    (*_4) = (-4364_i16);
    (*_4) = (-3304_i16);
    _22 = -_45;
    (*_3) = _30 * Field::<i128>(Variant(_51, 0), 1);
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_3) = 10954822042776921869_usize as i128;
    place!(Field::<u32>(Variant(_51, 0), 0)) = 1013761878_u32 >> _40;
    _14 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_51, 0), 5)));
    (*_3) = !Field::<i128>(Variant(_51, 0), 1);
    place!(Field::<u32>(Variant(_54.0, 2), 1)) = Field::<u32>(Variant(_51, 0), 0) + Field::<u32>(Variant(_51, 0), 0);
    (*_14) = (*_3) as i32;
    _19 = core::ptr::addr_of!(_34.1);
    _48 = (*_14) * (*_14);
    _46 = [_17,_41,_37];
    _40 = !Field::<u16>(Variant(_51, 0), 4);
    Goto(bb42)
    }
    bb42 = {
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = Field::<i128>(Variant(_51, 0), 1) >> (*_14);
    match (*_4) {
    0 => bb43,
    1 => bb44,
    2 => bb45,
    3 => bb46,
    340282366920938463463374607431768208152 => bb48,
    _ => bb47
    }
    }
    bb43 = {
    (*_3) = _30 + _30;
    _51 = Adt29::Variant0 { fld0: 3083391493_u32,fld1: (*_3),fld2: Field::<u8>(Variant(_54.0, 2), 2),fld3: 26_i8,fld4: Field::<u16>(Variant(_54.0, 2), 3),fld5: 2003076259_i32 };
    _44 = _9 - _7;
    _48 = 840079051_i32 & 1227169739_i32;
    _55 = _39;
    (*_4) = (-4364_i16);
    (*_4) = (-3304_i16);
    _22 = -_45;
    (*_3) = _30 * Field::<i128>(Variant(_51, 0), 1);
    (*_2) = core::ptr::addr_of_mut!(_8);
    (*_3) = 10954822042776921869_usize as i128;
    place!(Field::<u32>(Variant(_51, 0), 0)) = 1013761878_u32 >> _40;
    _14 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_51, 0), 5)));
    (*_3) = !Field::<i128>(Variant(_51, 0), 1);
    place!(Field::<u32>(Variant(_54.0, 2), 1)) = Field::<u32>(Variant(_51, 0), 0) + Field::<u32>(Variant(_51, 0), 0);
    (*_14) = (*_3) as i32;
    _19 = core::ptr::addr_of!(_34.1);
    _48 = (*_14) * (*_14);
    _46 = [_17,_41,_37];
    _40 = !Field::<u16>(Variant(_51, 0), 4);
    Goto(bb42)
    }
    bb44 = {
    (*_3) = _30 ^ _30;
    _13 = 194267131640161460_u64 ^ 10586154715299716877_u64;
    _27 = [90_i8,66_i8,(-27_i8),(-122_i8),20_i8,(-11_i8)];
    _7 = -_9;
    (*_3) = -_30;
    _25 = !_20;
    _31 = _9 as isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _23 = !_30;
    (*_3) = _30;
    _28 = '\u{45d44}';
    (*_3) = !_30;
    (*_3) = !_30;
    (*_3) = _28 as i128;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = -_30;
    Goto(bb32)
    }
    bb45 = {
    _11 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    Goto(bb18)
    }
    bb46 = {
    Return()
    }
    bb47 = {
    Return()
    }
    bb48 = {
    _12 = core::ptr::addr_of_mut!((*_14));
    (*_4) = (-16094_i16) << (*_3);
    (*_4) = (*_3) as i16;
    _54.2 = [(-65_i8),(-97_i8),91_i8,64_i8,(-73_i8),(-51_i8)];
    _26 = _45;
    (*_4) = (-26749_i16);
    place!(Field::<bool>(Variant(_54.0, 2), 0)) = true;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = Field::<i128>(Variant(_51, 0), 1) - _30;
    (*_4) = (-15448_i16) ^ 256_i16;
    (*_3) = !Field::<i128>(Variant(_51, 0), 1);
    Goto(bb49)
    }
    bb49 = {
    (*_14) = _48 * _48;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    (*_3) = Field::<i32>(Variant(_51, 0), 5) as i128;
    _22 = _53;
    _52 = _18 as u64;
    (*_14) = !_48;
    _60 = [5646156944375307736_usize,3_usize,6_usize,4_usize,17995540945652782845_usize,8994613382720272624_usize];
    _57 = core::ptr::addr_of_mut!((*_2));
    _38 = !_11;
    _25 = _20;
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _31 = 2665114847273771776_usize as isize;
    _59.1.fld0 = !Field::<bool>(Variant(_54.0, 2), 0);
    (*_14) = !_48;
    (*_14) = _48 << (*_3);
    (*_2) = core::ptr::addr_of_mut!((*_1));
    _56 = _26 + _26;
    _43 = Field::<(char,)>(Variant(_54.0, 2), 4).0;
    _59.1.fld4 = ((*_14),);
    (*_19) = &mut _59.1.fld4;
    _44 = _9 + _9;
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *mut *mut *mut &'static (u128,),
    mut _3: *const i128,
    mut _4: *const i16,
    mut _5: &'static u64,
    mut _6: u8,
    mut _7: u64,
) -> *mut i32 {
    mir! {
    type RET = *mut i32;
    let _8: [u16; 8];
    let _9: isize;
    let _10: [u64; 4];
    let _11: &'static (u128,);
    let _12: u64;
    let _13: *const Adt32;
    let _14: Adt42;
    let _15: *mut bool;
    let _16: &'static mut f64;
    let _17: [u64; 7];
    let _18: i8;
    let _19: [isize; 3];
    let _20: Adt74;
    let _21: i8;
    let _22: *const i32;
    let _23: Adt45;
    let _24: char;
    let _25: u8;
    let _26: bool;
    let _27: *const i128;
    let _28: *mut Adt42;
    let _29: &'static mut u8;
    let _30: *mut Adt42;
    let _31: Adt29;
    let _32: [i8; 6];
    let _33: i32;
    let _34: &'static (u128,);
    let _35: Adt74;
    let _36: isize;
    let _37: *const Adt27;
    let _38: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _39: [u128; 8];
    let _40: char;
    let _41: u16;
    let _42: i8;
    let _43: bool;
    let _44: [usize; 6];
    let _45: *const [i8; 6];
    let _46: (f32, &'static mut (i32,));
    let _47: [u16; 1];
    let _48: &'static mut &'static *mut i16;
    let _49: bool;
    let _50: [isize; 3];
    let _51: *const [i8; 6];
    let _52: u32;
    let _53: &'static u64;
    let _54: ([u64; 8], [isize; 3], &'static &'static mut [isize; 3]);
    let _55: &'static [u128; 2];
    let _56: &'static mut [isize; 3];
    let _57: &'static mut (i32,);
    let _58: *const [i8; 6];
    let _59: u64;
    let _60: *const Adt32;
    let _61: f32;
    let _62: f64;
    let _63: i128;
    let _64: &'static *mut i16;
    let _65: isize;
    let _66: isize;
    let _67: ();
    let _68: ();
    {
    _6 = 254_u8;
    _6 = !74_u8;
    _5 = &_7;
    _6 = 241_u8 >> (*_5);
    _7 = !2686966475676533241_u64;
    _6 = 27767_i16 as u8;
    _7 = 13662381422156623199_u64 | 18180302599847762675_u64;
    _2 = core::ptr::addr_of_mut!(_1);
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = 71_u8 - 109_u8;
    _6 = 56_u8 ^ 102_u8;
    _7 = !2572947498665853525_u64;
    _7 = 747042520983981369_u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _7 = 7232066110629559875_u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [28418_u16,35001_u16,26126_u16,42104_u16,14616_u16,65308_u16,60759_u16,63769_u16];
    _2 = core::ptr::addr_of_mut!((*_2));
    _7 = false as u64;
    Goto(bb1)
    }
    bb1 = {
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [42141_u16,15126_u16,28808_u16,45374_u16,15202_u16,38946_u16,27596_u16,59596_u16];
    _6 = 162_u8 << _7;
    _6 = 145_u8 * 114_u8;
    _7 = 1987992561514419668_u64;
    _6 = 144_u8 * 136_u8;
    _8 = [51654_u16,11980_u16,4018_u16,4456_u16,64744_u16,5455_u16,18053_u16,29451_u16];
    _6 = !134_u8;
    _9 = 9223372036854775807_isize;
    _9 = (-67068749_i32) as isize;
    _8 = [43792_u16,45090_u16,10968_u16,2820_u16,41189_u16,36280_u16,23683_u16,58130_u16];
    _7 = 1526607223545381748_u64 + 7580512188905450755_u64;
    _7 = 969476081280332661_u64 | 16113152896472573074_u64;
    _6 = 195_u8;
    _7 = (-3831539120894230229_i64) as u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _9 = 9223372036854775807_isize;
    _6 = 8_u8 & 76_u8;
    _6 = 89_u8;
    _9 = 30_isize - 9223372036854775807_isize;
    _6 = 72_u8;
    _8 = [21132_u16,10960_u16,18421_u16,11848_u16,35384_u16,37656_u16,15945_u16,60747_u16];
    _9 = (-9223372036854775808_isize) & 9223372036854775807_isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = !29_u8;
    _6 = 154_u8;
    _8 = [21778_u16,49173_u16,45763_u16,59848_u16,17340_u16,54705_u16,60053_u16,27092_u16];
    _6 = 71_u8 | 51_u8;
    Goto(bb2)
    }
    bb2 = {
    _9 = !22_isize;
    _8 = [30640_u16,9904_u16,28008_u16,37469_u16,37565_u16,58715_u16,14542_u16,33285_u16];
    _10 = [_7,_7,_7,_7];
    _8 = [40707_u16,60933_u16,53886_u16,16722_u16,47581_u16,27883_u16,49676_u16,44571_u16];
    _2 = core::ptr::addr_of_mut!((*_2));
    _10 = [_7,_7,_7,_7];
    _9 = '\u{1ad9c}' as isize;
    _7 = !14025022383712238420_u64;
    _8 = [47998_u16,5880_u16,55340_u16,57687_u16,59947_u16,60447_u16,34388_u16,45998_u16];
    _6 = _7 as u8;
    Goto(bb3)
    }
    bb3 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb4 = {
    _14.fld0.0 = !239959548395910487139941186781023928125_u128;
    _14.fld0.0 = 315626249103265041486539667173657367475_u128 + 294824622979275444165652729776978197900_u128;
    _14.fld3.0 = '\u{2c2f4}';
    _17 = [_12,_7,_12,_12,_12,_12,_7];
    _12 = _7 + _7;
    _19 = [_9,_9,_9];
    _11 = &_14.fld0;
    _17 = [_7,_12,_7,_7,_12,_7,_7];
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld3.0 = '\u{ead93}';
    _14.fld1 = _6 as f64;
    _17 = [_12,_7,_12,_12,_12,_7,_7];
    _5 = &_12;
    _14.fld1 = 46789_u16 as f64;
    _14.fld3.0 = '\u{831ab}';
    _16 = &mut _14.fld1;
    _9 = (-33_isize);
    _6 = 196_u8 | 228_u8;
    (*_16) = (*_11).0 as f64;
    _17 = [(*_5),(*_5),(*_5),(*_5),(*_5),(*_5),(*_5)];
    _12 = !_7;
    _21 = _18 | _18;
    match _9 {
    0 => bb1,
    1 => bb2,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    6 => bb9,
    340282366920938463463374607431768211423 => bb11,
    _ => bb10
    }
    }
    bb5 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb6 = {
    _9 = !22_isize;
    _8 = [30640_u16,9904_u16,28008_u16,37469_u16,37565_u16,58715_u16,14542_u16,33285_u16];
    _10 = [_7,_7,_7,_7];
    _8 = [40707_u16,60933_u16,53886_u16,16722_u16,47581_u16,27883_u16,49676_u16,44571_u16];
    _2 = core::ptr::addr_of_mut!((*_2));
    _10 = [_7,_7,_7,_7];
    _9 = '\u{1ad9c}' as isize;
    _7 = !14025022383712238420_u64;
    _8 = [47998_u16,5880_u16,55340_u16,57687_u16,59947_u16,60447_u16,34388_u16,45998_u16];
    _6 = _7 as u8;
    Goto(bb3)
    }
    bb7 = {
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [42141_u16,15126_u16,28808_u16,45374_u16,15202_u16,38946_u16,27596_u16,59596_u16];
    _6 = 162_u8 << _7;
    _6 = 145_u8 * 114_u8;
    _7 = 1987992561514419668_u64;
    _6 = 144_u8 * 136_u8;
    _8 = [51654_u16,11980_u16,4018_u16,4456_u16,64744_u16,5455_u16,18053_u16,29451_u16];
    _6 = !134_u8;
    _9 = 9223372036854775807_isize;
    _9 = (-67068749_i32) as isize;
    _8 = [43792_u16,45090_u16,10968_u16,2820_u16,41189_u16,36280_u16,23683_u16,58130_u16];
    _7 = 1526607223545381748_u64 + 7580512188905450755_u64;
    _7 = 969476081280332661_u64 | 16113152896472573074_u64;
    _6 = 195_u8;
    _7 = (-3831539120894230229_i64) as u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _9 = 9223372036854775807_isize;
    _6 = 8_u8 & 76_u8;
    _6 = 89_u8;
    _9 = 30_isize - 9223372036854775807_isize;
    _6 = 72_u8;
    _8 = [21132_u16,10960_u16,18421_u16,11848_u16,35384_u16,37656_u16,15945_u16,60747_u16];
    _9 = (-9223372036854775808_isize) & 9223372036854775807_isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = !29_u8;
    _6 = 154_u8;
    _8 = [21778_u16,49173_u16,45763_u16,59848_u16,17340_u16,54705_u16,60053_u16,27092_u16];
    _6 = 71_u8 | 51_u8;
    Goto(bb2)
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    Return()
    }
    bb11 = {
    (*_16) = (*_11).0 as f64;
    (*_16) = _21 as f64;
    (*_16) = _21 as f64;
    Goto(bb12)
    }
    bb12 = {
    (*_16) = (-1586856130_i32) as f64;
    _21 = !_18;
    (*_16) = _7 as f64;
    (*_16) = 100993241195958513522453439345402178433_i128 as f64;
    (*_16) = (-20527_i16) as f64;
    (*_16) = _7 as f64;
    (*_16) = 56006_u16 as f64;
    (*_16) = 9337848124694960409_usize as f64;
    (*_16) = 115691005704263949_i64 as f64;
    (*_16) = 3804818597_u32 as f64;
    _5 = &_7;
    (*_16) = (*_5) as f64;
    match _9 {
    0 => bb13,
    340282366920938463463374607431768211423 => bb15,
    _ => bb14
    }
    }
    bb13 = {
    (*_16) = (*_11).0 as f64;
    (*_16) = _21 as f64;
    (*_16) = _21 as f64;
    Goto(bb12)
    }
    bb14 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb15 = {
    match _18 {
    0 => bb16,
    124 => bb18,
    _ => bb17
    }
    }
    bb16 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb17 = {
    _9 = !22_isize;
    _8 = [30640_u16,9904_u16,28008_u16,37469_u16,37565_u16,58715_u16,14542_u16,33285_u16];
    _10 = [_7,_7,_7,_7];
    _8 = [40707_u16,60933_u16,53886_u16,16722_u16,47581_u16,27883_u16,49676_u16,44571_u16];
    _2 = core::ptr::addr_of_mut!((*_2));
    _10 = [_7,_7,_7,_7];
    _9 = '\u{1ad9c}' as isize;
    _7 = !14025022383712238420_u64;
    _8 = [47998_u16,5880_u16,55340_u16,57687_u16,59947_u16,60447_u16,34388_u16,45998_u16];
    _6 = _7 as u8;
    Goto(bb3)
    }
    bb18 = {
    _12 = _18 as u64;
    _12 = (*_5) >> (*_11).0;
    (*_16) = (-2101183608_i32) as f64;
    _25 = !_6;
    (*_16) = 354106483_u32 as f64;
    (*_16) = _18 as f64;
    (*_16) = _21 as f64;
    match _18 {
    0 => bb5,
    1 => bb4,
    2 => bb19,
    3 => bb20,
    124 => bb22,
    _ => bb21
    }
    }
    bb19 = {
    Return()
    }
    bb20 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb21 = {
    (*_16) = (*_11).0 as f64;
    (*_16) = _21 as f64;
    (*_16) = _21 as f64;
    Goto(bb12)
    }
    bb22 = {
    _18 = true as i8;
    _21 = _18;
    (*_16) = (-1535533398_i32) as f64;
    (*_16) = 1854377786_i32 as f64;
    (*_16) = (-3237849932024350075_i64) as f64;
    (*_16) = 1342791406_i32 as f64;
    _27 = Move(_3);
    _26 = (*_5) <= (*_5);
    _25 = _6;
    _5 = &_12;
    Call(_26 = fn12(Move((*_2)), Move(_2), (*_16), (*_16), Move(_11)), ReturnTo(bb23), UnwindUnreachable())
    }
    bb23 = {
    (*_16) = _18 as f64;
    match _9 {
    0 => bb5,
    1 => bb6,
    2 => bb24,
    340282366920938463463374607431768211423 => bb26,
    _ => bb25
    }
    }
    bb24 = {
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [42141_u16,15126_u16,28808_u16,45374_u16,15202_u16,38946_u16,27596_u16,59596_u16];
    _6 = 162_u8 << _7;
    _6 = 145_u8 * 114_u8;
    _7 = 1987992561514419668_u64;
    _6 = 144_u8 * 136_u8;
    _8 = [51654_u16,11980_u16,4018_u16,4456_u16,64744_u16,5455_u16,18053_u16,29451_u16];
    _6 = !134_u8;
    _9 = 9223372036854775807_isize;
    _9 = (-67068749_i32) as isize;
    _8 = [43792_u16,45090_u16,10968_u16,2820_u16,41189_u16,36280_u16,23683_u16,58130_u16];
    _7 = 1526607223545381748_u64 + 7580512188905450755_u64;
    _7 = 969476081280332661_u64 | 16113152896472573074_u64;
    _6 = 195_u8;
    _7 = (-3831539120894230229_i64) as u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _9 = 9223372036854775807_isize;
    _6 = 8_u8 & 76_u8;
    _6 = 89_u8;
    _9 = 30_isize - 9223372036854775807_isize;
    _6 = 72_u8;
    _8 = [21132_u16,10960_u16,18421_u16,11848_u16,35384_u16,37656_u16,15945_u16,60747_u16];
    _9 = (-9223372036854775808_isize) & 9223372036854775807_isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = !29_u8;
    _6 = 154_u8;
    _8 = [21778_u16,49173_u16,45763_u16,59848_u16,17340_u16,54705_u16,60053_u16,27092_u16];
    _6 = 71_u8 | 51_u8;
    Goto(bb2)
    }
    bb25 = {
    _12 = _18 as u64;
    _12 = (*_5) >> (*_11).0;
    (*_16) = (-2101183608_i32) as f64;
    _25 = !_6;
    (*_16) = 354106483_u32 as f64;
    (*_16) = _18 as f64;
    (*_16) = _21 as f64;
    match _18 {
    0 => bb5,
    1 => bb4,
    2 => bb19,
    3 => bb20,
    124 => bb22,
    _ => bb21
    }
    }
    bb26 = {
    match _9 {
    0 => bb27,
    1 => bb28,
    2 => bb29,
    3 => bb30,
    340282366920938463463374607431768211423 => bb32,
    _ => bb31
    }
    }
    bb27 = {
    (*_16) = (*_11).0 as f64;
    (*_16) = _21 as f64;
    (*_16) = _21 as f64;
    Goto(bb12)
    }
    bb28 = {
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [42141_u16,15126_u16,28808_u16,45374_u16,15202_u16,38946_u16,27596_u16,59596_u16];
    _6 = 162_u8 << _7;
    _6 = 145_u8 * 114_u8;
    _7 = 1987992561514419668_u64;
    _6 = 144_u8 * 136_u8;
    _8 = [51654_u16,11980_u16,4018_u16,4456_u16,64744_u16,5455_u16,18053_u16,29451_u16];
    _6 = !134_u8;
    _9 = 9223372036854775807_isize;
    _9 = (-67068749_i32) as isize;
    _8 = [43792_u16,45090_u16,10968_u16,2820_u16,41189_u16,36280_u16,23683_u16,58130_u16];
    _7 = 1526607223545381748_u64 + 7580512188905450755_u64;
    _7 = 969476081280332661_u64 | 16113152896472573074_u64;
    _6 = 195_u8;
    _7 = (-3831539120894230229_i64) as u64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _9 = 9223372036854775807_isize;
    _6 = 8_u8 & 76_u8;
    _6 = 89_u8;
    _9 = 30_isize - 9223372036854775807_isize;
    _6 = 72_u8;
    _8 = [21132_u16,10960_u16,18421_u16,11848_u16,35384_u16,37656_u16,15945_u16,60747_u16];
    _9 = (-9223372036854775808_isize) & 9223372036854775807_isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = !29_u8;
    _6 = 154_u8;
    _8 = [21778_u16,49173_u16,45763_u16,59848_u16,17340_u16,54705_u16,60053_u16,27092_u16];
    _6 = 71_u8 | 51_u8;
    Goto(bb2)
    }
    bb29 = {
    (*_16) = _18 as f64;
    match _9 {
    0 => bb5,
    1 => bb6,
    2 => bb24,
    340282366920938463463374607431768211423 => bb26,
    _ => bb25
    }
    }
    bb30 = {
    _6 = !75_u8;
    _8 = [12063_u16,9265_u16,63557_u16,10785_u16,44041_u16,10016_u16,8836_u16,33532_u16];
    _10 = [_7,_7,_7,_7];
    _6 = 233_u8 + 45_u8;
    _6 = !203_u8;
    _12 = !_7;
    _9 = (-3243_i16) as isize;
    _2 = core::ptr::addr_of_mut!((*_2));
    _14.fld0 = (48932266313817262112279902754113905782_u128,);
    _9 = '\u{38c1e}' as isize;
    _14.fld3.0 = '\u{70343}';
    _12 = _7;
    _14.fld1 = _14.fld0.0 as f64;
    _18 = 124_i8;
    _8 = [20144_u16,53138_u16,6983_u16,10176_u16,29138_u16,10144_u16,46860_u16,40781_u16];
    _14.fld0.0 = 297518459157404146311343712826500120898_u128;
    match _14.fld0.0 {
    297518459157404146311343712826500120898 => bb4,
    _ => bb2
    }
    }
    bb31 = {
    Return()
    }
    bb32 = {
    _17 = [(*_5),(*_5),(*_5),(*_5),_12,(*_5),(*_5)];
    _3 = Move(_27);
    _2 = core::ptr::addr_of_mut!(_1);
    _18 = _21;
    (*_16) = 3072288048863871366_usize as f64;
    (*_16) = _21 as f64;
    _7 = (*_5) & (*_5);
    _5 = &_7;
    _9 = 9223372036854775807_isize;
    RET = core::ptr::addr_of_mut!(_33);
    (*RET) = _26 as i32;
    _24 = '\u{d4640}';
    (*_16) = (*RET) as f64;
    _32 = [_21,_21,_21,_21,_18,_18];
    (*_16) = 3694646770_u32 as f64;
    Call(_37 = fn13(Move(_2)), ReturnTo(bb33), UnwindUnreachable())
    }
    bb33 = {
    (*RET) = 1355891056_i32;
    _21 = !_18;
    _27 = Move(_3);
    _39 = [41739954277898336722679773389061053235_u128,74077212825433741782792750823116141407_u128,81502997161022939565345298588303596484_u128,205144125084682092810923479711109458735_u128,186493469227819971513573157566066590025_u128,229279108337776553015425691659304757488_u128,96454808388765338424607409243586172489_u128,230032699177379268904086100033883120111_u128];
    _15 = core::ptr::addr_of_mut!(_26);
    (*_16) = 210991623965394481994592157856846479764_u128 as f64;
    (*_15) = true;
    (*_16) = (-16317_i16) as f64;
    (*_15) = (*_5) >= (*_5);
    (*_16) = _6 as f64;
    _36 = _9 - _9;
    _17 = [(*_5),(*_5),_7,(*_5),(*_5),(*_5),(*_5)];
    _41 = !55029_u16;
    _3 = Move(_27);
    Goto(bb34)
    }
    bb34 = {
    (*RET) = 1861640038_i32;
    (*RET) = 1930782704_i32 ^ 349734306_i32;
    _6 = !_25;
    (*_15) = !true;
    _31 = Adt29::Variant0 { fld0: 1710827622_u32,fld1: (-16013106860345699901936894205673229189_i128),fld2: _25,fld3: _21,fld4: _41,fld5: (*RET) };
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    _2 = core::ptr::addr_of_mut!(_1);
    (*_15) = !false;
    _9 = !_36;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    (*_16) = (-133354370827987524133455935378457857703_i128) as f64;
    (*_16) = (*RET) as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    (*_15) = true;
    (*_16) = 14250_i16 as f64;
    (*RET) = !Field::<i32>(Variant(_31, 0), 5);
    _19 = [_36,_9,_36];
    (*_16) = (*_5) as f64;
    place!(Field::<i8>(Variant(_31, 0), 3)) = _18;
    (*_16) = Field::<i8>(Variant(_31, 0), 3) as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) | Field::<i32>(Variant(_31, 0), 5);
    (*_15) = (*_5) > (*_5);
    _38.2 = (160214153498660786154279229538301774393_u128,);
    _21 = !Field::<i8>(Variant(_31, 0), 3);
    (*_16) = (-8725127826010297908843349387754471733_i128) as f64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [_41,Field::<u16>(Variant(_31, 0), 4),_41,_41,_41,_41,_41,Field::<u16>(Variant(_31, 0), 4)];
    Goto(bb35)
    }
    bb35 = {
    (*_15) = _24 >= _24;
    (*RET) = !Field::<i32>(Variant(_31, 0), 5);
    _29 = &mut _25;
    (*_16) = (-27227_i16) as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    (*_29) = !Field::<u8>(Variant(_31, 0), 2);
    (*_15) = (*_5) > (*_5);
    _39 = [_38.2.0,_38.2.0,_38.2.0,_38.2.0,_38.2.0,_38.2.0,_38.2.0,_38.2.0];
    (*_29) = _6 + _6;
    _46.0 = 2_usize as f32;
    _42 = _18 * _18;
    _36 = _9 | _9;
    (*RET) = (-1752652111686815921_i64) as i32;
    (*_15) = false;
    (*_29) = Field::<u8>(Variant(_31, 0), 2) | Field::<u8>(Variant(_31, 0), 2);
    (*_16) = 7524_i16 as f64;
    _38.2.0 = 266261076557696432512383709211226195396_u128 + 102302024560977682650674861195787607018_u128;
    (*_29) = _21 as u8;
    (*_16) = _38.2.0 as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) & Field::<i32>(Variant(_31, 0), 5);
    (*_29) = _6 >> (*RET);
    _38.0 = Move(_4);
    _4 = Move(_38.0);
    place!(Field::<u32>(Variant(_31, 0), 0)) = 547082954_u32 | 3675025197_u32;
    (*_29) = _6;
    Goto(bb36)
    }
    bb36 = {
    (*_29) = _6 - _6;
    _23 = Adt45::Variant2 { fld0: (*_16),fld1: 143116342602871326725448890097802627376_i128 };
    (*RET) = (*_15) as i32;
    _16 = &mut place!(Field::<f64>(Variant(_23, 2), 0));
    Call(_18 = core::intrinsics::transmute((*_15)), ReturnTo(bb37), UnwindUnreachable())
    }
    bb37 = {
    (*_29) = Field::<u8>(Variant(_31, 0), 2) >> (*RET);
    Goto(bb38)
    }
    bb38 = {
    _49 = (*_15);
    (*_15) = _49;
    (*_15) = (*RET) >= (*RET);
    _10 = [(*_5),(*_5),(*_5),(*_5)];
    _22 = core::ptr::addr_of!((*RET));
    _29 = &mut _6;
    (*_15) = (*_22) == (*_22);
    (*_16) = (*_22) as f64;
    (*_29) = Field::<u8>(Variant(_31, 0), 2) >> (*_5);
    (*_16) = 11148556373466207187_usize as f64;
    (*_22) = _36 as i32;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    _44 = [12663494603376048319_usize,4_usize,4_usize,7462784347164755809_usize,13049868286449362987_usize,2588539376033283514_usize];
    place!(Field::<i128>(Variant(_31, 0), 1)) = 66722782407829689330104600744858057188_i128 + (-59908540990174885282970025063565394969_i128);
    (*_29) = Field::<u8>(Variant(_31, 0), 2);
    (*_16) = _38.2.0 as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    place!(Field::<i32>(Variant(_31, 0), 5)) = (*RET) * _33;
    (*_16) = _36 as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) >> _7;
    _49 = (*_5) > (*_5);
    _38.0 = Move(_4);
    (*_16) = _38.2.0 as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    _24 = '\u{1d26a}';
    _34 = &_38.2;
    _43 = (*_15) | _49;
    (*_16) = _46.0 as f64;
    _21 = _42;
    Goto(bb39)
    }
    bb39 = {
    place!(Field::<i32>(Variant(_31, 0), 5)) = -(*RET);
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    (*RET) = _36 as i32;
    _53 = &_7;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) << (*_29);
    (*RET) = Field::<i32>(Variant(_31, 0), 5) & Field::<i32>(Variant(_31, 0), 5);
    Goto(bb40)
    }
    bb40 = {
    (*_29) = Field::<u8>(Variant(_31, 0), 2);
    (*_16) = _9 as f64;
    (*_16) = 3_usize as f64;
    _45 = core::ptr::addr_of!(_32);
    Goto(bb41)
    }
    bb41 = {
    place!(Field::<u16>(Variant(_31, 0), 4)) = !_41;
    (*_15) = (*_16) < (*_16);
    _51 = Move(_45);
    (*_15) = !_49;
    (*_16) = _46.0 as f64;
    (*_29) = 1411701110673088667_i64 as u8;
    (*_16) = Field::<u16>(Variant(_31, 0), 4) as f64;
    _11 = &(*_34);
    (*_16) = (*_34).0 as f64;
    (*_16) = (*_29) as f64;
    _8 = [Field::<u16>(Variant(_31, 0), 4),_41,Field::<u16>(Variant(_31, 0), 4),_41,Field::<u16>(Variant(_31, 0), 4),Field::<u16>(Variant(_31, 0), 4),_41,Field::<u16>(Variant(_31, 0), 4)];
    (*RET) = (*_53) as i32;
    _47 = [Field::<u16>(Variant(_31, 0), 4)];
    _40 = _24;
    (*RET) = !Field::<i32>(Variant(_31, 0), 5);
    (*_29) = Field::<u8>(Variant(_31, 0), 2) | Field::<u8>(Variant(_31, 0), 2);
    (*_16) = (*RET) as f64;
    (*_15) = _49 | _49;
    (*_16) = 3_usize as f64;
    (*_29) = Field::<u8>(Variant(_31, 0), 2);
    _42 = _18 & _21;
    _49 = (*_15) > (*_15);
    (*_15) = _49;
    _27 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_31, 0), 1)));
    (*_27) = 59973360205692770587965285641363740635_i128 >> (*_29);
    _10 = [(*_53),(*_53),(*_53),(*_5)];
    (*_27) = (-56865044421651364530637894817676664720_i128) >> (*RET);
    Goto(bb42)
    }
    bb42 = {
    _54.1 = [_36,_9,_36];
    Goto(bb43)
    }
    bb43 = {
    (*_15) = _49;
    (*_29) = Field::<u8>(Variant(_31, 0), 2) - Field::<u8>(Variant(_31, 0), 2);
    Goto(bb44)
    }
    bb44 = {
    (*_16) = (*_53) as f64;
    (*_16) = (*_29) as f64;
    (*_15) = (*_11).0 < (*_34).0;
    _51 = core::ptr::addr_of!(_32);
    (*_51) = [Field::<i8>(Variant(_31, 0), 3),_42,_42,_42,_42,_42];
    (*_27) = 47906852696285498376969747019062316686_i128;
    _40 = _24;
    (*_15) = !_43;
    _34 = Move(_11);
    (*RET) = Field::<i32>(Variant(_31, 0), 5) - Field::<i32>(Variant(_31, 0), 5);
    (*_51) = [_18,_21,_42,_42,_21,_18];
    _18 = _42;
    (*_51) = [Field::<i8>(Variant(_31, 0), 3),_21,_21,_18,Field::<i8>(Variant(_31, 0), 3),_21];
    _62 = -(*_16);
    (*_29) = Field::<u8>(Variant(_31, 0), 2);
    (*_29) = (-19644_i16) as u8;
    (*_16) = _62;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) - Field::<i32>(Variant(_31, 0), 5);
    _10 = [(*_53),(*_53),(*_5),(*_5)];
    Goto(bb45)
    }
    bb45 = {
    (*_16) = 4243741255210366037_usize as f64;
    match (*_27) {
    0 => bb46,
    1 => bb47,
    2 => bb48,
    3 => bb49,
    47906852696285498376969747019062316686 => bb51,
    _ => bb50
    }
    }
    bb46 = {
    _49 = (*_15);
    (*_15) = _49;
    (*_15) = (*RET) >= (*RET);
    _10 = [(*_5),(*_5),(*_5),(*_5)];
    _22 = core::ptr::addr_of!((*RET));
    _29 = &mut _6;
    (*_15) = (*_22) == (*_22);
    (*_16) = (*_22) as f64;
    (*_29) = Field::<u8>(Variant(_31, 0), 2) >> (*_5);
    (*_16) = 11148556373466207187_usize as f64;
    (*_22) = _36 as i32;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    _44 = [12663494603376048319_usize,4_usize,4_usize,7462784347164755809_usize,13049868286449362987_usize,2588539376033283514_usize];
    place!(Field::<i128>(Variant(_31, 0), 1)) = 66722782407829689330104600744858057188_i128 + (-59908540990174885282970025063565394969_i128);
    (*_29) = Field::<u8>(Variant(_31, 0), 2);
    (*_16) = _38.2.0 as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    place!(Field::<i32>(Variant(_31, 0), 5)) = (*RET) * _33;
    (*_16) = _36 as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) >> _7;
    _49 = (*_5) > (*_5);
    _38.0 = Move(_4);
    (*_16) = _38.2.0 as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    _24 = '\u{1d26a}';
    _34 = &_38.2;
    _43 = (*_15) | _49;
    (*_16) = _46.0 as f64;
    _21 = _42;
    Goto(bb39)
    }
    bb47 = {
    Return()
    }
    bb48 = {
    match _18 {
    0 => bb16,
    124 => bb18,
    _ => bb17
    }
    }
    bb49 = {
    (*RET) = 1355891056_i32;
    _21 = !_18;
    _27 = Move(_3);
    _39 = [41739954277898336722679773389061053235_u128,74077212825433741782792750823116141407_u128,81502997161022939565345298588303596484_u128,205144125084682092810923479711109458735_u128,186493469227819971513573157566066590025_u128,229279108337776553015425691659304757488_u128,96454808388765338424607409243586172489_u128,230032699177379268904086100033883120111_u128];
    _15 = core::ptr::addr_of_mut!(_26);
    (*_16) = 210991623965394481994592157856846479764_u128 as f64;
    (*_15) = true;
    (*_16) = (-16317_i16) as f64;
    (*_15) = (*_5) >= (*_5);
    (*_16) = _6 as f64;
    _36 = _9 - _9;
    _17 = [(*_5),(*_5),_7,(*_5),(*_5),(*_5),(*_5)];
    _41 = !55029_u16;
    _3 = Move(_27);
    Goto(bb34)
    }
    bb50 = {
    (*RET) = 1861640038_i32;
    (*RET) = 1930782704_i32 ^ 349734306_i32;
    _6 = !_25;
    (*_15) = !true;
    _31 = Adt29::Variant0 { fld0: 1710827622_u32,fld1: (-16013106860345699901936894205673229189_i128),fld2: _25,fld3: _21,fld4: _41,fld5: (*RET) };
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    _2 = core::ptr::addr_of_mut!(_1);
    (*_15) = !false;
    _9 = !_36;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    (*_16) = (-133354370827987524133455935378457857703_i128) as f64;
    (*_16) = (*RET) as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5);
    (*_15) = true;
    (*_16) = 14250_i16 as f64;
    (*RET) = !Field::<i32>(Variant(_31, 0), 5);
    _19 = [_36,_9,_36];
    (*_16) = (*_5) as f64;
    place!(Field::<i8>(Variant(_31, 0), 3)) = _18;
    (*_16) = Field::<i8>(Variant(_31, 0), 3) as f64;
    (*RET) = Field::<i32>(Variant(_31, 0), 5) | Field::<i32>(Variant(_31, 0), 5);
    (*_15) = (*_5) > (*_5);
    _38.2 = (160214153498660786154279229538301774393_u128,);
    _21 = !Field::<i8>(Variant(_31, 0), 3);
    (*_16) = (-8725127826010297908843349387754471733_i128) as f64;
    _2 = core::ptr::addr_of_mut!((*_2));
    _8 = [_41,Field::<u16>(Variant(_31, 0), 4),_41,_41,_41,_41,_41,Field::<u16>(Variant(_31, 0), 4)];
    Goto(bb35)
    }
    bb51 = {
    (*_16) = _62;
    place!(Field::<u8>(Variant(_31, 0), 2)) = !(*_29);
    (*_16) = -_62;
    place!(Field::<i8>(Variant(_31, 0), 3)) = _18;
    (*_27) = (-138965179612797437998996098830652071988_i128) * 83395426197355530345160029870425771889_i128;
    _59 = (*RET) as u64;
    _32 = [_42,_42,_21,_18,_21,_21];
    (*RET) = _49 as i32;
    _66 = _36 >> (*RET);
    _11 = &_38.2;
    (*_16) = _62 * _62;
    (*_16) = 7_usize as f64;
    (*RET) = -Field::<i32>(Variant(_31, 0), 5);
    (*RET) = (*_27) as i32;
    (*_27) = 123807821095299159727616523078864744203_i128 * (-135978981938633035464836765936366303966_i128);
    _32 = [_18,_18,_42,_42,Field::<i8>(Variant(_31, 0), 3),_21];
    Goto(bb52)
    }
    bb52 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(
    mut _1: *mut *mut &'static (u128,),
    mut _2: *mut *mut *mut &'static (u128,),
    mut _3: f64,
    mut _4: f64,
    mut _5: &'static (u128,),
) -> bool {
    mir! {
    type RET = bool;
    let _6: bool;
    let _7: [isize; 3];
    let _8: u128;
    let _9: *mut Adt42;
    let _10: f32;
    let _11: (u128,);
    let _12: [u8; 1];
    let _13: isize;
    let _14: isize;
    let _15: [i32; 7];
    let _16: ();
    let _17: ();
    {
    _3 = _4;
    RET = true;
    _4 = 121_u8 as f64;
    RET = true ^ true;
    RET = !false;
    _4 = -_3;
    _4 = _3;
    _2 = core::ptr::addr_of_mut!(_1);
    _3 = _4 * _4;
    _3 = _4 + _4;
    RET = _3 > _4;
    _2 = core::ptr::addr_of_mut!((*_2));
    _3 = _4;
    _4 = _3;
    RET = _3 == _4;
    RET = _4 < _4;
    _3 = _4 * _4;
    _4 = _3 * _3;
    _6 = _3 > _3;
    RET = !_6;
    RET = _6 >= _6;
    _7 = [(-41_isize),9223372036854775807_isize,88_isize];
    _2 = core::ptr::addr_of_mut!((*_2));
    Goto(bb1)
    }
    bb1 = {
    _6 = RET & RET;
    _2 = core::ptr::addr_of_mut!((*_2));
    _6 = RET < RET;
    _2 = core::ptr::addr_of_mut!((*_2));
    _7 = [(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
    RET = _6;
    RET = _4 > _3;
    _8 = 249267435366756316097994243430721250642_u128;
    _4 = _3;
    _6 = RET;
    RET = !_6;
    _2 = core::ptr::addr_of_mut!((*_2));
    _4 = _3 * _3;
    RET = _6 ^ _6;
    _3 = -_4;
    _7 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
    RET = !_6;
    _3 = _4;
    _3 = -_4;
    _6 = !RET;
    RET = _6;
    _11 = (_8,);
    _10 = 7242840455488042337_usize as f32;
    match _11.0 {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    249267435366756316097994243430721250642 => bb7,
    _ => bb6
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    _12 = [92_u8];
    _8 = _6 as u128;
    _11 = (_8,);
    _11.0 = !_8;
    _6 = RET ^ RET;
    _6 = _11.0 < _11.0;
    _2 = core::ptr::addr_of_mut!((*_2));
    _11.0 = !_8;
    Goto(bb8)
    }
    bb8 = {
    RET = _6 == _6;
    _3 = _4 - _4;
    _11.0 = 143966049538071092586324154029331283260_i128 as u128;
    _10 = _4 as f32;
    _2 = core::ptr::addr_of_mut!((*_2));
    _3 = 141587359734136985528762526144848801544_i128 as f64;
    _3 = _4 + _4;
    _3 = -_4;
    _11.0 = !_8;
    _4 = _3 - _3;
    _6 = _11.0 == _11.0;
    _4 = _3 + _3;
    _3 = _4 - _4;
    _13 = (-6_isize) + (-65_isize);
    _13 = (-9223372036854775808_isize) * (-9223372036854775808_isize);
    _13 = 68_isize;
    _4 = _3;
    _8 = 2812703247052946302_i64 as u128;
    _11.0 = _8 >> _13;
    _14 = _13 >> _11.0;
    _8 = !_11.0;
    _8 = _11.0;
    _7 = [_14,_14,_14];
    Goto(bb9)
    }
    bb9 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: *mut *mut *mut &'static (u128,)) -> *const Adt27 {
    mir! {
    type RET = *const Adt27;
    let _2: usize;
    let _3: *const &'static mut (i32,);
    let _4: i128;
    let _5: Adt74;
    let _6: *const i16;
    let _7: usize;
    let _8: u16;
    let _9: &'static *mut i16;
    let _10: u8;
    let _11: isize;
    let _12: bool;
    let _13: u8;
    let _14: bool;
    let _15: f64;
    let _16: *const i128;
    let _17: isize;
    let _18: isize;
    let _19: bool;
    let _20: *const [i8; 6];
    let _21: isize;
    let _22: isize;
    let _23: Adt29;
    let _24: u64;
    let _25: *const &'static [isize; 3];
    let _26: [u64; 8];
    let _27: *const i128;
    let _28: (f32, &'static mut (i32,));
    let _29: *mut &'static (u128,);
    let _30: isize;
    let _31: bool;
    let _32: char;
    let _33: isize;
    let _34: isize;
    let _35: &'static u64;
    let _36: (bool, i16, u64);
    let _37: (u128,);
    let _38: f32;
    let _39: isize;
    let _40: ([u64; 8], [isize; 3], &'static &'static mut [isize; 3]);
    let _41: (i16, *mut *mut &'static (u128,), *mut i32, Adt45);
    let _42: &'static Adt35;
    let _43: Adt42;
    let _44: bool;
    let _45: isize;
    let _46: f64;
    let _47: i64;
    let _48: [u16; 1];
    let _49: ([u64; 8], [isize; 3], &'static &'static mut [isize; 3]);
    let _50: *const &'static mut (i32,);
    let _51: usize;
    let _52: bool;
    let _53: char;
    let _54: (i32,);
    let _55: &'static mut f64;
    let _56: *const &'static mut (i32,);
    let _57: &'static mut (i32,);
    let _58: char;
    let _59: *const [i8; 6];
    let _60: isize;
    let _61: f32;
    let _62: *const i128;
    let _63: f64;
    let _64: &'static (f32, &'static mut (i32,));
    let _65: char;
    let _66: &'static *mut i16;
    let _67: &'static (f32, &'static mut (i32,));
    let _68: u128;
    let _69: i128;
    let _70: u128;
    let _71: usize;
    let _72: *const Adt32;
    let _73: char;
    let _74: Adt58;
    let _75: i32;
    let _76: f64;
    let _77: &'static u64;
    let _78: *const &'static mut (i32,);
    let _79: char;
    let _80: &'static [isize; 3];
    let _81: i16;
    let _82: *const Adt32;
    let _83: &'static Adt35;
    let _84: f64;
    let _85: u32;
    let _86: f64;
    let _87: &'static *mut i16;
    let _88: *mut &'static (u128,);
    let _89: bool;
    let _90: (char,);
    let _91: &'static (u128,);
    let _92: &'static mut f64;
    let _93: isize;
    let _94: bool;
    let _95: Adt74;
    let _96: u8;
    let _97: u16;
    let _98: (char,);
    let _99: isize;
    let _100: *const &'static mut (i32,);
    let _101: f64;
    let _102: &'static [u128; 2];
    let _103: *mut bool;
    let _104: Adt45;
    let _105: (i64, *const [i8; 6]);
    let _106: usize;
    let _107: &'static mut (i32,);
    let _108: i128;
    let _109: *mut i16;
    let _110: bool;
    let _111: char;
    let _112: u64;
    let _113: *const [i8; 6];
    let _114: char;
    let _115: *mut *mut &'static (u128,);
    let _116: isize;
    let _117: (f32, &'static mut (i32,));
    let _118: (u16, Adt27, [isize; 3], Adt35);
    let _119: (u16, Adt27, [isize; 3], Adt35);
    let _120: [isize; 3];
    let _121: isize;
    let _122: isize;
    let _123: (char,);
    let _124: [i8; 6];
    let _125: char;
    let _126: &'static &'static mut [isize; 3];
    let _127: i128;
    let _128: f64;
    let _129: *const i16;
    let _130: isize;
    let _131: *mut *mut &'static (u128,);
    let _132: isize;
    let _133: *mut *mut *mut &'static (u128,);
    let _134: i8;
    let _135: *mut &'static (u128,);
    let _136: *const i16;
    let _137: isize;
    let _138: f32;
    let _139: i8;
    let _140: f32;
    let _141: (i64, *const [i8; 6]);
    let _142: &'static mut [isize; 3];
    let _143: &'static mut [isize; 3];
    let _144: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _145: isize;
    let _146: bool;
    let _147: [u16; 8];
    let _148: ([u128; 8], (char,));
    let _149: *mut *mut *mut &'static (u128,);
    let _150: Adt32;
    let _151: *const [i8; 6];
    let _152: u32;
    let _153: *const &'static mut (i32,);
    let _154: *mut Adt45;
    let _155: Adt27;
    let _156: ([u128; 8], (char,));
    let _157: char;
    let _158: Adt45;
    let _159: *const i32;
    let _160: ();
    let _161: ();
    {
    _2 = (-31849694491985020927854570224160756846_i128) as usize;
    Goto(bb1)
    }
    bb1 = {
    _2 = !5_usize;
    _2 = 3_usize * 7_usize;
    _2 = !5_usize;
    _2 = 4_usize + 5423246582027207233_usize;
    _2 = 0_usize >> 917509648_i32;
    _2 = 1_usize;
    _2 = 6_usize ^ 7_usize;
    _2 = 1_usize & 6_usize;
    _2 = 10520349185712032547_usize * 9987436963923457603_usize;
    _2 = (-1357739776_i32) as usize;
    _2 = 226_u8 as usize;
    _2 = 6_usize;
    _2 = !5_usize;
    _2 = 16859051168492654963_usize >> 217273212874650420959848335562733004423_u128;
    _2 = (-14317_i16) as usize;
    _2 = 1_usize * 2_usize;
    _2 = (-106_i8) as usize;
    _4 = !87932364585328207452516470180804129662_i128;
    _4 = 21457800714822594046970908021846380371_i128 >> _2;
    _2 = (-24_isize) as usize;
    _2 = !11934525130661671396_usize;
    _2 = 4_usize >> _4;
    _2 = !7_usize;
    _4 = 67868345650803481825671022866343784454_i128;
    _4 = -(-69494850433993545431828965253134005994_i128);
    _4 = (-75130114701268770496954379181390061446_i128) ^ 107763883853938206201436971774698105151_i128;
    _2 = 1677964109917366140_usize >> _4;
    Goto(bb2)
    }
    bb2 = {
    _2 = 16479186051915676470_usize;
    _4 = (-52529877539988323919943804588738534092_i128) - (-115692532273444440083901982974990235741_i128);
    _2 = 11574594204291173807_usize;
    _4 = -103712231354137661071791791833353530893_i128;
    _2 = 6_usize;
    _2 = 1_usize >> _4;
    _2 = !11757909057930315577_usize;
    _4 = -74159377251904067079840894726352478849_i128;
    _4 = (-62676894747396009585337405267177150819_i128) >> _2;
    _4 = 18548329937796474707806556346081318980_i128;
    _2 = (-4_i8) as usize;
    _7 = _4 as usize;
    _4 = -(-142900440168993720126546851403421160576_i128);
    _8 = 41476_u16;
    _8 = !6281_u16;
    _8 = !59288_u16;
    _8 = 228_u8 as u16;
    _8 = _2 as u16;
    _8 = (-587256176748166002_i64) as u16;
    Goto(bb3)
    }
    bb3 = {
    _2 = !_7;
    _8 = 44179_u16;
    _4 = (-301574190758005887512400874901651160_i128);
    _4 = 114988378377603843360767260652652102109_i128;
    _4 = 4648441987582323042_u64 as i128;
    match _8 {
    0 => bb1,
    44179 => bb5,
    _ => bb4
    }
    }
    bb4 = {
    _2 = 16479186051915676470_usize;
    _4 = (-52529877539988323919943804588738534092_i128) - (-115692532273444440083901982974990235741_i128);
    _2 = 11574594204291173807_usize;
    _4 = -103712231354137661071791791833353530893_i128;
    _2 = 6_usize;
    _2 = 1_usize >> _4;
    _2 = !11757909057930315577_usize;
    _4 = -74159377251904067079840894726352478849_i128;
    _4 = (-62676894747396009585337405267177150819_i128) >> _2;
    _4 = 18548329937796474707806556346081318980_i128;
    _2 = (-4_i8) as usize;
    _7 = _4 as usize;
    _4 = -(-142900440168993720126546851403421160576_i128);
    _8 = 41476_u16;
    _8 = !6281_u16;
    _8 = !59288_u16;
    _8 = 228_u8 as u16;
    _8 = _2 as u16;
    _8 = (-587256176748166002_i64) as u16;
    Goto(bb3)
    }
    bb5 = {
    _10 = 111_u8 - 95_u8;
    _11 = -9223372036854775807_isize;
    _2 = _7;
    _11 = !(-72_isize);
    _14 = _8 >= _8;
    _12 = _14 | _14;
    _12 = _14 | _14;
    _13 = _10;
    _7 = _4 as usize;
    _4 = 1839391298_u32 as i128;
    _14 = !_12;
    _12 = !_14;
    _2 = !_7;
    _10 = _13;
    _10 = (-7821_i16) as u8;
    _16 = core::ptr::addr_of!(_4);
    (*_16) = (-1847892133966321387320371911638207051_i128);
    (*_16) = (-116213240331778026024072236910134587559_i128) - (-42842960620133967080648470291177866123_i128);
    _15 = 16240_i16 as f64;
    Goto(bb6)
    }
    bb6 = {
    (*_16) = (-123680757942061179863130167390076565055_i128) & 23739452220934848737480821511268057307_i128;
    (*_16) = -(-42055510049957784677693884655037745705_i128);
    _4 = 29390022107822468323635625689803120850_i128 + 92679752611591962742757949535140585770_i128;
    _14 = _12;
    (*_16) = (-165886884277702533462965810985718039903_i128) ^ 21819031530217588236729251943575762560_i128;
    (*_16) = -50733930051200007144548154556078739346_i128;
    _10 = _13 * _13;
    (*_16) = (-155979277288371263357303769205408604534_i128);
    _16 = core::ptr::addr_of!((*_16));
    (*_16) = 113923949872448286684364882713252814508_i128;
    (*_16) = 3023409185176426438_i64 as i128;
    _12 = (*_16) > (*_16);
    (*_16) = -(-109154028730271387836078452625614944472_i128);
    match _8 {
    0 => bb7,
    1 => bb8,
    44179 => bb10,
    _ => bb9
    }
    }
    bb7 = {
    _10 = 111_u8 - 95_u8;
    _11 = -9223372036854775807_isize;
    _2 = _7;
    _11 = !(-72_isize);
    _14 = _8 >= _8;
    _12 = _14 | _14;
    _12 = _14 | _14;
    _13 = _10;
    _7 = _4 as usize;
    _4 = 1839391298_u32 as i128;
    _14 = !_12;
    _12 = !_14;
    _2 = !_7;
    _10 = _13;
    _10 = (-7821_i16) as u8;
    _16 = core::ptr::addr_of!(_4);
    (*_16) = (-1847892133966321387320371911638207051_i128);
    (*_16) = (-116213240331778026024072236910134587559_i128) - (-42842960620133967080648470291177866123_i128);
    _15 = 16240_i16 as f64;
    Goto(bb6)
    }
    bb8 = {
    _2 = 16479186051915676470_usize;
    _4 = (-52529877539988323919943804588738534092_i128) - (-115692532273444440083901982974990235741_i128);
    _2 = 11574594204291173807_usize;
    _4 = -103712231354137661071791791833353530893_i128;
    _2 = 6_usize;
    _2 = 1_usize >> _4;
    _2 = !11757909057930315577_usize;
    _4 = -74159377251904067079840894726352478849_i128;
    _4 = (-62676894747396009585337405267177150819_i128) >> _2;
    _4 = 18548329937796474707806556346081318980_i128;
    _2 = (-4_i8) as usize;
    _7 = _4 as usize;
    _4 = -(-142900440168993720126546851403421160576_i128);
    _8 = 41476_u16;
    _8 = !6281_u16;
    _8 = !59288_u16;
    _8 = 228_u8 as u16;
    _8 = _2 as u16;
    _8 = (-587256176748166002_i64) as u16;
    Goto(bb3)
    }
    bb9 = {
    _2 = !5_usize;
    _2 = 3_usize * 7_usize;
    _2 = !5_usize;
    _2 = 4_usize + 5423246582027207233_usize;
    _2 = 0_usize >> 917509648_i32;
    _2 = 1_usize;
    _2 = 6_usize ^ 7_usize;
    _2 = 1_usize & 6_usize;
    _2 = 10520349185712032547_usize * 9987436963923457603_usize;
    _2 = (-1357739776_i32) as usize;
    _2 = 226_u8 as usize;
    _2 = 6_usize;
    _2 = !5_usize;
    _2 = 16859051168492654963_usize >> 217273212874650420959848335562733004423_u128;
    _2 = (-14317_i16) as usize;
    _2 = 1_usize * 2_usize;
    _2 = (-106_i8) as usize;
    _4 = !87932364585328207452516470180804129662_i128;
    _4 = 21457800714822594046970908021846380371_i128 >> _2;
    _2 = (-24_isize) as usize;
    _2 = !11934525130661671396_usize;
    _2 = 4_usize >> _4;
    _2 = !7_usize;
    _4 = 67868345650803481825671022866343784454_i128;
    _4 = -(-69494850433993545431828965253134005994_i128);
    _4 = (-75130114701268770496954379181390061446_i128) ^ 107763883853938206201436971774698105151_i128;
    _2 = 1677964109917366140_usize >> _4;
    Goto(bb2)
    }
    bb10 = {
    (*_16) = (-79716586500996302773442027213452792556_i128) | 64653108130610407350451237238417392696_i128;
    (*_16) = (-98326368899913063761389962818760636625_i128) + 100228956497606646464463307730449683062_i128;
    (*_16) = 4985274127709573613917918867447978150_i128 + (-41534970799309083675091262026574393338_i128);
    (*_16) = 155387527568835381206985922565470032658_i128 << _13;
    _14 = (*_16) <= _4;
    _14 = !_12;
    _18 = _11 + _11;
    _10 = (-27756_i16) as u8;
    _12 = !_14;
    _19 = _14 | _14;
    (*_16) = (-119112896983080587523784938387379875836_i128) + (-88051659468105455884850829482677755845_i128);
    (*_16) = 140599722615562026602956412789065112267_i128;
    _15 = (-80_i8) as f64;
    _10 = _13 ^ _13;
    Goto(bb11)
    }
    bb11 = {
    _14 = _19 & _19;
    (*_16) = 104387734019598253200821987429324377679_i128 << _8;
    (*_16) = (-74094046736314794004683147938644592623_i128);
    Call((*_16) = fn14(Move(_1), Move(_16), _14, _19, _2, _13, _11), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    _18 = _11;
    _18 = _11;
    _8 = 59920_u16 * 27274_u16;
    _12 = _4 > _4;
    _4 = !(-3894981653687421470097467047349463732_i128);
    _15 = (-2330278394701022991_i64) as f64;
    _15 = (-1433285483_i32) as f64;
    _12 = _10 == _10;
    _4 = -137598476189548207737483944365771133598_i128;
    _17 = _18;
    _4 = _7 as i128;
    _4 = 164932351801861151947192837967299944887_i128 + 101286962854623665149307593448387055651_i128;
    _7 = _8 as usize;
    _17 = _18 >> _13;
    _15 = 2979_i16 as f64;
    _7 = _2 & _2;
    _16 = core::ptr::addr_of!(_4);
    _17 = _11 >> _8;
    (*_16) = -49808471357514493034095720747724355045_i128;
    (*_16) = 32433596752162677072408356241837269700_i128 | 166410412065000276761572936536589724758_i128;
    _19 = (*_16) > (*_16);
    (*_16) = !5002440225902237817040246826767513037_i128;
    _12 = !_19;
    (*_16) = (-12971711619537960804554586022415482597_i128);
    _2 = _7;
    Call((*_16) = fn15(_14), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    _17 = _11;
    _12 = _4 == _4;
    _4 = _8 as i128;
    _16 = core::ptr::addr_of!(_4);
    _19 = _12 == _12;
    (*_16) = 215282376294997582963057376974631540485_u128 as i128;
    (*_16) = -(-136930246947048690346481721574931340517_i128);
    (*_16) = 125001633586472884392523671738971235096_i128 & (-66165516803194394033527883972622674217_i128);
    _7 = _2;
    (*_16) = !35815735810423431990088600894987579682_i128;
    (*_16) = 232279983235944499530921211620640806941_u128 as i128;
    (*_16) = -(-66821896839542793995582421748919831717_i128);
    _22 = _19 as isize;
    _22 = !_18;
    Goto(bb14)
    }
    bb14 = {
    _8 = !60783_u16;
    (*_16) = 127157799080815845799344356986933690548_i128 - (-84410111348511805347498047907300960032_i128);
    (*_16) = (-8908581386645874925119781836535167612_i128) - 140044851302352056373091682520519112221_i128;
    (*_16) = 146728496220273026476831483584438775233_i128;
    _4 = (-168409168617994190730466876733185877191_i128) << _10;
    _26 = [12886605735025856360_u64,300373498868906950_u64,617572598452334617_u64,3373811912236147294_u64,4371184524283709629_u64,13609104848195595472_u64,11649619603765235072_u64,11869334093730978847_u64];
    _17 = !_22;
    _24 = (-20_i8) as u64;
    (*_16) = 1183956327_i32 as i128;
    (*_16) = (-33677428053166371231289221481525139735_i128) * (-61170749742405100254511822130779936775_i128);
    Goto(bb15)
    }
    bb15 = {
    _28.0 = (*_16) as f32;
    _7 = _2 - _2;
    _7 = _2;
    (*_16) = 164970509206750484866084103397493662750_i128;
    (*_16) = (-63380034860558700707084882470458110852_i128) - (-147582162518923250053959576137118053821_i128);
    _17 = _22 << _4;
    _30 = _17 << (*_16);
    _23 = Adt29::Variant3 { fld0: _24 };
    _30 = _22;
    (*_16) = 1783831005933371691001708360204261709_i128;
    (*_16) = (-82643202471203348850460281721643814035_i128) | (-58904925689476316299264347086525433515_i128);
    (*_16) = (-38248999437118082806097059559119444212_i128) << _18;
    (*_16) = 1063771385_i32 as i128;
    _30 = !_17;
    (*_16) = 40830294942306086541519974941770979023_i128 + (-95385846577237847612959125371432147598_i128);
    _18 = 3474401414_u32 as isize;
    _21 = _22;
    (*_16) = (-166307298137492990238668995722492847305_i128) | (-34360843634847377552962945089783890215_i128);
    (*_16) = !(-33408204725986180793730606667629180706_i128);
    (*_16) = 96404690307777043616534442514770272695_i128 - 168218625837289229213288879319069808340_i128;
    Goto(bb16)
    }
    bb16 = {
    (*_16) = (-12520012171820179794132521832806168687_i128);
    _35 = &place!(Field::<u64>(Variant(_23, 3), 0));
    _32 = '\u{615f6}';
    (*_16) = 101043866221149149312612400246898100985_i128 + 18274076271001001738749413548226777568_i128;
    _14 = !_12;
    (*_16) = 136896578032673259464162873157811585616_i128;
    _4 = (-7508599155554556097813853789937211216_i128);
    _7 = (-6306_i16) as usize;
    (*_16) = 45863010730452280829551402949351156813_i128 << (*_35);
    _39 = _17 << (*_16);
    place!(Field::<u64>(Variant(_23, 3), 0)) = _14 as u64;
    (*_16) = (-118150661246609811399147559809495744498_i128) >> _30;
    (*_16) = 12550198315538377851234928078197007835_i128;
    _40.1 = [_21,_30,_17];
    _37 = (211963375275353805934637618542202178428_u128,);
    _8 = 21098_u16 | 54051_u16;
    _16 = core::ptr::addr_of!((*_16));
    (*_16) = (-39939118789017037636088871876755258950_i128) ^ (-64907318713073292255122372602972337499_i128);
    _30 = _17;
    _17 = _39 & _21;
    _38 = _28.0 - _28.0;
    _31 = _14;
    Goto(bb17)
    }
    bb17 = {
    _36.2 = Field::<u64>(Variant(_23, 3), 0) << _4;
    _40.1 = [_17,_11,_39];
    _43.fld3.0 = _32;
    _37.0 = 233865996709830336888352790120151506215_u128 ^ 202248644590240366891149201010385410137_u128;
    _33 = _30 >> (*_16);
    (*_16) = !(-100704451687728376439889231029707462437_i128);
    (*_16) = -(-57422850747943948147745332142648037343_i128);
    _36.0 = _31;
    _45 = _11;
    _4 = 97723756732209161006740545094939448038_i128 | (-24262509351999058203925269604056788911_i128);
    (*_16) = 139867658197041983659917164395890760261_i128 << _36.2;
    _43.fld0 = (_37.0,);
    _41.0 = (-12077_i16) << (*_16);
    _46 = _15;
    _32 = _43.fld3.0;
    _43.fld1 = _36.2 as f64;
    _41.1 = core::ptr::addr_of_mut!(_29);
    _34 = _39;
    _6 = core::ptr::addr_of!(_36.1);
    Goto(bb18)
    }
    bb18 = {
    _10 = _13 ^ _13;
    Goto(bb19)
    }
    bb19 = {
    (*_6) = 2975777965_u32 as i16;
    _24 = _10 as u64;
    _26 = [_36.2,_36.2,_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0)];
    _14 = _36.0;
    (*_16) = -75661977225964007816411266617257327988_i128;
    _1 = core::ptr::addr_of_mut!(_41.1);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _38 = _28.0 + _28.0;
    _14 = _36.0 == _19;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _52 = _19 >= _19;
    (*_6) = !_41.0;
    (*_16) = 149377230024272105499363206359006158472_i128 - 22131357398749363000350579711245277524_i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_16) = 14997023440487374289900049825034159670_i128 >> (*_6);
    (*_6) = _41.0 * _41.0;
    _40.0 = [Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,_36.2,_36.2,Field::<u64>(Variant(_23, 3), 0)];
    _49.1 = [_17,_39,_33];
    _36.2 = Field::<u64>(Variant(_23, 3), 0) & Field::<u64>(Variant(_23, 3), 0);
    (*_6) = _41.0 << (*_16);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) ^ Field::<u64>(Variant(_23, 3), 0);
    _43.fld0.0 = _37.0;
    Goto(bb20)
    }
    bb20 = {
    _47 = (-7351978895369300595_i64) + (-3068390522667819490_i64);
    (*_16) = _47 as i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _47 = 4902401197672211054_i64;
    _51 = _2 - _7;
    (*_16) = 68_i8 as i128;
    _17 = 73_i8 as isize;
    (*_16) = (-46293313570451636978133654029940686209_i128) + 84149657513462397029555066921496750596_i128;
    (*_6) = _41.0 | _41.0;
    _40.0 = [Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,_36.2,_36.2,_36.2];
    (*_1) = core::ptr::addr_of_mut!(_29);
    _43.fld0.0 = _37.0 - _37.0;
    (*_6) = _41.0;
    _6 = core::ptr::addr_of!((*_6));
    _38 = _28.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _37 = _43.fld0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) | _24;
    _13 = _10 | _10;
    (*_6) = _41.0 - _41.0;
    (*_6) = _43.fld1 as i16;
    _41.0 = (*_6);
    match _47 {
    0 => bb19,
    1 => bb5,
    2 => bb3,
    3 => bb21,
    4 => bb22,
    4902401197672211054 => bb24,
    _ => bb23
    }
    }
    bb21 = {
    _2 = !5_usize;
    _2 = 3_usize * 7_usize;
    _2 = !5_usize;
    _2 = 4_usize + 5423246582027207233_usize;
    _2 = 0_usize >> 917509648_i32;
    _2 = 1_usize;
    _2 = 6_usize ^ 7_usize;
    _2 = 1_usize & 6_usize;
    _2 = 10520349185712032547_usize * 9987436963923457603_usize;
    _2 = (-1357739776_i32) as usize;
    _2 = 226_u8 as usize;
    _2 = 6_usize;
    _2 = !5_usize;
    _2 = 16859051168492654963_usize >> 217273212874650420959848335562733004423_u128;
    _2 = (-14317_i16) as usize;
    _2 = 1_usize * 2_usize;
    _2 = (-106_i8) as usize;
    _4 = !87932364585328207452516470180804129662_i128;
    _4 = 21457800714822594046970908021846380371_i128 >> _2;
    _2 = (-24_isize) as usize;
    _2 = !11934525130661671396_usize;
    _2 = 4_usize >> _4;
    _2 = !7_usize;
    _4 = 67868345650803481825671022866343784454_i128;
    _4 = -(-69494850433993545431828965253134005994_i128);
    _4 = (-75130114701268770496954379181390061446_i128) ^ 107763883853938206201436971774698105151_i128;
    _2 = 1677964109917366140_usize >> _4;
    Goto(bb2)
    }
    bb22 = {
    _2 = 16479186051915676470_usize;
    _4 = (-52529877539988323919943804588738534092_i128) - (-115692532273444440083901982974990235741_i128);
    _2 = 11574594204291173807_usize;
    _4 = -103712231354137661071791791833353530893_i128;
    _2 = 6_usize;
    _2 = 1_usize >> _4;
    _2 = !11757909057930315577_usize;
    _4 = -74159377251904067079840894726352478849_i128;
    _4 = (-62676894747396009585337405267177150819_i128) >> _2;
    _4 = 18548329937796474707806556346081318980_i128;
    _2 = (-4_i8) as usize;
    _7 = _4 as usize;
    _4 = -(-142900440168993720126546851403421160576_i128);
    _8 = 41476_u16;
    _8 = !6281_u16;
    _8 = !59288_u16;
    _8 = 228_u8 as u16;
    _8 = _2 as u16;
    _8 = (-587256176748166002_i64) as u16;
    Goto(bb3)
    }
    bb23 = {
    (*_16) = (-79716586500996302773442027213452792556_i128) | 64653108130610407350451237238417392696_i128;
    (*_16) = (-98326368899913063761389962818760636625_i128) + 100228956497606646464463307730449683062_i128;
    (*_16) = 4985274127709573613917918867447978150_i128 + (-41534970799309083675091262026574393338_i128);
    (*_16) = 155387527568835381206985922565470032658_i128 << _13;
    _14 = (*_16) <= _4;
    _14 = !_12;
    _18 = _11 + _11;
    _10 = (-27756_i16) as u8;
    _12 = !_14;
    _19 = _14 | _14;
    (*_16) = (-119112896983080587523784938387379875836_i128) + (-88051659468105455884850829482677755845_i128);
    (*_16) = 140599722615562026602956412789065112267_i128;
    _15 = (-80_i8) as f64;
    _10 = _13 ^ _13;
    Goto(bb11)
    }
    bb24 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _31 = (*_6) == (*_6);
    _6 = core::ptr::addr_of!((*_6));
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_1) = core::ptr::addr_of_mut!(_29);
    Goto(bb25)
    }
    bb25 = {
    _31 = _12;
    (*_16) = 135413997711831571815769181284333014613_i128 | (-121433095811847851216586916392865765219_i128);
    _7 = _51;
    _41.2 = core::ptr::addr_of_mut!(_54.0);
    _27 = core::ptr::addr_of!((*_16));
    (*_16) = 63137758758380182281736915655529992570_i128 | 63242911107794662995980190183246563611_i128;
    _41.3 = Adt45::Variant2 { fld0: _43.fld1,fld1: (*_16) };
    Goto(bb26)
    }
    bb26 = {
    _22 = _33 * _39;
    Goto(bb27)
    }
    bb27 = {
    (*_6) = _41.0 + _41.0;
    (*_6) = _41.0;
    _11 = _33 * _39;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_41.3, 2), 1);
    place!(Field::<i128>(Variant(_41.3, 2), 1)) = (*_16) ^ (*_16);
    (*_6) = (*_16) as i16;
    (*_16) = !Field::<i128>(Variant(_41.3, 2), 1);
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) * Field::<i128>(Variant(_41.3, 2), 1);
    _36.1 = _41.0 + _41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1);
    _17 = _11;
    _41.2 = core::ptr::addr_of_mut!(_54.0);
    (*_6) = _41.0 * _41.0;
    (*_6) = _41.0 << (*_16);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _37 = (_43.fld0.0,);
    _54.0 = 167373127_i32 - (-223848086_i32);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _43.fld3 = (_32,);
    _43.fld3.0 = _32;
    _36 = (_52, _41.0, Field::<u64>(Variant(_23, 3), 0));
    Goto(bb28)
    }
    bb28 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _58 = _32;
    _54 = ((-37248130_i32),);
    _44 = _31 > _19;
    _54 = ((-1285559079_i32),);
    _49.1 = _40.1;
    (*_6) = _41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) - Field::<i128>(Variant(_41.3, 2), 1);
    _49.1 = [_17,_11,_17];
    (*_16) = _10 as i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _32 = _58;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_6) = _41.0 ^ _41.0;
    _23 = Adt29::Variant0 { fld0: 3650096349_u32,fld1: (*_16),fld2: _10,fld3: (-48_i8),fld4: _8,fld5: _54.0 };
    _14 = !_44;
    _41.0 = (*_6);
    _8 = !Field::<u16>(Variant(_23, 0), 4);
    (*_6) = _41.0 - _41.0;
    _43.fld0.0 = _37.0 ^ _37.0;
    _34 = (*_6) as isize;
    Call((*_16) = core::intrinsics::bswap(Field::<i128>(Variant(_41.3, 2), 1)), ReturnTo(bb29), UnwindUnreachable())
    }
    bb29 = {
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_23, 0), 1);
    _53 = _58;
    (*_6) = _39 as i16;
    place!(Field::<i32>(Variant(_23, 0), 5)) = !_54.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_16) = !Field::<i128>(Variant(_41.3, 2), 1);
    _57 = &mut _54;
    (*_1) = core::ptr::addr_of_mut!(_29);
    place!(Field::<i8>(Variant(_23, 0), 3)) = (-64_i8);
    place!(Field::<u32>(Variant(_23, 0), 0)) = Field::<f64>(Variant(_41.3, 2), 0) as u32;
    (*_57) = (Field::<i32>(Variant(_23, 0), 5),);
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_41.3, 2), 1);
    (*_6) = -_41.0;
    (*_6) = !_41.0;
    place!(Field::<i8>(Variant(_23, 0), 3)) = (-71_i8) - 16_i8;
    match _47 {
    0 => bb30,
    1 => bb31,
    2 => bb32,
    3 => bb33,
    4 => bb34,
    5 => bb35,
    4902401197672211054 => bb37,
    _ => bb36
    }
    }
    bb30 = {
    _47 = (-7351978895369300595_i64) + (-3068390522667819490_i64);
    (*_16) = _47 as i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _47 = 4902401197672211054_i64;
    _51 = _2 - _7;
    (*_16) = 68_i8 as i128;
    _17 = 73_i8 as isize;
    (*_16) = (-46293313570451636978133654029940686209_i128) + 84149657513462397029555066921496750596_i128;
    (*_6) = _41.0 | _41.0;
    _40.0 = [Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,_36.2,_36.2,_36.2];
    (*_1) = core::ptr::addr_of_mut!(_29);
    _43.fld0.0 = _37.0 - _37.0;
    (*_6) = _41.0;
    _6 = core::ptr::addr_of!((*_6));
    _38 = _28.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _37 = _43.fld0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) | _24;
    _13 = _10 | _10;
    (*_6) = _41.0 - _41.0;
    (*_6) = _43.fld1 as i16;
    _41.0 = (*_6);
    match _47 {
    0 => bb19,
    1 => bb5,
    2 => bb3,
    3 => bb21,
    4 => bb22,
    4902401197672211054 => bb24,
    _ => bb23
    }
    }
    bb31 = {
    _14 = _19 & _19;
    (*_16) = 104387734019598253200821987429324377679_i128 << _8;
    (*_16) = (-74094046736314794004683147938644592623_i128);
    Call((*_16) = fn14(Move(_1), Move(_16), _14, _19, _2, _13, _11), ReturnTo(bb12), UnwindUnreachable())
    }
    bb32 = {
    _18 = _11;
    _18 = _11;
    _8 = 59920_u16 * 27274_u16;
    _12 = _4 > _4;
    _4 = !(-3894981653687421470097467047349463732_i128);
    _15 = (-2330278394701022991_i64) as f64;
    _15 = (-1433285483_i32) as f64;
    _12 = _10 == _10;
    _4 = -137598476189548207737483944365771133598_i128;
    _17 = _18;
    _4 = _7 as i128;
    _4 = 164932351801861151947192837967299944887_i128 + 101286962854623665149307593448387055651_i128;
    _7 = _8 as usize;
    _17 = _18 >> _13;
    _15 = 2979_i16 as f64;
    _7 = _2 & _2;
    _16 = core::ptr::addr_of!(_4);
    _17 = _11 >> _8;
    (*_16) = -49808471357514493034095720747724355045_i128;
    (*_16) = 32433596752162677072408356241837269700_i128 | 166410412065000276761572936536589724758_i128;
    _19 = (*_16) > (*_16);
    (*_16) = !5002440225902237817040246826767513037_i128;
    _12 = !_19;
    (*_16) = (-12971711619537960804554586022415482597_i128);
    _2 = _7;
    Call((*_16) = fn15(_14), ReturnTo(bb13), UnwindUnreachable())
    }
    bb33 = {
    (*_16) = (-123680757942061179863130167390076565055_i128) & 23739452220934848737480821511268057307_i128;
    (*_16) = -(-42055510049957784677693884655037745705_i128);
    _4 = 29390022107822468323635625689803120850_i128 + 92679752611591962742757949535140585770_i128;
    _14 = _12;
    (*_16) = (-165886884277702533462965810985718039903_i128) ^ 21819031530217588236729251943575762560_i128;
    (*_16) = -50733930051200007144548154556078739346_i128;
    _10 = _13 * _13;
    (*_16) = (-155979277288371263357303769205408604534_i128);
    _16 = core::ptr::addr_of!((*_16));
    (*_16) = 113923949872448286684364882713252814508_i128;
    (*_16) = 3023409185176426438_i64 as i128;
    _12 = (*_16) > (*_16);
    (*_16) = -(-109154028730271387836078452625614944472_i128);
    match _8 {
    0 => bb7,
    1 => bb8,
    44179 => bb10,
    _ => bb9
    }
    }
    bb34 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _31 = (*_6) == (*_6);
    _6 = core::ptr::addr_of!((*_6));
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_1) = core::ptr::addr_of_mut!(_29);
    Goto(bb25)
    }
    bb35 = {
    _17 = _11;
    _12 = _4 == _4;
    _4 = _8 as i128;
    _16 = core::ptr::addr_of!(_4);
    _19 = _12 == _12;
    (*_16) = 215282376294997582963057376974631540485_u128 as i128;
    (*_16) = -(-136930246947048690346481721574931340517_i128);
    (*_16) = 125001633586472884392523671738971235096_i128 & (-66165516803194394033527883972622674217_i128);
    _7 = _2;
    (*_16) = !35815735810423431990088600894987579682_i128;
    (*_16) = 232279983235944499530921211620640806941_u128 as i128;
    (*_16) = -(-66821896839542793995582421748919831717_i128);
    _22 = _19 as isize;
    _22 = !_18;
    Goto(bb14)
    }
    bb36 = {
    (*_6) = 2975777965_u32 as i16;
    _24 = _10 as u64;
    _26 = [_36.2,_36.2,_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0)];
    _14 = _36.0;
    (*_16) = -75661977225964007816411266617257327988_i128;
    _1 = core::ptr::addr_of_mut!(_41.1);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _38 = _28.0 + _28.0;
    _14 = _36.0 == _19;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _52 = _19 >= _19;
    (*_6) = !_41.0;
    (*_16) = 149377230024272105499363206359006158472_i128 - 22131357398749363000350579711245277524_i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_16) = 14997023440487374289900049825034159670_i128 >> (*_6);
    (*_6) = _41.0 * _41.0;
    _40.0 = [Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,_36.2,_36.2,Field::<u64>(Variant(_23, 3), 0)];
    _49.1 = [_17,_39,_33];
    _36.2 = Field::<u64>(Variant(_23, 3), 0) & Field::<u64>(Variant(_23, 3), 0);
    (*_6) = _41.0 << (*_16);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) ^ Field::<u64>(Variant(_23, 3), 0);
    _43.fld0.0 = _37.0;
    Goto(bb20)
    }
    bb37 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_57) = (Field::<i32>(Variant(_23, 0), 5),);
    (*_6) = _10 as i16;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) - Field::<i128>(Variant(_41.3, 2), 1);
    (*_57).0 = -Field::<i32>(Variant(_23, 0), 5);
    (*_57).0 = Field::<i32>(Variant(_23, 0), 5) | Field::<i32>(Variant(_23, 0), 5);
    _13 = _10;
    _8 = !Field::<u16>(Variant(_23, 0), 4);
    _4 = Field::<i128>(Variant(_41.3, 2), 1) * Field::<i128>(Variant(_41.3, 2), 1);
    _32 = _43.fld3.0;
    (*_57).0 = Field::<i32>(Variant(_23, 0), 5) << _41.0;
    Goto(bb38)
    }
    bb38 = {
    _43.fld2 = core::ptr::addr_of!((*_57).0);
    _7 = _51;
    (*_6) = _41.0 << (*_57).0;
    (*_57).0 = Field::<i32>(Variant(_23, 0), 5) << (*_6);
    _28.0 = _43.fld1 as f32;
    match _47 {
    0 => bb30,
    1 => bb7,
    2 => bb3,
    3 => bb13,
    4 => bb12,
    5 => bb19,
    6 => bb39,
    4902401197672211054 => bb41,
    _ => bb40
    }
    }
    bb39 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _31 = (*_6) == (*_6);
    _6 = core::ptr::addr_of!((*_6));
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_1) = core::ptr::addr_of_mut!(_29);
    Goto(bb25)
    }
    bb40 = {
    (*_16) = (-123680757942061179863130167390076565055_i128) & 23739452220934848737480821511268057307_i128;
    (*_16) = -(-42055510049957784677693884655037745705_i128);
    _4 = 29390022107822468323635625689803120850_i128 + 92679752611591962742757949535140585770_i128;
    _14 = _12;
    (*_16) = (-165886884277702533462965810985718039903_i128) ^ 21819031530217588236729251943575762560_i128;
    (*_16) = -50733930051200007144548154556078739346_i128;
    _10 = _13 * _13;
    (*_16) = (-155979277288371263357303769205408604534_i128);
    _16 = core::ptr::addr_of!((*_16));
    (*_16) = 113923949872448286684364882713252814508_i128;
    (*_16) = 3023409185176426438_i64 as i128;
    _12 = (*_16) > (*_16);
    (*_16) = -(-109154028730271387836078452625614944472_i128);
    match _8 {
    0 => bb7,
    1 => bb8,
    44179 => bb10,
    _ => bb9
    }
    }
    bb41 = {
    _2 = _7 + _51;
    _27 = core::ptr::addr_of!((*_16));
    (*_57).0 = Field::<i32>(Variant(_23, 0), 5);
    _23 = Adt29::Variant3 { fld0: _36.2 };
    (*_57) = (933034745_i32,);
    (*_57) = (1967718945_i32,);
    _69 = !(*_27);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _3 = core::ptr::addr_of!(_57);
    (*_27) = !_69;
    _31 = _44 < _14;
    _62 = core::ptr::addr_of!((*_16));
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_57) = (2047846261_i32,);
    match (*_57).0 {
    0 => bb40,
    2047846261 => bb43,
    _ => bb42
    }
    }
    bb42 = {
    _2 = 16479186051915676470_usize;
    _4 = (-52529877539988323919943804588738534092_i128) - (-115692532273444440083901982974990235741_i128);
    _2 = 11574594204291173807_usize;
    _4 = -103712231354137661071791791833353530893_i128;
    _2 = 6_usize;
    _2 = 1_usize >> _4;
    _2 = !11757909057930315577_usize;
    _4 = -74159377251904067079840894726352478849_i128;
    _4 = (-62676894747396009585337405267177150819_i128) >> _2;
    _4 = 18548329937796474707806556346081318980_i128;
    _2 = (-4_i8) as usize;
    _7 = _4 as usize;
    _4 = -(-142900440168993720126546851403421160576_i128);
    _8 = 41476_u16;
    _8 = !6281_u16;
    _8 = !59288_u16;
    _8 = 228_u8 as u16;
    _8 = _2 as u16;
    _8 = (-587256176748166002_i64) as u16;
    Goto(bb3)
    }
    bb43 = {
    _17 = _22;
    _55 = &mut _46;
    (*_57) = ((-1398631658_i32),);
    (*_55) = _8 as f64;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_57) = (211944953_i32,);
    Goto(bb44)
    }
    bb44 = {
    (*_57) = (970533020_i32,);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _50 = core::ptr::addr_of!((*_3));
    (*_16) = _8 as i128;
    _60 = !_34;
    (*_55) = _43.fld1 * Field::<f64>(Variant(_41.3, 2), 0);
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_55) = Field::<f64>(Variant(_41.3, 2), 0) * _43.fld1;
    (*_57) = ((-275151403_i32),);
    _21 = _34;
    _7 = _2;
    _69 = (*_16) * (*_16);
    _71 = _2;
    (*_6) = _36.2 as i16;
    (*_57).0 = -(-1565798223_i32);
    match _47 {
    0 => bb13,
    1 => bb5,
    2 => bb3,
    3 => bb10,
    4 => bb45,
    4902401197672211054 => bb47,
    _ => bb46
    }
    }
    bb45 = {
    _22 = _33 * _39;
    Goto(bb27)
    }
    bb46 = {
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_23, 0), 1);
    _53 = _58;
    (*_6) = _39 as i16;
    place!(Field::<i32>(Variant(_23, 0), 5)) = !_54.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_16) = !Field::<i128>(Variant(_41.3, 2), 1);
    _57 = &mut _54;
    (*_1) = core::ptr::addr_of_mut!(_29);
    place!(Field::<i8>(Variant(_23, 0), 3)) = (-64_i8);
    place!(Field::<u32>(Variant(_23, 0), 0)) = Field::<f64>(Variant(_41.3, 2), 0) as u32;
    (*_57) = (Field::<i32>(Variant(_23, 0), 5),);
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_41.3, 2), 1);
    (*_6) = -_41.0;
    (*_6) = !_41.0;
    place!(Field::<i8>(Variant(_23, 0), 3)) = (-71_i8) - 16_i8;
    match _47 {
    0 => bb30,
    1 => bb31,
    2 => bb32,
    3 => bb33,
    4 => bb34,
    5 => bb35,
    4902401197672211054 => bb37,
    _ => bb36
    }
    }
    bb47 = {
    _40.0 = _26;
    (*_57).0 = (-1460560105_i32);
    _68 = _43.fld0.0;
    _71 = !_51;
    _10 = _13;
    (*_16) = !Field::<i128>(Variant(_41.3, 2), 1);
    (*_6) = _41.0 | _41.0;
    _41.1 = core::ptr::addr_of_mut!(_29);
    (*_57).0 = (*_16) as i32;
    (*_57).0 = 1865182616_i32;
    _28.0 = _38 * _38;
    _76 = (*_55) - (*_55);
    (*_55) = _43.fld0.0 as f64;
    (*_57) = ((-1895435330_i32),);
    _43.fld1 = Field::<f64>(Variant(_41.3, 2), 0) + Field::<f64>(Variant(_41.3, 2), 0);
    _40.0 = [_36.2,Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0)];
    _8 = 14642_u16 | 41115_u16;
    _56 = core::ptr::addr_of!((*_3));
    Goto(bb48)
    }
    bb48 = {
    _10 = !_13;
    _18 = _60 & _21;
    _81 = _41.0 + (*_6);
    (*_57) = (1651651546_i32,);
    _79 = _43.fld3.0;
    (*_6) = _81 - _81;
    place!(Field::<i128>(Variant(_41.3, 2), 1)) = (*_16);
    (*_55) = _10 as f64;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _39 = !_18;
    _28 = (_38, Move((*_3)));
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) * Field::<i128>(Variant(_41.3, 2), 1);
    _65 = _32;
    (*_16) = 1371179268_u32 as i128;
    _75 = (-445641530_i32) >> (*_6);
    (*_6) = _41.0 - _81;
    _36.0 = _12;
    match _47 {
    0 => bb18,
    1 => bb26,
    4902401197672211054 => bb50,
    _ => bb49
    }
    }
    bb49 = {
    _17 = _11;
    _12 = _4 == _4;
    _4 = _8 as i128;
    _16 = core::ptr::addr_of!(_4);
    _19 = _12 == _12;
    (*_16) = 215282376294997582963057376974631540485_u128 as i128;
    (*_16) = -(-136930246947048690346481721574931340517_i128);
    (*_16) = 125001633586472884392523671738971235096_i128 & (-66165516803194394033527883972622674217_i128);
    _7 = _2;
    (*_16) = !35815735810423431990088600894987579682_i128;
    (*_16) = 232279983235944499530921211620640806941_u128 as i128;
    (*_16) = -(-66821896839542793995582421748919831717_i128);
    _22 = _19 as isize;
    _22 = !_18;
    Goto(bb14)
    }
    bb50 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) << (*_6);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _11 = _34 & _18;
    (*_55) = 2853550631_u32 as f64;
    _36 = (_12, _81, Field::<u64>(Variant(_23, 3), 0));
    _70 = _43.fld0.0 << (*_16);
    (*_6) = _81 ^ _81;
    _41.1 = core::ptr::addr_of_mut!(_29);
    _85 = 125_i8 as u32;
    (*_6) = _47 as i16;
    _73 = _58;
    Call(_53 = fn17(Move((*_1)), _4, Move(_56), Move(_1), Move(_50), Move(_41.2), Move(_3), (*_16), _79, Move(_62), Move(_41.3)), ReturnTo(bb51), UnwindUnreachable())
    }
    bb51 = {
    (*_55) = _43.fld1 * _43.fld1;
    (*_55) = _43.fld1;
    (*_55) = _43.fld1 * _43.fld1;
    _36 = (_44, _81, Field::<u64>(Variant(_23, 3), 0));
    (*_6) = -_41.0;
    _8 = 46677_u16 ^ 44788_u16;
    (*_6) = _81 + _41.0;
    _65 = _32;
    (*_55) = _76 + _43.fld1;
    _16 = core::ptr::addr_of!((*_16));
    Goto(bb52)
    }
    bb52 = {
    _4 = _69 - _69;
    _79 = _53;
    _41.3 = Adt45::Variant2 { fld0: (*_55),fld1: (*_16) };
    _23 = Adt29::Variant0 { fld0: _85,fld1: (*_16),fld2: _10,fld3: 35_i8,fld4: _8,fld5: _75 };
    _12 = _44 & _31;
    _2 = _51 << _36.2;
    _90 = (_53,);
    _43.fld1 = _76 * (*_55);
    _28.0 = _38 - _38;
    _91 = &_37;
    _36.1 = !_41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) | Field::<i128>(Variant(_41.3, 2), 1);
    _43.fld2 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_23, 0), 5)));
    _79 = _73;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) | _69;
    Goto(bb53)
    }
    bb53 = {
    (*_55) = _43.fld1;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) - Field::<i128>(Variant(_23, 0), 1);
    _49.0 = _26;
    (*_6) = _41.0 << _30;
    _22 = _39 + _39;
    _37 = (_43.fld0.0,);
    (*_55) = -_43.fld1;
    _35 = &_24;
    _37.0 = (*_16) as u128;
    _61 = _38;
    _84 = (*_55) * (*_55);
    _43.fld1 = -(*_55);
    _36.0 = (*_6) == (*_6);
    match _47 {
    0 => bb54,
    1 => bb55,
    2 => bb56,
    3 => bb57,
    4902401197672211054 => bb59,
    _ => bb58
    }
    }
    bb54 = {
    _2 = !5_usize;
    _2 = 3_usize * 7_usize;
    _2 = !5_usize;
    _2 = 4_usize + 5423246582027207233_usize;
    _2 = 0_usize >> 917509648_i32;
    _2 = 1_usize;
    _2 = 6_usize ^ 7_usize;
    _2 = 1_usize & 6_usize;
    _2 = 10520349185712032547_usize * 9987436963923457603_usize;
    _2 = (-1357739776_i32) as usize;
    _2 = 226_u8 as usize;
    _2 = 6_usize;
    _2 = !5_usize;
    _2 = 16859051168492654963_usize >> 217273212874650420959848335562733004423_u128;
    _2 = (-14317_i16) as usize;
    _2 = 1_usize * 2_usize;
    _2 = (-106_i8) as usize;
    _4 = !87932364585328207452516470180804129662_i128;
    _4 = 21457800714822594046970908021846380371_i128 >> _2;
    _2 = (-24_isize) as usize;
    _2 = !11934525130661671396_usize;
    _2 = 4_usize >> _4;
    _2 = !7_usize;
    _4 = 67868345650803481825671022866343784454_i128;
    _4 = -(-69494850433993545431828965253134005994_i128);
    _4 = (-75130114701268770496954379181390061446_i128) ^ 107763883853938206201436971774698105151_i128;
    _2 = 1677964109917366140_usize >> _4;
    Goto(bb2)
    }
    bb55 = {
    (*_6) = _41.0 + _41.0;
    (*_6) = _41.0;
    _11 = _33 * _39;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) ^ Field::<i128>(Variant(_41.3, 2), 1);
    place!(Field::<i128>(Variant(_41.3, 2), 1)) = (*_16) ^ (*_16);
    (*_6) = (*_16) as i16;
    (*_16) = !Field::<i128>(Variant(_41.3, 2), 1);
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) * Field::<i128>(Variant(_41.3, 2), 1);
    _36.1 = _41.0 + _41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1);
    _17 = _11;
    _41.2 = core::ptr::addr_of_mut!(_54.0);
    (*_6) = _41.0 * _41.0;
    (*_6) = _41.0 << (*_16);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _37 = (_43.fld0.0,);
    _54.0 = 167373127_i32 - (-223848086_i32);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _43.fld3 = (_32,);
    _43.fld3.0 = _32;
    _36 = (_52, _41.0, Field::<u64>(Variant(_23, 3), 0));
    Goto(bb28)
    }
    bb56 = {
    _47 = (-7351978895369300595_i64) + (-3068390522667819490_i64);
    (*_16) = _47 as i128;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _47 = 4902401197672211054_i64;
    _51 = _2 - _7;
    (*_16) = 68_i8 as i128;
    _17 = 73_i8 as isize;
    (*_16) = (-46293313570451636978133654029940686209_i128) + 84149657513462397029555066921496750596_i128;
    (*_6) = _41.0 | _41.0;
    _40.0 = [Field::<u64>(Variant(_23, 3), 0),Field::<u64>(Variant(_23, 3), 0),_36.2,Field::<u64>(Variant(_23, 3), 0),_36.2,_36.2,_36.2,_36.2];
    (*_1) = core::ptr::addr_of_mut!(_29);
    _43.fld0.0 = _37.0 - _37.0;
    (*_6) = _41.0;
    _6 = core::ptr::addr_of!((*_6));
    _38 = _28.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _37 = _43.fld0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _36.2 = Field::<u64>(Variant(_23, 3), 0) | _24;
    _13 = _10 | _10;
    (*_6) = _41.0 - _41.0;
    (*_6) = _43.fld1 as i16;
    _41.0 = (*_6);
    match _47 {
    0 => bb19,
    1 => bb5,
    2 => bb3,
    3 => bb21,
    4 => bb22,
    4902401197672211054 => bb24,
    _ => bb23
    }
    }
    bb57 = {
    _2 = _7 + _51;
    _27 = core::ptr::addr_of!((*_16));
    (*_57).0 = Field::<i32>(Variant(_23, 0), 5);
    _23 = Adt29::Variant3 { fld0: _36.2 };
    (*_57) = (933034745_i32,);
    (*_57) = (1967718945_i32,);
    _69 = !(*_27);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _3 = core::ptr::addr_of!(_57);
    (*_27) = !_69;
    _31 = _44 < _14;
    _62 = core::ptr::addr_of!((*_16));
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_57) = (2047846261_i32,);
    match (*_57).0 {
    0 => bb40,
    2047846261 => bb43,
    _ => bb42
    }
    }
    bb58 = {
    _36.2 = Field::<u64>(Variant(_23, 3), 0) << _4;
    _40.1 = [_17,_11,_39];
    _43.fld3.0 = _32;
    _37.0 = 233865996709830336888352790120151506215_u128 ^ 202248644590240366891149201010385410137_u128;
    _33 = _30 >> (*_16);
    (*_16) = !(-100704451687728376439889231029707462437_i128);
    (*_16) = -(-57422850747943948147745332142648037343_i128);
    _36.0 = _31;
    _45 = _11;
    _4 = 97723756732209161006740545094939448038_i128 | (-24262509351999058203925269604056788911_i128);
    (*_16) = 139867658197041983659917164395890760261_i128 << _36.2;
    _43.fld0 = (_37.0,);
    _41.0 = (-12077_i16) << (*_16);
    _46 = _15;
    _32 = _43.fld3.0;
    _43.fld1 = _36.2 as f64;
    _41.1 = core::ptr::addr_of_mut!(_29);
    _34 = _39;
    _6 = core::ptr::addr_of!(_36.1);
    Goto(bb18)
    }
    bb59 = {
    _60 = !_17;
    _28.0 = _61 * _61;
    _4 = Field::<i128>(Variant(_41.3, 2), 1);
    (*_16) = (-94_i8) as i128;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) + Field::<i128>(Variant(_23, 0), 1);
    _90 = _43.fld3;
    (*_6) = _28.0 as i16;
    match _47 {
    0 => bb8,
    1 => bb47,
    2 => bb31,
    3 => bb23,
    4 => bb60,
    5 => bb61,
    4902401197672211054 => bb63,
    _ => bb62
    }
    }
    bb60 = {
    _4 = _69 - _69;
    _79 = _53;
    _41.3 = Adt45::Variant2 { fld0: (*_55),fld1: (*_16) };
    _23 = Adt29::Variant0 { fld0: _85,fld1: (*_16),fld2: _10,fld3: 35_i8,fld4: _8,fld5: _75 };
    _12 = _44 & _31;
    _2 = _51 << _36.2;
    _90 = (_53,);
    _43.fld1 = _76 * (*_55);
    _28.0 = _38 - _38;
    _91 = &_37;
    _36.1 = !_41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) | Field::<i128>(Variant(_41.3, 2), 1);
    _43.fld2 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_23, 0), 5)));
    _79 = _73;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) | _69;
    Goto(bb53)
    }
    bb61 = {
    _17 = _11;
    _12 = _4 == _4;
    _4 = _8 as i128;
    _16 = core::ptr::addr_of!(_4);
    _19 = _12 == _12;
    (*_16) = 215282376294997582963057376974631540485_u128 as i128;
    (*_16) = -(-136930246947048690346481721574931340517_i128);
    (*_16) = 125001633586472884392523671738971235096_i128 & (-66165516803194394033527883972622674217_i128);
    _7 = _2;
    (*_16) = !35815735810423431990088600894987579682_i128;
    (*_16) = 232279983235944499530921211620640806941_u128 as i128;
    (*_16) = -(-66821896839542793995582421748919831717_i128);
    _22 = _19 as isize;
    _22 = !_18;
    Goto(bb14)
    }
    bb62 = {
    _22 = _33 * _39;
    Goto(bb27)
    }
    bb63 = {
    _49.0 = [(*_35),(*_35),(*_35),(*_35),_24,(*_35),_36.2,_36.2];
    _60 = _22 ^ _22;
    _43.fld0.0 = _2 as u128;
    (*_6) = _81;
    _7 = !_2;
    _29 = core::ptr::addr_of_mut!(_91);
    _85 = Field::<u32>(Variant(_23, 0), 0);
    (*_6) = _41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) | Field::<i128>(Variant(_23, 0), 1);
    _27 = core::ptr::addr_of!((*_16));
    (*_55) = _84 + _84;
    _48 = [_8];
    (*_16) = _69 ^ Field::<i128>(Variant(_23, 0), 1);
    _98 = _90;
    _4 = 73_i8 as i128;
    _35 = &_36.2;
    _62 = core::ptr::addr_of!((*_16));
    Call((*_62) = fn18(Move((*_29)), Move(_62), Move(_29)), ReturnTo(bb64), UnwindUnreachable())
    }
    bb64 = {
    _36 = (_44, _81, _24);
    _1 = core::ptr::addr_of_mut!(_41.1);
    (*_6) = _81;
    (*_6) = _81;
    (*_16) = Field::<i128>(Variant(_23, 0), 1);
    (*_6) = _41.0 ^ _81;
    _73 = _32;
    _28.0 = _61 * _61;
    (*_6) = -_41.0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _86 = (*_55) + (*_55);
    _92 = Move(_55);
    _43.fld0.0 = _68 << (*_6);
    (*_1) = core::ptr::addr_of_mut!(_88);
    (*_1) = core::ptr::addr_of_mut!(_29);
    place!(Field::<u16>(Variant(_23, 0), 4)) = _8 & _8;
    _38 = _61 - _61;
    _39 = !_18;
    _41.2 = core::ptr::addr_of_mut!(_75);
    (*_1) = core::ptr::addr_of_mut!(_88);
    Goto(bb65)
    }
    bb65 = {
    _39 = _60;
    _40.0 = [_24,_24,_24,_36.2,_24,_36.2,_36.2,_24];
    _96 = !_13;
    _19 = !_44;
    _62 = core::ptr::addr_of!(_69);
    _43.fld1 = _39 as f64;
    _97 = 83_i8 as u16;
    _49.0 = [_36.2,_24,_24,_24,_36.2,_24,_24,_36.2];
    (*_6) = _81;
    place!(Field::<u16>(Variant(_23, 0), 4)) = _8;
    (*_6) = -_81;
    match _47 {
    0 => bb60,
    1 => bb66,
    2 => bb67,
    3 => bb68,
    4902401197672211054 => bb70,
    _ => bb69
    }
    }
    bb66 = {
    (*_55) = _43.fld1 * _43.fld1;
    (*_55) = _43.fld1;
    (*_55) = _43.fld1 * _43.fld1;
    _36 = (_44, _81, Field::<u64>(Variant(_23, 3), 0));
    (*_6) = -_41.0;
    _8 = 46677_u16 ^ 44788_u16;
    (*_6) = _81 + _41.0;
    _65 = _32;
    (*_55) = _76 + _43.fld1;
    _16 = core::ptr::addr_of!((*_16));
    Goto(bb52)
    }
    bb67 = {
    _49.0 = [(*_35),(*_35),(*_35),(*_35),_24,(*_35),_36.2,_36.2];
    _60 = _22 ^ _22;
    _43.fld0.0 = _2 as u128;
    (*_6) = _81;
    _7 = !_2;
    _29 = core::ptr::addr_of_mut!(_91);
    _85 = Field::<u32>(Variant(_23, 0), 0);
    (*_6) = _41.0;
    (*_16) = Field::<i128>(Variant(_41.3, 2), 1) | Field::<i128>(Variant(_23, 0), 1);
    _27 = core::ptr::addr_of!((*_16));
    (*_55) = _84 + _84;
    _48 = [_8];
    (*_16) = _69 ^ Field::<i128>(Variant(_23, 0), 1);
    _98 = _90;
    _4 = 73_i8 as i128;
    _35 = &_36.2;
    _62 = core::ptr::addr_of!((*_16));
    Call((*_62) = fn18(Move((*_29)), Move(_62), Move(_29)), ReturnTo(bb64), UnwindUnreachable())
    }
    bb68 = {
    (*_55) = _43.fld1;
    (*_16) = Field::<i128>(Variant(_23, 0), 1) - Field::<i128>(Variant(_23, 0), 1);
    _49.0 = _26;
    (*_6) = _41.0 << _30;
    _22 = _39 + _39;
    _37 = (_43.fld0.0,);
    (*_55) = -_43.fld1;
    _35 = &_24;
    _37.0 = (*_16) as u128;
    _61 = _38;
    _84 = (*_55) * (*_55);
    _43.fld1 = -(*_55);
    _36.0 = (*_6) == (*_6);
    match _47 {
    0 => bb54,
    1 => bb55,
    2 => bb56,
    3 => bb57,
    4902401197672211054 => bb59,
    _ => bb58
    }
    }
    bb69 = {
    _17 = _11;
    _12 = _4 == _4;
    _4 = _8 as i128;
    _16 = core::ptr::addr_of!(_4);
    _19 = _12 == _12;
    (*_16) = 215282376294997582963057376974631540485_u128 as i128;
    (*_16) = -(-136930246947048690346481721574931340517_i128);
    (*_16) = 125001633586472884392523671738971235096_i128 & (-66165516803194394033527883972622674217_i128);
    _7 = _2;
    (*_16) = !35815735810423431990088600894987579682_i128;
    (*_16) = 232279983235944499530921211620640806941_u128 as i128;
    (*_16) = -(-66821896839542793995582421748919831717_i128);
    _22 = _19 as isize;
    _22 = !_18;
    Goto(bb14)
    }
    bb70 = {
    place!(Field::<i128>(Variant(_41.3, 2), 1)) = !(*_16);
    match _47 {
    0 => bb8,
    1 => bb64,
    4902401197672211054 => bb72,
    _ => bb71
    }
    }
    bb71 = {
    _10 = _13 ^ _13;
    Goto(bb19)
    }
    bb72 = {
    (*_6) = _81;
    _22 = _18 + _18;
    _104 = Move(_41.3);
    (*_16) = _13 as i128;
    _36 = (_52, _81, _24);
    Call(_47 = core::intrinsics::transmute(_22), ReturnTo(bb73), UnwindUnreachable())
    }
    bb73 = {
    _76 = _68 as f64;
    _40.0 = _26;
    Call((*_62) = core::intrinsics::bswap(Field::<i128>(Variant(_23, 0), 1)), ReturnTo(bb74), UnwindUnreachable())
    }
    bb74 = {
    _47 = 6697312145026662836_i64 - 7485140653541072047_i64;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _69 = _4;
    _18 = (*_6) as isize;
    _24 = _36.2;
    _106 = _24 as usize;
    (*_6) = -_81;
    (*_6) = _41.0 << _2;
    _45 = _28.0 as isize;
    (*_16) = _32 as i128;
    _90.0 = _65;
    (*_6) = _41.0 & _81;
    (*_16) = _2 as i128;
    (*_62) = (*_16) - (*_16);
    (*_1) = core::ptr::addr_of_mut!(_88);
    Goto(bb75)
    }
    bb75 = {
    (*_16) = (*_62) >> _11;
    _68 = _43.fld0.0 >> _75;
    _98.0 = _65;
    Goto(bb76)
    }
    bb76 = {
    (*_62) = (*_16) >> (*_6);
    _43.fld0.0 = _68;
    _63 = _86 * _84;
    _11 = _39 & _18;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_16) = !(*_62);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _91 = &_43.fld0;
    _96 = (*_62) as u8;
    (*_6) = _41.0 | _81;
    (*_6) = _41.0 - _81;
    (*_16) = !(*_62);
    _37.0 = (*_91).0 >> (*_91).0;
    (*_16) = _75 as i128;
    _108 = (*_62) << (*_6);
    _49.1 = _40.1;
    place!(Field::<i128>(Variant(_23, 0), 1)) = (*_6) as i128;
    _36.0 = _44;
    _43.fld3.0 = _32;
    _36 = (_44, _81, _24);
    (*_62) = _108;
    (*_16) = (*_62);
    (*_62) = (*_16) | (*_16);
    (*_6) = _41.0;
    Call((*_6) = core::intrinsics::bswap(_81), ReturnTo(bb77), UnwindUnreachable())
    }
    bb77 = {
    _90.0 = _43.fld3.0;
    (*_6) = _41.0;
    (*_6) = _81 + _81;
    (*_6) = _41.0 << (*_91).0;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _80 = &_40.1;
    place!(Field::<i128>(Variant(_104, 2), 1)) = _4;
    (*_1) = core::ptr::addr_of_mut!(_29);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _11 = _7 as isize;
    Goto(bb78)
    }
    bb78 = {
    _41.1 = core::ptr::addr_of_mut!(_88);
    (*_6) = _81;
    place!(Field::<i128>(Variant(_23, 0), 1)) = _69 * (*_16);
    _89 = (*_91).0 < (*_91).0;
    (*_6) = _47 as i16;
    (*_16) = (*_62) * (*_62);
    _10 = _96 & _96;
    _60 = _22;
    _53 = _98.0;
    _89 = _31;
    (*_6) = _41.0;
    _103 = core::ptr::addr_of_mut!(_89);
    Goto(bb79)
    }
    bb79 = {
    _25 = core::ptr::addr_of!(_80);
    (*_62) = (*_16) + (*_16);
    place!(Field::<u16>(Variant(_23, 0), 4)) = _8 * _8;
    _77 = &_36.2;
    (*_6) = _81 * _41.0;
    (*_6) = (*_77) as i16;
    _36.2 = !_24;
    (*_25) = &_49.1;
    (*_62) = (*_16) | (*_16);
    (*_6) = _41.0 * _41.0;
    (*_103) = _84 >= _63;
    Goto(bb80)
    }
    bb80 = {
    (*_103) = _19;
    _109 = core::ptr::addr_of_mut!(_41.0);
    _30 = !_60;
    _30 = _34;
    _103 = core::ptr::addr_of_mut!((*_103));
    (*_6) = -(*_109);
    _114 = _58;
    _60 = _21 + _11;
    (*_1) = core::ptr::addr_of_mut!(_29);
    _40.1 = (*_80);
    _96 = _7 as u8;
    _33 = _22 | _11;
    _70 = (*_91).0 - (*_91).0;
    _110 = (*_103);
    _84 = _43.fld1;
    Goto(bb81)
    }
    bb81 = {
    _2 = _7;
    _73 = _58;
    _119.2 = [_22,_60,_60];
    _55 = &mut _43.fld1;
    _118.1.fld0 = !(*_103);
    (*_55) = 17_i8 as f64;
    (*_25) = &_119.2;
    _119.1.fld3 = _36.2 >> (*_16);
    (*_6) = (*_109);
    (*_55) = (*_91).0 as f64;
    _121 = _18;
    _58 = _114;
    _87 = &_109;
    _73 = _114;
    _36.2 = _119.1.fld3 << Field::<i32>(Variant(_23, 0), 5);
    _106 = !_7;
    (*_16) = (*_62) | (*_62);
    _47 = _96 as i64;
    _62 = core::ptr::addr_of!((*_16));
    _81 = (*_109) << (*_6);
    (*_25) = &_49.1;
    _119.1.fld6 = -_47;
    _118.1.fld7 = core::ptr::addr_of_mut!((*_6));
    Goto(bb82)
    }
    bb82 = {
    _118.1.fld4 = (Field::<i32>(Variant(_23, 0), 5),);
    Call((*_55) = core::intrinsics::transmute(_2), ReturnTo(bb83), UnwindUnreachable())
    }
    bb83 = {
    (*_6) = (*_109);
    (*_6) = (*_109) - _81;
    _118.1.fld6 = _119.1.fld6 * _47;
    _105.1 = core::ptr::addr_of!(_124);
    _98.0 = _73;
    (*_6) = (*_109);
    (*_16) = !Field::<i128>(Variant(_23, 0), 1);
    (*_6) = (*_109) + (*_109);
    (*_16) = -_69;
    (*_109) = (*_6) ^ (*_6);
    _124 = [37_i8,6_i8,92_i8,94_i8,(-75_i8),(-35_i8)];
    (*_109) = (*_6) + (*_6);
    _15 = (*_55) - (*_55);
    (*_16) = _108;
    _41.0 = _10 as i16;
    _119.1.fld1 = _79;
    (*_55) = _84 * _63;
    Goto(bb84)
    }
    bb84 = {
    _96 = !_10;
    _118.1.fld3 = _119.1.fld3 * _36.2;
    (*_109) = (*_6);
    _12 = (*_55) > _76;
    _48 = [_97];
    _37.0 = !(*_91).0;
    (*_103) = _110 ^ _12;
    _119.1.fld5 = _61;
    (*_25) = &_40.1;
    _118.1.fld4 = (_75,);
    _70 = (*_91).0;
    (*_6) = (*_109) & (*_109);
    _123.0 = _65;
    Call(_118.2 = core::intrinsics::transmute((*_80)), ReturnTo(bb85), UnwindUnreachable())
    }
    bb85 = {
    (*_6) = (*_109) & (*_109);
    _117.1 = &mut _118.1.fld4;
    Goto(bb86)
    }
    bb86 = {
    _119.3 = Adt35::Variant0 { fld0: _7,fld1: _47 };
    _114 = _73;
    (*_6) = -(*_109);
    (*_103) = (*_6) >= (*_6);
    _60 = _18;
    _127 = (*_16);
    _17 = _22 + _21;
    (*_103) = _10 == _10;
    _40.0 = [_36.2,_119.1.fld3,_36.2,_36.2,_119.1.fld3,_36.2,_36.2,_36.2];
    place!(Field::<i8>(Variant(_23, 0), 3)) = (-16_i8) << (*_109);
    Call(_24 = core::intrinsics::transmute(_22), ReturnTo(bb87), UnwindUnreachable())
    }
    bb87 = {
    (*_103) = _36.0 | _14;
    _119.0 = _63 as u16;
    (*_103) = !_44;
    (*_109) = (*_6) - _36.1;
    (*_103) = (*_16) >= (*_16);
    _119.1.fld3 = !_24;
    (*_16) = Field::<i128>(Variant(_104, 2), 1) - _127;
    _78 = core::ptr::addr_of!(_117.1);
    _59 = core::ptr::addr_of!(_124);
    _90.0 = _73;
    _31 = (*_6) >= (*_6);
    _53 = _114;
    _133 = core::ptr::addr_of_mut!((*_1));
    (*_55) = _15;
    (*_55) = _15 + _15;
    (*_6) = (*_109) >> _121;
    _97 = _119.0;
    (*_6) = (*_109);
    _135 = core::ptr::addr_of_mut!(_91);
    Goto(bb88)
    }
    bb88 = {
    (*_6) = !(*_109);
    _9 = Move(_87);
    (*_16) = Field::<i128>(Variant(_23, 0), 1) * Field::<i128>(Variant(_23, 0), 1);
    _26 = _40.0;
    (*_135) = &_37;
    (*_25) = &_119.2;
    _128 = -(*_55);
    _70 = !(*_91).0;
    (*_6) = _41.0;
    _96 = _10 >> (*_16);
    _139 = Field::<i8>(Variant(_23, 0), 3);
    _28 = (_38, Move((*_78)));
    _9 = &_109;
    Goto(bb89)
    }
    bb89 = {
    (*_59) = [_139,_139,_139,_139,Field::<i8>(Variant(_23, 0), 3),_139];
    _36.1 = (*_109) >> (*_109);
    _101 = (*_55) - _128;
    _135 = core::ptr::addr_of_mut!((*_135));
    _101 = (*_55) - (*_55);
    (*_6) = _89 as i16;
    (*_25) = &_49.1;
    _60 = _121 - _21;
    _98.0 = _53;
    (*_59) = [_139,Field::<i8>(Variant(_23, 0), 3),_139,_139,Field::<i8>(Variant(_23, 0), 3),_139];
    place!(Field::<i32>(Variant(_23, 0), 5)) = _75 | _75;
    _36.0 = _89;
    _105 = (_119.1.fld6, Move(_59));
    (*_103) = !_31;
    _31 = !_36.0;
    (*_103) = (*_6) < (*_6);
    (*_1) = core::ptr::addr_of_mut!(_29);
    _134 = !Field::<i8>(Variant(_23, 0), 3);
    _131 = Move((*_1));
    _135 = core::ptr::addr_of_mut!(_91);
    _99 = _11;
    _32 = _123.0;
    _81 = (*_109) - (*_6);
    _70 = _68 - (*_91).0;
    Goto(bb90)
    }
    bb90 = {
    (*_103) = !_31;
    _10 = !_96;
    (*_25) = &_119.2;
    _93 = _22 >> (*_16);
    (*_1) = core::ptr::addr_of_mut!(_88);
    (*_25) = &_40.1;
    (*_103) = _31;
    (*_103) = _36.0 | _31;
    _55 = &mut _63;
    _98.0 = _79;
    _144.2 = (*_91);
    (*_25) = &_119.2;
    (*_6) = (*_109) + (*_109);
    (*_103) = !_19;
    _59 = core::ptr::addr_of!(_124);
    (*_16) = (*_6) as i128;
    (*_16) = (*_103) as i128;
    (*_25) = &_40.1;
    _143 = &mut (*_80);
    place!(Field::<i32>(Variant(_23, 0), 5)) = _75 << _139;
    Goto(bb91)
    }
    bb91 = {
    (*_1) = core::ptr::addr_of_mut!(_29);
    _141 = (_47, Move(_105.1));
    _94 = !_89;
    (*_55) = Field::<f64>(Variant(_104, 2), 0) - _15;
    (*_25) = &_119.2;
    (*_59) = [_139,Field::<i8>(Variant(_23, 0), 3),_139,Field::<i8>(Variant(_23, 0), 3),Field::<i8>(Variant(_23, 0), 3),_139];
    _41.2 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_23, 0), 5)));
    _85 = Field::<u32>(Variant(_23, 0), 0) * Field::<u32>(Variant(_23, 0), 0);
    _100 = Move(_78);
    Goto(bb92)
    }
    bb92 = {
    (*_135) = &_144.2;
    _105 = (Field::<i64>(Variant(_119.3, 0), 1), Move(_141.1));
    Call(_15 = core::intrinsics::transmute(_47), ReturnTo(bb93), UnwindUnreachable())
    }
    bb93 = {
    (*_103) = _12;
    _41.3 = Move(_104);
    (*_109) = -(*_6);
    (*_55) = _128;
    _73 = _65;
    (*_55) = _128;
    place!(Field::<i8>(Variant(_23, 0), 3)) = _134;
    _75 = !Field::<i32>(Variant(_23, 0), 5);
    _148.1.0 = _123.0;
    _115 = core::ptr::addr_of_mut!(_29);
    (*_6) = (*_109) + (*_109);
    _142 = &mut (*_80);
    (*_25) = &(*_143);
    (*_6) = (*_109) | (*_109);
    (*_135) = &_37;
    (*_115) = core::ptr::addr_of_mut!(_91);
    Goto(bb94)
    }
    bb94 = {
    (*_103) = (*_16) < _127;
    _87 = &(*_9);
    _104 = Move(_41.3);
    _72 = core::ptr::addr_of!(_150);
    (*_55) = _86 - _15;
    _142 = &mut (*_80);
    (*_115) = core::ptr::addr_of_mut!((*_135));
    Goto(bb95)
    }
    bb95 = {
    _140 = _38;
    _45 = (*_103) as isize;
    _53 = _79;
    _124 = [_134,Field::<i8>(Variant(_23, 0), 3),_134,_139,_139,_134];
    (*_29) = &_144.2;
    _98 = _90;
    (*_55) = _15 - _84;
    (*_6) = (*_109) ^ (*_109);
    (*_59) = [_139,_134,_134,_139,_139,_139];
    Goto(bb96)
    }
    bb96 = {
    (*_109) = (*_6);
    _4 = Field::<i128>(Variant(_23, 0), 1) ^ _69;
    _103 = core::ptr::addr_of_mut!((*_103));
    _76 = _60 as f64;
    _141.0 = _10 as i64;
    RET = core::ptr::addr_of!(_155);
    _4 = _10 as i128;
    Goto(bb97)
    }
    bb97 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(
    mut _1: *mut *mut *mut &'static (u128,),
    mut _2: *const i128,
    mut _3: bool,
    mut _4: bool,
    mut _5: usize,
    mut _6: u8,
    mut _7: isize,
) -> i128 {
    mir! {
    type RET = i128;
    let _8: f64;
    let _9: &'static *mut i16;
    let _10: u8;
    let _11: f32;
    let _12: i8;
    let _13: f64;
    let _14: *mut *mut &'static (u128,);
    let _15: *mut *mut &'static (u128,);
    let _16: isize;
    let _17: (u128,);
    let _18: char;
    let _19: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _20: char;
    let _21: [u128; 4];
    let _22: &'static mut [isize; 3];
    let _23: char;
    let _24: *mut Adt45;
    let _25: isize;
    let _26: f32;
    let _27: isize;
    let _28: &'static mut (i32,);
    let _29: &'static mut u8;
    let _30: (i32,);
    let _31: [i8; 6];
    let _32: (i32,);
    let _33: f64;
    let _34: *mut i16;
    let _35: &'static mut (i32,);
    let _36: isize;
    let _37: f64;
    let _38: (i32,);
    let _39: *mut i32;
    let _40: &'static [u128; 2];
    let _41: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _42: Adt74;
    let _43: [isize; 3];
    let _44: isize;
    let _45: isize;
    let _46: ();
    let _47: ();
    {
    _10 = 53614411_i32 as u8;
    _8 = 5655068216069639877_u64 as f64;
    _8 = (-97_i8) as f64;
    _5 = _7 as usize;
    Goto(bb1)
    }
    bb1 = {
    _4 = _3 | _3;
    _2 = core::ptr::addr_of!(RET);
    (*_2) = (-128565224406110993414640683111962476791_i128) + (-71649307932052981839398215798690652408_i128);
    (*_2) = (-113747491449831848799228925007081871623_i128) - 91160771587602920482275882818540924190_i128;
    (*_2) = 120657341903157825614582691377048899630_i128;
    _4 = _3 >= _3;
    (*_2) = !(-86224505137612090183376804044213092275_i128);
    _7 = 9223372036854775807_isize << _5;
    (*_2) = (-95533486746737025784135269358088987661_i128);
    Goto(bb2)
    }
    bb2 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb3 = {
    _16 = -_7;
    (*_2) = (-38830223925473275110450652625422143811_i128) >> _16;
    _6 = _10;
    match _17.0 {
    0 => bb1,
    1 => bb2,
    2 => bb4,
    3 => bb5,
    4 => bb6,
    5 => bb7,
    6 => bb8,
    264007067429299173173617027629590540579 => bb10,
    _ => bb9
    }
    }
    bb4 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb5 = {
    _4 = _3 | _3;
    _2 = core::ptr::addr_of!(RET);
    (*_2) = (-128565224406110993414640683111962476791_i128) + (-71649307932052981839398215798690652408_i128);
    (*_2) = (-113747491449831848799228925007081871623_i128) - 91160771587602920482275882818540924190_i128;
    (*_2) = 120657341903157825614582691377048899630_i128;
    _4 = _3 >= _3;
    (*_2) = !(-86224505137612090183376804044213092275_i128);
    _7 = 9223372036854775807_isize << _5;
    (*_2) = (-95533486746737025784135269358088987661_i128);
    Goto(bb2)
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    RET = (-73976131033872821086741457287448857817_i128) + (-45561201059943018079550399832644248074_i128);
    _6 = _10 ^ _10;
    (*_2) = (-167494060414281164772397862716817975057_i128) ^ 122285895436670872199529933949786509218_i128;
    _17.0 = 255620966122141238804880598440778823942_u128 * 42492622604896213034016238544205205349_u128;
    (*_2) = _8 as i128;
    _7 = _16 | _16;
    (*_2) = (-100004335064875098152922659282081378217_i128) << _17.0;
    Goto(bb11)
    }
    bb11 = {
    _12 = (-113_i8);
    (*_2) = 7548194854090433395437666770890834079_i128 ^ (-80140698319027346555451392372870504371_i128);
    (*_2) = 125358242098437152322234052978604871949_i128 | 91033507695184313819353515052761601947_i128;
    match _12 {
    0 => bb1,
    1 => bb12,
    2 => bb13,
    3 => bb14,
    4 => bb15,
    5 => bb16,
    340282366920938463463374607431768211343 => bb18,
    _ => bb17
    }
    }
    bb12 = {
    RET = (-73976131033872821086741457287448857817_i128) + (-45561201059943018079550399832644248074_i128);
    _6 = _10 ^ _10;
    (*_2) = (-167494060414281164772397862716817975057_i128) ^ 122285895436670872199529933949786509218_i128;
    _17.0 = 255620966122141238804880598440778823942_u128 * 42492622604896213034016238544205205349_u128;
    (*_2) = _8 as i128;
    _7 = _16 | _16;
    (*_2) = (-100004335064875098152922659282081378217_i128) << _17.0;
    Goto(bb11)
    }
    bb13 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb14 = {
    Return()
    }
    bb15 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb16 = {
    Return()
    }
    bb17 = {
    _4 = _3 | _3;
    _2 = core::ptr::addr_of!(RET);
    (*_2) = (-128565224406110993414640683111962476791_i128) + (-71649307932052981839398215798690652408_i128);
    (*_2) = (-113747491449831848799228925007081871623_i128) - 91160771587602920482275882818540924190_i128;
    (*_2) = 120657341903157825614582691377048899630_i128;
    _4 = _3 >= _3;
    (*_2) = !(-86224505137612090183376804044213092275_i128);
    _7 = 9223372036854775807_isize << _5;
    (*_2) = (-95533486746737025784135269358088987661_i128);
    Goto(bb2)
    }
    bb18 = {
    (*_2) = -(-130007304090638879429895923331932475533_i128);
    _6 = _4 as u8;
    _8 = _12 as f64;
    (*_2) = (-23041780804721108944384343136233304234_i128);
    (*_2) = 39707699228860567205849321341230777036_i128 << _7;
    _17.0 = 120097322637106579765326834264610579290_u128 | 337379968846514879566120408031518392598_u128;
    (*_2) = 1576834127_u32 as i128;
    _12 = (-127_i8) + 118_i8;
    _18 = '\u{53898}';
    _10 = _6 >> _7;
    (*_2) = (-131261712683871623517467613978356733248_i128) & 27823511553667615352423245122095127040_i128;
    (*_2) = 55509303142199531028230781863664926291_i128;
    match (*_2) {
    0 => bb8,
    1 => bb14,
    2 => bb3,
    3 => bb4,
    4 => bb5,
    5 => bb15,
    55509303142199531028230781863664926291 => bb19,
    _ => bb7
    }
    }
    bb19 = {
    (*_2) = (-169213986129646477244094230694336582993_i128);
    _6 = _12 as u8;
    Goto(bb20)
    }
    bb20 = {
    (*_2) = 72271206288654270080668645097431938848_i128;
    (*_2) = _8 as i128;
    RET = 97939184893285291436229347198026731126_i128;
    (*_2) = 141255956385970898712698889009914299502_i128 >> _10;
    _17.0 = 76533682592421063534204076042963965060_u128 - 275141102854562626027102062233308726606_u128;
    _11 = _5 as f32;
    _27 = _16 + _7;
    _26 = _27 as f32;
    _20 = _18;
    _7 = -_27;
    _17.0 = 299136522088614093112951829632757467239_u128 & 101189595620691659676773611726047081755_u128;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = 119635978024107593049573534814525859735_i128;
    _2 = core::ptr::addr_of!((*_2));
    RET = 21924499898466135987758550598305174380_i128;
    _11 = _26;
    _19.2.0 = !_17.0;
    match (*_2) {
    0 => bb14,
    21924499898466135987758550598305174380 => bb21,
    _ => bb3
    }
    }
    bb21 = {
    (*_2) = -(-88282655337226599153884453003446494155_i128);
    (*_2) = (-157844702748884592273300150024091847758_i128);
    _1 = core::ptr::addr_of_mut!((*_1));
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = (-91872343596185864097785532903687392790_i128);
    _13 = _8 - _8;
    _29 = &mut _6;
    _26 = _11 - _11;
    (*_29) = _10 >> _7;
    _25 = _7 >> (*_29);
    _7 = !_25;
    _32 = (2003604122_i32,);
    match _32.0 {
    0 => bb22,
    1 => bb23,
    2 => bb24,
    3 => bb25,
    2003604122 => bb27,
    _ => bb26
    }
    }
    bb22 = {
    _16 = -_7;
    (*_2) = (-38830223925473275110450652625422143811_i128) >> _16;
    _6 = _10;
    match _17.0 {
    0 => bb1,
    1 => bb2,
    2 => bb4,
    3 => bb5,
    4 => bb6,
    5 => bb7,
    6 => bb8,
    264007067429299173173617027629590540579 => bb10,
    _ => bb9
    }
    }
    bb23 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb24 = {
    Return()
    }
    bb25 = {
    Return()
    }
    bb26 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb27 = {
    _11 = 34750_u16 as f32;
    _21 = [_19.2.0,_19.2.0,_19.2.0,_17.0];
    (*_2) = -150595351421289929097398041356818280231_i128;
    (*_29) = 3427473477_u32 as u8;
    (*_2) = (-161773118466793256541093668940252768747_i128) + (-161871996349406044926634782934198303533_i128);
    _16 = _7 | _27;
    (*_2) = 143280930194032029086343808026769536590_i128;
    (*_29) = 120444817_u32 as u8;
    (*_2) = 89721985316243375919837738120701133586_i128 << _7;
    (*_29) = _10 << (*_2);
    (*_29) = (*_2) as u8;
    (*_2) = 8412326101454376698897066125247042148_i128 >> (*_29);
    _35 = &mut _32;
    _25 = -_16;
    (*_2) = (-1219551690521741680268965163091545582_i128) * 51134732433803419916857980834757192450_i128;
    _23 = _20;
    (*_29) = _10;
    (*_2) = (-100530122706805287908968042855422628817_i128);
    (*_2) = _12 as i128;
    (*_35) = ((-1053179249_i32),);
    (*_35) = (1680567925_i32,);
    (*_29) = _10 + _10;
    (*_29) = _10 ^ _10;
    match (*_35).0 {
    0 => bb19,
    1680567925 => bb28,
    _ => bb25
    }
    }
    bb28 = {
    (*_35) = (994213692_i32,);
    _30 = ((*_35).0,);
    match (*_35).0 {
    0 => bb9,
    1 => bb10,
    2 => bb29,
    3 => bb30,
    4 => bb31,
    5 => bb32,
    994213692 => bb34,
    _ => bb33
    }
    }
    bb29 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb30 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb31 = {
    _4 = _3 | _3;
    _2 = core::ptr::addr_of!(RET);
    (*_2) = (-128565224406110993414640683111962476791_i128) + (-71649307932052981839398215798690652408_i128);
    (*_2) = (-113747491449831848799228925007081871623_i128) - 91160771587602920482275882818540924190_i128;
    (*_2) = 120657341903157825614582691377048899630_i128;
    _4 = _3 >= _3;
    (*_2) = !(-86224505137612090183376804044213092275_i128);
    _7 = 9223372036854775807_isize << _5;
    (*_2) = (-95533486746737025784135269358088987661_i128);
    Goto(bb2)
    }
    bb32 = {
    _12 = (-113_i8);
    (*_2) = 7548194854090433395437666770890834079_i128 ^ (-80140698319027346555451392372870504371_i128);
    (*_2) = 125358242098437152322234052978604871949_i128 | 91033507695184313819353515052761601947_i128;
    match _12 {
    0 => bb1,
    1 => bb12,
    2 => bb13,
    3 => bb14,
    4 => bb15,
    5 => bb16,
    340282366920938463463374607431768211343 => bb18,
    _ => bb17
    }
    }
    bb33 = {
    (*_2) = 52716233276821674184935486325184936676_i128 ^ (-5574202953978201016223577905765277883_i128);
    _3 = (*_2) == (*_2);
    _7 = 105_isize << (*_2);
    _10 = _8 as u8;
    (*_2) = 23530644156338846883007917519448485818_i128;
    (*_2) = !35208017405275113786954496093223767758_i128;
    (*_2) = -72616132945101777210972566152314274193_i128;
    (*_2) = 3058172853184763041806794006442205082_i128 + (-65313172903268870432171048628843787360_i128);
    _13 = _8 - _8;
    _11 = _13 as f32;
    (*_2) = 161305717128975318705142471240184822580_i128;
    (*_2) = !(-149012665892844760896073175438935946333_i128);
    (*_2) = (-53182159443334679818634456532964243689_i128);
    _12 = 29_i8 * (-81_i8);
    _1 = core::ptr::addr_of_mut!(_14);
    (*_2) = 101246014241259091083115393094856354915_i128 | 135541057173824810272912248132233030767_i128;
    (*_2) = 8178239077588443757247110825186762379_i128;
    _16 = _7 >> (*_2);
    _4 = _3;
    _17.0 = 264007067429299173173617027629590540579_u128;
    (*_2) = 36436184765003311634342363985612828932_i128 | 68690621504502440361791557081491919987_i128;
    (*_2) = -127349187990786763568167197188522866999_i128;
    (*_2) = 44502126460197774261117045558202933439_i128 * 116811336849124692338802132770160973913_i128;
    Goto(bb3)
    }
    bb34 = {
    _17 = _19.2;
    _25 = _16;
    (*_35).0 = _30.0;
    (*_2) = (-3145063767223563198765956830214140872_i128) + (-78371340988367553102733618438077477308_i128);
    (*_35) = (_30.0,);
    _11 = _26 - _26;
    _2 = core::ptr::addr_of!((*_2));
    _33 = -_13;
    _35 = &mut _30;
    (*_35).0 = 2315205106353265160_i64 as i32;
    (*_29) = _10 | _10;
    (*_35) = ((-187934618_i32),);
    _41.2.0 = _19.2.0 + _17.0;
    (*_2) = (-94164483861507706230982930897016952101_i128) * (-14418875543344276540159996480975383522_i128);
    _41.2.0 = !_17.0;
    (*_2) = (-132173724478729254459168813119585526274_i128);
    (*_2) = _5 as i128;
    (*_35) = (517743218_i32,);
    (*_35).0 = 1874770495_i32 << (*_29);
    RET = 169853866878685592713530458934333279156_i128;
    (*_2) = 10788581573641365482456226472792519726_i128 << (*_29);
    _39 = core::ptr::addr_of_mut!((*_35).0);
    (*_35) = ((-1017776882_i32),);
    _37 = _13 - _8;
    Goto(bb35)
    }
    bb35 = {

    Return()
    }
    }
}
#[inline(never)]

pub fn fn15(mut arg: bool) -> i128 {
    let _9 = !arg;
    let _12 = _9 as u8;

    let _18 = _12 as usize;
    dump_var(
        15_usize,
        18_usize,
        (_18),
        0xff_usize,
        (arg as u8),
        9_usize,
        (_9 as u8),
        12_usize,
        _12,
    );

    return 0;
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: isize) -> u8 {
    mir! {
    type RET = u8;
    let _2: &'static Adt35;
    let _3: &'static mut u8;
    let _4: (i32,);
    let _5: u32;
    let _6: *mut Adt42;
    let _7: bool;
    let _8: *const i128;
    let _9: *mut i32;
    let _10: bool;
    let _11: i128;
    let _12: i128;
    let _13: u128;
    let _14: [u64; 7];
    let _15: f32;
    let _16: *const &'static [isize; 3];
    let _17: isize;
    let _18: Adt58;
    let _19: (Adt32, Adt45, [i8; 6]);
    let _20: isize;
    let _21: *mut *mut *mut &'static (u128,);
    let _22: u16;
    let _23: *mut &'static (u128,);
    let _24: u64;
    let _25: *const i32;
    let _26: *mut Adt45;
    let _27: Adt58;
    let _28: *mut Adt42;
    let _29: [u64; 7];
    let _30: [u8; 1];
    let _31: i32;
    let _32: f32;
    let _33: &'static mut (i32,);
    let _34: isize;
    let _35: [i32; 7];
    let _36: isize;
    let _37: [u64; 7];
    let _38: bool;
    let _39: i64;
    let _40: i8;
    let _41: &'static &'static mut [isize; 3];
    let _42: u64;
    let _43: *const &'static mut (i32,);
    let _44: *mut i32;
    let _45: char;
    let _46: *const i16;
    let _47: char;
    let _48: *const &'static [isize; 3];
    let _49: char;
    let _50: [i8; 3];
    let _51: *const i16;
    let _52: *mut *mut &'static (u128,);
    let _53: [u128; 2];
    let _54: *const Adt32;
    let _55: Adt45;
    let _56: f64;
    let _57: u16;
    let _58: *mut Adt42;
    let _59: f64;
    let _60: &'static mut [isize; 3];
    let _61: *mut i16;
    let _62: isize;
    let _63: f32;
    let _64: i8;
    let _65: *const i32;
    let _66: f32;
    let _67: &'static (f32, &'static mut (i32,));
    let _68: Adt58;
    let _69: ([u128; 8], (char,));
    let _70: *mut *mut *mut &'static (u128,);
    let _71: usize;
    let _72: bool;
    let _73: *mut i32;
    let _74: *const i32;
    let _75: *mut bool;
    let _76: bool;
    let _77: &'static *mut i16;
    let _78: *const i16;
    let _79: *const i128;
    let _80: f32;
    let _81: &'static u64;
    let _82: u8;
    let _83: &'static (f32, &'static mut (i32,));
    let _84: ();
    let _85: ();
    {
    RET = 71_u8;
    _1 = 59915191635682808207606525666665712422_i128 as isize;
    _1 = (-9223372036854775808_isize);
    RET = 196_u8 + 177_u8;
    _1 = (-9223372036854775808_isize);
    _1 = 85_isize;
    _1 = 16_isize;
    _1 = (-9223372036854775808_isize);
    _1 = -(-57_isize);
    _1 = (-9223372036854775808_isize) >> RET;
    _3 = &mut RET;
    (*_3) = 146_u8;
    (*_3) = 7_usize as u8;
    (*_3) = !111_u8;
    (*_3) = 45_u8 - 188_u8;
    (*_3) = 26_u8 ^ 14_u8;
    (*_3) = 48_u8 | 138_u8;
    _1 = !15_isize;
    (*_3) = 203_u8;
    (*_3) = 141_u8 ^ 31_u8;
    (*_3) = !40_u8;
    (*_3) = !171_u8;
    (*_3) = !187_u8;
    Goto(bb1)
    }
    bb1 = {
    _4.0 = -(-318951455_i32);
    (*_3) = 34606578952672733535295138255900114240_u128 as u8;
    (*_3) = !202_u8;
    (*_3) = 99_u8;
    _5 = 3218344843_u32 - 2642342730_u32;
    (*_3) = 69_u8;
    (*_3) = !22_u8;
    (*_3) = 89_u8 + 8_u8;
    (*_3) = 92_u8 * 206_u8;
    _4 = (1999648345_i32,);
    (*_3) = 159_u8;
    (*_3) = 35_u8 & 146_u8;
    (*_3) = 33_u8 << _5;
    _4 = ((-1204980524_i32),);
    _4.0 = -2079684789_i32;
    (*_3) = 11_u8 << _4.0;
    (*_3) = 250_u8;
    (*_3) = 17_u8;
    (*_3) = !112_u8;
    (*_3) = 185_u8 - 50_u8;
    _4 = ((-133398477_i32),);
    (*_3) = 63_u8 - 47_u8;
    (*_3) = 59_u8 ^ 32_u8;
    _7 = false;
    match _4.0 {
    340282366920938463463374607431634812979 => bb3,
    _ => bb2
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    (*_3) = 221_u8 << _1;
    (*_3) = 74_u8 << _5;
    (*_3) = _7 as u8;
    _4 = (1713348330_i32,);
    (*_3) = !155_u8;
    (*_3) = 142_u8 >> _5;
    _13 = 87859932403486501102746584681542305188_u128 | 98672534859137131680042021717631282924_u128;
    _11 = (*_3) as i128;
    _7 = (*_3) == (*_3);
    (*_3) = 123_u8;
    _8 = core::ptr::addr_of!(_11);
    (*_8) = (-80549054957192751036939715875400285756_i128) - (-159160124178985088540151020932899475547_i128);
    (*_3) = 72_u8 + 97_u8;
    (*_3) = 90_u8;
    (*_3) = !157_u8;
    (*_8) = -162588908411440287094807995059920620882_i128;
    (*_3) = 44_u8 + 55_u8;
    (*_3) = 8939974613043228177_usize as u8;
    (*_3) = _7 as u8;
    (*_3) = 206_u8;
    match (*_3) {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    206 => bb10,
    _ => bb9
    }
    }
    bb4 = {
    Return()
    }
    bb5 = {
    _4.0 = -(-318951455_i32);
    (*_3) = 34606578952672733535295138255900114240_u128 as u8;
    (*_3) = !202_u8;
    (*_3) = 99_u8;
    _5 = 3218344843_u32 - 2642342730_u32;
    (*_3) = 69_u8;
    (*_3) = !22_u8;
    (*_3) = 89_u8 + 8_u8;
    (*_3) = 92_u8 * 206_u8;
    _4 = (1999648345_i32,);
    (*_3) = 159_u8;
    (*_3) = 35_u8 & 146_u8;
    (*_3) = 33_u8 << _5;
    _4 = ((-1204980524_i32),);
    _4.0 = -2079684789_i32;
    (*_3) = 11_u8 << _4.0;
    (*_3) = 250_u8;
    (*_3) = 17_u8;
    (*_3) = !112_u8;
    (*_3) = 185_u8 - 50_u8;
    _4 = ((-133398477_i32),);
    (*_3) = 63_u8 - 47_u8;
    (*_3) = 59_u8 ^ 32_u8;
    _7 = false;
    match _4.0 {
    340282366920938463463374607431634812979 => bb3,
    _ => bb2
    }
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    (*_3) = (*_8) as u8;
    _17 = _1 - _1;
    (*_3) = (*_8) as u8;
    (*_3) = (-3159028163229782837_i64) as u8;
    (*_8) = !54359130247599522383468566037766474256_i128;
    (*_3) = 75_u8 << (*_8);
    _9 = core::ptr::addr_of_mut!(_4.0);
    (*_3) = 229_u8 << (*_9);
    (*_8) = (-5864357498000401081796744907499883112_i128);
    (*_9) = (-468752383_i32);
    (*_8) = 38489693999843585326598674281634837682_i128 ^ (-133367924716123783916647828328870943036_i128);
    (*_3) = 192_u8 * 4_u8;
    (*_8) = 48373_u16 as i128;
    _11 = (-97849048742906401250447073880962881647_i128);
    (*_3) = 238_u8 * 144_u8;
    (*_8) = -20684920601561872158962200452061774239_i128;
    (*_8) = 138155986789016366877548548853241395408_i128 + (-96041505166958595531556503646559851359_i128);
    _4 = ((-660210490_i32),);
    (*_3) = !32_u8;
    (*_3) = _13 as u8;
    match (*_9) {
    0 => bb7,
    1 => bb9,
    340282366920938463463374607431108000966 => bb11,
    _ => bb8
    }
    }
    bb11 = {
    (*_9) = 606517412_i32 & (-1035938664_i32);
    (*_9) = !1223791564_i32;
    (*_8) = 48742028433490528760775507245083346274_i128 << (*_3);
    _24 = !787136561876077657_u64;
    (*_9) = 635484534_i32;
    (*_8) = _7 as i128;
    (*_8) = 19882568661849856333874179953732505172_i128 + 67787534857216453177162796043809562873_i128;
    (*_8) = (-140154653212048636143458531101527450397_i128) << (*_3);
    (*_3) = 55_u8 ^ 164_u8;
    _20 = _17;
    _4.0 = _1 as i32;
    _24 = 13332066093647601903_u64;
    (*_9) = 1_usize as i32;
    _4.0 = 1804185739_i32 + (-1371227948_i32);
    (*_9) = -919844676_i32;
    _10 = !_7;
    _7 = _10;
    (*_8) = !118272796078052438457742434208601097134_i128;
    _26 = core::ptr::addr_of_mut!(_19.1);
    (*_3) = 124_u8 ^ 162_u8;
    _22 = !62379_u16;
    (*_3) = !14_u8;
    (*_3) = 36_u8 - 90_u8;
    Goto(bb12)
    }
    bb12 = {
    _22 = 19928_u16 & 25405_u16;
    (*_9) = !(-1515994498_i32);
    (*_3) = 111_u8 - 190_u8;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    Call((*_3) = core::intrinsics::bswap(120_u8), ReturnTo(bb13), UnwindUnreachable())
    }
    bb13 = {
    _22 = _1 as u16;
    _8 = core::ptr::addr_of!((*_8));
    _9 = core::ptr::addr_of_mut!((*_9));
    _25 = core::ptr::addr_of!(_4.0);
    (*_9) = (-783174233_i32) >> (*_8);
    (*_8) = (-42591403171153640793795456541580457067_i128) >> (*_9);
    _8 = core::ptr::addr_of!((*_8));
    (*_8) = 7960872177686322356701323976454240974_i128 + (-90986796535029923827554581289983634895_i128);
    (*_3) = 81_u8 << (*_8);
    (*_9) = -1571278312_i32;
    match _24 {
    0 => bb11,
    1 => bb2,
    13332066093647601903 => bb14,
    _ => bb7
    }
    }
    bb14 = {
    (*_8) = !(-121412264265828296455124858134225821588_i128);
    (*_3) = _22 as u8;
    _31 = (*_9);
    (*_8) = 129634998080540586342710445903092975703_i128;
    (*_9) = _31;
    _12 = (*_8);
    (*_3) = 176_u8 ^ 211_u8;
    _19.2 = [115_i8,98_i8,103_i8,13_i8,(-6_i8),23_i8];
    _29 = [_24,_24,_24,_24,_24,_24,_24];
    _26 = core::ptr::addr_of_mut!((*_26));
    (*_3) = 221_u8 << _12;
    _35 = [(*_9),_4.0,(*_9),(*_9),(*_9),_4.0,(*_9)];
    (*_3) = 72_u8 | 253_u8;
    (*_9) = _31 & _31;
    (*_9) = -_31;
    match (*_8) {
    0 => bb5,
    1 => bb8,
    2 => bb10,
    3 => bb15,
    129634998080540586342710445903092975703 => bb17,
    _ => bb16
    }
    }
    bb15 = {
    Return()
    }
    bb16 = {
    _4.0 = -(-318951455_i32);
    (*_3) = 34606578952672733535295138255900114240_u128 as u8;
    (*_3) = !202_u8;
    (*_3) = 99_u8;
    _5 = 3218344843_u32 - 2642342730_u32;
    (*_3) = 69_u8;
    (*_3) = !22_u8;
    (*_3) = 89_u8 + 8_u8;
    (*_3) = 92_u8 * 206_u8;
    _4 = (1999648345_i32,);
    (*_3) = 159_u8;
    (*_3) = 35_u8 & 146_u8;
    (*_3) = 33_u8 << _5;
    _4 = ((-1204980524_i32),);
    _4.0 = -2079684789_i32;
    (*_3) = 11_u8 << _4.0;
    (*_3) = 250_u8;
    (*_3) = 17_u8;
    (*_3) = !112_u8;
    (*_3) = 185_u8 - 50_u8;
    _4 = ((-133398477_i32),);
    (*_3) = 63_u8 - 47_u8;
    (*_3) = 59_u8 ^ 32_u8;
    _7 = false;
    match _4.0 {
    340282366920938463463374607431634812979 => bb3,
    _ => bb2
    }
    }
    bb17 = {
    _25 = core::ptr::addr_of!((*_9));
    (*_8) = _12;
    (*_9) = _31;
    (*_9) = _31 ^ _31;
    (*_3) = 109_u8 | 228_u8;
    (*_3) = !211_u8;
    _8 = core::ptr::addr_of!((*_8));
    _24 = 11853042536500451870_u64 ^ 11336205638801586420_u64;
    (*_3) = 30_u8 >> (*_9);
    (*_9) = _31 ^ _31;
    _24 = !11468942550008969289_u64;
    _37 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = _13 as i128;
    (*_3) = 42_u8 >> (*_8);
    (*_8) = _7 as i128;
    (*_8) = (*_9) as i128;
    _10 = _7 ^ _7;
    (*_8) = _12 | _12;
    (*_3) = !6_u8;
    (*_9) = '\u{9e8bd}' as i32;
    _8 = core::ptr::addr_of!(_11);
    (*_3) = 251_u8;
    _30 = [(*_3)];
    (*_9) = _31;
    (*_8) = 93_i8 as i128;
    match (*_3) {
    0 => bb16,
    1 => bb7,
    251 => bb18,
    _ => bb8
    }
    }
    bb18 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb19 = {
    Return()
    }
    bb20 = {
    (*_8) = _12 + _12;
    (*_8) = _12;
    (*_8) = -_12;
    match _12 {
    129634998080540586342710445903092975703 => bb22,
    _ => bb21
    }
    }
    bb21 = {
    Return()
    }
    bb22 = {
    _32 = (-8954_i16) as f32;
    _33 = &mut _4;
    (*_33) = (_31,);
    (*_33) = (_31,);
    _45 = '\u{8896e}';
    _8 = core::ptr::addr_of!((*_8));
    (*_33).0 = !_31;
    _42 = _31 as u64;
    (*_33).0 = _31;
    Goto(bb23)
    }
    bb23 = {
    (*_33).0 = _31;
    (*_33).0 = _31 << (*_3);
    (*_8) = _12;
    (*_33).0 = _31;
    (*_33).0 = !_31;
    (*_8) = _12 - _12;
    (*_33) = (_31,);
    (*_3) = 246_u8 << (*_33).0;
    _8 = core::ptr::addr_of!((*_8));
    _50 = [100_i8,(-42_i8),73_i8];
    (*_33) = (_31,);
    _24 = _42;
    (*_8) = -_12;
    _14 = _37;
    (*_8) = _12 >> _20;
    _37 = [_42,_24,_42,_42,_42,_24,_24];
    match _12 {
    0 => bb18,
    1 => bb24,
    2 => bb25,
    129634998080540586342710445903092975703 => bb27,
    _ => bb26
    }
    }
    bb24 = {
    _4.0 = -(-318951455_i32);
    (*_3) = 34606578952672733535295138255900114240_u128 as u8;
    (*_3) = !202_u8;
    (*_3) = 99_u8;
    _5 = 3218344843_u32 - 2642342730_u32;
    (*_3) = 69_u8;
    (*_3) = !22_u8;
    (*_3) = 89_u8 + 8_u8;
    (*_3) = 92_u8 * 206_u8;
    _4 = (1999648345_i32,);
    (*_3) = 159_u8;
    (*_3) = 35_u8 & 146_u8;
    (*_3) = 33_u8 << _5;
    _4 = ((-1204980524_i32),);
    _4.0 = -2079684789_i32;
    (*_3) = 11_u8 << _4.0;
    (*_3) = 250_u8;
    (*_3) = 17_u8;
    (*_3) = !112_u8;
    (*_3) = 185_u8 - 50_u8;
    _4 = ((-133398477_i32),);
    (*_3) = 63_u8 - 47_u8;
    (*_3) = 59_u8 ^ 32_u8;
    _7 = false;
    match _4.0 {
    340282366920938463463374607431634812979 => bb3,
    _ => bb2
    }
    }
    bb25 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb26 = {
    _25 = core::ptr::addr_of!((*_9));
    (*_8) = _12;
    (*_9) = _31;
    (*_9) = _31 ^ _31;
    (*_3) = 109_u8 | 228_u8;
    (*_3) = !211_u8;
    _8 = core::ptr::addr_of!((*_8));
    _24 = 11853042536500451870_u64 ^ 11336205638801586420_u64;
    (*_3) = 30_u8 >> (*_9);
    (*_9) = _31 ^ _31;
    _24 = !11468942550008969289_u64;
    _37 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = _13 as i128;
    (*_3) = 42_u8 >> (*_8);
    (*_8) = _7 as i128;
    (*_8) = (*_9) as i128;
    _10 = _7 ^ _7;
    (*_8) = _12 | _12;
    (*_3) = !6_u8;
    (*_9) = '\u{9e8bd}' as i32;
    _8 = core::ptr::addr_of!(_11);
    (*_3) = 251_u8;
    _30 = [(*_3)];
    (*_9) = _31;
    (*_8) = 93_i8 as i128;
    match (*_3) {
    0 => bb16,
    1 => bb7,
    251 => bb18,
    _ => bb8
    }
    }
    bb27 = {
    _42 = _24 | _24;
    _53 = [_13,_13];
    (*_33).0 = _31 >> (*_8);
    _15 = _32 * _32;
    (*_8) = !_12;
    _35 = [(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0];
    _1 = -_20;
    _52 = core::ptr::addr_of_mut!(_23);
    (*_8) = _12;
    _7 = (*_33).0 < (*_33).0;
    (*_33) = (_31,);
    (*_8) = _10 as i128;
    (*_33) = (_31,);
    (*_8) = _12 ^ _12;
    _44 = Move(_9);
    (*_33).0 = _31;
    (*_8) = 10941875891174055805_usize as i128;
    _15 = _32 + _32;
    match _12 {
    129634998080540586342710445903092975703 => bb28,
    _ => bb13
    }
    }
    bb28 = {
    (*_3) = _1 as u8;
    (*_33) = (_31,);
    (*_3) = 231_u8 >> _12;
    _50 = [(-102_i8),40_i8,(-128_i8)];
    (*_33).0 = _31 * _31;
    (*_8) = _12;
    (*_8) = -_12;
    _49 = _45;
    _42 = _24 ^ _24;
    (*_33).0 = _31 | _31;
    (*_33).0 = _31 & _31;
    match _12 {
    0 => bb12,
    1 => bb13,
    2 => bb23,
    3 => bb24,
    4 => bb5,
    129634998080540586342710445903092975703 => bb30,
    _ => bb29
    }
    }
    bb29 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb30 = {
    _34 = _20;
    (*_8) = _12;
    (*_33).0 = 4087380223124170540_i64 as i32;
    (*_33).0 = (*_3) as i32;
    (*_3) = 231_u8 & 54_u8;
    Goto(bb31)
    }
    bb31 = {
    (*_33).0 = _31 >> (*_3);
    (*_33).0 = 2510_i16 as i32;
    _39 = (-8275579806880088625_i64) ^ (-4991290183685207028_i64);
    (*_33) = (_31,);
    (*_33) = (_31,);
    (*_8) = _12;
    _56 = _1 as f64;
    (*_33) = (_31,);
    (*_8) = _12 - _12;
    (*_26) = Adt45::Variant2 { fld0: _56,fld1: (*_8) };
    (*_33) = (_31,);
    _44 = core::ptr::addr_of_mut!((*_33).0);
    _14 = [_42,_42,_42,_42,_42,_24,_24];
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) * (*_8);
    (*_33) = (_31,);
    _19.2 = [(-100_i8),11_i8,(-79_i8),(-21_i8),10_i8,32_i8];
    _57 = _22 | _22;
    (*_3) = 191_u8 ^ 90_u8;
    _44 = core::ptr::addr_of_mut!((*_33).0);
    _17 = _1 * _34;
    _45 = _49;
    _47 = _49;
    (*_33).0 = _31;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = -_56;
    match _12 {
    0 => bb32,
    1 => bb33,
    2 => bb34,
    3 => bb35,
    4 => bb36,
    5 => bb37,
    129634998080540586342710445903092975703 => bb39,
    _ => bb38
    }
    }
    bb32 = {
    Return()
    }
    bb33 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb34 = {
    (*_9) = 606517412_i32 & (-1035938664_i32);
    (*_9) = !1223791564_i32;
    (*_8) = 48742028433490528760775507245083346274_i128 << (*_3);
    _24 = !787136561876077657_u64;
    (*_9) = 635484534_i32;
    (*_8) = _7 as i128;
    (*_8) = 19882568661849856333874179953732505172_i128 + 67787534857216453177162796043809562873_i128;
    (*_8) = (-140154653212048636143458531101527450397_i128) << (*_3);
    (*_3) = 55_u8 ^ 164_u8;
    _20 = _17;
    _4.0 = _1 as i32;
    _24 = 13332066093647601903_u64;
    (*_9) = 1_usize as i32;
    _4.0 = 1804185739_i32 + (-1371227948_i32);
    (*_9) = -919844676_i32;
    _10 = !_7;
    _7 = _10;
    (*_8) = !118272796078052438457742434208601097134_i128;
    _26 = core::ptr::addr_of_mut!(_19.1);
    (*_3) = 124_u8 ^ 162_u8;
    _22 = !62379_u16;
    (*_3) = !14_u8;
    (*_3) = 36_u8 - 90_u8;
    Goto(bb12)
    }
    bb35 = {
    (*_3) = 221_u8 << _1;
    (*_3) = 74_u8 << _5;
    (*_3) = _7 as u8;
    _4 = (1713348330_i32,);
    (*_3) = !155_u8;
    (*_3) = 142_u8 >> _5;
    _13 = 87859932403486501102746584681542305188_u128 | 98672534859137131680042021717631282924_u128;
    _11 = (*_3) as i128;
    _7 = (*_3) == (*_3);
    (*_3) = 123_u8;
    _8 = core::ptr::addr_of!(_11);
    (*_8) = (-80549054957192751036939715875400285756_i128) - (-159160124178985088540151020932899475547_i128);
    (*_3) = 72_u8 + 97_u8;
    (*_3) = 90_u8;
    (*_3) = !157_u8;
    (*_8) = -162588908411440287094807995059920620882_i128;
    (*_3) = 44_u8 + 55_u8;
    (*_3) = 8939974613043228177_usize as u8;
    (*_3) = _7 as u8;
    (*_3) = 206_u8;
    match (*_3) {
    0 => bb4,
    1 => bb5,
    2 => bb6,
    3 => bb7,
    4 => bb8,
    206 => bb10,
    _ => bb9
    }
    }
    bb36 = {
    (*_8) = _12 + _12;
    (*_8) = _12;
    (*_8) = -_12;
    match _12 {
    129634998080540586342710445903092975703 => bb22,
    _ => bb21
    }
    }
    bb37 = {
    Return()
    }
    bb38 = {
    _4.0 = -(-318951455_i32);
    (*_3) = 34606578952672733535295138255900114240_u128 as u8;
    (*_3) = !202_u8;
    (*_3) = 99_u8;
    _5 = 3218344843_u32 - 2642342730_u32;
    (*_3) = 69_u8;
    (*_3) = !22_u8;
    (*_3) = 89_u8 + 8_u8;
    (*_3) = 92_u8 * 206_u8;
    _4 = (1999648345_i32,);
    (*_3) = 159_u8;
    (*_3) = 35_u8 & 146_u8;
    (*_3) = 33_u8 << _5;
    _4 = ((-1204980524_i32),);
    _4.0 = -2079684789_i32;
    (*_3) = 11_u8 << _4.0;
    (*_3) = 250_u8;
    (*_3) = 17_u8;
    (*_3) = !112_u8;
    (*_3) = 185_u8 - 50_u8;
    _4 = ((-133398477_i32),);
    (*_3) = 63_u8 - 47_u8;
    (*_3) = 59_u8 ^ 32_u8;
    _7 = false;
    match _4.0 {
    340282366920938463463374607431634812979 => bb3,
    _ => bb2
    }
    }
    bb39 = {
    _25 = core::ptr::addr_of!((*_33).0);
    place!(Field::<f64>(Variant((*_26), 2), 0)) = 6858_i16 as f64;
    place!(Field::<i128>(Variant(_19.1, 2), 1)) = (*_3) as i128;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 + _56;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _47 as i128;
    _62 = _42 as isize;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56;
    (*_33).0 = _31;
    (*_33).0 = (*_3) as i32;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 + _56;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 - _56;
    (*_33).0 = _31 ^ _31;
    _11 = Field::<i128>(Variant((*_26), 2), 1);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = -(*_8);
    (*_33) = (_31,);
    (*_3) = 183_u8 | 236_u8;
    match _12 {
    0 => bb40,
    1 => bb41,
    2 => bb42,
    129634998080540586342710445903092975703 => bb44,
    _ => bb43
    }
    }
    bb40 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb41 = {
    _25 = core::ptr::addr_of!((*_9));
    (*_8) = _12;
    (*_9) = _31;
    (*_9) = _31 ^ _31;
    (*_3) = 109_u8 | 228_u8;
    (*_3) = !211_u8;
    _8 = core::ptr::addr_of!((*_8));
    _24 = 11853042536500451870_u64 ^ 11336205638801586420_u64;
    (*_3) = 30_u8 >> (*_9);
    (*_9) = _31 ^ _31;
    _24 = !11468942550008969289_u64;
    _37 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = _13 as i128;
    (*_3) = 42_u8 >> (*_8);
    (*_8) = _7 as i128;
    (*_8) = (*_9) as i128;
    _10 = _7 ^ _7;
    (*_8) = _12 | _12;
    (*_3) = !6_u8;
    (*_9) = '\u{9e8bd}' as i32;
    _8 = core::ptr::addr_of!(_11);
    (*_3) = 251_u8;
    _30 = [(*_3)];
    (*_9) = _31;
    (*_8) = 93_i8 as i128;
    match (*_3) {
    0 => bb16,
    1 => bb7,
    251 => bb18,
    _ => bb8
    }
    }
    bb42 = {
    (*_3) = (*_8) as u8;
    _17 = _1 - _1;
    (*_3) = (*_8) as u8;
    (*_3) = (-3159028163229782837_i64) as u8;
    (*_8) = !54359130247599522383468566037766474256_i128;
    (*_3) = 75_u8 << (*_8);
    _9 = core::ptr::addr_of_mut!(_4.0);
    (*_3) = 229_u8 << (*_9);
    (*_8) = (-5864357498000401081796744907499883112_i128);
    (*_9) = (-468752383_i32);
    (*_8) = 38489693999843585326598674281634837682_i128 ^ (-133367924716123783916647828328870943036_i128);
    (*_3) = 192_u8 * 4_u8;
    (*_8) = 48373_u16 as i128;
    _11 = (-97849048742906401250447073880962881647_i128);
    (*_3) = 238_u8 * 144_u8;
    (*_8) = -20684920601561872158962200452061774239_i128;
    (*_8) = 138155986789016366877548548853241395408_i128 + (-96041505166958595531556503646559851359_i128);
    _4 = ((-660210490_i32),);
    (*_3) = !32_u8;
    (*_3) = _13 as u8;
    match (*_9) {
    0 => bb7,
    1 => bb9,
    340282366920938463463374607431108000966 => bb11,
    _ => bb8
    }
    }
    bb43 = {
    _42 = _24 | _24;
    _53 = [_13,_13];
    (*_33).0 = _31 >> (*_8);
    _15 = _32 * _32;
    (*_8) = !_12;
    _35 = [(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0,(*_33).0];
    _1 = -_20;
    _52 = core::ptr::addr_of_mut!(_23);
    (*_8) = _12;
    _7 = (*_33).0 < (*_33).0;
    (*_33) = (_31,);
    (*_8) = _10 as i128;
    (*_33) = (_31,);
    (*_8) = _12 ^ _12;
    _44 = Move(_9);
    (*_33).0 = _31;
    (*_8) = 10941875891174055805_usize as i128;
    _15 = _32 + _32;
    match _12 {
    129634998080540586342710445903092975703 => bb28,
    _ => bb13
    }
    }
    bb44 = {
    (*_33).0 = !_31;
    (*_33) = (_31,);
    _63 = (*_8) as f32;
    _15 = _32 * _63;
    (*_33) = (_31,);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) | (*_8);
    (*_3) = _42 as u8;
    (*_3) = !137_u8;
    _17 = _24 as isize;
    _62 = _7 as isize;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = Field::<i128>(Variant((*_26), 2), 1) as f64;
    Call(place!(Field::<f64>(Variant((*_26), 2), 0)) = core::intrinsics::transmute(_34), ReturnTo(bb45), UnwindUnreachable())
    }
    bb45 = {
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8);
    (*_33).0 = _31 - _31;
    _63 = Field::<f64>(Variant((*_26), 2), 0) as f32;
    (*_3) = 246_u8;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) | (*_8);
    (*_33) = (_31,);
    _66 = _15;
    (*_8) = Field::<i128>(Variant((*_26), 2), 1) << _1;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = (-22422_i16) as f64;
    _49 = _47;
    (*_33) = (_31,);
    (*_8) = Field::<i128>(Variant((*_26), 2), 1) - Field::<i128>(Variant((*_26), 2), 1);
    place!(Field::<f64>(Variant((*_26), 2), 0)) = 21_i8 as f64;
    (*_33).0 = _31;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = (*_33).0 as f64;
    _9 = core::ptr::addr_of_mut!((*_33).0);
    _30 = [(*_3)];
    _65 = core::ptr::addr_of!((*_33).0);
    (*_65) = -_31;
    _22 = _57 ^ _57;
    (*_65) = _31 | _31;
    (*_8) = (-18792_i16) as i128;
    match (*_3) {
    0 => bb29,
    1 => bb38,
    2 => bb18,
    3 => bb41,
    246 => bb46,
    _ => bb6
    }
    }
    bb46 = {
    _63 = -_32;
    _50 = [(-25_i8),97_i8,84_i8];
    _53 = [_13,_13];
    (*_33) = (_31,);
    (*_3) = 59_u8 >> (*_8);
    (*_33) = (_31,);
    Goto(bb47)
    }
    bb47 = {
    (*_33).0 = _49 as i32;
    (*_8) = Field::<i128>(Variant((*_26), 2), 1) + Field::<i128>(Variant((*_26), 2), 1);
    (*_33).0 = _31 | _31;
    _43 = core::ptr::addr_of!(_33);
    (*_33) = (_31,);
    (*_3) = 4_u8 * 117_u8;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = -(*_8);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = Field::<f64>(Variant((*_26), 2), 0) as i128;
    _36 = _7 as isize;
    _65 = core::ptr::addr_of!((*_33).0);
    _54 = core::ptr::addr_of!(_19.0);
    _76 = _7 | _10;
    _66 = -_15;
    (*_33).0 = _31 & _31;
    _19.2 = [(-51_i8),(-88_i8),(-63_i8),10_i8,45_i8,48_i8];
    (*_3) = _39 as u8;
    _40 = 48_i8;
    (*_33).0 = !_31;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _42 as f64;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _36 as f64;
    match _12 {
    0 => bb48,
    1 => bb49,
    2 => bb50,
    3 => bb51,
    129634998080540586342710445903092975703 => bb53,
    _ => bb52
    }
    }
    bb48 = {
    (*_9) = _31 | _31;
    _14 = [_24,_24,_24,_24,_24,_24,_24];
    (*_8) = !_12;
    (*_3) = !244_u8;
    (*_8) = _12 >> (*_3);
    (*_8) = _12 * _12;
    _7 = _10 | _10;
    (*_9) = _24 as i32;
    (*_8) = _12 * _12;
    (*_8) = _12;
    (*_9) = _31 | _31;
    _20 = _1 + _17;
    (*_8) = _12 + _12;
    (*_3) = _17 as u8;
    (*_9) = _10 as i32;
    _25 = core::ptr::addr_of!((*_9));
    (*_9) = _31;
    match _12 {
    0 => bb10,
    1 => bb2,
    2 => bb15,
    3 => bb12,
    4 => bb11,
    5 => bb9,
    6 => bb13,
    129634998080540586342710445903092975703 => bb20,
    _ => bb19
    }
    }
    bb49 = {
    (*_9) = 606517412_i32 & (-1035938664_i32);
    (*_9) = !1223791564_i32;
    (*_8) = 48742028433490528760775507245083346274_i128 << (*_3);
    _24 = !787136561876077657_u64;
    (*_9) = 635484534_i32;
    (*_8) = _7 as i128;
    (*_8) = 19882568661849856333874179953732505172_i128 + 67787534857216453177162796043809562873_i128;
    (*_8) = (-140154653212048636143458531101527450397_i128) << (*_3);
    (*_3) = 55_u8 ^ 164_u8;
    _20 = _17;
    _4.0 = _1 as i32;
    _24 = 13332066093647601903_u64;
    (*_9) = 1_usize as i32;
    _4.0 = 1804185739_i32 + (-1371227948_i32);
    (*_9) = -919844676_i32;
    _10 = !_7;
    _7 = _10;
    (*_8) = !118272796078052438457742434208601097134_i128;
    _26 = core::ptr::addr_of_mut!(_19.1);
    (*_3) = 124_u8 ^ 162_u8;
    _22 = !62379_u16;
    (*_3) = !14_u8;
    (*_3) = 36_u8 - 90_u8;
    Goto(bb12)
    }
    bb50 = {
    _34 = _20;
    (*_8) = _12;
    (*_33).0 = 4087380223124170540_i64 as i32;
    (*_33).0 = (*_3) as i32;
    (*_3) = 231_u8 & 54_u8;
    Goto(bb31)
    }
    bb51 = {
    _25 = core::ptr::addr_of!((*_33).0);
    place!(Field::<f64>(Variant((*_26), 2), 0)) = 6858_i16 as f64;
    place!(Field::<i128>(Variant(_19.1, 2), 1)) = (*_3) as i128;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 + _56;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _47 as i128;
    _62 = _42 as isize;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56;
    (*_33).0 = _31;
    (*_33).0 = (*_3) as i32;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 + _56;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _56 - _56;
    (*_33).0 = _31 ^ _31;
    _11 = Field::<i128>(Variant((*_26), 2), 1);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = -(*_8);
    (*_33) = (_31,);
    (*_3) = 183_u8 | 236_u8;
    match _12 {
    0 => bb40,
    1 => bb41,
    2 => bb42,
    129634998080540586342710445903092975703 => bb44,
    _ => bb43
    }
    }
    bb52 = {
    (*_33).0 = _31;
    (*_33).0 = _31 << (*_3);
    (*_8) = _12;
    (*_33).0 = _31;
    (*_33).0 = !_31;
    (*_8) = _12 - _12;
    (*_33) = (_31,);
    (*_3) = 246_u8 << (*_33).0;
    _8 = core::ptr::addr_of!((*_8));
    _50 = [100_i8,(-42_i8),73_i8];
    (*_33) = (_31,);
    _24 = _42;
    (*_8) = -_12;
    _14 = _37;
    (*_8) = _12 >> _20;
    _37 = [_42,_24,_42,_42,_42,_24,_24];
    match _12 {
    0 => bb18,
    1 => bb24,
    2 => bb25,
    129634998080540586342710445903092975703 => bb27,
    _ => bb26
    }
    }
    bb53 = {
    place!(Field::<f64>(Variant((*_26), 2), 0)) = -_56;
    (*_33).0 = -_31;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) ^ (*_8);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) >> _17;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_8) << (*_8);
    _79 = core::ptr::addr_of!((*_8));
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_79) + (*_79);
    _75 = core::ptr::addr_of_mut!(_72);
    (*_33).0 = _31 & _31;
    _73 = core::ptr::addr_of_mut!((*_33).0);
    (*_8) = (*_3) as i128;
    _11 = Field::<i128>(Variant((*_26), 2), 1) * Field::<i128>(Variant((*_26), 2), 1);
    (*_33).0 = _31 - _31;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = -_56;
    (*_33) = (_31,);
    (*_75) = !_76;
    _79 = core::ptr::addr_of!((*_8));
    (*_3) = !204_u8;
    (*_8) = Field::<i128>(Variant((*_26), 2), 1) & Field::<i128>(Variant((*_26), 2), 1);
    (*_33) = (_31,);
    place!(Field::<i128>(Variant(_19.1, 2), 1)) = -(*_8);
    _25 = Move(_65);
    Goto(bb54)
    }
    bb54 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(
    mut _1: *mut *mut &'static (u128,),
    mut _2: i128,
    mut _3: *const &'static mut (i32,),
    mut _4: *mut *mut *mut &'static (u128,),
    mut _5: *const &'static mut (i32,),
    mut _6: *mut i32,
    mut _7: *const &'static mut (i32,),
    mut _8: i128,
    mut _9: char,
    mut _10: *const i128,
    mut _11: Adt45,
) -> char {
    mir! {
    type RET = char;
    let _12: char;
    let _13: &'static mut [isize; 3];
    let _14: &'static *mut i16;
    let _15: ([u128; 8], (char,));
    let _16: usize;
    let _17: isize;
    let _18: *const i128;
    let _19: [u64; 8];
    let _20: *const i128;
    let _21: bool;
    let _22: f32;
    let _23: char;
    let _24: u64;
    let _25: [usize; 6];
    let _26: u16;
    let _27: i64;
    let _28: *const i128;
    let _29: &'static mut (i32,);
    let _30: &'static [isize; 3];
    let _31: f64;
    let _32: [i32; 7];
    let _33: *const &'static [isize; 3];
    let _34: f32;
    let _35: char;
    let _36: u128;
    let _37: i32;
    let _38: char;
    let _39: *const Adt32;
    let _40: u64;
    let _41: &'static *mut i16;
    let _42: *mut i16;
    let _43: [u8; 1];
    let _44: i16;
    let _45: *mut Adt45;
    let _46: &'static mut [isize; 3];
    let _47: Adt74;
    let _48: [u64; 8];
    let _49: (u16, Adt27, [isize; 3], Adt35);
    let _50: bool;
    let _51: [i8; 6];
    let _52: *mut i32;
    let _53: char;
    let _54: [i16; 2];
    let _55: bool;
    let _56: *mut i32;
    let _57: &'static mut [isize; 3];
    let _58: u16;
    let _59: &'static (u128,);
    let _60: &'static mut u8;
    let _61: isize;
    let _62: &'static [u128; 2];
    let _63: *const Adt32;
    let _64: *mut Adt42;
    let _65: Adt27;
    let _66: f64;
    let _67: *mut i16;
    let _68: &'static mut u8;
    let _69: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _70: *const &'static mut (i32,);
    let _71: [u128; 2];
    let _72: (u128,);
    let _73: (f32, &'static mut (i32,));
    let _74: bool;
    let _75: bool;
    let _76: &'static mut u8;
    let _77: *const &'static [isize; 3];
    let _78: f32;
    let _79: &'static mut (i32,);
    let _80: &'static u64;
    let _81: u16;
    let _82: &'static [u128; 2];
    let _83: bool;
    let _84: isize;
    let _85: bool;
    let _86: char;
    let _87: [u16; 1];
    let _88: u16;
    let _89: f32;
    let _90: bool;
    let _91: i8;
    let _92: [i16; 2];
    let _93: u128;
    let _94: (i64, *const [i8; 6]);
    let _95: Adt27;
    let _96: ();
    let _97: ();
    {
    _10 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_11, 2), 1)));
    (*_10) = (-2028367594436771546_i64) as i128;
    (*_10) = 3515462849_u32 as i128;
    _2 = 49868_u16 as i128;
    RET = _9;
    RET = _9;
    (*_10) = -_2;
    (*_10) = _2 + _2;
    (*_10) = !_2;
    (*_10) = _8;
    _15.1 = (RET,);
    Goto(bb1)
    }
    bb1 = {
    (*_10) = _8 + _2;
    (*_10) = (-6102553446682820380_i64) as i128;
    (*_10) = _8 * _2;
    _15.1.0 = _9;
    _15.1 = (RET,);
    (*_10) = 1_u16 as i128;
    _12 = _15.1.0;
    _15.0 = [63882258815024187683820007682931853679_u128,203095174414326426521024230177416171002_u128,255150496700614240498936238881866868007_u128,300374182888761846886400797754092412275_u128,246496096605074597611070845512613823230_u128,44614886532220925404578344436993268697_u128,149047670192903641130348864573502493984_u128,99548215497084811885810178418219148881_u128];
    _16 = 0_usize * 7_usize;
    (*_10) = (-950254710_i32) as i128;
    (*_10) = 2099081455_u32 as i128;
    _17 = 9223372036854775807_isize;
    _19 = [4249553630569595845_u64,3033973872169195410_u64,7033207137888319425_u64,693916537281700906_u64,17868264905810368085_u64,1724757430065955942_u64,17285761879919854124_u64,12504499250434096586_u64];
    (*_10) = !_2;
    (*_10) = 21433_u16 as i128;
    (*_10) = 60457_u16 as i128;
    (*_10) = -_8;
    (*_10) = 15095_i16 as i128;
    (*_10) = 3659786911_u32 as i128;
    (*_10) = _2 + _2;
    match _17 {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    9223372036854775807 => bb7,
    _ => bb6
    }
    }
    bb2 = {
    Return()
    }
    bb3 = {
    Return()
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb8 = {
    (*_20) = (*_10) ^ (*_18);
    (*_18) = (*_20) | _8;
    (*_10) = Field::<f64>(Variant(_11, 2), 0) as i128;
    _21 = !false;
    (*_10) = (*_20);
    Call((*_10) = core::intrinsics::transmute((*_20)), ReturnTo(bb9), UnwindUnreachable())
    }
    bb9 = {
    (*_10) = (*_20) << (*_20);
    _21 = (*_20) > (*_10);
    (*_10) = (*_20) ^ (*_20);
    _3 = Move(_7);
    (*_20) = -(*_10);
    _5 = Move(_3);
    _7 = Move(_5);
    (*_20) = (*_10) - (*_10);
    (*_10) = 194_u8 as i128;
    (*_20) = (*_10) ^ (*_10);
    (*_20) = (*_10) ^ (*_10);
    (*_10) = 57194200633931789751717527383187303497_u128 as i128;
    (*_20) = _8 & (*_10);
    (*_10) = -(*_20);
    (*_10) = 11339015179482805360_u64 as i128;
    (*_20) = (*_10) | (*_10);
    (*_20) = 2930112308_u32 as i128;
    _26 = !28708_u16;
    _4 = core::ptr::addr_of_mut!(_1);
    (*_20) = (-31_i8) as i128;
    match _17 {
    0 => bb10,
    1 => bb11,
    2 => bb12,
    9223372036854775807 => bb14,
    _ => bb13
    }
    }
    bb10 = {
    (*_20) = (*_10) ^ (*_18);
    (*_18) = (*_20) | _8;
    (*_10) = Field::<f64>(Variant(_11, 2), 0) as i128;
    _21 = !false;
    (*_10) = (*_20);
    Call((*_10) = core::intrinsics::transmute((*_20)), ReturnTo(bb9), UnwindUnreachable())
    }
    bb11 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb12 = {
    Return()
    }
    bb13 = {
    (*_10) = _8 + _2;
    (*_10) = (-6102553446682820380_i64) as i128;
    (*_10) = _8 * _2;
    _15.1.0 = _9;
    _15.1 = (RET,);
    (*_10) = 1_u16 as i128;
    _12 = _15.1.0;
    _15.0 = [63882258815024187683820007682931853679_u128,203095174414326426521024230177416171002_u128,255150496700614240498936238881866868007_u128,300374182888761846886400797754092412275_u128,246496096605074597611070845512613823230_u128,44614886532220925404578344436993268697_u128,149047670192903641130348864573502493984_u128,99548215497084811885810178418219148881_u128];
    _16 = 0_usize * 7_usize;
    (*_10) = (-950254710_i32) as i128;
    (*_10) = 2099081455_u32 as i128;
    _17 = 9223372036854775807_isize;
    _19 = [4249553630569595845_u64,3033973872169195410_u64,7033207137888319425_u64,693916537281700906_u64,17868264905810368085_u64,1724757430065955942_u64,17285761879919854124_u64,12504499250434096586_u64];
    (*_10) = !_2;
    (*_10) = 21433_u16 as i128;
    (*_10) = 60457_u16 as i128;
    (*_10) = -_8;
    (*_10) = 15095_i16 as i128;
    (*_10) = 3659786911_u32 as i128;
    (*_10) = _2 + _2;
    match _17 {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    9223372036854775807 => bb7,
    _ => bb6
    }
    }
    bb14 = {
    (*_10) = (*_20) << (*_20);
    (*_10) = (*_20) + (*_20);
    _27 = 4935131960377392457_i64 * (-6204212323410264667_i64);
    (*_10) = (*_20) ^ (*_20);
    (*_20) = _8 >> (*_10);
    _19 = [7592254454484776993_u64,10975886812856389540_u64,1025819498158273133_u64,4574857256392887186_u64,1186867609053074210_u64,17704066988991704486_u64,4676079705152078225_u64,10228441945678074022_u64];
    _28 = core::ptr::addr_of!(place!(Field::<i128>(Variant(_11, 2), 1)));
    (*_10) = (*_20) | (*_20);
    _20 = core::ptr::addr_of!((*_20));
    (*_10) = (*_20);
    (*_10) = (*_20);
    _32 = [391709155_i32,(-766239519_i32),(-203649124_i32),923122950_i32,1187570000_i32,(-38167713_i32),567282869_i32];
    _10 = Move(_20);
    Call(_31 = core::intrinsics::transmute(_17), ReturnTo(bb15), UnwindUnreachable())
    }
    bb15 = {
    _4 = core::ptr::addr_of_mut!((*_4));
    _24 = 8431248531154121521_u64 * 4925898574642222354_u64;
    _21 = Field::<f64>(Variant(_11, 2), 0) > Field::<f64>(Variant(_11, 2), 0);
    _15.0 = [245314881851490351952563846385314491332_u128,325281256636378278445334928733560059636_u128,28804164332167885952496045538668131333_u128,41609738158959915681350356795873655530_u128,55583746872240030674742188041511897856_u128,88267143909132412574725438361052866312_u128,241599992443031873461029998161889353142_u128,75275096217728639736727909758685331984_u128];
    _23 = _12;
    _15.0 = [64864834582604637004203784685512679997_u128,188633741532889151955941129300018875625_u128,4565104269130922980654999064597399911_u128,170844273767277936413768131091763880645_u128,191971117884236616271790493796799634670_u128,50929870275356683134870621073929411792_u128,22008716487756758598283611204147022497_u128,274996623534390562581534029790100275727_u128];
    _32 = [(-675542213_i32),(-1736118387_i32),1327300445_i32,1781382541_i32,1674570080_i32,1368800506_i32,444278971_i32];
    _4 = core::ptr::addr_of_mut!((*_4));
    _12 = _9;
    _5 = Move(_7);
    _16 = 6_usize >> _17;
    _15.0 = [185601452685821324209987457234557628421_u128,146291211916442771841776644175187200848_u128,219860014540092410763738066075344581387_u128,60089256465493166155875592992302022929_u128,116937872219795048623631483951758246872_u128,267748249502489962803863032017245783473_u128,337723345005608953087974098778124087249_u128,190318880032006881454851971302742695515_u128];
    _4 = core::ptr::addr_of_mut!((*_4));
    _7 = Move(_5);
    _31 = _16 as f64;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = 681654368_u32 as i128;
    (*_20) = _24 as i128;
    (*_20) = _8 - _8;
    (*_20) = 283636608214940721882783535409363554056_u128 as i128;
    Goto(bb16)
    }
    bb16 = {
    Goto(bb17)
    }
    bb17 = {
    _3 = Move(_7);
    (*_20) = Field::<i128>(Variant(_11, 2), 1) >> Field::<i128>(Variant(_11, 2), 1);
    _19 = [_24,_24,_24,_24,_24,_24,_24,_24];
    _2 = Field::<i128>(Variant(_11, 2), 1) * _8;
    _21 = !false;
    (*_20) = 105_i8 as i128;
    _15.1 = (_9,);
    (*_20) = Field::<i128>(Variant(_11, 2), 1);
    (*_20) = Field::<i128>(Variant(_11, 2), 1) | Field::<i128>(Variant(_11, 2), 1);
    _25 = [_16,_16,_16,_16,_16,_16];
    (*_20) = !_8;
    _21 = false | false;
    _34 = _27 as f32;
    _34 = _27 as f32;
    _23 = _9;
    _16 = 6_usize;
    _15.1.0 = _12;
    _15.0[_16] = _32[_16] as u128;
    _16 = _32[_16] as usize;
    place!(Field::<i128>(Variant(_11, 2), 1)) = _2 | (*_20);
    (*_20) = Field::<i128>(Variant(_11, 2), 1);
    _16 = !3_usize;
    RET = _12;
    (*_20) = -Field::<i128>(Variant(_11, 2), 1);
    Call((*_20) = core::intrinsics::bswap(Field::<i128>(Variant(_11, 2), 1)), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    place!(Field::<i128>(Variant(_11, 2), 1)) = (*_20) + (*_20);
    _37 = 1910538246_i32;
    (*_20) = _8 >> _27;
    _12 = _15.1.0;
    place!(Field::<i128>(Variant(_11, 2), 1)) = -(*_20);
    _32 = [_37,_37,_37,_37,_37,_37,_37];
    _15.1 = (_9,);
    (*_20) = _8;
    _18 = core::ptr::addr_of!((*_20));
    _22 = _34;
    _20 = core::ptr::addr_of!((*_20));
    (*_20) = _8 & Field::<i128>(Variant(_11, 2), 1);
    _8 = (*_20) >> (*_20);
    (*_18) = _8 + Field::<i128>(Variant(_11, 2), 1);
    (*_18) = _24 as i128;
    (*_18) = _8;
    Goto(bb19)
    }
    bb19 = {
    _40 = _24 << _8;
    (*_18) = _8 - _8;
    _19 = [_40,_24,_40,_40,_40,_40,_40,_40];
    _19 = [_40,_40,_40,_40,_40,_40,_24,_40];
    (*_18) = _8;
    _43 = [210_u8];
    _40 = _24 << (*_18);
    (*_18) = _8;
    (*_18) = _40 as i128;
    (*_18) = Field::<i128>(Variant(_11, 2), 1);
    _38 = RET;
    _6 = core::ptr::addr_of_mut!(_37);
    (*_6) = !(-1735866262_i32);
    Goto(bb20)
    }
    bb20 = {
    _36 = !238174492612405714919913081290792274971_u128;
    _23 = _12;
    (*_18) = _8;
    (*_6) = Field::<f64>(Variant(_11, 2), 0) as i32;
    (*_6) = -1219669155_i32;
    (*_18) = !_8;
    _31 = -Field::<f64>(Variant(_11, 2), 0);
    (*_6) = 610186441_i32 << (*_18);
    _4 = core::ptr::addr_of_mut!((*_4));
    _8 = 23416_i16 as i128;
    (*_6) = 1234714199_i32;
    (*_6) = (-1284914378_i32) * (-1900983625_i32);
    (*_6) = (-305158513_i32) - (-1690671865_i32);
    _35 = _38;
    (*_6) = _26 as i32;
    Call((*_6) = core::intrinsics::bswap((-920010126_i32)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb21 = {
    (*_6) = (-550630580_i32) ^ 1616048739_i32;
    (*_6) = 21_u8 as i32;
    _49.0 = !_26;
    (*_6) = (-807326287_i32) | 965253786_i32;
    _9 = _35;
    _5 = Move(_3);
    (*_18) = Field::<i128>(Variant(_11, 2), 1) & Field::<i128>(Variant(_11, 2), 1);
    (*_18) = _8 << Field::<i128>(Variant(_11, 2), 1);
    _49.1.fld0 = Field::<f64>(Variant(_11, 2), 0) >= _31;
    (*_6) = (-385826897_i32);
    (*_6) = 1139278612_i32 * (-655790087_i32);
    _9 = _35;
    match _17 {
    0 => bb22,
    1 => bb23,
    2 => bb24,
    9223372036854775807 => bb26,
    _ => bb25
    }
    }
    bb22 = {
    Return()
    }
    bb23 = {
    Return()
    }
    bb24 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb25 = {
    Return()
    }
    bb26 = {
    (*_18) = Field::<i128>(Variant(_11, 2), 1) & Field::<i128>(Variant(_11, 2), 1);
    _6 = core::ptr::addr_of_mut!((*_6));
    (*_18) = Field::<i128>(Variant(_11, 2), 1);
    Goto(bb27)
    }
    bb27 = {
    (*_18) = Field::<i128>(Variant(_11, 2), 1) << _26;
    _51 = [(-60_i8),(-79_i8),(-47_i8),61_i8,(-59_i8),(-69_i8)];
    (*_6) = (-1418624838_i32);
    (*_6) = 1973989480_i32 * 1100949748_i32;
    _16 = 6_usize + 7190549190950443740_usize;
    _4 = core::ptr::addr_of_mut!((*_4));
    match _17 {
    0 => bb28,
    1 => bb29,
    2 => bb30,
    9223372036854775807 => bb32,
    _ => bb31
    }
    }
    bb28 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb29 = {
    Return()
    }
    bb30 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb31 = {
    Return()
    }
    bb32 = {
    _49.1.fld5 = _34 * _34;
    (*_6) = 18229_i16 as i32;
    (*_6) = 979400526_i32 << (*_18);
    (*_6) = (-2124395788_i32);
    _49.3 = Adt35::Variant0 { fld0: _16,fld1: _27 };
    (*_6) = _49.0 as i32;
    _3 = Move(_5);
    _15.1 = (_9,);
    (*_18) = _16 as i128;
    (*_18) = -Field::<i128>(Variant(_11, 2), 1);
    (*_18) = Field::<i128>(Variant(_11, 2), 1) ^ Field::<i128>(Variant(_11, 2), 1);
    (*_18) = Field::<i128>(Variant(_11, 2), 1) * Field::<i128>(Variant(_11, 2), 1);
    (*_18) = !Field::<i128>(Variant(_11, 2), 1);
    (*_18) = Field::<i128>(Variant(_11, 2), 1) | Field::<i128>(Variant(_11, 2), 1);
    place!(Field::<i128>(Variant(_11, 2), 1)) = (*_18);
    _49.1.fld1 = _9;
    _38 = _35;
    _21 = !_49.1.fld0;
    _54 = [7271_i16,(-3183_i16)];
    (*_18) = 91_i8 as i128;
    _45 = core::ptr::addr_of_mut!(_11);
    match _17 {
    0 => bb26,
    1 => bb10,
    9223372036854775807 => bb34,
    _ => bb33
    }
    }
    bb33 = {
    Return()
    }
    bb34 = {
    _37 = -489008129_i32;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) << (*_6);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _16 as f64;
    (*_6) = 404021211_i32 + (-408370842_i32);
    _2 = -Field::<i128>(Variant((*_45), 2), 1);
    _8 = Field::<i128>(Variant((*_45), 2), 1) | (*_18);
    (*_6) = 2130801281_i32 ^ 266994033_i32;
    (*_18) = -Field::<i128>(Variant((*_45), 2), 1);
    (*_6) = (-58696423_i32) & 349740156_i32;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) >> Field::<i128>(Variant((*_45), 2), 1);
    _49.2 = [_17,_17,_17];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) | (*_18);
    _36 = 299016534747017935662163953474962589924_u128 ^ 32092992168584662135358245112104365806_u128;
    _49.1.fld3 = _40 & _40;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 - _31;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = (*_18) as f64;
    _46 = &mut _49.2;
    (*_6) = _16 as i32;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) + (*_18);
    (*_46) = [_17,_17,_17];
    _40 = !_24;
    (*_46) = [_17,_17,_17];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = -(*_18);
    _52 = Move(_6);
    Goto(bb35)
    }
    bb35 = {
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) | Field::<i128>(Variant((*_45), 2), 1);
    (*_18) = _17 as i128;
    (*_18) = 1571872179_u32 as i128;
    _54 = [(-3490_i16),(-1532_i16)];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) & _8;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 * _31;
    (*_18) = !Field::<i128>(Variant((*_45), 2), 1);
    (*_18) = _36 as i128;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !(*_18);
    _56 = Move(_52);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = -_31;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) | Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _35 as i128;
    _57 = &mut (*_46);
    (*_57) = [_17,_17,_17];
    Goto(bb36)
    }
    bb36 = {
    (*_57) = [_17,_17,_17];
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 + _31;
    _13 = &mut (*_57);
    _35 = _15.1.0;
    _21 = !false;
    _58 = _26 >> _16;
    _30 = &(*_13);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 + _31;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) | (*_18);
    (*_13) = [_17,_17,_17];
    (*_13) = [_17,_17,_17];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 2433270036_u32 as i128;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) & (*_18);
    _20 = Move(_18);
    _37 = (-97701498_i32) << Field::<i128>(Variant((*_45), 2), 1);
    _56 = core::ptr::addr_of_mut!(_65.fld4.0);
    _57 = Move(_13);
    _69.0 = core::ptr::addr_of!(_44);
    (*_56) = _37 + _37;
    _26 = !_58;
    _16 = 4_usize >> Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !_2;
    Goto(bb37)
    }
    bb37 = {
    _25 = [_16,_16,_16,_16,_16,_16];
    _61 = _16 as isize;
    _33 = core::ptr::addr_of!(_30);
    _65.fld0 = Field::<f64>(Variant((*_45), 2), 0) <= Field::<f64>(Variant((*_45), 2), 0);
    _66 = _61 as f64;
    _55 = Field::<f64>(Variant((*_45), 2), 0) > Field::<f64>(Variant((*_45), 2), 0);
    _4 = core::ptr::addr_of_mut!((*_4));
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 + _31;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _66 - _31;
    _72.0 = _36 - _36;
    (*_56) = _37 << Field::<i128>(Variant((*_45), 2), 1);
    _32 = [(*_56),(*_56),(*_56),(*_56),(*_56),(*_56),(*_56)];
    _52 = core::ptr::addr_of_mut!((*_56));
    Goto(bb38)
    }
    bb38 = {
    _58 = _26 | _26;
    (*_52) = _37 ^ _37;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = -_31;
    _67 = core::ptr::addr_of_mut!(_44);
    _65.fld1 = _12;
    (*_52) = _37 | _37;
    _53 = RET;
    _65.fld5 = _16 as f32;
    _20 = core::ptr::addr_of!(place!(Field::<i128>(Variant((*_45), 2), 1)));
    _22 = -_65.fld5;
    _44 = (-12918_i16) >> _2;
    (*_52) = _16 as i32;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31;
    (*_20) = _2 << (*_56);
    (*_67) = (-27526_i16) + 6097_i16;
    Goto(bb39)
    }
    bb39 = {
    _65.fld2 = _61 << (*_20);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = -_31;
    (*_56) = _37 << (*_20);
    _15.1.0 = _38;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _8 - _2;
    _24 = _65.fld2 as u64;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _2 * _2;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _2 ^ _8;
    _77 = core::ptr::addr_of!((*_33));
    (*_56) = _37 ^ _37;
    _23 = _12;
    _43 = [160_u8];
    _15.1.0 = _38;
    _70 = Move(_3);
    _23 = _38;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _2;
    (*_67) = -26579_i16;
    _33 = Move(_77);
    (*_56) = !_37;
    _35 = _9;
    match _17 {
    0 => bb27,
    1 => bb40,
    2 => bb41,
    9223372036854775807 => bb43,
    _ => bb42
    }
    }
    bb40 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb41 = {
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) | Field::<i128>(Variant((*_45), 2), 1);
    (*_18) = _17 as i128;
    (*_18) = 1571872179_u32 as i128;
    _54 = [(-3490_i16),(-1532_i16)];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) & _8;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 * _31;
    (*_18) = !Field::<i128>(Variant((*_45), 2), 1);
    (*_18) = _36 as i128;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !(*_18);
    _56 = Move(_52);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = -_31;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) | Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _35 as i128;
    _57 = &mut (*_46);
    (*_57) = [_17,_17,_17];
    Goto(bb36)
    }
    bb42 = {
    (*_10) = _8 + _2;
    (*_10) = (-6102553446682820380_i64) as i128;
    (*_10) = _8 * _2;
    _15.1.0 = _9;
    _15.1 = (RET,);
    (*_10) = 1_u16 as i128;
    _12 = _15.1.0;
    _15.0 = [63882258815024187683820007682931853679_u128,203095174414326426521024230177416171002_u128,255150496700614240498936238881866868007_u128,300374182888761846886400797754092412275_u128,246496096605074597611070845512613823230_u128,44614886532220925404578344436993268697_u128,149047670192903641130348864573502493984_u128,99548215497084811885810178418219148881_u128];
    _16 = 0_usize * 7_usize;
    (*_10) = (-950254710_i32) as i128;
    (*_10) = 2099081455_u32 as i128;
    _17 = 9223372036854775807_isize;
    _19 = [4249553630569595845_u64,3033973872169195410_u64,7033207137888319425_u64,693916537281700906_u64,17868264905810368085_u64,1724757430065955942_u64,17285761879919854124_u64,12504499250434096586_u64];
    (*_10) = !_2;
    (*_10) = 21433_u16 as i128;
    (*_10) = 60457_u16 as i128;
    (*_10) = -_8;
    (*_10) = 15095_i16 as i128;
    (*_10) = 3659786911_u32 as i128;
    (*_10) = _2 + _2;
    match _17 {
    0 => bb2,
    1 => bb3,
    2 => bb4,
    3 => bb5,
    9223372036854775807 => bb7,
    _ => bb6
    }
    }
    bb43 = {
    (*_67) = _22 as i16;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _2 * _8;
    _42 = core::ptr::addr_of_mut!((*_67));
    _48 = _19;
    _56 = core::ptr::addr_of_mut!((*_56));
    (*_56) = !_37;
    _7 = Move(_70);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _23 as i128;
    _50 = !_65.fld0;
    (*_56) = _37 << (*_42);
    (*_56) = Field::<i128>(Variant((*_45), 2), 1) as i32;
    (*_42) = -21415_i16;
    Goto(bb44)
    }
    bb44 = {
    _12 = _38;
    _65.fld7 = core::ptr::addr_of_mut!((*_67));
    _3 = Move(_7);
    _20 = Move(_10);
    _79 = &mut _65.fld4;
    _73.1 = &mut (*_79);
    (*_42) = !(-11313_i16);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 + _31;
    _77 = core::ptr::addr_of!(_30);
    _28 = core::ptr::addr_of!(place!(Field::<i128>(Variant((*_45), 2), 1)));
    _81 = _58 & _58;
    (*_42) = 6927_i16 ^ 14478_i16;
    (*_42) = (-6423_i16) * 13913_i16;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = -_2;
    _5 = core::ptr::addr_of!(_73.1);
    _8 = _37 as i128;
    (*_67) = 30616_i16;
    match (*_67) {
    0 => bb6,
    1 => bb28,
    2 => bb45,
    3 => bb46,
    4 => bb47,
    5 => bb48,
    30616 => bb50,
    _ => bb49
    }
    }
    bb45 = {
    (*_18) = Field::<i128>(Variant(_11, 2), 1) << _26;
    _51 = [(-60_i8),(-79_i8),(-47_i8),61_i8,(-59_i8),(-69_i8)];
    (*_6) = (-1418624838_i32);
    (*_6) = 1973989480_i32 * 1100949748_i32;
    _16 = 6_usize + 7190549190950443740_usize;
    _4 = core::ptr::addr_of_mut!((*_4));
    match _17 {
    0 => bb28,
    1 => bb29,
    2 => bb30,
    9223372036854775807 => bb32,
    _ => bb31
    }
    }
    bb46 = {
    _36 = !238174492612405714919913081290792274971_u128;
    _23 = _12;
    (*_18) = _8;
    (*_6) = Field::<f64>(Variant(_11, 2), 0) as i32;
    (*_6) = -1219669155_i32;
    (*_18) = !_8;
    _31 = -Field::<f64>(Variant(_11, 2), 0);
    (*_6) = 610186441_i32 << (*_18);
    _4 = core::ptr::addr_of_mut!((*_4));
    _8 = 23416_i16 as i128;
    (*_6) = 1234714199_i32;
    (*_6) = (-1284914378_i32) * (-1900983625_i32);
    (*_6) = (-305158513_i32) - (-1690671865_i32);
    _35 = _38;
    (*_6) = _26 as i32;
    Call((*_6) = core::intrinsics::bswap((-920010126_i32)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb47 = {
    _37 = -489008129_i32;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) << (*_6);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _16 as f64;
    (*_6) = 404021211_i32 + (-408370842_i32);
    _2 = -Field::<i128>(Variant((*_45), 2), 1);
    _8 = Field::<i128>(Variant((*_45), 2), 1) | (*_18);
    (*_6) = 2130801281_i32 ^ 266994033_i32;
    (*_18) = -Field::<i128>(Variant((*_45), 2), 1);
    (*_6) = (-58696423_i32) & 349740156_i32;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1) >> Field::<i128>(Variant((*_45), 2), 1);
    _49.2 = [_17,_17,_17];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) | (*_18);
    _36 = 299016534747017935662163953474962589924_u128 ^ 32092992168584662135358245112104365806_u128;
    _49.1.fld3 = _40 & _40;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _31 - _31;
    place!(Field::<f64>(Variant((*_45), 2), 0)) = (*_18) as f64;
    _46 = &mut _49.2;
    (*_6) = _16 as i32;
    (*_18) = Field::<i128>(Variant((*_45), 2), 1);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = (*_18) + (*_18);
    (*_46) = [_17,_17,_17];
    _40 = !_24;
    (*_46) = [_17,_17,_17];
    place!(Field::<i128>(Variant((*_45), 2), 1)) = -(*_18);
    _52 = Move(_6);
    Goto(bb35)
    }
    bb48 = {
    (*_10) = -_2;
    (*_10) = 24005_i16 as i128;
    (*_10) = (-120_i8) as i128;
    (*_10) = _8;
    _2 = (*_10) - (*_10);
    (*_10) = _8;
    (*_10) = _12 as i128;
    (*_10) = !_2;
    _20 = core::ptr::addr_of!(_2);
    (*_20) = -(*_10);
    _18 = core::ptr::addr_of!((*_10));
    (*_20) = !(*_18);
    _8 = (*_18) * (*_20);
    (*_20) = 106_i8 as i128;
    Call((*_20) = core::intrinsics::bswap((*_18)), ReturnTo(bb8), UnwindUnreachable())
    }
    bb49 = {
    Return()
    }
    bb50 = {
    _66 = -Field::<f64>(Variant((*_45), 2), 0);
    _28 = core::ptr::addr_of!(place!(Field::<i128>(Variant((*_45), 2), 1)));
    _71 = [_36,_72.0];
    place!(Field::<f64>(Variant((*_45), 2), 0)) = _66 + _31;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = _8;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = -_8;
    _83 = Field::<f64>(Variant(_11, 2), 0) <= Field::<f64>(Variant((*_45), 2), 0);
    place!(Field::<i128>(Variant((*_45), 2), 1)) = 129_u8 as i128;
    (*_5) = Move(_79);
    (*_67) = (-10732_i16) + (-17659_i16);
    (*_45) = Adt45::Variant2 { fld0: _66,fld1: _2 };
    _54 = [(*_67),(*_67)];
    _77 = core::ptr::addr_of!((*_77));
    _51 = [(-36_i8),(-95_i8),24_i8,50_i8,97_i8,(-111_i8)];
    _37 = _9 as i32;
    _69.2.0 = _72.0 & _72.0;
    _26 = !_81;
    place!(Field::<i128>(Variant((*_45), 2), 1)) = !_8;
    Goto(bb51)
    }
    bb51 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: &'static (u128,), mut _2: *const i128, mut _3: *mut &'static (u128,)) -> i128 {
    mir! {
    type RET = i128;
    let _4: Adt58;
    let _5: [u64; 7];
    let _6: f32;
    let _7: (i16, *mut *mut &'static (u128,), *mut i32, Adt45);
    let _8: isize;
    let _9: char;
    let _10: isize;
    let _11: isize;
    let _12: [u64; 4];
    let _13: f32;
    let _14: [u64; 4];
    let _15: isize;
    let _16: [u16; 1];
    let _17: f64;
    let _18: u16;
    let _19: *const [i8; 6];
    let _20: u64;
    let _21: f64;
    let _22: ([u128; 8], (char,));
    let _23: char;
    let _24: f32;
    let _25: *mut bool;
    let _26: f64;
    let _27: [u64; 4];
    let _28: [u16; 1];
    let _29: i128;
    let _30: Adt42;
    let _31: u32;
    let _32: f32;
    let _33: u32;
    let _34: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _35: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _36: bool;
    let _37: [i8; 6];
    let _38: (i16, *mut *mut &'static (u128,), *mut i32, Adt45);
    let _39: isize;
    let _40: Adt42;
    let _41: [u16; 1];
    let _42: *mut i32;
    let _43: u128;
    let _44: *mut i32;
    let _45: bool;
    let _46: *const [i8; 6];
    let _47: (u16, Adt27, [isize; 3], Adt35);
    let _48: (u128,);
    let _49: *mut *mut &'static (u128,);
    let _50: isize;
    let _51: Adt58;
    let _52: *mut &'static (u128,);
    let _53: [i8; 3];
    let _54: [u128; 8];
    let _55: &'static (f32, &'static mut (i32,));
    let _56: *const Adt32;
    let _57: ();
    let _58: ();
    {
    _2 = core::ptr::addr_of!(RET);
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = 191_u8 as i128;
    (*_2) = 22177341876439905505666527638646571864_i128 | 107196343340348040464679144532464610961_i128;
    (*_2) = (-11173020704221026382913485304027624149_i128) & 59271705484066617236704064720242650678_i128;
    (*_2) = -(-64184931310366325316246336020972788216_i128);
    (*_2) = !(-168091957910751041527012277877941607567_i128);
    (*_2) = 246284712355203047949821298110094936238_u128 as i128;
    Call((*_2) = core::intrinsics::bswap(82351235112021162172699580716427971323_i128), ReturnTo(bb1), UnwindUnreachable())
    }
    bb1 = {
    (*_2) = 143057924668710984693481968491019083901_i128;
    (*_2) = (-151593122713748540595475066219963534699_i128) >> 17608655960174913210_usize;
    (*_2) = 73148335514465243394195076958886295534_i128 >> 75277429721882461274135873998754521897_i128;
    (*_2) = (-130852751355336136135323542591890994433_i128) ^ (-163337982614527659658147333643600093330_i128);
    _6 = (*_2) as f32;
    (*_2) = 64158_u16 as i128;
    (*_2) = (-29411762902277115074764791700166773023_i128) >> 156742190906335435645762395892367128410_i128;
    (*_2) = (-157270492822079579038124767980048514110_i128) >> (-40_i8);
    (*_2) = (-45471864950253305194100104009999385738_i128) & (-23307592825530358770163408501385301328_i128);
    (*_2) = 24018_i16 as i128;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -145665823722960302431373664984425075179_i128;
    (*_2) = 10818759978506128255_u64 as i128;
    (*_2) = 16356129601816400045022892722563476814_i128;
    (*_2) = 70306003774560379618127024213174085359_i128 & (-53182474063120296880526682942221843005_i128);
    _5 = [14953899073651332526_u64,9113282986366064136_u64,1142339004068177894_u64,1035598481116191003_u64,17510323981891865082_u64,6066235608676338583_u64,11225110082499958158_u64];
    _7.0 = (-9223372036854775808_isize) as i16;
    Goto(bb2)
    }
    bb2 = {
    (*_2) = 22255157777764355710312596066798097254_i128;
    _7.1 = core::ptr::addr_of_mut!(_3);
    (*_2) = 3610483246_u32 as i128;
    (*_2) = 40193_u16 as i128;
    (*_2) = 1609651296_u32 as i128;
    _8 = (-9223372036854775808_isize);
    _9 = '\u{68485}';
    (*_2) = 52732599058079910191312774133247296139_i128 ^ (-34055186073230065690607519484322212196_i128);
    _9 = '\u{cf231}';
    (*_2) = (-95758662427377154866426056010712751615_i128);
    (*_2) = 144_u8 as i128;
    (*_2) = (-124687892339760456089378011602268626562_i128) ^ (-162516236071236423062265596000928092960_i128);
    (*_2) = 142723396786456857470074458630382695572_i128;
    _10 = _8;
    (*_2) = !(-65860243996106227638556226255792228216_i128);
    (*_2) = _7.0 as i128;
    (*_2) = !17600734618292827755577439952111750639_i128;
    (*_2) = 71735750427725284594002851494317539663_i128;
    _7.0 = 9807_i16 << (*_2);
    (*_2) = 127_i8 as i128;
    (*_2) = !80785475389971500602930844902658839852_i128;
    (*_2) = (-76731718253087359791289701706584344053_i128) << _7.0;
    (*_2) = (-81338721655697973571846105756811172674_i128) & (-80980935911533877995457125615315206748_i128);
    match _8 {
    0 => bb3,
    1 => bb4,
    2 => bb5,
    3 => bb6,
    4 => bb7,
    5 => bb8,
    340282366920938463454151235394913435648 => bb10,
    _ => bb9
    }
    }
    bb3 = {
    (*_2) = 143057924668710984693481968491019083901_i128;
    (*_2) = (-151593122713748540595475066219963534699_i128) >> 17608655960174913210_usize;
    (*_2) = 73148335514465243394195076958886295534_i128 >> 75277429721882461274135873998754521897_i128;
    (*_2) = (-130852751355336136135323542591890994433_i128) ^ (-163337982614527659658147333643600093330_i128);
    _6 = (*_2) as f32;
    (*_2) = 64158_u16 as i128;
    (*_2) = (-29411762902277115074764791700166773023_i128) >> 156742190906335435645762395892367128410_i128;
    (*_2) = (-157270492822079579038124767980048514110_i128) >> (-40_i8);
    (*_2) = (-45471864950253305194100104009999385738_i128) & (-23307592825530358770163408501385301328_i128);
    (*_2) = 24018_i16 as i128;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -145665823722960302431373664984425075179_i128;
    (*_2) = 10818759978506128255_u64 as i128;
    (*_2) = 16356129601816400045022892722563476814_i128;
    (*_2) = 70306003774560379618127024213174085359_i128 & (-53182474063120296880526682942221843005_i128);
    _5 = [14953899073651332526_u64,9113282986366064136_u64,1142339004068177894_u64,1035598481116191003_u64,17510323981891865082_u64,6066235608676338583_u64,11225110082499958158_u64];
    _7.0 = (-9223372036854775808_isize) as i16;
    Goto(bb2)
    }
    bb4 = {
    Return()
    }
    bb5 = {
    Return()
    }
    bb6 = {
    Return()
    }
    bb7 = {
    Return()
    }
    bb8 = {
    Return()
    }
    bb9 = {
    Return()
    }
    bb10 = {
    (*_2) = 188_u8 as i128;
    (*_2) = 3315276109_u32 as i128;
    (*_2) = (-92206362957252799786855854909218688047_i128) + (-56265951172393874323308817606715069281_i128);
    (*_2) = (-33113451590514417693116905868839859633_i128) >> _7.0;
    (*_2) = 116262616580257077542343659978499668931_i128 << _7.0;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -(-151933733041576885308995779802526979285_i128);
    (*_2) = !42503257371852327926021265930608376201_i128;
    _12 = [14422835341456483425_u64,9023447183822442653_u64,2959895619186747054_u64,2328855776081672466_u64];
    (*_2) = (-520199910015966039758022909792735422_i128) << _8;
    (*_2) = 6910087784461747451_usize as i128;
    _7.1 = core::ptr::addr_of_mut!(_3);
    _14 = _12;
    RET = 17460006657450566356050826212830272068_i128;
    _15 = _8;
    (*_2) = 14648694880172740406965705636003605386_i128 ^ 120035608373685579606461669850228526302_i128;
    _11 = _7.0 as isize;
    _13 = _6 - _6;
    _8 = _15 ^ _15;
    _7.1 = core::ptr::addr_of_mut!(_3);
    match _15 {
    340282366920938463454151235394913435648 => bb11,
    _ => bb7
    }
    }
    bb11 = {
    (*_2) = 3649013571003904405989446801474836755_i128 << _15;
    _5 = [14782683133815415800_u64,3675527719457993657_u64,14261940400259753817_u64,351880464049462271_u64,7932019218495614010_u64,6835644122878271882_u64,2066971184882418244_u64];
    _6 = -_13;
    _16 = [8468_u16];
    (*_2) = 1701188950255439934924613028087358482_i128;
    (*_2) = (-41426632433079590896377815146593561225_i128) + (-77519588885114887078224673740400790730_i128);
    _16 = [30786_u16];
    (*_2) = 75_i8 as i128;
    (*_2) = 150304498480404598210327347500932369699_i128 ^ 110488024626931448235867575406319355764_i128;
    _7.1 = core::ptr::addr_of_mut!(_3);
    (*_2) = _10 as i128;
    _7.0 = (-32121_i16);
    (*_2) = 167744253548632498260266423775755532881_i128;
    (*_2) = (-46714737731903236176985210840542218791_i128) ^ (-61773228687711658648561392468849990536_i128);
    _12 = [2677332717543033116_u64,7376851434631251202_u64,9011720938139027380_u64,4424030226165073786_u64];
    _14 = [10564246409781139192_u64,6656615391625495301_u64,10862908002675184620_u64,7289298941911116409_u64];
    Call(_10 = core::intrinsics::transmute(_11), ReturnTo(bb12), UnwindUnreachable())
    }
    bb12 = {
    (*_2) = 6_usize as i128;
    (*_2) = 1491544796_u32 as i128;
    (*_2) = 3021166304000567757119674190977546859_i128;
    _5 = [14013593651692984284_u64,4049806775739679500_u64,8536181673758791177_u64,4799171261248301330_u64,3525869566467387997_u64,6624435073090955300_u64,1469999083380577465_u64];
    _15 = _10;
    (*_2) = 75136656625937476764585643272214050182_i128 ^ 92676215146237128009818398519660229666_i128;
    (*_2) = 113612434364324651828723707854596866636_i128 >> _7.0;
    (*_2) = (-165650560010412886897110876740563997846_i128) << _11;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = 118990920640733355981234638788729522840_i128;
    (*_2) = -(-159600176476911703713832814703283832991_i128);
    _8 = _15 ^ _15;
    _17 = 8_i8 as f64;
    match _7.0 {
    0 => bb1,
    1 => bb13,
    340282366920938463463374607431768179335 => bb15,
    _ => bb14
    }
    }
    bb13 = {
    Return()
    }
    bb14 = {
    Return()
    }
    bb15 = {
    (*_2) = (-127369251095935544609433919682114345881_i128);
    (*_2) = (-156817633990983767544677490182214542688_i128) << _11;
    _14 = _12;
    _5 = [14561277314667459821_u64,5774293966831221327_u64,14855283412411856320_u64,11966350675264872174_u64,10410243815367810275_u64,9157978997588158513_u64,3261275741851077876_u64];
    (*_2) = 23746616492839669009885431105466572954_i128;
    (*_2) = 48981410310161204125811844450876685199_i128 ^ 48879404381776319563218195348170403965_i128;
    (*_2) = (-141310000645646665737036340860704190521_i128);
    (*_2) = 5_usize as i128;
    (*_2) = 118075805609329766352826257644080751274_i128;
    (*_2) = 833838738761310018_i64 as i128;
    (*_2) = (-121077403664870418561431072039912536391_i128) ^ 62044538967095558606942171721382160957_i128;
    (*_2) = 166969428297736897279471453946508689457_i128 & (-127453608204075008583814873936601396679_i128);
    _6 = 19202564734517820613418137411556913380_u128 as f32;
    (*_2) = _11 as i128;
    (*_2) = -71982595463196867482691499726280071597_i128;
    (*_2) = (-51292196530495740794079510501977849620_i128) ^ (-168757999739268337583145435721341934650_i128);
    (*_2) = -122087071901491611964155702967138949783_i128;
    _9 = '\u{7fbe1}';
    _10 = 91998505391377172124548089400653672239_u128 as isize;
    _14 = [7894446346211602252_u64,18141452954221121857_u64,7532991789433703507_u64,15779558149542925710_u64];
    (*_2) = 160651245389867076162035291864411038595_i128 ^ (-35841938411229399721965070321297939298_i128);
    RET = !91649708626128896200109964914167559045_i128;
    (*_2) = (-56220497798582491598300593752669560077_i128) ^ 127556628357702185906231827060088106790_i128;
    Goto(bb16)
    }
    bb16 = {
    (*_2) = (-96670119432784635124206485955665228313_i128) & 128586233991606238734837016611047652338_i128;
    _18 = !53308_u16;
    _20 = 453322949350684146_u64;
    _7.3 = Adt45::Variant2 { fld0: _17,fld1: (*_2) };
    (*_2) = !Field::<i128>(Variant(_7.3, 2), 1);
    _13 = -_6;
    _13 = _6 * _6;
    _22.0 = [243788286189219571850165002146739591929_u128,258100510731174020284834328575467573755_u128,292263971407361579626001807878397819795_u128,287927276745036757871629058989610043299_u128,215626133581983450306253868866808737367_u128,108889689584146114758918482709213325975_u128,18617177880824256756928764114171101480_u128,313156392794204090966520950040866902303_u128];
    _2 = core::ptr::addr_of!((*_2));
    _11 = _8;
    (*_2) = Field::<f64>(Variant(_7.3, 2), 0) as i128;
    (*_2) = 194_u8 as i128;
    _22.1 = (_9,);
    place!(Field::<i128>(Variant(_7.3, 2), 1)) = 27313912603451101762750448589843438187_u128 as i128;
    match _7.0 {
    0 => bb17,
    340282366920938463463374607431768179335 => bb19,
    _ => bb18
    }
    }
    bb17 = {
    (*_2) = 143057924668710984693481968491019083901_i128;
    (*_2) = (-151593122713748540595475066219963534699_i128) >> 17608655960174913210_usize;
    (*_2) = 73148335514465243394195076958886295534_i128 >> 75277429721882461274135873998754521897_i128;
    (*_2) = (-130852751355336136135323542591890994433_i128) ^ (-163337982614527659658147333643600093330_i128);
    _6 = (*_2) as f32;
    (*_2) = 64158_u16 as i128;
    (*_2) = (-29411762902277115074764791700166773023_i128) >> 156742190906335435645762395892367128410_i128;
    (*_2) = (-157270492822079579038124767980048514110_i128) >> (-40_i8);
    (*_2) = (-45471864950253305194100104009999385738_i128) & (-23307592825530358770163408501385301328_i128);
    (*_2) = 24018_i16 as i128;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -145665823722960302431373664984425075179_i128;
    (*_2) = 10818759978506128255_u64 as i128;
    (*_2) = 16356129601816400045022892722563476814_i128;
    (*_2) = 70306003774560379618127024213174085359_i128 & (-53182474063120296880526682942221843005_i128);
    _5 = [14953899073651332526_u64,9113282986366064136_u64,1142339004068177894_u64,1035598481116191003_u64,17510323981891865082_u64,6066235608676338583_u64,11225110082499958158_u64];
    _7.0 = (-9223372036854775808_isize) as i16;
    Goto(bb2)
    }
    bb18 = {
    Return()
    }
    bb19 = {
    place!(Field::<i128>(Variant(_7.3, 2), 1)) = (*_2);
    _21 = _20 as f64;
    (*_2) = !Field::<i128>(Variant(_7.3, 2), 1);
    _2 = core::ptr::addr_of!((*_2));
    _2 = core::ptr::addr_of!(RET);
    _14 = [_20,_20,_20,_20];
    RET = -Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = 57_i8 as i128;
    Goto(bb20)
    }
    bb20 = {
    _20 = _17 as u64;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    _11 = _15;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) - Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = !Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) | Field::<i128>(Variant(_7.3, 2), 1);
    _26 = _17;
    _7.3 = Adt45::Variant2 { fld0: _21,fld1: (*_2) };
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    _21 = _6 as f64;
    _22.1.0 = _9;
    _21 = _17;
    _11 = _8;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) >> _10;
    _22.1 = (_9,);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) | Field::<i128>(Variant(_7.3, 2), 1);
    _13 = -_6;
    _7.1 = core::ptr::addr_of_mut!(_3);
    _15 = _11;
    _18 = 57946_u16 >> (*_2);
    _23 = _9;
    _7.1 = core::ptr::addr_of_mut!(_3);
    Call(_16 = fn19(Move(_7.1)), ReturnTo(bb21), UnwindUnreachable())
    }
    bb21 = {
    _27 = [_20,_20,_20,_20];
    Goto(bb22)
    }
    bb22 = {
    (*_2) = 1060331060077685797_i64 as i128;
    place!(Field::<i128>(Variant(_7.3, 2), 1)) = (*_2) * (*_2);
    _24 = _6;
    _20 = !10039543830115372602_u64;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) - Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) * Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) >> _8;
    _20 = 12662297353659716793_u64 | 3783412506728417004_u64;
    _9 = _23;
    _21 = 85_u8 as f64;
    _22.1.0 = _23;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    _24 = -_13;
    (*_2) = (-56_i8) as i128;
    _16 = [_18];
    _11 = Field::<i128>(Variant(_7.3, 2), 1) as isize;
    _32 = _11 as f32;
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) * Field::<i128>(Variant(_7.3, 2), 1);
    _7.1 = core::ptr::addr_of_mut!(_3);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) | Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) ^ Field::<i128>(Variant(_7.3, 2), 1);
    match _7.0 {
    0 => bb17,
    340282366920938463463374607431768179335 => bb24,
    _ => bb23
    }
    }
    bb23 = {
    place!(Field::<i128>(Variant(_7.3, 2), 1)) = (*_2);
    _21 = _20 as f64;
    (*_2) = !Field::<i128>(Variant(_7.3, 2), 1);
    _2 = core::ptr::addr_of!((*_2));
    _2 = core::ptr::addr_of!(RET);
    _14 = [_20,_20,_20,_20];
    RET = -Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = 57_i8 as i128;
    Goto(bb20)
    }
    bb24 = {
    _30.fld3 = (_23,);
    _30.fld1 = _17;
    _16 = [_18];
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -Field::<i128>(Variant(_7.3, 2), 1);
    _20 = 13704303165927148238_u64;
    _34.0 = core::ptr::addr_of!(_7.0);
    match _20 {
    13704303165927148238 => bb25,
    _ => bb18
    }
    }
    bb25 = {
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) >> _18;
    _35.2.0 = !242576579973208140174321179235443844839_u128;
    (*_2) = -Field::<i128>(Variant(_7.3, 2), 1);
    _18 = 38681_u16;
    _18 = !11188_u16;
    _40.fld3.0 = _30.fld3.0;
    _34.2 = (_35.2.0,);
    match _20 {
    0 => bb9,
    1 => bb7,
    2 => bb26,
    3 => bb27,
    13704303165927148238 => bb29,
    _ => bb28
    }
    }
    bb26 = {
    _30.fld3 = (_23,);
    _30.fld1 = _17;
    _16 = [_18];
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -Field::<i128>(Variant(_7.3, 2), 1);
    _20 = 13704303165927148238_u64;
    _34.0 = core::ptr::addr_of!(_7.0);
    match _20 {
    13704303165927148238 => bb25,
    _ => bb18
    }
    }
    bb27 = {
    (*_2) = 3649013571003904405989446801474836755_i128 << _15;
    _5 = [14782683133815415800_u64,3675527719457993657_u64,14261940400259753817_u64,351880464049462271_u64,7932019218495614010_u64,6835644122878271882_u64,2066971184882418244_u64];
    _6 = -_13;
    _16 = [8468_u16];
    (*_2) = 1701188950255439934924613028087358482_i128;
    (*_2) = (-41426632433079590896377815146593561225_i128) + (-77519588885114887078224673740400790730_i128);
    _16 = [30786_u16];
    (*_2) = 75_i8 as i128;
    (*_2) = 150304498480404598210327347500932369699_i128 ^ 110488024626931448235867575406319355764_i128;
    _7.1 = core::ptr::addr_of_mut!(_3);
    (*_2) = _10 as i128;
    _7.0 = (-32121_i16);
    (*_2) = 167744253548632498260266423775755532881_i128;
    (*_2) = (-46714737731903236176985210840542218791_i128) ^ (-61773228687711658648561392468849990536_i128);
    _12 = [2677332717543033116_u64,7376851434631251202_u64,9011720938139027380_u64,4424030226165073786_u64];
    _14 = [10564246409781139192_u64,6656615391625495301_u64,10862908002675184620_u64,7289298941911116409_u64];
    Call(_10 = core::intrinsics::transmute(_11), ReturnTo(bb12), UnwindUnreachable())
    }
    bb28 = {
    _27 = [_20,_20,_20,_20];
    Goto(bb22)
    }
    bb29 = {
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    _40.fld0 = _35.2;
    _22.1 = _40.fld3;
    _30.fld0.0 = !_35.2.0;
    _38.3 = Move(_7.3);
    _18 = 53749_u16;
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1);
    _33 = 975505361_u32 & 1399835054_u32;
    _41 = [_18];
    _16 = _41;
    _7.0 = (-26014_i16) >> (*_2);
    _40.fld3.0 = _23;
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1);
    _25 = core::ptr::addr_of_mut!(_36);
    _30.fld1 = -_17;
    _35.0 = Move(_34.0);
    (*_25) = false;
    _34.0 = core::ptr::addr_of!(_7.0);
    _13 = _32 + _32;
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1) + Field::<i128>(Variant(_38.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1) >> _7.0;
    _29 = -(*_2);
    match _20 {
    0 => bb30,
    13704303165927148238 => bb32,
    _ => bb31
    }
    }
    bb30 = {
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1);
    (*_2) = Field::<i128>(Variant(_7.3, 2), 1) >> _18;
    _35.2.0 = !242576579973208140174321179235443844839_u128;
    (*_2) = -Field::<i128>(Variant(_7.3, 2), 1);
    _18 = 38681_u16;
    _18 = !11188_u16;
    _40.fld3.0 = _30.fld3.0;
    _34.2 = (_35.2.0,);
    match _20 {
    0 => bb9,
    1 => bb7,
    2 => bb26,
    3 => bb27,
    13704303165927148238 => bb29,
    _ => bb28
    }
    }
    bb31 = {
    _30.fld3 = (_23,);
    _30.fld1 = _17;
    _16 = [_18];
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -Field::<i128>(Variant(_7.3, 2), 1);
    _20 = 13704303165927148238_u64;
    _34.0 = core::ptr::addr_of!(_7.0);
    match _20 {
    13704303165927148238 => bb25,
    _ => bb18
    }
    }
    bb32 = {
    _34.2.0 = _30.fld0.0 | _30.fld0.0;
    _30.fld0.0 = _35.2.0 & _34.2.0;
    _22.1.0 = _23;
    _43 = _35.2.0;
    _43 = !_34.2.0;
    (*_2) = !_29;
    match _20 {
    0 => bb33,
    1 => bb34,
    13704303165927148238 => bb36,
    _ => bb35
    }
    }
    bb33 = {
    Return()
    }
    bb34 = {
    (*_2) = 143057924668710984693481968491019083901_i128;
    (*_2) = (-151593122713748540595475066219963534699_i128) >> 17608655960174913210_usize;
    (*_2) = 73148335514465243394195076958886295534_i128 >> 75277429721882461274135873998754521897_i128;
    (*_2) = (-130852751355336136135323542591890994433_i128) ^ (-163337982614527659658147333643600093330_i128);
    _6 = (*_2) as f32;
    (*_2) = 64158_u16 as i128;
    (*_2) = (-29411762902277115074764791700166773023_i128) >> 156742190906335435645762395892367128410_i128;
    (*_2) = (-157270492822079579038124767980048514110_i128) >> (-40_i8);
    (*_2) = (-45471864950253305194100104009999385738_i128) & (-23307592825530358770163408501385301328_i128);
    (*_2) = 24018_i16 as i128;
    _2 = core::ptr::addr_of!((*_2));
    (*_2) = -145665823722960302431373664984425075179_i128;
    (*_2) = 10818759978506128255_u64 as i128;
    (*_2) = 16356129601816400045022892722563476814_i128;
    (*_2) = 70306003774560379618127024213174085359_i128 & (-53182474063120296880526682942221843005_i128);
    _5 = [14953899073651332526_u64,9113282986366064136_u64,1142339004068177894_u64,1035598481116191003_u64,17510323981891865082_u64,6066235608676338583_u64,11225110082499958158_u64];
    _7.0 = (-9223372036854775808_isize) as i16;
    Goto(bb2)
    }
    bb35 = {
    Return()
    }
    bb36 = {
    (*_25) = true;
    (*_25) = true;
    _33 = 3811222562_u32 * 675048604_u32;
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1) * Field::<i128>(Variant(_38.3, 2), 1);
    _40.fld1 = _30.fld1;
    _29 = (*_2) * (*_2);
    _20 = 15678116026599668221_u64 & 18258734418029580293_u64;
    RET = !_29;
    _37 = [(-114_i8),101_i8,101_i8,79_i8,(-99_i8),58_i8];
    (*_25) = false;
    _1 = &_30.fld0;
    _16 = [_18];
    (*_25) = !false;
    _37 = [43_i8,44_i8,(-42_i8),(-35_i8),102_i8,(-20_i8)];
    _27 = [_20,_20,_20,_20];
    (*_25) = !false;
    _47.1.fld1 = _22.1.0;
    _47.2 = [_15,_8,_15];
    _17 = _26;
    _35.2 = (_30.fld0.0,);
    _10 = _15 >> _29;
    _44 = core::ptr::addr_of_mut!(_47.1.fld4.0);
    _27 = [_20,_20,_20,_20];
    Goto(bb37)
    }
    bb37 = {
    _30.fld3.0 = _22.1.0;
    _26 = _17;
    _9 = _30.fld3.0;
    _35.2 = ((*_1).0,);
    (*_25) = !true;
    (*_2) = _29;
    _30.fld2 = core::ptr::addr_of!((*_44));
    _47.0 = _18 >> (*_2);
    (*_2) = _40.fld3.0 as i128;
    match _18 {
    0 => bb23,
    1 => bb34,
    2 => bb35,
    3 => bb17,
    4 => bb5,
    5 => bb22,
    53749 => bb38,
    _ => bb7
    }
    }
    bb38 = {
    (*_44) = (-2043629721_i32) | 77543807_i32;
    _30.fld2 = core::ptr::addr_of!((*_44));
    _7.2 = Move(_44);
    _31 = _33 | _33;
    _32 = -_6;
    _19 = core::ptr::addr_of!(_37);
    (*_19) = [78_i8,67_i8,116_i8,(-98_i8),55_i8,39_i8];
    _19 = core::ptr::addr_of!((*_19));
    Goto(bb39)
    }
    bb39 = {
    _47.2 = [_11,_8,_10];
    (*_2) = _24 as i128;
    _8 = _10;
    _7.0 = -24122_i16;
    (*_19) = [101_i8,(-46_i8),(-118_i8),(-48_i8),(-40_i8),(-82_i8)];
    (*_19) = [11_i8,81_i8,(-17_i8),(-104_i8),58_i8,64_i8];
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1) | _29;
    (*_19) = [(-122_i8),82_i8,(-29_i8),(-98_i8),90_i8,(-71_i8)];
    (*_25) = true & false;
    _43 = (*_1).0 << (*_1).0;
    _10 = _8;
    _7.3 = Move(_38.3);
    _14 = [_20,_20,_20,_20];
    Goto(bb40)
    }
    bb40 = {
    _21 = 6309601298924764365_i64 as f64;
    _2 = core::ptr::addr_of!((*_2));
    Goto(bb41)
    }
    bb41 = {
    _47.1.fld2 = _47.1.fld4.0 as isize;
    _34.0 = Move(_35.0);
    (*_2) = _29;
    (*_2) = -_29;
    place!(Field::<f64>(Variant(_7.3, 2), 0)) = -_17;
    (*_25) = !true;
    _30.fld3 = (_47.1.fld1,);
    (*_2) = _29 ^ _29;
    _35.1 = &mut _47.1.fld4;
    (*_2) = _29 << _43;
    (*_2) = _40.fld3.0 as i128;
    (*_25) = true;
    (*_19) = [54_i8,76_i8,66_i8,(-79_i8),(-13_i8),94_i8];
    _27 = [_20,_20,_20,_20];
    _25 = core::ptr::addr_of_mut!(_45);
    _31 = _33 | _33;
    (*_2) = _29;
    _19 = core::ptr::addr_of!((*_19));
    (*_2) = _26 as i128;
    _16 = [_18];
    _38.3 = Move(_7.3);
    (*_2) = Field::<i128>(Variant(_38.3, 2), 1) >> (*_1).0;
    (*_2) = _29 << (*_1).0;
    Goto(bb42)
    }
    bb42 = {

    Return()
    }
    }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: *mut *mut &'static (u128,)) -> [u16; 1] {
    mir! {
    type RET = [u16; 1];
    let _2: f64;
    let _3: f64;
    let _4: f32;
    let _5: *mut i32;
    let _6: &'static (f32, &'static mut (i32,));
    let _7: &'static mut &'static *mut i16;
    let _8: isize;
    let _9: f64;
    let _10: (f32, &'static mut (i32,));
    let _11: *const Adt32;
    let _12: isize;
    let _13: u8;
    let _14: bool;
    let _15: [isize; 3];
    let _16: [i16; 2];
    let _17: u128;
    let _18: u16;
    let _19: Adt42;
    let _20: u128;
    let _21: *const [i8; 6];
    let _22: &'static [u128; 2];
    let _23: *const i16;
    let _24: ([u128; 8], (char,));
    let _25: u16;
    let _26: *mut Adt45;
    let _27: i64;
    let _28: isize;
    let _29: *mut *mut &'static (u128,);
    let _30: *const i16;
    let _31: isize;
    let _32: &'static [u128; 2];
    let _33: *mut bool;
    let _34: f32;
    let _35: ([u128; 8], (char,));
    let _36: isize;
    let _37: (char,);
    let _38: char;
    let _39: Adt32;
    let _40: &'static (u128,);
    let _41: *mut i16;
    let _42: bool;
    let _43: &'static Adt35;
    let _44: isize;
    let _45: bool;
    let _46: (u128,);
    let _47: f32;
    let _48: u32;
    let _49: isize;
    let _50: bool;
    let _51: (bool, i16, u64);
    let _52: u8;
    let _53: u32;
    let _54: (*const i16, &'static mut (i32,), (u128,), &'static Adt35);
    let _55: ([u128; 8], (char,));
    let _56: *const &'static mut (i32,);
    let _57: i64;
    let _58: &'static u64;
    let _59: i128;
    let _60: Adt45;
    let _61: *mut Adt45;
    let _62: &'static mut [isize; 3];
    let _63: isize;
    let _64: &'static [isize; 3];
    let _65: [u64; 7];
    let _66: i64;
    let _67: (char,);
    let _68: isize;
    let _69: f32;
    let _70: [u64; 8];
    let _71: *mut bool;
    let _72: char;
    let _73: &'static mut f64;
    let _74: i128;
    let _75: *const i16;
    let _76: [u16; 8];
    let _77: f64;
    let _78: *mut *mut &'static (u128,);
    let _79: usize;
    let _80: (char,);
    let _81: i32;
    let _82: bool;
    let _83: usize;
    let _84: isize;
    let _85: isize;
    let _86: f32;
    let _87: ();
    let _88: ();
    {
    RET = [31695_u16];
    _2 = 1065320968_i32 as f64;
    _3 = (-107537428216790618777875834228538993694_i128) as f64;
    _3 = _2;
    RET = [65453_u16];
    _4 = (-19891_i16) as f32;
    _3 = _2 + _2;
    _2 = _3;
    _3 = _2 - _2;
    _3 = _2 - _2;
    RET = [963_u16];
    _3 = _2 + _2;
    RET = [46718_u16];
    Goto(bb1)
    }
    bb1 = {
    _2 = 56620_u16 as f64;
    RET = [23129_u16];
    RET = [11176_u16];
    _8 = -93_isize;
    _2 = _3 * _3;
    _8 = 41_isize;
    RET = [48691_u16];
    RET = [49101_u16];
    RET = [48779_u16];
    _8 = false as isize;
    Goto(bb2)
    }
    bb2 = {
    _8 = 125_isize ^ (-9223372036854775808_isize);
    RET = [46248_u16];
    _8 = (-74_isize) >> 147374524722193256824506656383073738012_u128;
    RET = [40030_u16];
    _9 = _2 - _2;
    _2 = _9 - _9;
    RET = [20269_u16];
    _2 = _9;
    _2 = _3 - _9;
    _9 = _2 - _2;
    _9 = -_2;
    _10.0 = _4 * _4;
    _9 = -_2;
    _8 = !9223372036854775807_isize;
    _3 = _9 + _9;
    _8 = (-9223372036854775808_isize);
    _9 = _2 + _2;
    _10.0 = _4;
    _4 = _10.0 * _10.0;
    _3 = _2 + _9;
    _9 = 15541_u16 as f64;
    _3 = _2 * _2;
    _8 = 9223372036854775807_isize;
    RET = [60716_u16];
    _13 = _8 as u8;
    _2 = -_3;
    _2 = _3 - _3;
    Goto(bb3)
    }
    bb3 = {
    RET = [41621_u16];
    _10.0 = -_4;
    _12 = 3764600444_u32 as isize;
    _10.0 = _4 - _4;
    _8 = _12;
    _12 = 6_usize as isize;
    _12 = !_8;
    _13 = !182_u8;
    _12 = _8 & _8;
    _14 = true;
    _2 = _3 - _3;
    RET = [38601_u16];
    _10.0 = _4;
    _4 = _10.0 - _10.0;
    _12 = _8;
    _10.0 = _12 as f32;
    _14 = _2 >= _3;
    _16 = [2541_i16,22172_i16];
    _2 = _3 + _3;
    Goto(bb4)
    }
    bb4 = {
    _3 = _2 - _2;
    _3 = _2 - _2;
    _2 = _13 as f64;
    Goto(bb5)
    }
    bb5 = {
    _2 = (-1688664851_i32) as f64;
    _15 = [_8,_8,_8];
    _15 = [_12,_12,_12];
    _13 = 146_u8;
    _19.fld3.0 = '\u{9a792}';
    Goto(bb6)
    }
    bb6 = {
    _14 = !true;
    _8 = _12 ^ _12;
    _17 = !13521237390283014834875281648506837024_u128;
    _16 = [19362_i16,(-3175_i16)];
    _13 = 133_u8 - 92_u8;
    _15 = [_8,_8,_12];
    _9 = -_3;
    _12 = -_8;
    _8 = -_12;
    _13 = 133_u8 + 154_u8;
    _18 = 34752_u16 & 30244_u16;
    _19.fld1 = -_3;
    _18 = 54031_u16 & 51657_u16;
    Goto(bb7)
    }
    bb7 = {
    _3 = -_19.fld1;
    _19.fld0 = (_17,);
    _20 = _17;
    _13 = !43_u8;
    _9 = _3 + _3;
    _9 = _19.fld1 - _19.fld1;
    _20 = _17 >> _12;
    _20 = _17;
    _2 = -_9;
    _20 = _17 ^ _19.fld0.0;
    _12 = 17310695628525801466_u64 as isize;
    _18 = 30251_u16;
    _19.fld0.0 = _20;
    RET = [_18];
    _9 = -_3;
    _16 = [(-26638_i16),(-9777_i16)];
    _4 = _10.0 * _10.0;
    _20 = 1344906183_i32 as u128;
    Goto(bb8)
    }
    bb8 = {
    _15 = [_8,_8,_8];
    _12 = !_8;
    _14 = !false;
    _12 = _10.0 as isize;
    RET = [_18];
    _20 = _19.fld0.0 & _17;
    _20 = 12215_i16 as u128;
    _19.fld3 = ('\u{21ba8}',);
    _17 = _19.fld0.0 * _20;
    _8 = _12 + _12;
    _15 = [_8,_12,_12];
    _14 = !false;
    _13 = !40_u8;
    _19.fld0 = (_17,);
    _18 = 33633_u16 | 11203_u16;
    _3 = -_19.fld1;
    _4 = _10.0 - _10.0;
    _24.1.0 = _19.fld3.0;
    _2 = _19.fld1 + _3;
    _19.fld1 = _2;
    _24.0 = [_20,_20,_17,_20,_17,_19.fld0.0,_19.fld0.0,_17];
    _25 = _18 * _18;
    _14 = false | false;
    Goto(bb9)
    }
    bb9 = {
    _24.1 = (_19.fld3.0,);
    _18 = (-26966319203514802980340434570018345256_i128) as u16;
    _24.0 = [_17,_17,_20,_17,_19.fld0.0,_17,_19.fld0.0,_19.fld0.0];
    _25 = _18 - _18;
    _13 = 26_u8;
    _19.fld3.0 = _24.1.0;
    _24.0 = [_19.fld0.0,_17,_17,_17,_19.fld0.0,_17,_17,_19.fld0.0];
    _20 = _17 >> _17;
    _24.1 = (_19.fld3.0,);
    _13 = 69_u8 >> _20;
    _20 = !_19.fld0.0;
    _14 = !true;
    _24.1 = _19.fld3;
    Goto(bb10)
    }
    bb10 = {
    _18 = _25;
    _20 = _17;
    _19.fld0 = (_17,);
    _19.fld0 = (_17,);
    _16 = [(-18339_i16),(-7638_i16)];
    _16 = [19850_i16,27213_i16];
    _16 = [(-11557_i16),6759_i16];
    _2 = -_19.fld1;
    _17 = _19.fld0.0;
    _8 = _12 | _12;
    _24.1.0 = _19.fld3.0;
    _12 = _8;
    Goto(bb11)
    }
    bb11 = {
    _13 = 2049594042_i32 as u8;
    _19.fld1 = _9 * _3;
    _18 = _25;
    _19.fld0.0 = _17 | _20;
    _24.1.0 = _19.fld3.0;
    _27 = -3682638234723252768_i64;
    _24.0 = [_19.fld0.0,_17,_19.fld0.0,_19.fld0.0,_19.fld0.0,_20,_17,_19.fld0.0];
    _13 = !83_u8;
    _17 = _19.fld0.0;
    _28 = 1010558301_u32 as isize;
    _12 = (-93832724783333754201587565191432668559_i128) as isize;
    _31 = _8 >> _19.fld0.0;
    _29 = Move(_1);
    _27 = 3997086489970627984_i64;
    match _27 {
    0 => bb12,
    1 => bb13,
    2 => bb14,
    3997086489970627984 => bb16,
    _ => bb15
    }
    }
    bb12 = {
    _8 = 125_isize ^ (-9223372036854775808_isize);
    RET = [46248_u16];
    _8 = (-74_isize) >> 147374524722193256824506656383073738012_u128;
    RET = [40030_u16];
    _9 = _2 - _2;
    _2 = _9 - _9;
    RET = [20269_u16];
    _2 = _9;
    _2 = _3 - _9;
    _9 = _2 - _2;
    _9 = -_2;
    _10.0 = _4 * _4;
    _9 = -_2;
    _8 = !9223372036854775807_isize;
    _3 = _9 + _9;
    _8 = (-9223372036854775808_isize);
    _9 = _2 + _2;
    _10.0 = _4;
    _4 = _10.0 * _10.0;
    _3 = _2 + _9;
    _9 = 15541_u16 as f64;
    _3 = _2 * _2;
    _8 = 9223372036854775807_isize;
    RET = [60716_u16];
    _13 = _8 as u8;
    _2 = -_3;
    _2 = _3 - _3;
    Goto(bb3)
    }
    bb13 = {
    _24.1 = (_19.fld3.0,);
    _18 = (-26966319203514802980340434570018345256_i128) as u16;
    _24.0 = [_17,_17,_20,_17,_19.fld0.0,_17,_19.fld0.0,_19.fld0.0];
    _25 = _18 - _18;
    _13 = 26_u8;
    _19.fld3.0 = _24.1.0;
    _24.0 = [_19.fld0.0,_17,_17,_17,_19.fld0.0,_17,_17,_19.fld0.0];
    _20 = _17 >> _17;
    _24.1 = (_19.fld3.0,);
    _13 = 69_u8 >> _20;
    _20 = !_19.fld0.0;
    _14 = !true;
    _24.1 = _19.fld3;
    Goto(bb10)
    }
    bb14 = {
    _15 = [_8,_8,_8];
    _12 = !_8;
    _14 = !false;
    _12 = _10.0 as isize;
    RET = [_18];
    _20 = _19.fld0.0 & _17;
    _20 = 12215_i16 as u128;
    _19.fld3 = ('\u{21ba8}',);
    _17 = _19.fld0.0 * _20;
    _8 = _12 + _12;
    _15 = [_8,_12,_12];
    _14 = !false;
    _13 = !40_u8;
    _19.fld0 = (_17,);
    _18 = 33633_u16 | 11203_u16;
    _3 = -_19.fld1;
    _4 = _10.0 - _10.0;
    _24.1.0 = _19.fld3.0;
    _2 = _19.fld1 + _3;
    _19.fld1 = _2;
    _24.0 = [_20,_20,_17,_20,_17,_19.fld0.0,_19.fld0.0,_17];
    _25 = _18 * _18;
    _14 = false | false;
    Goto(bb9)
    }
    bb15 = {
    _2 = (-1688664851_i32) as f64;
    _15 = [_8,_8,_8];
    _15 = [_12,_12,_12];
    _13 = 146_u8;
    _19.fld3.0 = '\u{9a792}';
    Goto(bb6)
    }
    bb16 = {
    _1 = Move(_29);
    _18 = _25 | _25;
    _9 = _18 as f64;
    _27 = 1961477294_i32 as i64;
    _29 = Move(_1);
    _24.0 = [_17,_19.fld0.0,_19.fld0.0,_17,_19.fld0.0,_17,_17,_20];
    _24.1 = _19.fld3;
    _13 = 106_u8 | 182_u8;
    _19.fld0.0 = _17 + _17;
    _10.0 = _4 * _4;
    _12 = _31;
    _24.1 = (_19.fld3.0,);
    _25 = (-6389_i16) as u16;
    _20 = _17;
    _20 = _17;
    _17 = (-2926_i16) as u128;
    _3 = _19.fld1 - _19.fld1;
    _18 = _25;
    _15 = [_8,_12,_31];
    Goto(bb17)
    }
    bb17 = {
    _10.0 = (-326016009_i32) as f32;
    _14 = _3 <= _19.fld1;
    _19.fld1 = _2;
    _19.fld1 = _13 as f64;
    _34 = _4 * _10.0;
    _19.fld0 = (_20,);
    _2 = _18 as f64;
    _25 = _18 >> _20;
    _27 = -(-5668371491509667729_i64);
    _33 = core::ptr::addr_of_mut!(_14);
    (*_33) = false | false;
    _19.fld1 = _3 - _3;
    _10.0 = -_34;
    _35 = (_24.0, _19.fld3);
    (*_33) = !false;
    (*_33) = true;
    _18 = _25 * _25;
    _1 = Move(_29);
    _29 = Move(_1);
    _19.fld3.0 = _35.1.0;
    _19.fld3.0 = _24.1.0;
    (*_33) = !true;
    _36 = 10213_i16 as isize;
    (*_33) = _8 <= _8;
    _28 = _8 ^ _31;
    (*_33) = true & true;
    (*_33) = true;
    Call(_28 = core::intrinsics::transmute(_36), ReturnTo(bb18), UnwindUnreachable())
    }
    bb18 = {
    _4 = _34 - _10.0;
    _3 = _19.fld1;
    _25 = _18 + _18;
    (*_33) = _19.fld1 > _19.fld1;
    (*_33) = _3 <= _19.fld1;
    _24.1 = _19.fld3;
    _31 = _8 - _12;
    (*_33) = true ^ true;
    (*_33) = _31 <= _12;
    _24.1.0 = _19.fld3.0;
    _20 = _19.fld0.0 ^ _19.fld0.0;
    _1 = Move(_29);
    (*_33) = false;
    _37.0 = _35.1.0;
    _13 = _27 as u8;
    (*_33) = !true;
    (*_33) = false;
    _15 = [_36,_28,_31];
    (*_33) = true | false;
    _3 = _27 as f64;
    _35.0 = _24.0;
    (*_33) = true ^ false;
    (*_33) = !true;
    _3 = _19.fld1 * _19.fld1;
    _27 = (-8350781727340770860_i64) * (-1821577001881011542_i64);
    _19.fld0.0 = 16017_i16 as u128;
    _15 = [_8,_31,_31];
    _19.fld0.0 = _17 * _20;
    Goto(bb19)
    }
    bb19 = {
    _10.0 = 2279912026_u32 as f32;
    _35.1 = (_37.0,);
    _3 = _19.fld1 - _19.fld1;
    _37.0 = _19.fld3.0;
    _34 = 31852_i16 as f32;
    _35.1.0 = _37.0;
    _34 = _27 as f32;
    (*_33) = _18 > _18;
    (*_33) = _3 >= _19.fld1;
    _39 = Adt32::Variant0 { fld0: _27,fld1: 5_usize,fld2: 807788734_u32,fld3: _19.fld0,fld4: _13,fld5: 1265902462_i32 };
    _35.1 = (_19.fld3.0,);
    _16 = [22329_i16,(-25588_i16)];
    _28 = _31 ^ _12;
    _19.fld1 = (-2353_i16) as f64;
    _37 = (_24.1.0,);
    _20 = _12 as u128;
    place!(Field::<i32>(Variant(_39, 0), 5)) = 61466188_i32;
    _37 = _19.fld3;
    (*_33) = !true;
    _9 = _27 as f64;
    place!(Field::<(u128,)>(Variant(_39, 0), 3)).0 = _19.fld0.0 * _19.fld0.0;
    place!(Field::<u8>(Variant(_39, 0), 4)) = _13;
    (*_33) = true & true;
    _29 = Move(_1);
    _45 = (*_33);
    _31 = -_28;
    _3 = _2;
    _37 = (_35.1.0,);
    match Field::<i32>(Variant(_39, 0), 5) {
    0 => bb13,
    1 => bb11,
    2 => bb9,
    3 => bb20,
    4 => bb21,
    5 => bb22,
    61466188 => bb24,
    _ => bb23
    }
    }
    bb20 = {
    _24.1 = (_19.fld3.0,);
    _18 = (-26966319203514802980340434570018345256_i128) as u16;
    _24.0 = [_17,_17,_20,_17,_19.fld0.0,_17,_19.fld0.0,_19.fld0.0];
    _25 = _18 - _18;
    _13 = 26_u8;
    _19.fld3.0 = _24.1.0;
    _24.0 = [_19.fld0.0,_17,_17,_17,_19.fld0.0,_17,_17,_19.fld0.0];
    _20 = _17 >> _17;
    _24.1 = (_19.fld3.0,);
    _13 = 69_u8 >> _20;
    _20 = !_19.fld0.0;
    _14 = !true;
    _24.1 = _19.fld3;
    Goto(bb10)
    }
    bb21 = {
    RET = [41621_u16];
    _10.0 = -_4;
    _12 = 3764600444_u32 as isize;
    _10.0 = _4 - _4;
    _8 = _12;
    _12 = 6_usize as isize;
    _12 = !_8;
    _13 = !182_u8;
    _12 = _8 & _8;
    _14 = true;
    _2 = _3 - _3;
    RET = [38601_u16];
    _10.0 = _4;
    _4 = _10.0 - _10.0;
    _12 = _8;
    _10.0 = _12 as f32;
    _14 = _2 >= _3;
    _16 = [2541_i16,22172_i16];
    _2 = _3 + _3;
    Goto(bb4)
    }
    bb22 = {
    _2 = 56620_u16 as f64;
    RET = [23129_u16];
    RET = [11176_u16];
    _8 = -93_isize;
    _2 = _3 * _3;
    _8 = 41_isize;
    RET = [48691_u16];
    RET = [49101_u16];
    RET = [48779_u16];
    _8 = false as isize;
    Goto(bb2)
    }
    bb23 = {
    _3 = _2 - _2;
    _3 = _2 - _2;
    _2 = _13 as f64;
    Goto(bb5)
    }
    bb24 = {
    _44 = _31 << _25;
    match Field::<i32>(Variant(_39, 0), 5) {
    0 => bb20,
    61466188 => bb25,
    _ => bb15
    }
    }
    bb25 = {
    _16 = [(-28620_i16),(-8069_i16)];
    place!(Field::<i32>(Variant(_39, 0), 5)) = 1265991992_u32 as i32;
    _25 = 117_i8 as u16;
    _17 = _20;
    _11 = core::ptr::addr_of!(_39);
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 31115_i16 as usize;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = !1541789767_i32;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = (*_33) as i32;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_17,);
    (*_11) = Adt32::Variant2 { fld0: (*_33),fld1: 2694262065_u32,fld2: _13,fld3: _18,fld4: _19.fld3 };
    _35 = (_24.0, Field::<(char,)>(Variant((*_11), 2), 4));
    (*_11) = Adt32::Variant3 { fld0: _13,fld1: _18,fld2: _4,fld3: 56_i8,fld4: 1847883496_u32,fld5: 1162453049_i32,fld6: 5_usize };
    _19.fld2 = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_11), 3), 5)));
    place!(Field::<i8>(Variant((*_11), 3), 3)) = 121_i8 + (-83_i8);
    place!(Field::<f32>(Variant((*_11), 3), 2)) = _4;
    place!(Field::<u8>(Variant((*_11), 3), 0)) = !_13;
    place!(Field::<u16>(Variant(_39, 3), 1)) = _18 - _18;
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 3861429007_u32 - 4126575650_u32;
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: 6_usize,fld2: 985252741_u32,fld3: _19.fld0,fld4: _13,fld5: (-1941552697_i32) };
    place!(Field::<i32>(Variant((*_11), 0), 5)) = _4 as i32;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = _19.fld0;
    _46.0 = _18 as u128;
    _44 = _28 & _12;
    (*_11) = Adt32::Variant3 { fld0: _13,fld1: _25,fld2: _4,fld3: (-123_i8),fld4: 2413254426_u32,fld5: 1644561774_i32,fld6: 7529654782681409272_usize };
    place!(Field::<i8>(Variant((*_11), 3), 3)) = (-80_i8);
    _19.fld2 = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_11), 3), 5)));
    Goto(bb26)
    }
    bb26 = {
    (*_33) = !_45;
    place!(Field::<f32>(Variant((*_11), 3), 2)) = _4 - _4;
    place!(Field::<usize>(Variant((*_11), 3), 6)) = 14945355529328983001_usize * 7176231312751000890_usize;
    place!(Field::<f32>(Variant((*_11), 3), 2)) = -_10.0;
    place!(Field::<u16>(Variant((*_11), 3), 1)) = (-13532_i16) as u16;
    place!(Field::<i32>(Variant((*_11), 3), 5)) = -800998275_i32;
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 1831086266_u32 + 316670623_u32;
    place!(Field::<f32>(Variant((*_11), 3), 2)) = -_34;
    _17 = !_19.fld0.0;
    place!(Field::<i8>(Variant((*_11), 3), 3)) = 126_i8 | 91_i8;
    Goto(bb27)
    }
    bb27 = {
    place!(Field::<i8>(Variant((*_11), 3), 3)) = (-98_i8) & 1_i8;
    _25 = _18;
    Goto(bb28)
    }
    bb28 = {
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 1481092984_u32 & 132805224_u32;
    (*_11) = Adt32::Variant1 { fld0: 1272886512_i32,fld1: _15,fld2: Move(_19.fld2) };
    _46.0 = !_20;
    _51 = ((*_33), (-1812_i16), 9301230794591898395_u64);
    (*_33) = _19.fld0.0 != _17;
    _52 = 5_usize as u8;
    match _51.1 {
    0 => bb17,
    1 => bb8,
    340282366920938463463374607431768209644 => bb30,
    _ => bb29
    }
    }
    bb29 = {
    _10.0 = 2279912026_u32 as f32;
    _35.1 = (_37.0,);
    _3 = _19.fld1 - _19.fld1;
    _37.0 = _19.fld3.0;
    _34 = 31852_i16 as f32;
    _35.1.0 = _37.0;
    _34 = _27 as f32;
    (*_33) = _18 > _18;
    (*_33) = _3 >= _19.fld1;
    _39 = Adt32::Variant0 { fld0: _27,fld1: 5_usize,fld2: 807788734_u32,fld3: _19.fld0,fld4: _13,fld5: 1265902462_i32 };
    _35.1 = (_19.fld3.0,);
    _16 = [22329_i16,(-25588_i16)];
    _28 = _31 ^ _12;
    _19.fld1 = (-2353_i16) as f64;
    _37 = (_24.1.0,);
    _20 = _12 as u128;
    place!(Field::<i32>(Variant(_39, 0), 5)) = 61466188_i32;
    _37 = _19.fld3;
    (*_33) = !true;
    _9 = _27 as f64;
    place!(Field::<(u128,)>(Variant(_39, 0), 3)).0 = _19.fld0.0 * _19.fld0.0;
    place!(Field::<u8>(Variant(_39, 0), 4)) = _13;
    (*_33) = true & true;
    _29 = Move(_1);
    _45 = (*_33);
    _31 = -_28;
    _3 = _2;
    _37 = (_35.1.0,);
    match Field::<i32>(Variant(_39, 0), 5) {
    0 => bb13,
    1 => bb11,
    2 => bb9,
    3 => bb20,
    4 => bb21,
    5 => bb22,
    61466188 => bb24,
    _ => bb23
    }
    }
    bb30 = {
    (*_33) = _46.0 != _46.0;
    _51.2 = 2530996059_u32 as u64;
    _31 = _28 & _28;
    place!(Field::<[isize; 3]>(Variant((*_11), 1), 1)) = _15;
    (*_33) = _51.0 & _45;
    place!(Field::<*const i32>(Variant((*_11), 1), 2)) = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_11), 1), 0)));
    _49 = -_44;
    _42 = !(*_33);
    place!(Field::<*const i32>(Variant((*_11), 1), 2)) = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_11), 1), 0)));
    match _51.1 {
    0 => bb31,
    340282366920938463463374607431768209644 => bb33,
    _ => bb32
    }
    }
    bb31 = {
    _15 = [_8,_8,_8];
    _12 = !_8;
    _14 = !false;
    _12 = _10.0 as isize;
    RET = [_18];
    _20 = _19.fld0.0 & _17;
    _20 = 12215_i16 as u128;
    _19.fld3 = ('\u{21ba8}',);
    _17 = _19.fld0.0 * _20;
    _8 = _12 + _12;
    _15 = [_8,_12,_12];
    _14 = !false;
    _13 = !40_u8;
    _19.fld0 = (_17,);
    _18 = 33633_u16 | 11203_u16;
    _3 = -_19.fld1;
    _4 = _10.0 - _10.0;
    _24.1.0 = _19.fld3.0;
    _2 = _19.fld1 + _3;
    _19.fld1 = _2;
    _24.0 = [_20,_20,_17,_20,_17,_19.fld0.0,_19.fld0.0,_17];
    _25 = _18 * _18;
    _14 = false | false;
    Goto(bb9)
    }
    bb32 = {
    _4 = _34 - _10.0;
    _3 = _19.fld1;
    _25 = _18 + _18;
    (*_33) = _19.fld1 > _19.fld1;
    (*_33) = _3 <= _19.fld1;
    _24.1 = _19.fld3;
    _31 = _8 - _12;
    (*_33) = true ^ true;
    (*_33) = _31 <= _12;
    _24.1.0 = _19.fld3.0;
    _20 = _19.fld0.0 ^ _19.fld0.0;
    _1 = Move(_29);
    (*_33) = false;
    _37.0 = _35.1.0;
    _13 = _27 as u8;
    (*_33) = !true;
    (*_33) = false;
    _15 = [_36,_28,_31];
    (*_33) = true | false;
    _3 = _27 as f64;
    _35.0 = _24.0;
    (*_33) = true ^ false;
    (*_33) = !true;
    _3 = _19.fld1 * _19.fld1;
    _27 = (-8350781727340770860_i64) * (-1821577001881011542_i64);
    _19.fld0.0 = 16017_i16 as u128;
    _15 = [_8,_31,_31];
    _19.fld0.0 = _17 * _20;
    Goto(bb19)
    }
    bb33 = {
    (*_33) = !_45;
    (*_11) = Adt32::Variant3 { fld0: _13,fld1: _18,fld2: _4,fld3: 120_i8,fld4: 1916918381_u32,fld5: (-790387158_i32),fld6: 635626368968871429_usize };
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 2302486156_u32 * 2073029287_u32;
    place!(Field::<usize>(Variant(_39, 3), 6)) = 5712454196386080450_usize | 6_usize;
    _39 = Adt32::Variant2 { fld0: (*_33),fld1: 3665641391_u32,fld2: _13,fld3: _18,fld4: _37 };
    _24.0 = [_46.0,_46.0,_19.fld0.0,_17,_17,_46.0,_17,_19.fld0.0];
    place!(Field::<bool>(Variant((*_11), 2), 0)) = _44 <= _49;
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: 8229763239302698005_usize,fld2: 639716253_u32,fld3: _19.fld0,fld4: _13,fld5: 205472807_i32 };
    place!(Field::<usize>(Variant((*_11), 0), 1)) = _28 as usize;
    match _51.1 {
    0 => bb16,
    340282366920938463463374607431768209644 => bb34,
    _ => bb8
    }
    }
    bb34 = {
    _19.fld3 = (_24.1.0,);
    place!(Field::<u8>(Variant(_39, 0), 4)) = _52;
    place!(Field::<(u128,)>(Variant(_39, 0), 3)).0 = _20;
    _37.0 = _19.fld3.0;
    _18 = _25 ^ _25;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 2062644855_u32 + 627545531_u32;
    _2 = _19.fld1;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 2434654674_u32;
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: 6_usize,fld2: 645216119_u32,fld3: _19.fld0,fld4: _13,fld5: 1997535575_i32 };
    place!(Field::<u32>(Variant((*_11), 0), 2)) = _46.0 as u32;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = -_27;
    Call(place!(Field::<u32>(Variant((*_11), 0), 2)) = core::intrinsics::transmute(_37.0), ReturnTo(bb35), UnwindUnreachable())
    }
    bb35 = {
    place!(Field::<(u128,)>(Variant(_39, 0), 3)) = (_17,);
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: 2_usize,fld2: 2844260410_u32,fld3: _19.fld0,fld4: _13,fld5: (-1048118902_i32) };
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = _19.fld0.0;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = -_27;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = !883767070_i32;
    (*_11) = Adt32::Variant3 { fld0: _52,fld1: _18,fld2: _4,fld3: 51_i8,fld4: 1184862344_u32,fld5: (-1686784129_i32),fld6: 7298175083785305635_usize };
    _51 = ((*_33), 24293_i16, 10463222851654453564_u64);
    _54.2 = (_19.fld0.0,);
    _54.2.0 = !_46.0;
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: 0_usize,fld2: 1752974769_u32,fld3: _19.fld0,fld4: _52,fld5: 1618226289_i32 };
    _54.0 = core::ptr::addr_of!(_51.1);
    _45 = Field::<(u128,)>(Variant((*_11), 0), 3).0 <= Field::<(u128,)>(Variant((*_11), 0), 3).0;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = _27;
    place!(Field::<usize>(Variant((*_11), 0), 1)) = Field::<i64>(Variant((*_11), 0), 0) as usize;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = (-1711537100_i32) as u32;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = (-1370272888_i32) | (-1568920410_i32);
    place!(Field::<u32>(Variant((*_11), 0), 2)) = _31 as u32;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_17,);
    _40 = &place!(Field::<(u128,)>(Variant((*_11), 0), 3));
    place!(Field::<u8>(Variant((*_11), 0), 4)) = !_52;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = Field::<i32>(Variant((*_11), 0), 5) as i64;
    place!(Field::<u8>(Variant((*_11), 0), 4)) = !_13;
    Goto(bb36)
    }
    bb36 = {
    _54.2.0 = Field::<(u128,)>(Variant((*_11), 0), 3).0 | _19.fld0.0;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = _54.2.0 & _19.fld0.0;
    _38 = _19.fld3.0;
    _37 = (_19.fld3.0,);
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = !_17;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = !242577488_u32;
    _11 = core::ptr::addr_of!((*_11));
    _51.0 = (*_33) & (*_33);
    _46 = (Field::<(u128,)>(Variant((*_11), 0), 3).0,);
    place!(Field::<u8>(Variant((*_11), 0), 4)) = _13;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = -358842915_i32;
    (*_33) = Field::<(u128,)>(Variant((*_11), 0), 3).0 <= Field::<(u128,)>(Variant((*_11), 0), 3).0;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = !_27;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = _27 - _27;
    _57 = Field::<i64>(Variant((*_11), 0), 0) * Field::<i64>(Variant((*_11), 0), 0);
    _17 = Field::<(u128,)>(Variant((*_11), 0), 3).0 & Field::<(u128,)>(Variant((*_11), 0), 3).0;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = (-1779132489_i32) | (-970794552_i32);
    (*_33) = !_45;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_54.2.0,);
    _51.1 = 70627148724900973400996426650655006570_i128 as i16;
    place!(Field::<u8>(Variant((*_11), 0), 4)) = _13 ^ _13;
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 2_usize + 12796594422763864722_usize;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 1067346156_u32 - 4152957244_u32;
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 13443924449164757034_usize;
    (*_11) = Adt32::Variant0 { fld0: _57,fld1: 15408071969175650082_usize,fld2: 4257894069_u32,fld3: _46,fld4: _52,fld5: 1221370268_i32 };
    place!(Field::<usize>(Variant((*_11), 0), 1)) = _25 as usize;
    _40 = &place!(Field::<(u128,)>(Variant((*_11), 0), 3));
    place!(Field::<i32>(Variant((*_11), 0), 5)) = (-707854420_i32) - 469069373_i32;
    _58 = &_51.2;
    _25 = !_18;
    match (*_58) {
    0 => bb1,
    1 => bb37,
    2 => bb38,
    3 => bb39,
    4 => bb40,
    10463222851654453564 => bb42,
    _ => bb41
    }
    }
    bb37 = {
    _2 = 56620_u16 as f64;
    RET = [23129_u16];
    RET = [11176_u16];
    _8 = -93_isize;
    _2 = _3 * _3;
    _8 = 41_isize;
    RET = [48691_u16];
    RET = [49101_u16];
    RET = [48779_u16];
    _8 = false as isize;
    Goto(bb2)
    }
    bb38 = {
    _10.0 = (-326016009_i32) as f32;
    _14 = _3 <= _19.fld1;
    _19.fld1 = _2;
    _19.fld1 = _13 as f64;
    _34 = _4 * _10.0;
    _19.fld0 = (_20,);
    _2 = _18 as f64;
    _25 = _18 >> _20;
    _27 = -(-5668371491509667729_i64);
    _33 = core::ptr::addr_of_mut!(_14);
    (*_33) = false | false;
    _19.fld1 = _3 - _3;
    _10.0 = -_34;
    _35 = (_24.0, _19.fld3);
    (*_33) = !false;
    (*_33) = true;
    _18 = _25 * _25;
    _1 = Move(_29);
    _29 = Move(_1);
    _19.fld3.0 = _35.1.0;
    _19.fld3.0 = _24.1.0;
    (*_33) = !true;
    _36 = 10213_i16 as isize;
    (*_33) = _8 <= _8;
    _28 = _8 ^ _31;
    (*_33) = true & true;
    (*_33) = true;
    Call(_28 = core::intrinsics::transmute(_36), ReturnTo(bb18), UnwindUnreachable())
    }
    bb39 = {
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 1481092984_u32 & 132805224_u32;
    (*_11) = Adt32::Variant1 { fld0: 1272886512_i32,fld1: _15,fld2: Move(_19.fld2) };
    _46.0 = !_20;
    _51 = ((*_33), (-1812_i16), 9301230794591898395_u64);
    (*_33) = _19.fld0.0 != _17;
    _52 = 5_usize as u8;
    match _51.1 {
    0 => bb17,
    1 => bb8,
    340282366920938463463374607431768209644 => bb30,
    _ => bb29
    }
    }
    bb40 = {
    place!(Field::<i8>(Variant((*_11), 3), 3)) = (-98_i8) & 1_i8;
    _25 = _18;
    Goto(bb28)
    }
    bb41 = {
    _24.1 = (_19.fld3.0,);
    _18 = (-26966319203514802980340434570018345256_i128) as u16;
    _24.0 = [_17,_17,_20,_17,_19.fld0.0,_17,_19.fld0.0,_19.fld0.0];
    _25 = _18 - _18;
    _13 = 26_u8;
    _19.fld3.0 = _24.1.0;
    _24.0 = [_19.fld0.0,_17,_17,_17,_19.fld0.0,_17,_17,_19.fld0.0];
    _20 = _17 >> _17;
    _24.1 = (_19.fld3.0,);
    _13 = 69_u8 >> _20;
    _20 = !_19.fld0.0;
    _14 = !true;
    _24.1 = _19.fld3;
    Goto(bb10)
    }
    bb42 = {
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 2022051328559255714_usize * 9073637767060589693_usize;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = (*_40).0 as u32;
    Goto(bb43)
    }
    bb43 = {
    _45 = (*_40).0 > (*_40).0;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = !_17;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = !2943934836_u32;
    (*_33) = !_45;
    _9 = _19.fld1 * _3;
    _64 = &_15;
    _59 = -(-135322223468553036939676176891015991388_i128);
    (*_33) = _45 & _45;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_17,);
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 2_usize;
    _57 = Field::<i64>(Variant((*_11), 0), 0);
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = _46.0 + _20;
    place!(Field::<u8>(Variant((*_11), 0), 4)) = _52 & _13;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = _57 << _49;
    place!(Field::<i32>(Variant((*_11), 0), 5)) = !(-1097465042_i32);
    place!(Field::<i64>(Variant((*_11), 0), 0)) = _57 ^ _57;
    Goto(bb44)
    }
    bb44 = {
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = _46;
    place!(Field::<u32>(Variant(_39, 0), 2)) = _59 as u32;
    _26 = core::ptr::addr_of_mut!(_60);
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 1472578984_u32 | 3889465844_u32;
    place!(Field::<(u128,)>(Variant(_39, 0), 3)).0 = _46.0 | _46.0;
    _65 = [(*_58),(*_58),(*_58),(*_58),(*_58),(*_58),(*_58)];
    _61 = core::ptr::addr_of_mut!((*_26));
    place!(Field::<u32>(Variant((*_11), 0), 2)) = (*_58) as u32;
    _54.2 = Field::<(u128,)>(Variant((*_11), 0), 3);
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 3913105810_u32 - 831234701_u32;
    (*_61) = Adt45::Variant2 { fld0: _19.fld1,fld1: _59 };
    place!(Field::<i128>(Variant((*_61), 2), 1)) = -_59;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = (*_58) as i128;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = -_57;
    _62 = &mut (*_64);
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_54.2.0,);
    match (*_58) {
    10463222851654453564 => bb45,
    _ => bb23
    }
    }
    bb45 = {
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = (_54.2.0,);
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 1159803773677107216_usize << Field::<(u128,)>(Variant((*_11), 0), 3).0;
    _17 = !Field::<(u128,)>(Variant((*_11), 0), 3).0;
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 1704445017026501705_usize << Field::<i128>(Variant((*_26), 2), 1);
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = _54.2;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = Field::<u8>(Variant((*_11), 0), 4) as f64;
    place!(Field::<usize>(Variant((*_11), 0), 1)) = 1968317024010577685_usize | 3_usize;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _59 + _59;
    Goto(bb46)
    }
    bb46 = {
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)).0 = _17;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _59;
    _65 = [(*_58),(*_58),_51.2,(*_58),(*_58),(*_58),(*_58)];
    _51.2 = !2908667146163562836_u64;
    _67.0 = _35.1.0;
    Goto(bb47)
    }
    bb47 = {
    _55.1 = (_67.0,);
    _54.0 = core::ptr::addr_of!(_51.1);
    place!(Field::<i64>(Variant((*_11), 0), 0)) = _57 ^ _57;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = _51.1 as u32;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _19.fld1;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = 1864710681_u32 << Field::<(u128,)>(Variant((*_11), 0), 3).0;
    (*_33) = _45;
    place!(Field::<u32>(Variant((*_11), 0), 2)) = !2327755520_u32;
    place!(Field::<i64>(Variant((*_11), 0), 0)) = -_57;
    _19.fld2 = core::ptr::addr_of!(place!(Field::<i32>(Variant((*_11), 0), 5)));
    _11 = core::ptr::addr_of!((*_11));
    _17 = _2 as u128;
    (*_11) = Adt32::Variant3 { fld0: _52,fld1: _18,fld2: _4,fld3: 70_i8,fld4: 2881333510_u32,fld5: 1508350254_i32,fld6: 7_usize };
    place!(Field::<u16>(Variant((*_11), 3), 1)) = _25 | _18;
    (*_11) = Adt32::Variant3 { fld0: _52,fld1: _25,fld2: _34,fld3: 18_i8,fld4: 3051592539_u32,fld5: 192809910_i32,fld6: 5_usize };
    place!(Field::<u16>(Variant((*_11), 3), 1)) = !_18;
    place!(Field::<u32>(Variant((*_11), 3), 4)) = !806568539_u32;
    place!(Field::<usize>(Variant((*_11), 3), 6)) = 4_usize >> Field::<u16>(Variant((*_11), 3), 1);
    place!(Field::<i32>(Variant((*_11), 3), 5)) = Field::<u8>(Variant((*_11), 3), 0) as i32;
    place!(Field::<f32>(Variant((*_11), 3), 2)) = _4 * _4;
    place!(Field::<i8>(Variant((*_11), 3), 3)) = !46_i8;
    place!(Field::<u32>(Variant((*_11), 3), 4)) = 669681662_u32 | 2647942420_u32;
    _4 = Field::<f32>(Variant((*_11), 3), 2) + Field::<f32>(Variant((*_11), 3), 2);
    (*_11) = Adt32::Variant1 { fld0: (-863129677_i32),fld1: (*_62),fld2: Move(_19.fld2) };
    (*_26) = Adt45::Variant2 { fld0: _3,fld1: _59 };
    _54.0 = core::ptr::addr_of!(_51.1);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _59 + _59;
    _74 = !Field::<i128>(Variant((*_26), 2), 1);
    Goto(bb48)
    }
    bb48 = {
    _19.fld0 = _54.2;
    place!(Field::<i32>(Variant((*_11), 1), 0)) = (-985543413_i32) | (-1010751606_i32);
    _72 = _38;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = -_9;
    _2 = Field::<f64>(Variant((*_26), 2), 0) - Field::<f64>(Variant((*_26), 2), 0);
    _79 = 8657752441454345333_usize + 13169383578550724906_usize;
    (*_11) = Adt32::Variant2 { fld0: (*_33),fld1: 2097719011_u32,fld2: _52,fld3: _18,fld4: _55.1 };
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _2 - _9;
    _66 = -_57;
    (*_33) = !_51.0;
    (*_33) = Field::<bool>(Variant((*_11), 2), 0) & _45;
    (*_11) = Adt32::Variant3 { fld0: _52,fld1: _25,fld2: _4,fld3: 92_i8,fld4: 1493683033_u32,fld5: (-1748530919_i32),fld6: _79 };
    place!(Field::<u32>(Variant((*_11), 3), 4)) = Field::<u8>(Variant((*_11), 3), 0) as u32;
    _20 = _19.fld0.0 | _54.2.0;
    (*_11) = Adt32::Variant2 { fld0: (*_33),fld1: 2048672788_u32,fld2: _13,fld3: _25,fld4: _37 };
    place!(Field::<(char,)>(Variant((*_11), 2), 4)) = (_37.0,);
    place!(Field::<i128>(Variant((*_26), 2), 1)) = _4 as i128;
    place!(Field::<(char,)>(Variant((*_11), 2), 4)).0 = _72;
    place!(Field::<u8>(Variant(_39, 2), 2)) = _13;
    _77 = -Field::<f64>(Variant((*_26), 2), 0);
    place!(Field::<(char,)>(Variant((*_11), 2), 4)).0 = _35.1.0;
    place!(Field::<i128>(Variant((*_26), 2), 1)) = !_59;
    Goto(bb49)
    }
    bb49 = {
    place!(Field::<bool>(Variant((*_11), 2), 0)) = (*_33);
    place!(Field::<u32>(Variant((*_11), 2), 1)) = 2065631416_u32 >> Field::<u16>(Variant((*_11), 2), 3);
    (*_11) = Adt32::Variant3 { fld0: _13,fld1: _25,fld2: _4,fld3: 119_i8,fld4: 3386051605_u32,fld5: (-1543901657_i32),fld6: _79 };
    _24.0 = [_54.2.0,_19.fld0.0,_19.fld0.0,_19.fld0.0,_20,_54.2.0,_19.fld0.0,_19.fld0.0];
    (*_33) = _45;
    place!(Field::<f64>(Variant((*_26), 2), 0)) = _57 as f64;
    _19.fld0.0 = Field::<f32>(Variant((*_11), 3), 2) as u128;
    _27 = -_66;
    (*_33) = _20 > _20;
    (*_11) = Adt32::Variant2 { fld0: (*_33),fld1: 3318203705_u32,fld2: _52,fld3: _25,fld4: _67 };
    (*_11) = Adt32::Variant0 { fld0: _27,fld1: _79,fld2: 3221023867_u32,fld3: _46,fld4: _52,fld5: (-1762963160_i32) };
    _77 = Field::<f64>(Variant((*_26), 2), 0) * Field::<f64>(Variant((*_26), 2), 0);
    _19.fld3 = (_35.1.0,);
    place!(Field::<f64>(Variant(_60, 2), 0)) = _3 * _9;
    place!(Field::<(u128,)>(Variant((*_11), 0), 3)) = _54.2;
    (*_11) = Adt32::Variant0 { fld0: _66,fld1: _79,fld2: 372308527_u32,fld3: _19.fld0,fld4: _13,fld5: (-1855063210_i32) };
    Goto(bb50)
    }
    bb50 = {

    Return()
    }
    }
}
pub fn main() {
    use std::hint::black_box;
    let mut val = 0;

    fn0(
        std::hint::black_box(true),
        std::hint::black_box(15899710223868673833_u64),
        std::hint::black_box((-18_isize)),
        std::hint::black_box(108_i8),
        std::hint::black_box((-29339_i16)),
        std::hint::black_box(5661_u16),
        std::hint::black_box((-3035050831618596586_i64)),
        std::hint::black_box(13591920152875763454741095363693127169_u128),
        std::hint::black_box(121_u8),
    );
}
#[derive(Debug)]
pub struct Adt27 {
    fld0: bool,
    fld1: char,
    fld2: isize,
    fld3: u64,
    fld4: (i32,),
    fld5: f32,
    fld6: i64,
    fld7: *mut i16,
}
#[derive(Debug)]
pub enum Adt29 {
    Variant0 {
        fld0: u32,
        fld1: i128,
        fld2: u8,
        fld3: i8,
        fld4: u16,
        fld5: i32,
    },
    Variant1 {
        fld0: *mut i16,
    },
    Variant2 {
        fld0: (i32,),
        fld1: f32,
        fld2: [isize; 3],
        fld3: u128,
        fld4: u64,
        fld5: *const i32,
        fld6: i64,
        fld7: f64,
    },
    Variant3 {
        fld0: u64,
    },
}
#[derive(Debug)]
pub enum Adt32 {
    Variant0 { fld0: i64, fld1: usize, fld2: u32, fld3: (u128,), fld4: u8, fld5: i32 },
    Variant1 { fld0: i32, fld1: [isize; 3], fld2: *const i32 },
    Variant2 { fld0: bool, fld1: u32, fld2: u8, fld3: u16, fld4: (char,) },
    Variant3 { fld0: u8, fld1: u16, fld2: f32, fld3: i8, fld4: u32, fld5: i32, fld6: usize },
}
#[derive(Debug)]
pub enum Adt35 {
    Variant0 {
        fld0: usize,
        fld1: i64,
    },
    Variant1 {
        fld0: u16,
        fld1: (char,),
        fld2: Adt29,
        fld3: i64,
        fld4: *mut i16,
    },
    Variant2 {
        fld0: (i32,),
        fld1: char,
        fld2: [isize; 3],
        fld3: i8,
        fld4: u16,
        fld5: u32,
    },
    Variant3 {
        fld0: bool,
        fld1: i128,
        fld2: isize,
        fld3: (char,),
        fld4: Adt27,
        fld5: Adt29,
        fld6: (u128,),
    },
}
#[derive(Debug)]
pub struct Adt42 {
    fld0: (u128,),
    fld1: f64,
    fld2: *const i32,
    fld3: (char,),
}
#[derive(Debug)]
pub enum Adt45 {
    Variant0 { fld0: f32, fld1: Adt42, fld2: usize, fld3: u16, fld4: Adt27, fld5: *mut i32 },
    Variant1 { fld0: bool, fld1: Adt27 },
    Variant2 { fld0: f64, fld1: i128 },
    Variant3 { fld0: (u128,), fld1: Adt27, fld2: isize, fld3: f32, fld4: Adt35, fld5: [isize; 3] },
}
#[derive(Debug)]
pub enum Adt58 {
    Variant0 {
        fld0: ([u128; 8], (char,)),
        fld1: char,
        fld2: Adt29,
        fld3: *mut i32,
        fld4: [u64; 8],
        fld5: i32,
    },
    Variant1 {
        fld0: *const i16,
        fld1: Adt27,
        fld2: isize,
        fld3: *const i32,
        fld4: (bool, i16, u64),
        fld5: f32,
    },
    Variant2 {
        fld0: [isize; 3],
        fld1: u8,
        fld2: *mut i16,
        fld3: Adt27,
        fld4: (bool, i16, u64),
    },
}
#[derive(Debug)]
pub enum Adt74 {
    Variant0 {
        fld0: *mut i32,
        fld1: *const Adt32,
        fld2: *const i128,
        fld3: [u64; 8],
        fld4: i16,
        fld5: *const Adt27,
        fld6: [isize; 3],
        fld7: [u16; 8],
    },
    Variant1 {
        fld0: [u64; 4],
        fld1: [u128; 2],
    },
    Variant2 {
        fld0: (i64, *const [i8; 6]),
        fld1: usize,
    },
    Variant3 {
        fld0: [i8; 6],
        fld1: f32,
        fld2: *const Adt32,
        fld3: [usize; 6],
        fld4: i16,
    },
}
