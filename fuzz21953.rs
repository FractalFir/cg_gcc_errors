#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, lazy_get)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::collections::hash_map::DefaultHasher;
    use std::hash::{Hash, Hasher};
    use std::sync::LazyLock;

    static mut H: LazyLock<DefaultHasher> = LazyLock::new(|| DefaultHasher::new());

    #[inline(never)]
    fn dump_var(
        val0: impl Hash,
        val1: impl Hash,
        val2: impl Hash,
        val3: impl Hash,
    ) {
        unsafe {
            val0.hash(LazyLock::force_mut(&mut H));
            val1.hash(LazyLock::force_mut(&mut H));
            val2.hash(LazyLock::force_mut(&mut H));
            val3.hash(LazyLock::force_mut(&mut H));
        }
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: u32,mut _4: u128,mut _5: u64,mut _6: i32) -> u8 {
mir! {
type RET = u8;
let _7: &'static (isize, u16, i32, u64);
let _8: ([bool; 5],);
let _9: u64;
let _10: f32;
let _11: f64;
let _12: [u32; 3];
let _13: [u64; 4];
let _14: u64;
let _15: &'static &'static mut [char; 3];
let _16: &'static i64;
let _17: (u16, *const char, *const i16, *const i16);
let _18: *const [char; 3];
let _19: Adt22;
let _20: i16;
let _21: i32;
let _22: [u128; 5];
let _23: (*const Adt21,);
let _24: char;
let _25: f64;
let _26: u128;
let _27: f64;
let _28: f32;
let _29: bool;
let _30: Adt56;
let _31: &'static [u8; 3];
let _32: bool;
let _33: u32;
let _34: f64;
let _35: Adt56;
let _36: *const Adt51;
let _37: i8;
let _38: &'static f64;
let _39: usize;
let _40: i16;
let _41: *const char;
let _42: i128;
let _43: &'static mut i128;
let _44: *mut usize;
let _45: f32;
let _46: bool;
let _47: (Adt44, *const &'static (isize, u16, i32, u64));
let _48: i16;
let _49: &'static f64;
let _50: f32;
let _51: Adt18;
let _52: Adt72;
let _53: bool;
let _54: ();
let _55: ();
{
_3 = 4268212448_u32 * 4029010994_u32;
_6 = (-424822142_i32);
_3 = 3364288818_u32 + 1199119804_u32;
_4 = 134339549187497793110504159405554055007_u128;
_5 = 11340532443836612378_u64 + 5896352601517874819_u64;
RET = !41_u8;
_5 = 17215538238585417808_u64 + 15021351856167317117_u64;
_2 = '\u{103904}';
_6 = 77_i8 as i32;
_5 = 2017291721393411631_u64 & 13859328403247841018_u64;
_8.0 = [true,false,true,true,false];
_1 = !true;
_4 = _3 as u128;
_8.0 = [_1,_1,_1,_1,_1];
_2 = '\u{1de93}';
Goto(bb1)
}
bb1 = {
_2 = '\u{3094b}';
_2 = '\u{97cf1}';
_8.0 = [_1,_1,_1,_1,_1];
_10 = RET as f32;
_4 = !248745586816733222422018072479830341077_u128;
_10 = 8647_u16 as f32;
_9 = _10 as u64;
Goto(bb2)
}
bb2 = {
_5 = !_9;
_1 = !false;
_8.0 = [_1,_1,_1,_1,_1];
_4 = !130265831640981780320586305904163485571_u128;
_2 = '\u{b8e61}';
_8.0 = [_1,_1,_1,_1,_1];
_9 = !_5;
_1 = false;
_1 = RET < RET;
_2 = '\u{9d6eb}';
Call(_3 = core::intrinsics::bswap(520828181_u32), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = _9 as f32;
_6 = 2097124518_i32 + (-1252036936_i32);
_1 = !false;
_11 = _4 as f64;
_11 = RET as f64;
_11 = 4480_i16 as f64;
_11 = 37641_u16 as f64;
RET = 165_u8;
RET = 59_u8 << _9;
_6 = !1684672081_i32;
_9 = _5 * _5;
_2 = '\u{ec1b4}';
_12 = [_3,_3,_3];
Goto(bb4)
}
bb4 = {
_13 = [_9,_9,_9,_9];
_12 = [_3,_3,_3];
_11 = 61777_u16 as f64;
RET = 37_u8;
_13 = [_5,_9,_9,_9];
_14 = _9 ^ _9;
_13 = [_14,_14,_9,_14];
_13 = [_9,_5,_14,_14];
_14 = _9 >> _3;
_13 = [_9,_14,_9,_14];
RET = 156_u8 >> _9;
_13 = [_14,_14,_9,_9];
_4 = _6 as u128;
_1 = true;
_3 = 2923659572_u32 ^ 1073575754_u32;
_2 = '\u{9b966}';
Call(_10 = fn1(_12, _8, _6, _3, _13, _3, _13, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_13 = [_14,_14,_9,_9];
_1 = !true;
_3 = 5955461_u32 << RET;
_4 = _6 as u128;
_14 = (-3_i8) as u64;
_12 = [_3,_3,_3];
_6 = (-1293909393_i32) << _9;
_12 = [_3,_3,_3];
_17.0 = 24984_u16 >> _9;
_17.2 = core::ptr::addr_of!(_20);
_17.3 = core::ptr::addr_of!(_20);
_2 = '\u{1cae6}';
_5 = _14 << _3;
_21 = _6 & _6;
Goto(bb6)
}
bb6 = {
_1 = !false;
Goto(bb7)
}
bb7 = {
_17.3 = core::ptr::addr_of!(_20);
_20 = (-11265_i16);
_14 = _9 - _5;
_22 = [_4,_4,_4,_4,_4];
_1 = !true;
_10 = _3 as f32;
_26 = _4 << RET;
_5 = _14 >> _14;
_3 = _5 as u32;
_25 = _5 as f64;
_20 = _25 as i16;
_4 = !_26;
_5 = !_14;
_9 = !_5;
_1 = true;
_17.1 = core::ptr::addr_of!(_24);
_11 = _25 * _25;
_20 = (-7020_i16);
_5 = _4 as u64;
_9 = _14 * _14;
_13 = [_9,_14,_9,_14];
_17.1 = core::ptr::addr_of!(_2);
_14 = _9 ^ _9;
_13 = [_14,_9,_14,_9];
_28 = _10 + _10;
match _20 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
340282366920938463463374607431768204436 => bb16,
_ => bb15
}
}
bb8 = {
_1 = !false;
Goto(bb7)
}
bb9 = {
_13 = [_14,_14,_9,_9];
_1 = !true;
_3 = 5955461_u32 << RET;
_4 = _6 as u128;
_14 = (-3_i8) as u64;
_12 = [_3,_3,_3];
_6 = (-1293909393_i32) << _9;
_12 = [_3,_3,_3];
_17.0 = 24984_u16 >> _9;
_17.2 = core::ptr::addr_of!(_20);
_17.3 = core::ptr::addr_of!(_20);
_2 = '\u{1cae6}';
_5 = _14 << _3;
_21 = _6 & _6;
Goto(bb6)
}
bb10 = {
_13 = [_9,_9,_9,_9];
_12 = [_3,_3,_3];
_11 = 61777_u16 as f64;
RET = 37_u8;
_13 = [_5,_9,_9,_9];
_14 = _9 ^ _9;
_13 = [_14,_14,_9,_14];
_13 = [_9,_5,_14,_14];
_14 = _9 >> _3;
_13 = [_9,_14,_9,_14];
RET = 156_u8 >> _9;
_13 = [_14,_14,_9,_9];
_4 = _6 as u128;
_1 = true;
_3 = 2923659572_u32 ^ 1073575754_u32;
_2 = '\u{9b966}';
Call(_10 = fn1(_12, _8, _6, _3, _13, _3, _13, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_10 = _9 as f32;
_6 = 2097124518_i32 + (-1252036936_i32);
_1 = !false;
_11 = _4 as f64;
_11 = RET as f64;
_11 = 4480_i16 as f64;
_11 = 37641_u16 as f64;
RET = 165_u8;
RET = 59_u8 << _9;
_6 = !1684672081_i32;
_9 = _5 * _5;
_2 = '\u{ec1b4}';
_12 = [_3,_3,_3];
Goto(bb4)
}
bb12 = {
_5 = !_9;
_1 = !false;
_8.0 = [_1,_1,_1,_1,_1];
_4 = !130265831640981780320586305904163485571_u128;
_2 = '\u{b8e61}';
_8.0 = [_1,_1,_1,_1,_1];
_9 = !_5;
_1 = false;
_1 = RET < RET;
_2 = '\u{9d6eb}';
Call(_3 = core::intrinsics::bswap(520828181_u32), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_2 = '\u{3094b}';
_2 = '\u{97cf1}';
_8.0 = [_1,_1,_1,_1,_1];
_10 = RET as f32;
_4 = !248745586816733222422018072479830341077_u128;
_10 = 8647_u16 as f32;
_9 = _10 as u64;
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_3 = 904820950_u32 - 2456388262_u32;
_14 = _9;
RET = !20_u8;
match _20 {
0 => bb8,
1 => bb17,
2 => bb18,
340282366920938463463374607431768204436 => bb20,
_ => bb19
}
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_5 = !_9;
_1 = !false;
_8.0 = [_1,_1,_1,_1,_1];
_4 = !130265831640981780320586305904163485571_u128;
_2 = '\u{b8e61}';
_8.0 = [_1,_1,_1,_1,_1];
_9 = !_5;
_1 = false;
_1 = RET < RET;
_2 = '\u{9d6eb}';
Call(_3 = core::intrinsics::bswap(520828181_u32), ReturnTo(bb3), UnwindUnreachable())
}
bb20 = {
_24 = _2;
_27 = _11;
_4 = !_26;
_29 = _21 >= _21;
_4 = _26 - _26;
_17.2 = core::ptr::addr_of!(_20);
_20 = -(-20501_i16);
Goto(bb21)
}
bb21 = {
_26 = 6_usize as u128;
_24 = _2;
_6 = _21;
_2 = _24;
_8.0 = [_29,_29,_1,_29,_29];
_17.1 = core::ptr::addr_of!(_24);
_9 = !_5;
_17.2 = core::ptr::addr_of!(_20);
_17.1 = core::ptr::addr_of!(_2);
_1 = _29;
_27 = _25;
_21 = _6 ^ _6;
_1 = _29;
_14 = _9 + _9;
_24 = _2;
_3 = 111148646_u32;
_5 = _9;
_9 = (-123_i8) as u64;
_22 = [_4,_26,_4,_26,_4];
Goto(bb22)
}
bb22 = {
_4 = _26 | _26;
_26 = _4 + _4;
_2 = _24;
_26 = _4 & _4;
_17.0 = !58708_u16;
_22 = [_26,_4,_4,_26,_26];
_10 = _28;
_6 = _21;
_26 = !_4;
_17.2 = core::ptr::addr_of!(_20);
_17.2 = core::ptr::addr_of!(_20);
_28 = -_10;
Goto(bb23)
}
bb23 = {
_28 = _10;
_26 = _17.0 as u128;
_3 = !3099253939_u32;
_35 = Adt56::Variant3 { fld0: _1,fld1: _26 };
RET = _14 as u8;
_26 = _4 & _4;
_27 = _11 - _25;
_1 = _25 > _11;
_20 = 3822_i16 | 14772_i16;
_33 = _3 ^ _3;
_26 = _4 + Field::<u128>(Variant(_35, 3), 1);
place!(Field::<bool>(Variant(_35, 3), 0)) = _1;
_21 = _6;
_8.0 = [Field::<bool>(Variant(_35, 3), 0),Field::<bool>(Variant(_35, 3), 0),_1,Field::<bool>(Variant(_35, 3), 0),_1];
Goto(bb24)
}
bb24 = {
_30 = Move(_35);
_30 = Adt56::Variant3 { fld0: _1,fld1: _26 };
_12 = [_33,_3,_33];
place!(Field::<bool>(Variant(_30, 3), 0)) = _1;
_33 = _3;
_17.1 = core::ptr::addr_of!(_24);
_27 = _11 + _25;
_20 = 57952606980089790683571627986363467946_i128 as i16;
RET = !223_u8;
_14 = (-47_i8) as u64;
_9 = _14 - _14;
place!(Field::<u128>(Variant(_30, 3), 1)) = _4 - _26;
_37 = 81_i8 + 81_i8;
_6 = _21;
_29 = Field::<bool>(Variant(_30, 3), 0);
_38 = &_25;
Goto(bb25)
}
bb25 = {
_33 = !_3;
_4 = !_26;
_39 = 8919869454358034820_usize;
_3 = 9223372036854775807_isize as u32;
_11 = (*_38) + (*_38);
_21 = -_6;
_37 = -(-123_i8);
_41 = core::ptr::addr_of!(_2);
_2 = _24;
Call(_9 = core::intrinsics::bswap(_5), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_4 = _26 << _37;
_32 = (*_38) < (*_38);
place!(Field::<u128>(Variant(_30, 3), 1)) = _26 ^ _4;
_5 = _9 ^ _9;
_21 = _6 + _6;
_20 = _37 as i16;
_33 = !_3;
_17.0 = 55619_u16 ^ 15446_u16;
_5 = !_14;
_35 = Move(_30);
_19 = Adt22::Variant3 { fld0: RET,fld1: (*_41),fld2: _17.0 };
_17.2 = core::ptr::addr_of!(_20);
_24 = (*_41);
(*_41) = Field::<char>(Variant(_19, 3), 1);
place!(Field::<bool>(Variant(_35, 3), 0)) = _1;
_21 = _6 - _6;
_11 = (*_38) * (*_38);
place!(Field::<u8>(Variant(_19, 3), 0)) = RET;
match _39 {
0 => bb13,
1 => bb27,
2 => bb28,
3 => bb29,
8919869454358034820 => bb31,
_ => bb30
}
}
bb27 = {
Return()
}
bb28 = {
_10 = _9 as f32;
_6 = 2097124518_i32 + (-1252036936_i32);
_1 = !false;
_11 = _4 as f64;
_11 = RET as f64;
_11 = 4480_i16 as f64;
_11 = 37641_u16 as f64;
RET = 165_u8;
RET = 59_u8 << _9;
_6 = !1684672081_i32;
_9 = _5 * _5;
_2 = '\u{ec1b4}';
_12 = [_3,_3,_3];
Goto(bb4)
}
bb29 = {
_28 = _10;
_26 = _17.0 as u128;
_3 = !3099253939_u32;
_35 = Adt56::Variant3 { fld0: _1,fld1: _26 };
RET = _14 as u8;
_26 = _4 & _4;
_27 = _11 - _25;
_1 = _25 > _11;
_20 = 3822_i16 | 14772_i16;
_33 = _3 ^ _3;
_26 = _4 + Field::<u128>(Variant(_35, 3), 1);
place!(Field::<bool>(Variant(_35, 3), 0)) = _1;
_21 = _6;
_8.0 = [Field::<bool>(Variant(_35, 3), 0),Field::<bool>(Variant(_35, 3), 0),_1,Field::<bool>(Variant(_35, 3), 0),_1];
Goto(bb24)
}
bb30 = {
_13 = [_14,_14,_9,_9];
_1 = !true;
_3 = 5955461_u32 << RET;
_4 = _6 as u128;
_14 = (-3_i8) as u64;
_12 = [_3,_3,_3];
_6 = (-1293909393_i32) << _9;
_12 = [_3,_3,_3];
_17.0 = 24984_u16 >> _9;
_17.2 = core::ptr::addr_of!(_20);
_17.3 = core::ptr::addr_of!(_20);
_2 = '\u{1cae6}';
_5 = _14 << _3;
_21 = _6 & _6;
Goto(bb6)
}
bb31 = {
_6 = _21;
(*_41) = Field::<char>(Variant(_19, 3), 1);
(*_41) = Field::<char>(Variant(_19, 3), 1);
(*_41) = _24;
_5 = _9 + _9;
_37 = _20 as i8;
_32 = (*_38) <= _11;
_5 = !_9;
_6 = Field::<u8>(Variant(_19, 3), 0) as i32;
_6 = _21 >> _21;
_20 = _28 as i16;
(*_41) = Field::<char>(Variant(_19, 3), 1);
Goto(bb32)
}
bb32 = {
_3 = _33 << _6;
(*_41) = _24;
_4 = _26;
_40 = _20 >> Field::<u16>(Variant(_19, 3), 2);
_5 = _14 | _14;
(*_41) = Field::<char>(Variant(_19, 3), 1);
_32 = !_1;
_44 = core::ptr::addr_of_mut!(_39);
(*_41) = _24;
_17.3 = core::ptr::addr_of!(_20);
(*_41) = _24;
_26 = !Field::<u128>(Variant(_35, 3), 1);
_34 = (*_38);
Goto(bb33)
}
bb33 = {
(*_41) = Field::<char>(Variant(_19, 3), 1);
(*_41) = Field::<char>(Variant(_19, 3), 1);
(*_44) = 7961714352090327465_usize | 3_usize;
_12 = [_3,_3,_3];
RET = !Field::<u8>(Variant(_19, 3), 0);
_34 = _27 + (*_38);
place!(Field::<u128>(Variant(_35, 3), 1)) = _26;
(*_41) = Field::<char>(Variant(_19, 3), 1);
(*_41) = _24;
_30 = Move(_35);
(*_44) = 0_usize;
(*_44) = RET as usize;
_17.1 = Move(_41);
_33 = _3;
place!(Field::<u8>(Variant(_19, 3), 0)) = RET ^ RET;
Goto(bb34)
}
bb34 = {
_48 = -_40;
_48 = _40 + _20;
_45 = -_10;
(*_44) = 8653356945350687572_usize;
Goto(bb35)
}
bb35 = {
(*_44) = 1_usize >> _6;
_40 = _48;
Call(_17.2 = core::intrinsics::arith_offset(_17.3, (-9223372036854775808_isize)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_29 = (*_44) <= (*_44);
place!(Field::<u128>(Variant(_30, 3), 1)) = _26 ^ _26;
_47.0.fld0 = Adt18::Variant1 { fld0: 6816757782112100369_i64,fld1: _10,fld2: _21,fld3: _37 };
_42 = 1808624905233146599_i64 as i128;
_45 = _28;
(*_44) = 6_usize;
_10 = Field::<f32>(Variant(_47.0.fld0, 1), 1) * _28;
_10 = _45;
match (*_44) {
0 => bb37,
1 => bb38,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
6 => bb44,
_ => bb43
}
}
bb37 = {
Return()
}
bb38 = {
_1 = !false;
Goto(bb7)
}
bb39 = {
_33 = !_3;
_4 = !_26;
_39 = 8919869454358034820_usize;
_3 = 9223372036854775807_isize as u32;
_11 = (*_38) + (*_38);
_21 = -_6;
_37 = -(-123_i8);
_41 = core::ptr::addr_of!(_2);
_2 = _24;
Call(_9 = core::intrinsics::bswap(_5), ReturnTo(bb26), UnwindUnreachable())
}
bb40 = {
_13 = [_14,_14,_9,_9];
_1 = !true;
_3 = 5955461_u32 << RET;
_4 = _6 as u128;
_14 = (-3_i8) as u64;
_12 = [_3,_3,_3];
_6 = (-1293909393_i32) << _9;
_12 = [_3,_3,_3];
_17.0 = 24984_u16 >> _9;
_17.2 = core::ptr::addr_of!(_20);
_17.3 = core::ptr::addr_of!(_20);
_2 = '\u{1cae6}';
_5 = _14 << _3;
_21 = _6 & _6;
Goto(bb6)
}
bb41 = {
_5 = !_9;
_1 = !false;
_8.0 = [_1,_1,_1,_1,_1];
_4 = !130265831640981780320586305904163485571_u128;
_2 = '\u{b8e61}';
_8.0 = [_1,_1,_1,_1,_1];
_9 = !_5;
_1 = false;
_1 = RET < RET;
_2 = '\u{9d6eb}';
Call(_3 = core::intrinsics::bswap(520828181_u32), ReturnTo(bb3), UnwindUnreachable())
}
bb42 = {
_13 = [_9,_9,_9,_9];
_12 = [_3,_3,_3];
_11 = 61777_u16 as f64;
RET = 37_u8;
_13 = [_5,_9,_9,_9];
_14 = _9 ^ _9;
_13 = [_14,_14,_9,_14];
_13 = [_9,_5,_14,_14];
_14 = _9 >> _3;
_13 = [_9,_14,_9,_14];
RET = 156_u8 >> _9;
_13 = [_14,_14,_9,_9];
_4 = _6 as u128;
_1 = true;
_3 = 2923659572_u32 ^ 1073575754_u32;
_2 = '\u{9b966}';
Call(_10 = fn1(_12, _8, _6, _3, _13, _3, _13, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb43 = {
_5 = !_9;
_1 = !false;
_8.0 = [_1,_1,_1,_1,_1];
_4 = !130265831640981780320586305904163485571_u128;
_2 = '\u{b8e61}';
_8.0 = [_1,_1,_1,_1,_1];
_9 = !_5;
_1 = false;
_1 = RET < RET;
_2 = '\u{9d6eb}';
Call(_3 = core::intrinsics::bswap(520828181_u32), ReturnTo(bb3), UnwindUnreachable())
}
bb44 = {
_42 = 158372485550032447751267258549058863378_i128;
_33 = _3 ^ _3;
place!(Field::<u128>(Variant(_30, 3), 1)) = Field::<u8>(Variant(_19, 3), 0) as u128;
_30 = Adt56::Variant3 { fld0: _32,fld1: _26 };
_50 = Field::<f32>(Variant(_47.0.fld0, 1), 1);
_50 = _28;
_21 = !Field::<i32>(Variant(_47.0.fld0, 1), 2);
place!(Field::<u128>(Variant(_30, 3), 1)) = !_4;
_4 = Field::<u16>(Variant(_19, 3), 2) as u128;
_10 = -_50;
match (*_44) {
0 => bb33,
1 => bb29,
2 => bb38,
3 => bb4,
4 => bb32,
6 => bb46,
_ => bb45
}
}
bb45 = {
_17.3 = core::ptr::addr_of!(_20);
_20 = (-11265_i16);
_14 = _9 - _5;
_22 = [_4,_4,_4,_4,_4];
_1 = !true;
_10 = _3 as f32;
_26 = _4 << RET;
_5 = _14 >> _14;
_3 = _5 as u32;
_25 = _5 as f64;
_20 = _25 as i16;
_4 = !_26;
_5 = !_14;
_9 = !_5;
_1 = true;
_17.1 = core::ptr::addr_of!(_24);
_11 = _25 * _25;
_20 = (-7020_i16);
_5 = _4 as u64;
_9 = _14 * _14;
_13 = [_9,_14,_9,_14];
_17.1 = core::ptr::addr_of!(_2);
_14 = _9 ^ _9;
_13 = [_14,_9,_14,_9];
_28 = _10 + _10;
match _20 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
340282366920938463463374607431768204436 => bb16,
_ => bb15
}
}
bb46 = {
_33 = _3;
_35 = Move(_30);
_2 = _24;
_47.0.fld0 = Adt18::Variant0 { fld0: _28,fld1: _40 };
_47.0.fld1[_39] = (*_44);
_47.0.fld1[_39] = (*_44);
_45 = _28 - _28;
_47.0.fld1[_39] = (*_44) / (*_44);
_11 = -(*_38);
_52.fld6 = _26;
_20 = Field::<i16>(Variant(_47.0.fld0, 0), 1) - _40;
_3 = _33;
_51 = Adt18::Variant1 { fld0: (-2561878839192702275_i64),fld1: _10,fld2: _6,fld3: _37 };
Goto(bb47)
}
bb47 = {
_50 = _45 - Field::<f32>(Variant(_51, 1), 1);
_49 = &(*_38);
_48 = _40 | _20;
_39 = _47.0.fld1[_39] + _47.0.fld1[_39];
match _42 {
0 => bb2,
1 => bb48,
2 => bb49,
158372485550032447751267258549058863378 => bb51,
_ => bb50
}
}
bb48 = {
_2 = '\u{3094b}';
_2 = '\u{97cf1}';
_8.0 = [_1,_1,_1,_1,_1];
_10 = RET as f32;
_4 = !248745586816733222422018072479830341077_u128;
_10 = 8647_u16 as f32;
_9 = _10 as u64;
Goto(bb2)
}
bb49 = {
_2 = '\u{3094b}';
_2 = '\u{97cf1}';
_8.0 = [_1,_1,_1,_1,_1];
_10 = RET as f32;
_4 = !248745586816733222422018072479830341077_u128;
_10 = 8647_u16 as f32;
_9 = _10 as u64;
Goto(bb2)
}
bb50 = {
_13 = [_9,_9,_9,_9];
_12 = [_3,_3,_3];
_11 = 61777_u16 as f64;
RET = 37_u8;
_13 = [_5,_9,_9,_9];
_14 = _9 ^ _9;
_13 = [_14,_14,_9,_14];
_13 = [_9,_5,_14,_14];
_14 = _9 >> _3;
_13 = [_9,_14,_9,_14];
RET = 156_u8 >> _9;
_13 = [_14,_14,_9,_9];
_4 = _6 as u128;
_1 = true;
_3 = 2923659572_u32 ^ 1073575754_u32;
_2 = '\u{9b966}';
Call(_10 = fn1(_12, _8, _6, _3, _13, _3, _13, _11), ReturnTo(bb5), UnwindUnreachable())
}
bb51 = {
_43 = &mut _42;
_14 = !_9;
_29 = Field::<bool>(Variant(_35, 3), 0);
_4 = Field::<u128>(Variant(_35, 3), 1);
Goto(bb52)
}
bb52 = {
Call(_54 = dump_var(Move(_8), Move(_9), Move(_29), Move(_5)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_54 = dump_var(Move(_21), Move(_39), Move(_4), Move(_3)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_54 = dump_var(Move(_20), Move(_12), Move(_13), Move(_42)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [u32; 3],mut _2: ([bool; 5],),mut _3: i32,mut _4: u32,mut _5: [u64; 4],mut _6: u32,mut _7: [u64; 4],mut _8: f64) -> f32 {
mir! {
type RET = f32;
let _9: &'static i64;
let _10: f32;
let _11: f64;
let _12: &'static mut &'static u32;
let _13: Adt37;
let _14: (Adt44, *const &'static (isize, u16, i32, u64));
let _15: usize;
let _16: i128;
let _17: *const [char; 3];
let _18: isize;
let _19: f64;
let _20: i128;
let _21: (*const Adt21,);
let _22: &'static mut i128;
let _23: u32;
let _24: i32;
let _25: isize;
let _26: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _27: [char; 3];
let _28: Adt21;
let _29: f32;
let _30: char;
let _31: *const Adt51;
let _32: [u64; 4];
let _33: (u64, f64);
let _34: i16;
let _35: &'static mut [char; 3];
let _36: *const f64;
let _37: bool;
let _38: &'static u32;
let _39: *const [char; 3];
let _40: i128;
let _41: &'static f64;
let _42: &'static (isize, u16, i32, u64);
let _43: [u64; 8];
let _44: i64;
let _45: &'static mut &'static u32;
let _46: *const Adt51;
let _47: char;
let _48: *mut Adt51;
let _49: &'static (isize, u16, i32, u64);
let _50: (Adt72, [u128; 1]);
let _51: u8;
let _52: i64;
let _53: (u64, f64);
let _54: ([usize; 8], &'static mut i64);
let _55: u8;
let _56: isize;
let _57: *const f64;
let _58: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _59: (Adt72, [u128; 1]);
let _60: f64;
let _61: *const [char; 3];
let _62: *const i16;
let _63: [u8; 1];
let _64: ();
let _65: ();
{
_5 = [8305937873316271193_u64,8863860462597846026_u64,8801985703276070835_u64,1424769017024859186_u64];
_5 = _7;
_5 = _7;
_1 = [_4,_6,_6];
_3 = (-1395421768_i32) & 2120733956_i32;
_2.0 = [true,false,false,false,false];
_2.0 = [true,false,false,false,true];
RET = 29238_i16 as f32;
_4 = _6 + _6;
_5 = [1576541280100533068_u64,3856670566434579238_u64,15309996307344151803_u64,16977727241181944100_u64];
_8 = 7088589937777754496_u64 as f64;
_5 = _7;
_4 = _6;
_3 = -(-1013347810_i32);
_7 = _5;
_4 = _6 | _6;
Goto(bb1)
}
bb1 = {
_4 = _6;
Goto(bb2)
}
bb2 = {
_3 = 614881480_i32 + 680392086_i32;
_8 = (-9223372036854775808_isize) as f64;
_6 = _4 | _4;
_7 = _5;
_3 = 1076812354_i32 << _6;
_3 = 860938768_i32;
_4 = 9223372036854775807_isize as u32;
_1 = [_4,_6,_6];
Goto(bb3)
}
bb3 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_11 = _8 - _8;
Goto(bb5)
}
bb5 = {
match _3 {
0 => bb2,
1559617363 => bb7,
_ => bb6
}
}
bb6 = {
_11 = _8 - _8;
Goto(bb5)
}
bb7 = {
_11 = _8;
_14.0.fld1 = [6643332354416339234_usize,12211267406605650735_usize,15353173610285470959_usize,4471963336217506585_usize,6831576323635598947_usize,13637462638082523629_usize,0_usize,1_usize];
_7 = _5;
_10 = RET - RET;
_6 = _4 * _4;
_4 = _6 & _6;
RET = 23_u8 as f32;
_14.0.fld0 = Adt18::Variant0 { fld0: _10,fld1: (-12888_i16) };
place!(Field::<f32>(Variant(_14.0.fld0, 0), 0)) = _10 * _10;
match _3 {
0 => bb1,
1 => bb4,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
1559617363 => bb13,
_ => bb12
}
}
bb8 = {
_11 = _8 - _8;
Goto(bb5)
}
bb9 = {
match _3 {
0 => bb2,
1559617363 => bb7,
_ => bb6
}
}
bb10 = {
_11 = _8 - _8;
Goto(bb5)
}
bb11 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb12 = {
_4 = _6;
Goto(bb2)
}
bb13 = {
_18 = (-9223372036854775808_isize) >> _4;
match _3 {
1559617363 => bb15,
_ => bb14
}
}
bb14 = {
_11 = _8 - _8;
Goto(bb5)
}
bb15 = {
place!(Field::<i16>(Variant(_14.0.fld0, 0), 1)) = 12594_i16;
_6 = _4 << _18;
match _3 {
0 => bb8,
1 => bb2,
2 => bb5,
3 => bb16,
4 => bb17,
5 => bb18,
1559617363 => bb20,
_ => bb19
}
}
bb16 = {
_11 = _8 - _8;
Goto(bb5)
}
bb17 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb18 = {
match _3 {
0 => bb2,
1559617363 => bb7,
_ => bb6
}
}
bb19 = {
_3 = 614881480_i32 + 680392086_i32;
_8 = (-9223372036854775808_isize) as f64;
_6 = _4 | _4;
_7 = _5;
_3 = 1076812354_i32 << _6;
_3 = 860938768_i32;
_4 = 9223372036854775807_isize as u32;
_1 = [_4,_6,_6];
Goto(bb3)
}
bb20 = {
_19 = _8;
_1 = [_4,_6,_6];
_6 = !_4;
_15 = 2_usize;
_14.0.fld0 = Adt18::Variant1 { fld0: 2762510926840636328_i64,fld1: _10,fld2: _3,fld3: 9_i8 };
_14.0.fld0 = Adt18::Variant0 { fld0: _10,fld1: 13768_i16 };
_3 = (-1826192525_i32) | (-254512046_i32);
_14.0.fld1 = [_15,_15,_15,_15,_15,_15,_15,_15];
_14.0.fld1 = [_15,_15,_15,_15,_15,_15,_15,_15];
_6 = _1[_15];
_7[_15] = 64194_u16 as u64;
_7 = [_5[_15],_5[_15],_5[_15],_5[_15]];
_11 = _19 - _19;
_16 = (-163068406897879618855635233674801882006_i128) | 132364386885114667718125060855864194044_i128;
_10 = Field::<f32>(Variant(_14.0.fld0, 0), 0) - Field::<f32>(Variant(_14.0.fld0, 0), 0);
_8 = _11;
_3 = -(-1348018587_i32);
_22 = &mut _16;
(*_22) = (-69155059662628858487986395907634541117_i128) ^ (-9670896617690824520859305370349477771_i128);
(*_22) = _8 as i128;
(*_22) = 139658727534996705040362289992633178550_i128 | 136361428947526952698619310571673664024_i128;
(*_22) = 13750827345632917792709427140692414562_i128 & 2497306469674279163988507146084000036_i128;
(*_22) = 57963190990438077329970270992980527276_i128;
match _5[_15] {
0 => bb9,
1 => bb2,
2 => bb12,
3 => bb8,
13861358195665678339 => bb22,
_ => bb21
}
}
bb21 = {
match _3 {
0 => bb2,
1559617363 => bb7,
_ => bb6
}
}
bb22 = {
(*_22) = (-126537010834361649373359484324146476183_i128) ^ 169522802956510408727018682759168490134_i128;
(*_22) = -108782889868736264721341504057826725681_i128;
RET = Field::<f32>(Variant(_14.0.fld0, 0), 0) * Field::<f32>(Variant(_14.0.fld0, 0), 0);
(*_22) = (-48873936262316245251535393736806665416_i128) + (-119471255407204114590577674158429594621_i128);
(*_22) = !108348936017304358909803799768081222874_i128;
(*_22) = 58884447218435005550652549377504725529_i128 | 79553943305927289646668458397294610986_i128;
_24 = _18 as i32;
_27 = ['\u{5d5ef}','\u{2501a}','\u{93bc9}'];
_26.0 = (_5[_15], _8);
_30 = _27[_15];
_34 = -(-21429_i16);
Goto(bb23)
}
bb23 = {
(*_22) = (-92451156426300014265423723503402453263_i128) - 152603438582260413424769581120148428584_i128;
_35 = &mut _27;
_7[_15] = _5[_15] << _1[_15];
_1 = [_4,_6,_4];
(*_22) = (-131056783268893974201101958419205896126_i128) & (-98515510786531861499811897888321816885_i128);
Goto(bb24)
}
bb24 = {
(*_35) = [_30,_30,_30];
_8 = _26.0.1;
_26.3 = [_18,_18];
match _26.0.0 {
0 => bb25,
1 => bb26,
2 => bb27,
3 => bb28,
4 => bb29,
5 => bb30,
13861358195665678339 => bb32,
_ => bb31
}
}
bb25 = {
(*_22) = (-92451156426300014265423723503402453263_i128) - 152603438582260413424769581120148428584_i128;
_35 = &mut _27;
_7[_15] = _5[_15] << _1[_15];
_1 = [_4,_6,_4];
(*_22) = (-131056783268893974201101958419205896126_i128) & (-98515510786531861499811897888321816885_i128);
Goto(bb24)
}
bb26 = {
(*_22) = (-126537010834361649373359484324146476183_i128) ^ 169522802956510408727018682759168490134_i128;
(*_22) = -108782889868736264721341504057826725681_i128;
RET = Field::<f32>(Variant(_14.0.fld0, 0), 0) * Field::<f32>(Variant(_14.0.fld0, 0), 0);
(*_22) = (-48873936262316245251535393736806665416_i128) + (-119471255407204114590577674158429594621_i128);
(*_22) = !108348936017304358909803799768081222874_i128;
(*_22) = 58884447218435005550652549377504725529_i128 | 79553943305927289646668458397294610986_i128;
_24 = _18 as i32;
_27 = ['\u{5d5ef}','\u{2501a}','\u{93bc9}'];
_26.0 = (_5[_15], _8);
_30 = _27[_15];
_34 = -(-21429_i16);
Goto(bb23)
}
bb27 = {
_11 = _8 - _8;
Goto(bb5)
}
bb28 = {
_11 = _8 - _8;
Goto(bb5)
}
bb29 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb30 = {
_11 = _8 - _8;
Goto(bb5)
}
bb31 = {
_3 = 614881480_i32 + 680392086_i32;
_8 = (-9223372036854775808_isize) as f64;
_6 = _4 | _4;
_7 = _5;
_3 = 1076812354_i32 << _6;
_3 = 860938768_i32;
_4 = 9223372036854775807_isize as u32;
_1 = [_4,_6,_6];
Goto(bb3)
}
bb32 = {
(*_35) = [_30,_30,_30];
(*_35) = [_30,_30,_30];
_28.fld4 = (*_22);
(*_22) = _34 as i128;
(*_35) = [_30,_30,_30];
(*_35) = [_30,_30,_30];
_3 = _24 >> _26.0.0;
RET = 197532069156267596524394072440978604044_u128 as f32;
(*_35) = [_30,_30,_30];
_18 = _15 as isize;
(*_35)[_15] = _30;
(*_35)[_15] = _30;
_33.1 = _19 - _19;
_28.fld2 = _18 as f32;
_33.0 = _7[_15] ^ _7[_15];
_19 = 225721312414523623240539577295427787606_u128 as f64;
match _15 {
0 => bb23,
1 => bb13,
3 => bb8,
4 => bb16,
5 => bb33,
2 => bb35,
_ => bb34
}
}
bb33 = {
_11 = _8 - _8;
Goto(bb5)
}
bb34 = {
_3 = 614881480_i32 + 680392086_i32;
_8 = (-9223372036854775808_isize) as f64;
_6 = _4 | _4;
_7 = _5;
_3 = 1076812354_i32 << _6;
_3 = 860938768_i32;
_4 = 9223372036854775807_isize as u32;
_1 = [_4,_6,_6];
Goto(bb3)
}
bb35 = {
_5 = _7;
_34 = 8655_i16 - 31708_i16;
_28.fld3 = (*_35)[_15] as u32;
_37 = _33.0 != _5[_15];
(*_22) = _28.fld4 | _28.fld4;
(*_22) = _28.fld4 << _33.0;
(*_22) = _24 as i128;
_34 = 31977_i16;
(*_22) = !_28.fld4;
(*_35)[_15] = _30;
_4 = _6 & _1[_15];
(*_35) = [_30,_30,_30];
(*_22) = _28.fld4 * _28.fld4;
_29 = _4 as f32;
(*_22) = _28.fld4 & _28.fld4;
(*_22) = !_28.fld4;
match _26.0.0 {
0 => bb36,
13861358195665678339 => bb38,
_ => bb37
}
}
bb36 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb37 = {
(*_22) = (-92451156426300014265423723503402453263_i128) - 152603438582260413424769581120148428584_i128;
_35 = &mut _27;
_7[_15] = _5[_15] << _1[_15];
_1 = [_4,_6,_4];
(*_22) = (-131056783268893974201101958419205896126_i128) & (-98515510786531861499811897888321816885_i128);
Goto(bb24)
}
bb38 = {
(*_35) = [_30,_30,_30];
_28.fld1 = (*_35)[_15];
_14.0.fld1[_15] = !_15;
(*_22) = _28.fld4 >> _4;
(*_35)[_15] = _30;
(*_35) = [_28.fld1,_28.fld1,_28.fld1];
(*_35) = [_28.fld1,_30,_28.fld1];
_26.1 = -5_i8;
place!(Field::<f32>(Variant(_14.0.fld0, 0), 0)) = _10 - _10;
_2.0[_15] = _37;
(*_35) = [_28.fld1,_28.fld1,_30];
(*_35)[_15] = _30;
_43 = [_5[_15],_5[_15],_7[_15],_5[_15],_7[_15],_5[_15],_7[_15],_5[_15]];
(*_35)[_15] = _28.fld1;
_20 = (*_22) * (*_22);
(*_35)[_15] = _28.fld1;
_40 = (*_35)[_15] as i128;
_47 = (*_35)[_15];
(*_22) = _29 as i128;
_18 = !9223372036854775807_isize;
_22 = &mut _28.fld4;
_30 = (*_35)[_15];
(*_35) = [_47,_30,_30];
_11 = -_33.1;
Goto(bb39)
}
bb39 = {
_26.0.1 = _11 + _8;
_39 = core::ptr::addr_of!((*_35));
(*_35)[_15] = _47;
(*_22) = 1101420078956474316_i64 as i128;
(*_22) = -_20;
_50.0.fld0 = [339700880320522507872557775944508263682_u128,256136540091144313582748437083666733273_u128,144820488576628944602270207071163271101_u128,274823839660665287431275952999120203429_u128,183863762262416141080209239670834545668_u128];
place!(Field::<i16>(Variant(_14.0.fld0, 0), 1)) = _26.1 as i16;
(*_22) = _20 << _20;
_25 = _18 - _18;
_26.0 = (_43[_15], _11);
_13 = Adt37::Variant1 { fld0: _50.0.fld0[_15],fld1: 182_u8,fld2: _18,fld3: _24 };
(*_22) = !_20;
_50.0.fld4.0[_15] = !_2.0[_15];
_36 = core::ptr::addr_of!(_11);
(*_22) = _20 * _20;
_38 = &_6;
_23 = (*_38) >> (*_38);
_54.0[_15] = 40275_u16 as usize;
_32 = _7;
Goto(bb40)
}
bb40 = {
(*_35) = [_30,_47,_47];
place!(Field::<isize>(Variant(_13, 1), 2)) = _18 << (*_22);
match Field::<u128>(Variant(_13, 1), 0) {
0 => bb41,
144820488576628944602270207071163271101 => bb43,
_ => bb42
}
}
bb41 = {
_11 = _8 - _8;
Goto(bb5)
}
bb42 = {
_3 = 614881480_i32 + 680392086_i32;
_8 = (-9223372036854775808_isize) as f64;
_6 = _4 | _4;
_7 = _5;
_3 = 1076812354_i32 << _6;
_3 = 860938768_i32;
_4 = 9223372036854775807_isize as u32;
_1 = [_4,_6,_6];
Goto(bb3)
}
bb43 = {
(*_22) = _20 << (*_38);
(*_36) = _8;
_55 = _29 as u8;
(*_35) = [_30,_30,_47];
(*_36) = _26.0.1;
_50.0.fld4 = (_2.0,);
(*_35)[_15] = _47;
_19 = -(*_36);
(*_35)[_15] = _30;
_41 = &(*_36);
(*_35) = [_47,_30,_30];
_1 = [_6,(*_38),(*_38)];
match Field::<u128>(Variant(_13, 1), 0) {
0 => bb29,
1 => bb21,
2 => bb28,
3 => bb32,
4 => bb25,
5 => bb6,
144820488576628944602270207071163271101 => bb44,
_ => bb12
}
}
bb44 = {
(*_36) = -_8;
(*_36) = _19;
_24 = Field::<i32>(Variant(_13, 1), 3) & Field::<i32>(Variant(_13, 1), 3);
_54.0 = [_14.0.fld1[_15],_15,_14.0.fld1[_15],_15,_15,_15,_14.0.fld1[_15],_14.0.fld1[_15]];
_50.0.fld2 = core::ptr::addr_of_mut!(_50.0.fld3);
(*_36) = _15 as f64;
(*_35) = [_30,_47,_47];
(*_35)[_15] = _47;
_26.0.0 = !_33.0;
_50.1 = [_50.0.fld0[_15]];
_56 = _29 as isize;
_12 = &mut _38;
_50.0.fld6 = _50.0.fld0[_15] / Field::<u128>(Variant(_13, 1), 0);
(*_35)[_15] = _47;
_31 = core::ptr::addr_of!(_59.0.fld3);
_51 = _55 | _55;
_11 = -_8;
(*_22) = _20 << _55;
_2 = (_50.0.fld4.0,);
_59.0.fld7 = !_43[_15];
(*_35)[_15] = _47;
(*_22) = -_20;
(*_22) = _20 >> _23;
(*_36) = _8;
_51 = _55 & _55;
(*_36) = _34 as f64;
match _50.0.fld0[_15] {
0 => bb45,
1 => bb46,
144820488576628944602270207071163271101 => bb48,
_ => bb47
}
}
bb45 = {
_11 = _8 - _8;
Goto(bb5)
}
bb46 = {
_10 = RET - RET;
_3 = 1559617363_i32;
_8 = 6911_i16 as f64;
_2.0 = [false,false,false,true,true];
_4 = _6 << _6;
RET = _10;
_6 = _4 + _4;
_8 = 4_isize as f64;
_7 = [17548160344437701952_u64,11426372026585009533_u64,13614066643805271032_u64,8497132777331570984_u64];
_11 = _8 - _8;
_5 = [9964122630217960380_u64,10081884420072563423_u64,13861358195665678339_u64,13804578857821861311_u64];
_11 = _4 as f64;
_11 = -_8;
Call(_8 = fn2(_6, _2.0), ReturnTo(bb4), UnwindUnreachable())
}
bb47 = {
_4 = _6;
Goto(bb2)
}
bb48 = {
(*_35) = [_47,_47,_47];
(*_12) = &_4;
_26.0 = _33;
(*_12) = &_23;
(*_36) = _26.0.1 - _19;
place!(Field::<u8>(Variant(_13, 1), 1)) = _51;
_36 = core::ptr::addr_of!((*_36));
Call(_33.1 = core::intrinsics::transmute(_14.0.fld1[_15]), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
_43[_15] = 2890_u16 as u64;
(*_12) = &_4;
_58.0[_15] = _23;
(*_22) = _20;
_53.1 = (*_36) - (*_36);
_5 = _7;
_11 = _23 as f64;
Goto(bb50)
}
bb50 = {
Call(_64 = dump_var(Move(_16), Move(_15), Move(_6), Move(_32)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_64 = dump_var(Move(_7), Move(_43), Move(_18), Move(_27)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_64 = dump_var(Move(_20), Move(_37), Move(_24), Move(_5)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u32,mut _2: [bool; 5]) -> f64 {
mir! {
type RET = f64;
let _3: f32;
let _4: f32;
let _5: [usize; 8];
let _6: Adt44;
let _7: *mut usize;
let _8: &'static (isize, u16, i32, u64);
let _9: isize;
let _10: f64;
let _11: &'static &'static mut [char; 3];
let _12: [u64; 8];
let _13: i64;
let _14: Adt21;
let _15: f32;
let _16: isize;
let _17: u128;
let _18: &'static f64;
let _19: [i8; 1];
let _20: *const f32;
let _21: *mut &'static mut [i8; 1];
let _22: *const [char; 3];
let _23: u16;
let _24: isize;
let _25: i64;
let _26: *mut Adt51;
let _27: char;
let _28: f32;
let _29: &'static mut i128;
let _30: Adt56;
let _31: u128;
let _32: bool;
let _33: bool;
let _34: isize;
let _35: ([bool; 5],);
let _36: f32;
let _37: &'static &'static mut [char; 3];
let _38: *const f64;
let _39: bool;
let _40: &'static (isize, u16, i32, u64);
let _41: *const f32;
let _42: u64;
let _43: &'static u32;
let _44: &'static i64;
let _45: Adt37;
let _46: i16;
let _47: u128;
let _48: &'static ([i16; 8],);
let _49: *mut usize;
let _50: *const f32;
let _51: isize;
let _52: [u32; 3];
let _53: bool;
let _54: Adt21;
let _55: [i8; 7];
let _56: char;
let _57: f32;
let _58: *const char;
let _59: (&'static mut i128, bool);
let _60: *const char;
let _61: isize;
let _62: [i8; 7];
let _63: *const f32;
let _64: &'static &'static mut [char; 3];
let _65: &'static f64;
let _66: i8;
let _67: [u64; 4];
let _68: u128;
let _69: isize;
let _70: bool;
let _71: [u64; 4];
let _72: isize;
let _73: (Adt44, *const &'static (isize, u16, i32, u64));
let _74: [u32; 3];
let _75: u16;
let _76: bool;
let _77: usize;
let _78: u128;
let _79: bool;
let _80: u64;
let _81: (u16, *const char, *const i16, *const i16);
let _82: &'static mut bool;
let _83: i128;
let _84: isize;
let _85: f32;
let _86: f32;
let _87: isize;
let _88: u64;
let _89: *const Adt21;
let _90: f64;
let _91: bool;
let _92: bool;
let _93: &'static mut [i8; 1];
let _94: isize;
let _95: [u8; 3];
let _96: *mut Adt51;
let _97: [isize; 2];
let _98: Adt44;
let _99: (u64, f64);
let _100: &'static mut &'static u32;
let _101: i16;
let _102: f32;
let _103: f32;
let _104: (u16, Adt37, &'static mut i64);
let _105: *const f64;
let _106: &'static mut [char; 3];
let _107: [i8; 1];
let _108: &'static mut bool;
let _109: *const Adt21;
let _110: isize;
let _111: &'static u32;
let _112: isize;
let _113: bool;
let _114: Adt51;
let _115: u128;
let _116: ();
let _117: ();
{
_3 = 51216_u16 as f32;
_2 = [true,false,false,false,false];
_2 = [true,false,true,true,false];
_4 = _3 * _3;
_6.fld1 = [5186965046876662616_usize,10906859429187947669_usize,1309108493369075560_usize,0_usize,0_usize,7182673605921631933_usize,0_usize,4_usize];
_2 = [false,false,false,true,true];
_6.fld0 = Adt18::Variant0 { fld0: _3,fld1: (-14417_i16) };
_6.fld0 = Adt18::Variant1 { fld0: (-7503442778947541822_i64),fld1: _3,fld2: 864352322_i32,fld3: 13_i8 };
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 123570574078689752419988548395918859766_i128 as i32;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = _3 - _4;
_9 = 67205584267216584985837157384340408849_i128 as isize;
_6.fld1 = [3_usize,15021693654556157700_usize,5_usize,3_usize,7_usize,9433610621903999735_usize,15719360871562271006_usize,221440036632944261_usize];
_6.fld1 = [15056727860666105151_usize,497101352216171679_usize,5_usize,1_usize,14629123055574048840_usize,10369271746340850856_usize,4_usize,5_usize];
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = 223_u8 as i8;
_3 = _4;
_3 = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
RET = _9 as f64;
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = 3629277408045502457_u64 as i8;
_2 = [false,false,true,false,false];
_4 = Field::<f32>(Variant(_6.fld0, 1), 1) + _3;
Goto(bb1)
}
bb1 = {
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = -2899560996343537326_i64;
_5 = [1_usize,4_usize,16118153400664630866_usize,12196612639642726412_usize,1_usize,18155073433835611149_usize,13836950743050736203_usize,7_usize];
_4 = Field::<i32>(Variant(_6.fld0, 1), 2) as f32;
RET = 44272_u16 as f64;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = _4;
RET = 238018418329388608458775791424158768568_u128 as f64;
_6.fld0 = Adt18::Variant0 { fld0: _3,fld1: (-17796_i16) };
_6.fld1 = [6_usize,3_usize,17292811133500635777_usize,7849813008999489505_usize,3108773605036466143_usize,4737701553926528810_usize,13532540774181961561_usize,2073984211845557945_usize];
_6.fld0 = Adt18::Variant0 { fld0: _3,fld1: 28144_i16 };
_5 = _6.fld1;
_2 = [false,true,false,true,true];
_4 = Field::<f32>(Variant(_6.fld0, 0), 0) * _3;
_12 = [12146871425501317905_u64,13759695920240974440_u64,8423052622755084108_u64,17811555323735076718_u64,11027143232910475849_u64,15726750890201329439_u64,17123249139703720945_u64,14952065864584391154_u64];
_12 = [9058465943684226599_u64,2958563470711459082_u64,10372486268605717675_u64,9697529748978094095_u64,7932356985384152547_u64,15188677459870044522_u64,17149749018335093160_u64,17847307082136491425_u64];
_6.fld1 = [10191556054310320860_usize,4519246607226137189_usize,16669100998194457167_usize,5_usize,4217102863459910414_usize,3_usize,3423415504329465588_usize,8440409345534817255_usize];
place!(Field::<f32>(Variant(_6.fld0, 0), 0)) = _4 + _4;
_4 = -Field::<f32>(Variant(_6.fld0, 0), 0);
RET = (-21147_i16) as f64;
_6.fld0 = Adt18::Variant1 { fld0: (-7352021277801576121_i64),fld1: _3,fld2: 1319661520_i32,fld3: (-7_i8) };
_1 = RET as u32;
Goto(bb2)
}
bb2 = {
_1 = 3399256446_u32 ^ 4071273621_u32;
_5 = [6_usize,18047663598395971531_usize,4_usize,7340594253168367905_usize,3_usize,15512672852721340380_usize,6_usize,6597148673009701639_usize];
_10 = 32_u8 as f64;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1557924177_i32);
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = true as i8;
_13 = true as i64;
_3 = 13755153578164386796_u64 as f32;
_13 = 5950864978506983334_i64 | (-3878337959738477221_i64);
_6.fld0 = Adt18::Variant1 { fld0: _13,fld1: _4,fld2: 333488858_i32,fld3: 107_i8 };
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 9524744001149292261_usize as i32;
_3 = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
_14.fld0 = Field::<i64>(Variant(_6.fld0, 1), 0);
_10 = -RET;
_14.fld0 = (-17789_i16) as i64;
_14 = Adt21 { fld0: _13,fld1: '\u{6488d}',fld2: _4,fld3: _1,fld4: 76699854981846710148653962942726204950_i128 };
_14.fld0 = _13 - _13;
_12 = [11532950888974252625_u64,6332650998820851464_u64,12410931604207004049_u64,10151716166546375840_u64,1923621788595860998_u64,8581135423536832755_u64,375086303620714528_u64,6656650407554503539_u64];
_15 = _14.fld0 as f32;
_2 = [false,false,false,false,false];
_6.fld0 = Adt18::Variant1 { fld0: _14.fld0,fld1: _15,fld2: 860755484_i32,fld3: (-23_i8) };
_13 = -Field::<i64>(Variant(_6.fld0, 1), 0);
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 1804353990_i32 + (-1999006945_i32);
Call(_6.fld1 = fn3(Field::<f32>(Variant(_6.fld0, 1), 1), _15, _9, _14.fld4, _13, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 7648_u16 as i32;
_12 = [4162970013452322353_u64,4355661813979891350_u64,8947543472182465615_u64,14728242321071046013_u64,14665391005610762580_u64,10628220875168475752_u64,27920452171417780_u64,9222119803017686246_u64];
_14.fld2 = -_3;
_14 = Adt21 { fld0: _13,fld1: '\u{e5d1a}',fld2: _4,fld3: _1,fld4: (-21541241738335665307949045749657420417_i128) };
_6.fld1 = [9214195067102538914_usize,6_usize,13459529717452327695_usize,1599542311596480194_usize,5_usize,5_usize,6979175390856834201_usize,13981740250440691549_usize];
_16 = _9 >> Field::<i64>(Variant(_6.fld0, 1), 0);
_2 = [false,false,false,false,true];
_17 = _14.fld1 as u128;
_13 = -_14.fld0;
RET = _10 - _10;
_14.fld4 = 135423146864569999276113328004575876172_i128;
_16 = _9;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = _4 - _3;
_14.fld3 = _1;
_12 = [2493310144521339521_u64,2128314818385126803_u64,4440998127748929699_u64,1433357323518412317_u64,8164751350156984633_u64,7433073225034983955_u64,11174270489121994471_u64,2394103688232108063_u64];
_14.fld0 = RET as i64;
_4 = Field::<f32>(Variant(_6.fld0, 1), 1) * _3;
_18 = &_10;
_16 = _14.fld0 as isize;
match _14.fld4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
135423146864569999276113328004575876172 => bb11,
_ => bb10
}
}
bb4 = {
_1 = 3399256446_u32 ^ 4071273621_u32;
_5 = [6_usize,18047663598395971531_usize,4_usize,7340594253168367905_usize,3_usize,15512672852721340380_usize,6_usize,6597148673009701639_usize];
_10 = 32_u8 as f64;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1557924177_i32);
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = true as i8;
_13 = true as i64;
_3 = 13755153578164386796_u64 as f32;
_13 = 5950864978506983334_i64 | (-3878337959738477221_i64);
_6.fld0 = Adt18::Variant1 { fld0: _13,fld1: _4,fld2: 333488858_i32,fld3: 107_i8 };
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 9524744001149292261_usize as i32;
_3 = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
_14.fld0 = Field::<i64>(Variant(_6.fld0, 1), 0);
_10 = -RET;
_14.fld0 = (-17789_i16) as i64;
_14 = Adt21 { fld0: _13,fld1: '\u{6488d}',fld2: _4,fld3: _1,fld4: 76699854981846710148653962942726204950_i128 };
_14.fld0 = _13 - _13;
_12 = [11532950888974252625_u64,6332650998820851464_u64,12410931604207004049_u64,10151716166546375840_u64,1923621788595860998_u64,8581135423536832755_u64,375086303620714528_u64,6656650407554503539_u64];
_15 = _14.fld0 as f32;
_2 = [false,false,false,false,false];
_6.fld0 = Adt18::Variant1 { fld0: _14.fld0,fld1: _15,fld2: 860755484_i32,fld3: (-23_i8) };
_13 = -Field::<i64>(Variant(_6.fld0, 1), 0);
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 1804353990_i32 + (-1999006945_i32);
Call(_6.fld1 = fn3(Field::<f32>(Variant(_6.fld0, 1), 1), _15, _9, _14.fld4, _13, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = -2899560996343537326_i64;
_5 = [1_usize,4_usize,16118153400664630866_usize,12196612639642726412_usize,1_usize,18155073433835611149_usize,13836950743050736203_usize,7_usize];
_4 = Field::<i32>(Variant(_6.fld0, 1), 2) as f32;
RET = 44272_u16 as f64;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = _4;
RET = 238018418329388608458775791424158768568_u128 as f64;
_6.fld0 = Adt18::Variant0 { fld0: _3,fld1: (-17796_i16) };
_6.fld1 = [6_usize,3_usize,17292811133500635777_usize,7849813008999489505_usize,3108773605036466143_usize,4737701553926528810_usize,13532540774181961561_usize,2073984211845557945_usize];
_6.fld0 = Adt18::Variant0 { fld0: _3,fld1: 28144_i16 };
_5 = _6.fld1;
_2 = [false,true,false,true,true];
_4 = Field::<f32>(Variant(_6.fld0, 0), 0) * _3;
_12 = [12146871425501317905_u64,13759695920240974440_u64,8423052622755084108_u64,17811555323735076718_u64,11027143232910475849_u64,15726750890201329439_u64,17123249139703720945_u64,14952065864584391154_u64];
_12 = [9058465943684226599_u64,2958563470711459082_u64,10372486268605717675_u64,9697529748978094095_u64,7932356985384152547_u64,15188677459870044522_u64,17149749018335093160_u64,17847307082136491425_u64];
_6.fld1 = [10191556054310320860_usize,4519246607226137189_usize,16669100998194457167_usize,5_usize,4217102863459910414_usize,3_usize,3423415504329465588_usize,8440409345534817255_usize];
place!(Field::<f32>(Variant(_6.fld0, 0), 0)) = _4 + _4;
_4 = -Field::<f32>(Variant(_6.fld0, 0), 0);
RET = (-21147_i16) as f64;
_6.fld0 = Adt18::Variant1 { fld0: (-7352021277801576121_i64),fld1: _3,fld2: 1319661520_i32,fld3: (-7_i8) };
_1 = RET as u32;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_19 = [(-65_i8)];
_14.fld3 = !_1;
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = (-34_i8);
_16 = _9;
_4 = Field::<f32>(Variant(_6.fld0, 1), 1) - Field::<f32>(Variant(_6.fld0, 1), 1);
_4 = -_3;
_14.fld3 = _4 as u32;
_20 = core::ptr::addr_of!(_14.fld2);
_14.fld3 = _1 << Field::<i64>(Variant(_6.fld0, 1), 0);
_6.fld1 = [0_usize,0_usize,6_usize,0_usize,4_usize,18270749801255775134_usize,68103271942470424_usize,571630265740869423_usize];
_12 = [7838799562010543460_u64,17089541907067488357_u64,5796292589667995780_u64,7888212582075922492_u64,16969328803288761518_u64,12188695429696012663_u64,13453368568659654749_u64,12988594364718879907_u64];
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = -(*_20);
_4 = (*_20) * (*_20);
(*_20) = _4;
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = -_13;
(*_20) = _3;
(*_20) = -_4;
Goto(bb12)
}
bb12 = {
_23 = !8114_u16;
(*_20) = _4 + _3;
(*_20) = _4 * _3;
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1);
(*_20) = _3 + _3;
_17 = _14.fld3 as u128;
(*_20) = _4 * _4;
Call((*_20) = core::intrinsics::transmute(_14.fld3), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
(*_20) = _3 * Field::<f32>(Variant(_6.fld0, 1), 1);
_2 = [false,false,false,false,true];
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-106370334_i32);
_1 = _9 as u32;
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = (-50_i8) << _14.fld3;
_3 = (*_20) * (*_20);
_14 = Adt21 { fld0: _13,fld1: '\u{7063}',fld2: _3,fld3: _1,fld4: (-69861764212962955901422855491275318983_i128) };
(*_20) = _3;
RET = (*_18) + (*_18);
_10 = RET * RET;
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1);
_14 = Adt21 { fld0: _13,fld1: '\u{e4af9}',fld2: _3,fld3: _1,fld4: 52870060767389838710614224688197564083_i128 };
(*_20) = _10 as f32;
_20 = core::ptr::addr_of!((*_20));
(*_20) = _23 as f32;
_1 = _14.fld3 - _14.fld3;
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = !113_i8;
_10 = RET + RET;
(*_20) = _3 + _3;
(*_20) = _3 + _3;
_9 = false as isize;
_5 = [5_usize,5201509331801962194_usize,6_usize,15993747023309728927_usize,3058527711462459411_usize,0_usize,7_usize,14938719113433410454_usize];
_14.fld0 = _1 as i64;
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1) + _3;
_15 = (*_20);
_25 = Field::<i64>(Variant(_6.fld0, 1), 0);
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = !1749808214_i32;
Goto(bb14)
}
bb14 = {
_3 = (*_20) + (*_20);
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1) + _4;
_14 = Adt21 { fld0: _13,fld1: '\u{6d096}',fld2: _3,fld3: _1,fld4: (-58364234579435898893959016744841481019_i128) };
(*_20) = _14.fld3 as f32;
_5 = [6696847403944475096_usize,5_usize,4_usize,4992029148464754462_usize,11194939296637604016_usize,3213868662677770840_usize,7_usize,1832753429061900717_usize];
(*_20) = -_15;
_18 = &RET;
(*_20) = 2_usize as f32;
_14.fld1 = '\u{98b0f}';
(*_20) = -Field::<f32>(Variant(_6.fld0, 1), 1);
_32 = false & true;
_3 = _23 as f32;
(*_20) = 6367126630330093993_usize as f32;
_19 = [Field::<i8>(Variant(_6.fld0, 1), 3)];
(*_20) = _15 + _4;
_17 = 8817944960011098338924768454726591569_u128 & 181232501662465375047225408508003787797_u128;
(*_20) = _15 + _4;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = (*_20) + (*_20);
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = _1 as i32;
_10 = _17 as f64;
_18 = &_10;
_34 = _9 * _16;
_24 = _14.fld4 as isize;
match _14.fld4 {
281918132341502564569415590686926730437 => bb15,
_ => bb4
}
}
bb15 = {
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1802513856_i32) * 119973344_i32;
(*_20) = 19000_i16 as f32;
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1);
_3 = (*_20) - Field::<f32>(Variant(_6.fld0, 1), 1);
_14.fld4 = 172_u8 as i128;
(*_20) = _3 * _3;
_35.0 = [_32,_32,_32,_32,_32];
_20 = core::ptr::addr_of!(_14.fld2);
_16 = !_24;
_35 = (_2,);
_17 = _14.fld1 as u128;
(*_20) = 23_u8 as f32;
_3 = _4;
Goto(bb16)
}
bb16 = {
(*_20) = _15 * _3;
_14.fld2 = -Field::<f32>(Variant(_6.fld0, 1), 1);
(*_20) = -_15;
_14 = Adt21 { fld0: Field::<i64>(Variant(_6.fld0, 1), 0),fld1: '\u{bdc22}',fld2: Field::<f32>(Variant(_6.fld0, 1), 1),fld3: _1,fld4: 101210223456931605524942346756728219438_i128 };
_24 = _16 << _14.fld4;
_3 = _15;
_36 = -Field::<f32>(Variant(_6.fld0, 1), 1);
_18 = &RET;
_38 = core::ptr::addr_of!((*_18));
Goto(bb17)
}
bb17 = {
(*_20) = _4 + Field::<f32>(Variant(_6.fld0, 1), 1);
_41 = core::ptr::addr_of!(_28);
(*_41) = (*_20);
_14.fld2 = (*_41) * (*_41);
_14.fld1 = '\u{96710}';
(*_20) = 15561971609096895553_u64 as f32;
(*_20) = _1 as f32;
match _14.fld4 {
0 => bb4,
1 => bb16,
101210223456931605524942346756728219438 => bb19,
_ => bb18
}
}
bb18 = {
(*_20) = _15 * _3;
_14.fld2 = -Field::<f32>(Variant(_6.fld0, 1), 1);
(*_20) = -_15;
_14 = Adt21 { fld0: Field::<i64>(Variant(_6.fld0, 1), 0),fld1: '\u{bdc22}',fld2: Field::<f32>(Variant(_6.fld0, 1), 1),fld3: _1,fld4: 101210223456931605524942346756728219438_i128 };
_24 = _16 << _14.fld4;
_3 = _15;
_36 = -Field::<f32>(Variant(_6.fld0, 1), 1);
_18 = &RET;
_38 = core::ptr::addr_of!((*_18));
Goto(bb17)
}
bb19 = {
_23 = !29321_u16;
_39 = _3 >= (*_41);
(*_20) = _25 as f32;
_30 = Adt56::Variant3 { fld0: _39,fld1: _17 };
_36 = 3702368021063363182_usize as f32;
(*_41) = _3 + (*_20);
_14.fld3 = _1 + _1;
_3 = _15 + Field::<f32>(Variant(_6.fld0, 1), 1);
(*_41) = -(*_20);
(*_20) = _3;
(*_20) = -(*_41);
_2 = [_39,_39,_39,Field::<bool>(Variant(_30, 3), 0),_32];
_18 = &_10;
RET = (*_18) + (*_18);
(*_41) = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
_4 = (*_41) - (*_41);
match _14.fld4 {
0 => bb14,
1 => bb2,
2 => bb20,
101210223456931605524942346756728219438 => bb22,
_ => bb21
}
}
bb20 = {
_1 = 3399256446_u32 ^ 4071273621_u32;
_5 = [6_usize,18047663598395971531_usize,4_usize,7340594253168367905_usize,3_usize,15512672852721340380_usize,6_usize,6597148673009701639_usize];
_10 = 32_u8 as f64;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1557924177_i32);
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = true as i8;
_13 = true as i64;
_3 = 13755153578164386796_u64 as f32;
_13 = 5950864978506983334_i64 | (-3878337959738477221_i64);
_6.fld0 = Adt18::Variant1 { fld0: _13,fld1: _4,fld2: 333488858_i32,fld3: 107_i8 };
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 9524744001149292261_usize as i32;
_3 = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
_14.fld0 = Field::<i64>(Variant(_6.fld0, 1), 0);
_10 = -RET;
_14.fld0 = (-17789_i16) as i64;
_14 = Adt21 { fld0: _13,fld1: '\u{6488d}',fld2: _4,fld3: _1,fld4: 76699854981846710148653962942726204950_i128 };
_14.fld0 = _13 - _13;
_12 = [11532950888974252625_u64,6332650998820851464_u64,12410931604207004049_u64,10151716166546375840_u64,1923621788595860998_u64,8581135423536832755_u64,375086303620714528_u64,6656650407554503539_u64];
_15 = _14.fld0 as f32;
_2 = [false,false,false,false,false];
_6.fld0 = Adt18::Variant1 { fld0: _14.fld0,fld1: _15,fld2: 860755484_i32,fld3: (-23_i8) };
_13 = -Field::<i64>(Variant(_6.fld0, 1), 0);
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 1804353990_i32 + (-1999006945_i32);
Call(_6.fld1 = fn3(Field::<f32>(Variant(_6.fld0, 1), 1), _15, _9, _14.fld4, _13, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb21 = {
Return()
}
bb22 = {
_32 = _16 < _16;
(*_20) = -(*_41);
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = _14.fld0;
(*_20) = (*_41);
_39 = Field::<bool>(Variant(_30, 3), 0) ^ _32;
(*_20) = (*_41) + (*_41);
Goto(bb23)
}
bb23 = {
RET = 5220382837516684076_u64 as f64;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1911374229_i32) - (-1173360980_i32);
(*_41) = -(*_20);
(*_20) = 219_u8 as f32;
_24 = (*_18) as isize;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = 8359749256964181926_u64 as f32;
_15 = (*_41);
match _14.fld4 {
0 => bb16,
1 => bb2,
2 => bb17,
101210223456931605524942346756728219438 => bb24,
_ => bb4
}
}
bb24 = {
_14.fld2 = _15;
place!(Field::<u128>(Variant(_30, 3), 1)) = _17 + _17;
place!(Field::<i8>(Variant(_6.fld0, 1), 3)) = (-119_i8);
_33 = !Field::<bool>(Variant(_30, 3), 0);
_15 = _14.fld3 as f32;
_31 = Field::<u128>(Variant(_30, 3), 1) ^ Field::<u128>(Variant(_30, 3), 1);
(*_20) = -(*_41);
(*_20) = _4;
_39 = _32;
(*_20) = -(*_41);
(*_20) = (*_41) * (*_41);
_28 = (*_20);
(*_41) = -(*_20);
_47 = _17 >> _16;
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = _25 & _13;
(*_20) = -(*_41);
_32 = _33 <= _39;
_47 = 13563662890447150762_u64 as u128;
(*_41) = Field::<i64>(Variant(_6.fld0, 1), 0) as f32;
_20 = core::ptr::addr_of!(_4);
_28 = (*_20) - (*_20);
_4 = -_14.fld2;
_29 = &mut _14.fld4;
match (*_29) {
0 => bb25,
1 => bb26,
101210223456931605524942346756728219438 => bb28,
_ => bb27
}
}
bb25 = {
RET = 5220382837516684076_u64 as f64;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1911374229_i32) - (-1173360980_i32);
(*_41) = -(*_20);
(*_20) = 219_u8 as f32;
_24 = (*_18) as isize;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = 8359749256964181926_u64 as f32;
_15 = (*_41);
match _14.fld4 {
0 => bb16,
1 => bb2,
2 => bb17,
101210223456931605524942346756728219438 => bb24,
_ => bb4
}
}
bb26 = {
(*_20) = _4 + Field::<f32>(Variant(_6.fld0, 1), 1);
_41 = core::ptr::addr_of!(_28);
(*_41) = (*_20);
_14.fld2 = (*_41) * (*_41);
_14.fld1 = '\u{96710}';
(*_20) = 15561971609096895553_u64 as f32;
(*_20) = _1 as f32;
match _14.fld4 {
0 => bb4,
1 => bb16,
101210223456931605524942346756728219438 => bb19,
_ => bb18
}
}
bb27 = {
Return()
}
bb28 = {
(*_41) = (*_20);
_28 = (*_20);
_6.fld0 = Adt18::Variant1 { fld0: _13,fld1: (*_41),fld2: 225176536_i32,fld3: (-26_i8) };
_34 = _23 as isize;
(*_29) = 169037693906698930978470837675630681604_i128;
(*_29) = (-656543659680264510397134310284128305_i128) * (-44581231614449596458802051544158160626_i128);
_35.0 = _2;
(*_41) = -(*_20);
(*_41) = (*_20);
(*_29) = 136897125727410427107953853749727619890_i128;
(*_20) = Field::<u128>(Variant(_30, 3), 1) as f32;
(*_29) = !(-49981914646330716358529501542989069992_i128);
_23 = 27786_u16 - 19473_u16;
(*_41) = _3 - Field::<f32>(Variant(_6.fld0, 1), 1);
_42 = 12463003682564774421_u64 & 12550969787638796815_u64;
_12 = [_42,_42,_42,_42,_42,_42,_42,_42];
(*_29) = 55196861687687648460998187975397070627_i128 | 83460000872129727971220458220252224189_i128;
(*_29) = (-169845505178537497918337685285286521843_i128) + (-76536033986586233668276626581040942822_i128);
(*_41) = -(*_20);
(*_20) = Field::<f32>(Variant(_6.fld0, 1), 1) + (*_41);
Goto(bb29)
}
bb29 = {
(*_20) = _3 - Field::<f32>(Variant(_6.fld0, 1), 1);
(*_29) = -(-72285057418998253884252298266468768037_i128);
(*_20) = 4_usize as f32;
_20 = core::ptr::addr_of!((*_41));
(*_29) = !(-92069138999452565493922317400271424134_i128);
_57 = 86_i8 as f32;
(*_41) = _3 - _3;
(*_41) = _3 - Field::<f32>(Variant(_6.fld0, 1), 1);
_50 = core::ptr::addr_of!((*_41));
Goto(bb30)
}
bb30 = {
Goto(bb31)
}
bb31 = {
_3 = (*_41);
(*_50) = (-12075_i16) as f32;
(*_50) = _3 - Field::<f32>(Variant(_6.fld0, 1), 1);
Call(_54.fld0 = core::intrinsics::bswap(Field::<i64>(Variant(_6.fld0, 1), 0)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
(*_50) = Field::<f32>(Variant(_6.fld0, 1), 1) + Field::<f32>(Variant(_6.fld0, 1), 1);
(*_50) = _3 - _3;
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = (-1665432254_i32) + (-2051594730_i32);
_28 = -_3;
(*_41) = (-100_i8) as f32;
(*_29) = 10424458539969410729_usize as i128;
_23 = 45861_u16 & 23206_u16;
(*_41) = 10594295418944950960_usize as f32;
_54 = Adt21 { fld0: _13,fld1: '\u{41ece}',fld2: Field::<f32>(Variant(_6.fld0, 1), 1),fld3: _1,fld4: (*_29) };
RET = (*_18);
(*_29) = _54.fld4 ^ _54.fld4;
_51 = _16;
_20 = core::ptr::addr_of!((*_41));
_55 = [57_i8,2_i8,58_i8,(-52_i8),(-95_i8),(-47_i8),8_i8];
_59.0 = Move(_29);
_61 = _16 & _51;
_6.fld0 = Adt18::Variant1 { fld0: _54.fld0,fld1: _3,fld2: 1953623625_i32,fld3: 78_i8 };
_53 = Field::<bool>(Variant(_30, 3), 0) == _32;
_43 = &_1;
(*_41) = _3 - _3;
(*_41) = _54.fld2 * _3;
(*_41) = _54.fld2 - Field::<f32>(Variant(_6.fld0, 1), 1);
_34 = _51 | _51;
_29 = &mut _54.fld4;
place!(Field::<i64>(Variant(_6.fld0, 1), 0)) = _13;
(*_29) = Field::<u128>(Variant(_30, 3), 1) as i128;
_68 = !_31;
_58 = core::ptr::addr_of!(_56);
Goto(bb33)
}
bb33 = {
RET = (*_18);
(*_58) = '\u{be695}';
Goto(bb34)
}
bb34 = {
_63 = Move(_50);
(*_58) = '\u{56601}';
(*_29) = 169472915662716634459963006714521734696_i128 - (-5834090988095632793154109599746176019_i128);
_68 = _31;
Goto(bb35)
}
bb35 = {
_12 = [_42,_42,_42,_42,_42,_42,_42,_42];
_59 = (Move(_29), _33);
_57 = (*_41);
(*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
(*_58) = '\u{5527c}';
(*_58) = '\u{61140}';
Goto(bb36)
}
bb36 = {
_44 = &_13;
(*_41) = (*_44) as f32;
(*_58) = '\u{1b3c9}';
_71 = [_42,_42,_42,_42];
(*_58) = '\u{b26b4}';
(*_58) = '\u{b6d96}';
(*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
_67 = _71;
(*_58) = '\u{1cc88}';
(*_41) = _3;
(*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
_52 = [(*_43),(*_43),(*_43)];
_6.fld0 = Adt18::Variant1 { fld0: (*_44),fld1: (*_41),fld2: 1815975516_i32,fld3: 9_i8 };
_45 = Adt37::Variant1 { fld0: _31,fld1: 66_u8,fld2: _61,fld3: (-47579041_i32) };
_5 = [63466287488979769_usize,6_usize,12421725996639637240_usize,5_usize,1_usize,5_usize,11475153421294552185_usize,7_usize];
(*_41) = _57;
_73.0.fld1 = _5;
(*_58) = '\u{921a8}';
_72 = _61 - _16;
_6.fld1 = [3_usize,13781112387856664225_usize,5_usize,7915948718543715986_usize,18094756719396838880_usize,17389084849569956782_usize,3_usize,3_usize];
_33 = _51 != _51;
(*_58) = '\u{e028f}';
_27 = (*_58);
(*_41) = _3 * Field::<f32>(Variant(_6.fld0, 1), 1);
(*_58) = _27;
_33 = (*_41) <= (*_41);
_51 = _72 + _16;
Goto(bb37)
}
bb37 = {
(*_58) = _27;
Call(place!(Field::<i32>(Variant(_45, 1), 3)) = core::intrinsics::bswap((-165716617_i32)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
_62 = _55;
_6.fld0 = Adt18::Variant1 { fld0: (*_44),fld1: (*_41),fld2: Field::<i32>(Variant(_45, 1), 3),fld3: 9_i8 };
(*_41) = _3 - _57;
_23 = 50544_u16;
_41 = core::ptr::addr_of!((*_41));
_23 = 46407_u16 ^ 19415_u16;
(*_41) = 30818_i16 as f32;
_7 = core::ptr::addr_of_mut!(_77);
Goto(bb39)
}
bb39 = {
_34 = _72;
Goto(bb40)
}
bb40 = {
(*_58) = _27;
(*_7) = 1_usize - 15409506625946398502_usize;
(*_41) = _57 * Field::<f32>(Variant(_6.fld0, 1), 1);
_76 = (*_41) < _28;
(*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
_69 = _61;
_31 = _68 << (*_44);
(*_7) = 7_usize;
_49 = core::ptr::addr_of_mut!((*_7));
_73.0.fld0 = Adt18::Variant1 { fld0: (*_44),fld1: (*_41),fld2: Field::<i32>(Variant(_45, 1), 3),fld3: (-67_i8) };
_17 = Field::<u128>(Variant(_45, 1), 0) * _31;
_33 = _53;
_6.fld1 = [(*_7),(*_49),(*_7),_5[_77],(*_49),_73.0.fld1[_77],(*_7),(*_49)];
_45 = Adt37::Variant1 { fld0: _68,fld1: 141_u8,fld2: _69,fld3: Field::<i32>(Variant(_6.fld0, 1), 2) };
match (*_7) {
0 => bb5,
7 => bb42,
_ => bb41
}
}
bb41 = {
place!(Field::<i32>(Variant(_6.fld0, 1), 2)) = 7648_u16 as i32;
_12 = [4162970013452322353_u64,4355661813979891350_u64,8947543472182465615_u64,14728242321071046013_u64,14665391005610762580_u64,10628220875168475752_u64,27920452171417780_u64,9222119803017686246_u64];
_14.fld2 = -_3;
_14 = Adt21 { fld0: _13,fld1: '\u{e5d1a}',fld2: _4,fld3: _1,fld4: (-21541241738335665307949045749657420417_i128) };
_6.fld1 = [9214195067102538914_usize,6_usize,13459529717452327695_usize,1599542311596480194_usize,5_usize,5_usize,6979175390856834201_usize,13981740250440691549_usize];
_16 = _9 >> Field::<i64>(Variant(_6.fld0, 1), 0);
_2 = [false,false,false,false,true];
_17 = _14.fld1 as u128;
_13 = -_14.fld0;
RET = _10 - _10;
_14.fld4 = 135423146864569999276113328004575876172_i128;
_16 = _9;
place!(Field::<f32>(Variant(_6.fld0, 1), 1)) = _4 - _3;
_14.fld3 = _1;
_12 = [2493310144521339521_u64,2128314818385126803_u64,4440998127748929699_u64,1433357323518412317_u64,8164751350156984633_u64,7433073225034983955_u64,11174270489121994471_u64,2394103688232108063_u64];
_14.fld0 = RET as i64;
_4 = Field::<f32>(Variant(_6.fld0, 1), 1) * _3;
_18 = &_10;
_16 = _14.fld0 as isize;
match _14.fld4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
135423146864569999276113328004575876172 => bb11,
_ => bb10
}
}
bb42 = {
_7 = core::ptr::addr_of_mut!((*_7));
(*_49) = !_73.0.fld1[_77];
_65 = &(*_18);
_31 = _17;
_53 = _32;
_51 = _69 ^ _34;
_81.0 = (*_43) as u16;
_59.1 = _33;
_3 = (*_41) * (*_41);
_46 = (*_44) as i16;
_82 = &mut _32;
_62 = _55;
place!(Field::<i32>(Variant(_73.0.fld0, 1), 2)) = Field::<i32>(Variant(_45, 1), 3);
_77 = _81.0 as usize;
(*_58) = _27;
(*_58) = _27;
_84 = _61 & _51;
_39 = Field::<bool>(Variant(_30, 3), 0) | (*_82);
_36 = -Field::<f32>(Variant(_73.0.fld0, 1), 1);
_81.2 = core::ptr::addr_of!(_46);
_81.3 = core::ptr::addr_of!(_46);
_60 = core::ptr::addr_of!((*_58));
_86 = _13 as f32;
(*_41) = Field::<f32>(Variant(_73.0.fld0, 1), 1) * _57;
_86 = -(*_41);
_50 = core::ptr::addr_of!((*_41));
Call((*_49) = core::intrinsics::bswap(12457665703916521552_usize), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
(*_60) = _27;
(*_60) = _27;
_2 = [(*_82),(*_82),(*_82),(*_82),(*_82)];
(*_82) = Field::<bool>(Variant(_30, 3), 0) & _59.1;
place!(Field::<f32>(Variant(_73.0.fld0, 1), 1)) = _28 * (*_50);
(*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
_12 = [_42,_42,_42,_42,_42,_42,_42,_42];
(*_58) = _27;
_1 = 980418062_u32 ^ 2949698605_u32;
_79 = _51 == _16;
_6.fld0 = Adt18::Variant0 { fld0: (*_41),fld1: _46 };
(*_58) = _27;
_67 = [_42,_42,_42,_42];
Goto(bb44)
}
bb44 = {
(*_82) = _79 | _59.1;
_58 = core::ptr::addr_of!((*_58));
_7 = core::ptr::addr_of_mut!((*_49));
(*_41) = _81.0 as f32;
(*_49) = 15264730413262430328_usize & 4_usize;
(*_41) = _46 as f32;
(*_58) = _27;
_35.0 = [_33,(*_82),(*_82),(*_82),(*_82)];
_78 = _31;
(*_58) = _27;
(*_82) = _39 | _39;
_83 = -53088255150833615533067530356673653619_i128;
place!(Field::<u8>(Variant(_45, 1), 1)) = (*_18) as u8;
_75 = _81.0 >> _61;
(*_49) = 5_usize;
(*_82) = _39;
_88 = !_12[_77];
(*_49) = _6.fld1[_77];
(*_58) = _27;
match (*_49) {
0 => bb28,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb35,
5 => bb21,
7 => bb45,
_ => bb39
}
}
bb45 = {
(*_49) = _73.0.fld1[_77] + _73.0.fld1[_77];
(*_58) = _27;
_63 = core::ptr::addr_of!((*_41));
_73.0.fld1 = [(*_49),(*_49),(*_49),(*_49),(*_49),(*_49),(*_49),(*_49)];
_71 = [_42,_88,_88,_88];
_92 = (*_82) < _39;
_29 = &mut _83;
(*_29) = _88 as i128;
(*_82) = _86 <= Field::<f32>(Variant(_73.0.fld0, 1), 1);
_74 = [_1,_1,_1];
_78 = Field::<f32>(Variant(_73.0.fld0, 1), 1) as u128;
place!(Field::<isize>(Variant(_45, 1), 2)) = (*_44) as isize;
Goto(bb46)
}
bb46 = {
(*_58) = _27;
(*_49) = _16 as usize;
_93 = &mut _19;
(*_93) = [72_i8];
(*_63) = Field::<i32>(Variant(_45, 1), 3) as f32;
place!(Field::<u8>(Variant(_45, 1), 1)) = 191_u8;
_38 = core::ptr::addr_of!((*_18));
(*_41) = -_57;
(*_29) = !96054075704913431754599028807155200486_i128;
_94 = _72;
(*_58) = _27;
_4 = _75 as f32;
(*_58) = _27;
_91 = _36 != (*_41);
(*_93) = [118_i8];
(*_41) = 104_i8 as f32;
_73.0 = Adt44 { fld0: _6.fld0,fld1: _6.fld1 };
_47 = _42 as u128;
(*_82) = !Field::<bool>(Variant(_30, 3), 0);
_25 = Field::<i16>(Variant(_6.fld0, 0), 1) as i64;
(*_49) = 0_usize * 17142328610981827150_usize;
_34 = _72 & _72;
_99.0 = _42;
(*_82) = _36 > _86;
match Field::<u8>(Variant(_45, 1), 1) {
0 => bb40,
1 => bb15,
2 => bb26,
191 => bb47,
_ => bb10
}
}
bb47 = {
(*_41) = _3;
(*_58) = _27;
(*_29) = (-83633300169842708772737958700718768231_i128);
_53 = !(*_82);
(*_49) = 0_usize;
(*_82) = _91;
_59.1 = !(*_82);
_99.1 = Field::<u8>(Variant(_45, 1), 1) as f64;
_47 = _3 as u128;
(*_93)[_77] = !_62[_77];
_79 = (*_41) == (*_41);
_21 = core::ptr::addr_of_mut!(_93);
(*_49) = !_5[_77];
_65 = &_99.1;
_98.fld1 = [(*_49),(*_49),(*_49),(*_49),(*_49),_77,(*_49),(*_49)];
(*_41) = Field::<f32>(Variant(_73.0.fld0, 0), 0) - _3;
(*_93) = [82_i8];
(*_49) = !17518299072884215997_usize;
(*_58) = _27;
(*_58) = _27;
_44 = &_25;
_2 = _35.0;
(*_29) = _9 as i128;
_2 = _35.0;
Goto(bb48)
}
bb48 = {
place!(Field::<u8>(Variant(_45, 1), 1)) = !249_u8;
_102 = -(*_41);
_63 = core::ptr::addr_of!(_102);
(*_82) = _33;
_95 = [Field::<u8>(Variant(_45, 1), 1),Field::<u8>(Variant(_45, 1), 1),Field::<u8>(Variant(_45, 1), 1)];
(*_58) = _27;
_87 = _34;
_65 = Move(_18);
_77 = !4230986927946593152_usize;
(*_93) = [62_i8];
(*_41) = _86 * _57;
(*_93) = [1_i8];
_28 = (*_63);
_90 = -(*_38);
(*_63) = _28 * (*_41);
_85 = -_57;
Goto(bb49)
}
bb49 = {
place!(Field::<f32>(Variant(_73.0.fld0, 0), 0)) = (*_41) * _3;
(*_63) = _88 as f32;
(*_82) = _92 != _92;
_74 = [_1,_1,_1];
_104.0 = _75 - _75;
(*_41) = -_4;
(*_41) = Field::<f32>(Variant(_73.0.fld0, 0), 0) + _85;
_103 = Field::<i32>(Variant(_45, 1), 3) as f32;
(*_93) = [74_i8];
(*_93) = [(-70_i8)];
(*_93) = [(-50_i8)];
_70 = (*_82) | (*_82);
_81.1 = Move(_60);
Goto(bb50)
}
bb50 = {
Call(_116 = dump_var(Move(_35), Move(_46), Move(_27), Move(_92)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_116 = dump_var(Move(_83), Move(_79), Move(_9), Move(_13)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_116 = dump_var(Move(_42), Move(_53), Move(_17), Move(_33)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_116 = dump_var(Move(_12), Move(_5), Move(_39), Move(_78)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_116 = dump_var(Move(_77), Move(_94), Move(_2), Move(_34)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_116 = dump_var(Move(_67), Move(_19), Move(_24), Move(_52)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: f32,mut _2: f32,mut _3: isize,mut _4: i128,mut _5: i64,mut _6: Adt21) -> [usize; 8] {
mir! {
type RET = [usize; 8];
let _7: &'static u32;
let _8: (f64,);
let _9: u32;
let _10: isize;
let _11: [u64; 4];
let _12: u16;
let _13: Adt56;
let _14: f64;
let _15: &'static &'static mut [char; 3];
let _16: &'static mut &'static u32;
let _17: i128;
let _18: char;
let _19: i16;
let _20: char;
let _21: *const Adt51;
let _22: Adt22;
let _23: ([bool; 5],);
let _24: &'static i64;
let _25: i16;
let _26: char;
let _27: bool;
let _28: u64;
let _29: *const Adt21;
let _30: [i16; 8];
let _31: isize;
let _32: u16;
let _33: u16;
let _34: u128;
let _35: &'static u32;
let _36: &'static mut [i8; 1];
let _37: bool;
let _38: &'static mut [i8; 1];
let _39: *mut Adt51;
let _40: &'static mut i128;
let _41: (Adt44, *const &'static (isize, u16, i32, u64));
let _42: f32;
let _43: f32;
let _44: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _45: *const f64;
let _46: &'static mut bool;
let _47: [u8; 3];
let _48: [i16; 8];
let _49: f32;
let _50: u32;
let _51: f32;
let _52: char;
let _53: *const char;
let _54: [u64; 8];
let _55: f64;
let _56: i128;
let _57: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _58: i128;
let _59: f32;
let _60: bool;
let _61: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _62: &'static mut i128;
let _63: isize;
let _64: ([usize; 8], &'static mut i64);
let _65: f64;
let _66: isize;
let _67: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _68: ([i16; 8],);
let _69: &'static f64;
let _70: ([u32; 3],);
let _71: f64;
let _72: u8;
let _73: isize;
let _74: [i16; 8];
let _75: f64;
let _76: &'static mut &'static u32;
let _77: [char; 3];
let _78: i8;
let _79: &'static f64;
let _80: *const &'static (isize, u16, i32, u64);
let _81: isize;
let _82: *mut Adt51;
let _83: &'static ([i16; 8],);
let _84: (isize, u16, i32, u64);
let _85: f32;
let _86: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _87: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _88: &'static [u8; 3];
let _89: &'static mut [char; 3];
let _90: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _91: ([i16; 8],);
let _92: (&'static mut i128, bool);
let _93: i8;
let _94: i128;
let _95: [char; 3];
let _96: &'static mut [i8; 1];
let _97: usize;
let _98: bool;
let _99: &'static mut [i8; 1];
let _100: ();
let _101: ();
{
_2 = 1135861830_i32 as f32;
_2 = _6.fld2 + _6.fld2;
RET = [5210345415807086497_usize,7859001308385269307_usize,16368256266302066917_usize,3564232098139374514_usize,3660260828251434497_usize,16642648310740848830_usize,7_usize,10938243916909258877_usize];
RET = [17313106080089770241_usize,3_usize,16800739357811067278_usize,6956021087457586826_usize,3940291992710472289_usize,14644710681366356854_usize,6_usize,3753347739402874233_usize];
_8.0 = 101_u8 as f64;
_9 = _6.fld3 << _6.fld4;
_6.fld0 = _5 << _6.fld4;
_5 = -_6.fld0;
_1 = _6.fld2 * _2;
_2 = _6.fld2;
_6.fld2 = _1 - _2;
_9 = _6.fld3 >> _5;
_8.0 = 5986598200910175436_usize as f64;
_7 = &_9;
_6.fld2 = -_2;
_6 = Adt21 { fld0: _5,fld1: '\u{ed168}',fld2: _2,fld3: (*_7),fld4: _4 };
_3 = 9223372036854775807_isize;
_6.fld2 = -_1;
_6.fld4 = _4 - _4;
_6.fld3 = false as u32;
_2 = (-636968712_i32) as f32;
_10 = _3;
Goto(bb1)
}
bb1 = {
_5 = _6.fld0 - _6.fld0;
_6.fld1 = '\u{10455d}';
_2 = _1;
_6.fld1 = '\u{1095f1}';
_6.fld2 = _2;
_6.fld3 = _9;
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
76699854981846710148653962942726204950 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_12 = _6.fld0 as u16;
_6.fld3 = (*_7) | (*_7);
_6.fld0 = !_5;
_2 = _6.fld2;
_10 = _3 & _3;
_6.fld2 = _2 - _1;
_3 = _8.0 as isize;
_11 = [12167939054074723524_u64,11117134942566648531_u64,2767254176635465199_u64,12519992633059055359_u64];
_13 = Adt56::Variant3 { fld0: true,fld1: 123263147634071822526715984063108392643_u128 };
_3 = _10;
_6.fld2 = _2;
_6.fld0 = _5 * _5;
_7 = &_6.fld3;
_4 = _6.fld4 + _6.fld4;
_10 = 110_u8 as isize;
_8.0 = (-110_i8) as f64;
place!(Field::<u128>(Variant(_13, 3), 1)) = 57685825833663604946228448721179230675_u128 - 164666762216260009675905168162512927145_u128;
_12 = 57638_u16 & 6863_u16;
_7 = &_9;
_13 = Adt56::Variant3 { fld0: false,fld1: 194320927208526782961898977408550259622_u128 };
_11 = [11913414969186314480_u64,14394965364852540940_u64,6850039936264911786_u64,2007603939374664722_u64];
place!(Field::<u128>(Variant(_13, 3), 1)) = 8297860165336850302_u64 as u128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _6.fld3 <= (*_7);
Goto(bb9)
}
bb9 = {
_5 = _6.fld0;
_14 = _8.0 - _8.0;
_1 = _6.fld0 as f32;
_16 = &mut _7;
_3 = _6.fld0 as isize;
_12 = !41114_u16;
_6.fld1 = '\u{b209b}';
_6.fld4 = _8.0 as i128;
(*_16) = &_6.fld3;
(*_16) = &_9;
_10 = -_3;
_17 = _4;
_2 = -_1;
_8 = (_14,);
_3 = _10;
_3 = _8.0 as isize;
(*_16) = &_6.fld3;
_6.fld1 = '\u{da3d3}';
_6 = Adt21 { fld0: _5,fld1: '\u{1d47c}',fld2: _1,fld3: _9,fld4: _17 };
_17 = _4 & _6.fld4;
Call(_18 = fn4(Move((*_16))), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
RET = [3_usize,6021439213015637329_usize,8090896105461866332_usize,15080932838906997555_usize,15974072230896566360_usize,4_usize,4_usize,3195550627919774885_usize];
_6 = Adt21 { fld0: _5,fld1: _18,fld2: _2,fld3: _9,fld4: _4 };
_14 = -_8.0;
_8.0 = _14 + _14;
RET = [4786178865830688408_usize,7_usize,12152375611058287258_usize,2_usize,1_usize,1433357807085233929_usize,5883548824555812481_usize,1107879185535530134_usize];
_11 = [10123349871661407555_u64,9008890035520069374_u64,13989399973386677960_u64,2944246196788679088_u64];
_19 = 32029_i16 ^ 11482_i16;
_6.fld3 = _8.0 as u32;
_3 = _10 & _10;
Goto(bb11)
}
bb11 = {
_3 = 6322034704102578831_u64 as isize;
Goto(bb12)
}
bb12 = {
_6.fld4 = _4 & _17;
_9 = _6.fld3 ^ _6.fld3;
_1 = _6.fld0 as f32;
_7 = &_9;
_6.fld0 = -_5;
_24 = &_5;
_6.fld2 = _2 * _1;
_19 = (-10783_i16) | 17236_i16;
place!(Field::<bool>(Variant(_13, 3), 0)) = false ^ true;
_19 = (-15416_i16) >> _6.fld4;
_28 = !16562650290847315387_u64;
_6.fld2 = _12 as f32;
_6.fld0 = (*_24) >> (*_24);
Goto(bb13)
}
bb13 = {
_19 = 181_u8 as i16;
_8 = (_14,);
RET = [11185004069670249800_usize,13756141398554787455_usize,0_usize,13376856565814703232_usize,13034237672681536526_usize,547302025318580787_usize,3239761202338186_usize,6_usize];
_4 = _12 as i128;
_26 = _18;
_3 = _10 * _10;
_6.fld3 = (*_7) & (*_7);
_23.0 = [Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0)];
_32 = _12 >> (*_24);
_5 = _6.fld0 + _6.fld0;
_11 = [_28,_28,_28,_28];
_12 = _32;
_27 = Field::<bool>(Variant(_13, 3), 0);
Goto(bb14)
}
bb14 = {
_32 = !_12;
_8 = (_14,);
_8.0 = -_14;
_6.fld3 = !(*_7);
_20 = _18;
_34 = _20 as u128;
_8.0 = _14 + _14;
_12 = _32 | _32;
_27 = !Field::<bool>(Variant(_13, 3), 0);
_23.0 = [_27,Field::<bool>(Variant(_13, 3), 0),_27,Field::<bool>(Variant(_13, 3), 0),_27];
_25 = _19 - _19;
Goto(bb15)
}
bb15 = {
_31 = _10 - _3;
_6.fld4 = (-1451731415_i32) as i128;
Goto(bb16)
}
bb16 = {
_5 = _6.fld0 | _6.fld0;
_33 = _32 + _32;
_1 = _2 - _2;
_37 = Field::<bool>(Variant(_13, 3), 0);
_11 = [_28,_28,_28,_28];
_20 = _18;
_8 = (_14,);
_32 = _33;
_31 = _5 as isize;
_8.0 = _14;
_25 = _19 >> (*_7);
_23.0 = [_37,Field::<bool>(Variant(_13, 3), 0),_37,_37,_37];
_4 = _17 | _17;
_32 = _12 & _33;
_32 = _33 * _12;
_19 = Field::<bool>(Variant(_13, 3), 0) as i16;
_27 = _32 == _12;
_10 = _31 + _31;
_6.fld1 = _20;
_34 = Field::<u128>(Variant(_13, 3), 1) >> _4;
_11 = [_28,_28,_28,_28];
_22 = Adt22::Variant0 { fld0: _27,fld1: _34,fld2: _31,fld3: 6527947129116977742_usize,fld4: _28,fld5: _6,fld6: 192_u8,fld7: _33 };
Goto(bb17)
}
bb17 = {
_2 = _1 - _1;
place!(Field::<Adt21>(Variant(_22, 0), 5)) = Adt21 { fld0: _6.fld0,fld1: _20,fld2: _1,fld3: _6.fld3,fld4: _4 };
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3 = (*_7);
Goto(bb18)
}
bb18 = {
place!(Field::<usize>(Variant(_22, 0), 3)) = 12967201171373556957_usize * 3978780326184400277_usize;
_6.fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
_35 = &(*_7);
place!(Field::<bool>(Variant(_22, 0), 0)) = _27;
_11 = [_28,_28,_28,_28];
Goto(bb19)
}
bb19 = {
_29 = core::ptr::addr_of!(_6);
(*_29).fld1 = _26;
_16 = &mut _35;
(*_16) = &(*_29).fld3;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld1 = (*_29).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld2 = -_2;
(*_29).fld1 = _20;
(*_16) = &(*_7);
Goto(bb20)
}
bb20 = {
(*_29).fld4 = !_4;
(*_29).fld3 = (*_7);
_32 = Field::<u16>(Variant(_22, 0), 7) ^ _33;
_31 = _3;
(*_29).fld0 = !_5;
(*_29).fld0 = !Field::<Adt21>(Variant(_22, 0), 5).fld0;
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0 ^ _5;
(*_29).fld0 = _28 as i64;
place!(Field::<u64>(Variant(_22, 0), 4)) = _28 * _28;
_41.0.fld1 = RET;
_20 = (*_29).fld1;
_3 = 71_i8 as isize;
(*_29) = Adt21 { fld0: _5,fld1: _20,fld2: Field::<Adt21>(Variant(_22, 0), 5).fld2,fld3: (*_7),fld4: Field::<Adt21>(Variant(_22, 0), 5).fld4 };
Goto(bb21)
}
bb21 = {
_32 = Field::<u16>(Variant(_22, 0), 7);
_33 = !_32;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld4 = (*_29).fld4 << (*_29).fld4;
(*_16) = &(*_29).fld3;
place!(Field::<u8>(Variant(_22, 0), 6)) = 117_u8;
(*_29).fld1 = _20;
(*_29) = Field::<Adt21>(Variant(_22, 0), 5);
_26 = (*_29).fld1;
match Field::<u8>(Variant(_22, 0), 6) {
117 => bb23,
_ => bb22
}
}
bb22 = {
_29 = core::ptr::addr_of!(_6);
(*_29).fld1 = _26;
_16 = &mut _35;
(*_16) = &(*_29).fld3;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld1 = (*_29).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld2 = -_2;
(*_29).fld1 = _20;
(*_16) = &(*_7);
Goto(bb20)
}
bb23 = {
(*_29).fld3 = (*_7) << (*_29).fld4;
(*_16) = &(*_7);
place!(Field::<u128>(Variant(_13, 3), 1)) = (*_29).fld3 as u128;
(*_29).fld1 = _26;
(*_29).fld2 = -_1;
(*_29).fld4 = Field::<Adt21>(Variant(_22, 0), 5).fld4 | Field::<Adt21>(Variant(_22, 0), 5).fld4;
(*_29).fld0 = !Field::<Adt21>(Variant(_22, 0), 5).fld0;
_6.fld2 = _34 as f32;
(*_29) = Field::<Adt21>(Variant(_22, 0), 5);
_6.fld1 = _20;
(*_16) = &(*_29).fld3;
_18 = (*_29).fld1;
RET = [Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3)];
Goto(bb24)
}
bb24 = {
(*_29).fld1 = _18;
(*_29).fld1 = _26;
_6.fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_16) = &(*_7);
_46 = &mut _27;
_16 = &mut _7;
(*_16) = &(*_29).fld3;
(*_46) = !Field::<bool>(Variant(_22, 0), 0);
(*_16) = &_9;
_40 = &mut (*_29).fld4;
place!(Field::<Adt21>(Variant(_22, 0), 5)) = Adt21 { fld0: (*_29).fld0,fld1: (*_29).fld1,fld2: (*_29).fld2,fld3: _9,fld4: (*_40) };
(*_29).fld0 = _5 - Field::<Adt21>(Variant(_22, 0), 5).fld0;
(*_29).fld3 = Field::<Adt21>(Variant(_22, 0), 5).fld3 & _9;
(*_40) = !Field::<Adt21>(Variant(_22, 0), 5).fld4;
_2 = (*_29).fld2 + Field::<Adt21>(Variant(_22, 0), 5).fld2;
(*_16) = &(*_29).fld3;
_9 = !(*_29).fld3;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
Goto(bb25)
}
bb25 = {
(*_40) = _17;
_56 = -(*_40);
_43 = (*_29).fld2 * (*_29).fld2;
(*_29).fld0 = Field::<isize>(Variant(_22, 0), 2) as i64;
(*_16) = &(*_29).fld3;
(*_46) = (*_29).fld0 > (*_29).fld0;
(*_46) = Field::<bool>(Variant(_22, 0), 0);
(*_29).fld2 = Field::<u128>(Variant(_13, 3), 1) as f32;
_55 = (*_29).fld2 as f64;
(*_40) = _4 - Field::<Adt21>(Variant(_22, 0), 5).fld4;
_33 = !_12;
(*_29).fld1 = _20;
(*_29).fld0 = _5;
(*_29).fld2 = _2 * _1;
_42 = (*_29).fld2 - (*_29).fld2;
(*_46) = (*_29).fld0 == Field::<Adt21>(Variant(_22, 0), 5).fld0;
_59 = -(*_29).fld2;
(*_40) = !_17;
(*_29).fld2 = -_42;
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0;
match Field::<u8>(Variant(_22, 0), 6) {
0 => bb20,
1 => bb8,
2 => bb10,
3 => bb15,
4 => bb5,
5 => bb26,
117 => bb28,
_ => bb27
}
}
bb26 = {
_31 = _10 - _3;
_6.fld4 = (-1451731415_i32) as i128;
Goto(bb16)
}
bb27 = {
_2 = _1 - _1;
place!(Field::<Adt21>(Variant(_22, 0), 5)) = Adt21 { fld0: _6.fld0,fld1: _20,fld2: _1,fld3: _6.fld3,fld4: _4 };
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3 = (*_7);
Goto(bb18)
}
bb28 = {
(*_46) = Field::<bool>(Variant(_22, 0), 0);
(*_29).fld2 = _2 + _59;
_45 = core::ptr::addr_of!(_8.0);
_10 = -Field::<isize>(Variant(_22, 0), 2);
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld0 = _9 as i64;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_45) = _55;
(*_40) = _4 + _56;
(*_45) = _14 * _55;
(*_29).fld1 = _26;
_41.0.fld0 = Adt18::Variant1 { fld0: (*_29).fld0,fld1: (*_29).fld2,fld2: (-1091549338_i32),fld3: (-33_i8) };
(*_40) = !_4;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld0 = (*_29).fld0 + Field::<i64>(Variant(_41.0.fld0, 1), 0);
_60 = !(*_46);
_59 = (*_29).fld2;
_52 = (*_29).fld1;
_41.0.fld1 = [Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3)];
(*_29).fld1 = _26;
_41.0.fld0 = Adt18::Variant1 { fld0: (*_29).fld0,fld1: (*_29).fld2,fld2: (-2031613348_i32),fld3: 17_i8 };
(*_29).fld0 = _5 ^ Field::<i64>(Variant(_41.0.fld0, 1), 0);
(*_16) = &(*_29).fld3;
Goto(bb29)
}
bb29 = {
_31 = !Field::<isize>(Variant(_22, 0), 2);
(*_29).fld1 = _20;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_29).fld2 = Field::<u64>(Variant(_22, 0), 4) as f32;
(*_16) = &(*_29).fld3;
_9 = (*_29).fld3;
_37 = (*_46);
_23.0 = [(*_46),(*_46),(*_46),(*_46),(*_46)];
(*_29).fld2 = -_43;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_29).fld0 = -Field::<i64>(Variant(_41.0.fld0, 1), 0);
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0 << (*_40);
place!(Field::<i32>(Variant(_41.0.fld0, 1), 2)) = (*_45) as i32;
place!(Field::<f32>(Variant(_41.0.fld0, 1), 1)) = -_2;
place!(Field::<i8>(Variant(_41.0.fld0, 1), 3)) = !(-60_i8);
(*_29).fld0 = (*_29).fld2 as i64;
(*_46) = _60;
(*_16) = &(*_29).fld3;
_1 = _2;
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0 - Field::<Adt21>(Variant(_22, 0), 5).fld0;
_53 = core::ptr::addr_of!((*_29).fld1);
(*_29).fld3 = !Field::<Adt21>(Variant(_22, 0), 5).fld3;
(*_29).fld3 = Field::<usize>(Variant(_22, 0), 3) as u32;
(*_46) = !Field::<bool>(Variant(_22, 0), 0);
Goto(bb30)
}
bb30 = {
_40 = &mut place!(Field::<Adt21>(Variant(_22, 0), 5)).fld4;
(*_45) = -_55;
_40 = &mut _4;
(*_29).fld3 = _9 + _9;
_54 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*_29).fld1 = _26;
(*_46) = _37;
_11 = [_28,_28,_28,_28];
Goto(bb31)
}
bb31 = {
(*_29).fld0 = _5;
(*_16) = &_9;
(*_45) = _34 as f64;
(*_29).fld1 = _26;
(*_29).fld3 = _9 & _9;
(*_29).fld1 = _52;
(*_45) = -_55;
_31 = _10 + _10;
(*_40) = _56;
_37 = _60 | (*_46);
(*_40) = -_17;
(*_45) = _55 * _55;
place!(Field::<u128>(Variant(_13, 3), 1)) = _34 - _34;
(*_29).fld0 = !_5;
(*_40) = _56;
(*_29).fld3 = _9 & _9;
_28 = 7922294787478071969_u64;
(*_46) = _37;
(*_29).fld2 = _2 + _43;
(*_46) = !_37;
_26 = (*_29).fld1;
_25 = _19 | _19;
(*_46) = _37;
_55 = (*_45);
Goto(bb32)
}
bb32 = {
(*_29).fld2 = _1 + _43;
(*_45) = _14;
(*_29).fld3 = _9 | _9;
(*_45) = _55;
(*_46) = (*_45) > (*_45);
_55 = (*_45) - (*_45);
_50 = (*_29).fld3;
_33 = _12 >> (*_29).fld0;
(*_29).fld0 = _5;
(*_29).fld3 = _50 << (*_40);
(*_29).fld3 = !_50;
(*_16) = &(*_29).fld3;
_14 = -(*_45);
Goto(bb33)
}
bb33 = {
(*_29).fld3 = (*_29).fld0 as u32;
(*_29).fld3 = !_9;
_60 = (*_46) & (*_46);
(*_16) = &_50;
(*_45) = _55 * _14;
_40 = &mut _56;
(*_16) = &(*_29).fld3;
_48 = [_19,_25,_25,_19,_25,_19,_19,_25];
_41.0.fld1 = RET;
_41.0.fld1 = [13542777612736646233_usize,6_usize,1_usize,5_usize,2_usize,10821688413065591442_usize,7_usize,3112129753475096678_usize];
_67.0 = (_28, (*_45));
_51 = (*_29).fld2 + _2;
(*_29).fld2 = (*_45) as f32;
(*_29).fld1 = _18;
match _28 {
0 => bb1,
1 => bb11,
2 => bb34,
3 => bb35,
4 => bb36,
5 => bb37,
7922294787478071969 => bb39,
_ => bb38
}
}
bb34 = {
_29 = core::ptr::addr_of!(_6);
(*_29).fld1 = _26;
_16 = &mut _35;
(*_16) = &(*_29).fld3;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld1 = (*_29).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld1 = Field::<Adt21>(Variant(_22, 0), 5).fld1;
(*_29).fld2 = -_2;
(*_29).fld1 = _20;
(*_16) = &(*_7);
Goto(bb20)
}
bb35 = {
_5 = _6.fld0;
_14 = _8.0 - _8.0;
_1 = _6.fld0 as f32;
_16 = &mut _7;
_3 = _6.fld0 as isize;
_12 = !41114_u16;
_6.fld1 = '\u{b209b}';
_6.fld4 = _8.0 as i128;
(*_16) = &_6.fld3;
(*_16) = &_9;
_10 = -_3;
_17 = _4;
_2 = -_1;
_8 = (_14,);
_3 = _10;
_3 = _8.0 as isize;
(*_16) = &_6.fld3;
_6.fld1 = '\u{da3d3}';
_6 = Adt21 { fld0: _5,fld1: '\u{1d47c}',fld2: _1,fld3: _9,fld4: _17 };
_17 = _4 & _6.fld4;
Call(_18 = fn4(Move((*_16))), ReturnTo(bb10), UnwindUnreachable())
}
bb36 = {
_40 = &mut place!(Field::<Adt21>(Variant(_22, 0), 5)).fld4;
(*_45) = -_55;
_40 = &mut _4;
(*_29).fld3 = _9 + _9;
_54 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*_29).fld1 = _26;
(*_46) = _37;
_11 = [_28,_28,_28,_28];
Goto(bb31)
}
bb37 = {
_31 = !Field::<isize>(Variant(_22, 0), 2);
(*_29).fld1 = _20;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_29).fld2 = Field::<u64>(Variant(_22, 0), 4) as f32;
(*_16) = &(*_29).fld3;
_9 = (*_29).fld3;
_37 = (*_46);
_23.0 = [(*_46),(*_46),(*_46),(*_46),(*_46)];
(*_29).fld2 = -_43;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_29).fld0 = -Field::<i64>(Variant(_41.0.fld0, 1), 0);
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0 << (*_40);
place!(Field::<i32>(Variant(_41.0.fld0, 1), 2)) = (*_45) as i32;
place!(Field::<f32>(Variant(_41.0.fld0, 1), 1)) = -_2;
place!(Field::<i8>(Variant(_41.0.fld0, 1), 3)) = !(-60_i8);
(*_29).fld0 = (*_29).fld2 as i64;
(*_46) = _60;
(*_16) = &(*_29).fld3;
_1 = _2;
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0 - Field::<Adt21>(Variant(_22, 0), 5).fld0;
_53 = core::ptr::addr_of!((*_29).fld1);
(*_29).fld3 = !Field::<Adt21>(Variant(_22, 0), 5).fld3;
(*_29).fld3 = Field::<usize>(Variant(_22, 0), 3) as u32;
(*_46) = !Field::<bool>(Variant(_22, 0), 0);
Goto(bb30)
}
bb38 = {
_12 = _6.fld0 as u16;
_6.fld3 = (*_7) | (*_7);
_6.fld0 = !_5;
_2 = _6.fld2;
_10 = _3 & _3;
_6.fld2 = _2 - _1;
_3 = _8.0 as isize;
_11 = [12167939054074723524_u64,11117134942566648531_u64,2767254176635465199_u64,12519992633059055359_u64];
_13 = Adt56::Variant3 { fld0: true,fld1: 123263147634071822526715984063108392643_u128 };
_3 = _10;
_6.fld2 = _2;
_6.fld0 = _5 * _5;
_7 = &_6.fld3;
_4 = _6.fld4 + _6.fld4;
_10 = 110_u8 as isize;
_8.0 = (-110_i8) as f64;
place!(Field::<u128>(Variant(_13, 3), 1)) = 57685825833663604946228448721179230675_u128 - 164666762216260009675905168162512927145_u128;
_12 = 57638_u16 & 6863_u16;
_7 = &_9;
_13 = Adt56::Variant3 { fld0: false,fld1: 194320927208526782961898977408550259622_u128 };
_11 = [11913414969186314480_u64,14394965364852540940_u64,6850039936264911786_u64,2007603939374664722_u64];
place!(Field::<u128>(Variant(_13, 3), 1)) = 8297860165336850302_u64 as u128;
place!(Field::<bool>(Variant(_13, 3), 0)) = _6.fld3 <= (*_7);
Goto(bb9)
}
bb39 = {
_49 = -(*_29).fld2;
(*_40) = _17 & _17;
_66 = _10 >> (*_29).fld0;
(*_40) = _17 | _17;
_43 = _34 as f32;
(*_29).fld1 = _52;
(*_16) = &_9;
(*_29).fld3 = !_9;
(*_45) = _14 * _55;
_67.3 = [_66,_66];
match _28 {
0 => bb22,
1 => bb40,
2 => bb41,
7922294787478071969 => bb43,
_ => bb42
}
}
bb40 = {
_19 = 181_u8 as i16;
_8 = (_14,);
RET = [11185004069670249800_usize,13756141398554787455_usize,0_usize,13376856565814703232_usize,13034237672681536526_usize,547302025318580787_usize,3239761202338186_usize,6_usize];
_4 = _12 as i128;
_26 = _18;
_3 = _10 * _10;
_6.fld3 = (*_7) & (*_7);
_23.0 = [Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0),Field::<bool>(Variant(_13, 3), 0)];
_32 = _12 >> (*_24);
_5 = _6.fld0 + _6.fld0;
_11 = [_28,_28,_28,_28];
_12 = _32;
_27 = Field::<bool>(Variant(_13, 3), 0);
Goto(bb14)
}
bb41 = {
(*_40) = _17;
_56 = -(*_40);
_43 = (*_29).fld2 * (*_29).fld2;
(*_29).fld0 = Field::<isize>(Variant(_22, 0), 2) as i64;
(*_16) = &(*_29).fld3;
(*_46) = (*_29).fld0 > (*_29).fld0;
(*_46) = Field::<bool>(Variant(_22, 0), 0);
(*_29).fld2 = Field::<u128>(Variant(_13, 3), 1) as f32;
_55 = (*_29).fld2 as f64;
(*_40) = _4 - Field::<Adt21>(Variant(_22, 0), 5).fld4;
_33 = !_12;
(*_29).fld1 = _20;
(*_29).fld0 = _5;
(*_29).fld2 = _2 * _1;
_42 = (*_29).fld2 - (*_29).fld2;
(*_46) = (*_29).fld0 == Field::<Adt21>(Variant(_22, 0), 5).fld0;
_59 = -(*_29).fld2;
(*_40) = !_17;
(*_29).fld2 = -_42;
(*_29).fld0 = Field::<Adt21>(Variant(_22, 0), 5).fld0;
match Field::<u8>(Variant(_22, 0), 6) {
0 => bb20,
1 => bb8,
2 => bb10,
3 => bb15,
4 => bb5,
5 => bb26,
117 => bb28,
_ => bb27
}
}
bb42 = {
(*_46) = Field::<bool>(Variant(_22, 0), 0);
(*_29).fld2 = _2 + _59;
_45 = core::ptr::addr_of!(_8.0);
_10 = -Field::<isize>(Variant(_22, 0), 2);
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld0 = _9 as i64;
(*_16) = &place!(Field::<Adt21>(Variant(_22, 0), 5)).fld3;
(*_45) = _55;
(*_40) = _4 + _56;
(*_45) = _14 * _55;
(*_29).fld1 = _26;
_41.0.fld0 = Adt18::Variant1 { fld0: (*_29).fld0,fld1: (*_29).fld2,fld2: (-1091549338_i32),fld3: (-33_i8) };
(*_40) = !_4;
place!(Field::<Adt21>(Variant(_22, 0), 5)).fld0 = (*_29).fld0 + Field::<i64>(Variant(_41.0.fld0, 1), 0);
_60 = !(*_46);
_59 = (*_29).fld2;
_52 = (*_29).fld1;
_41.0.fld1 = [Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3)];
(*_29).fld1 = _26;
_41.0.fld0 = Adt18::Variant1 { fld0: (*_29).fld0,fld1: (*_29).fld2,fld2: (-2031613348_i32),fld3: 17_i8 };
(*_29).fld0 = _5 ^ Field::<i64>(Variant(_41.0.fld0, 1), 0);
(*_16) = &(*_29).fld3;
Goto(bb29)
}
bb43 = {
_19 = _25 & _25;
(*_29).fld1 = _26;
(*_40) = (*_29).fld2 as i128;
(*_45) = _67.0.1;
(*_29).fld3 = _9;
(*_29).fld3 = _50 << _17;
(*_46) = _10 >= _31;
(*_46) = _37 & _37;
(*_29).fld1 = _20;
(*_40) = _17 ^ _17;
(*_46) = _1 == (*_29).fld2;
_42 = (*_29).fld2 * (*_29).fld2;
_2 = (*_29).fld2 + _43;
(*_40) = _17 ^ _17;
_50 = (*_29).fld2 as u32;
(*_29).fld1 = _52;
Goto(bb44)
}
bb44 = {
(*_46) = (*_29).fld2 != Field::<f32>(Variant(_41.0.fld0, 1), 1);
(*_29).fld1 = _18;
(*_45) = _19 as f64;
(*_46) = _37;
(*_46) = _60 & _60;
(*_29).fld2 = _59 + _1;
(*_45) = _14;
(*_45) = _14 + _67.0.1;
(*_45) = _14 - _14;
_64.1 = &mut (*_29).fld0;
(*_45) = -_14;
(*_29).fld1 = _52;
_30 = [_19,_25,_25,_19,_19,_19,_19,_19];
(*_45) = _19 as f64;
(*_29).fld3 = _50 & _50;
(*_45) = Field::<i8>(Variant(_41.0.fld0, 1), 3) as f64;
(*_29).fld3 = _50 ^ _50;
place!(Field::<f32>(Variant(_41.0.fld0, 1), 1)) = _42 - (*_29).fld2;
_28 = _67.0.0 + _67.0.0;
(*_29).fld1 = _26;
(*_29).fld2 = _43 + _43;
(*_29).fld1 = _52;
(*_16) = &(*_29).fld3;
place!(Field::<i32>(Variant(_41.0.fld0, 1), 2)) = (-135770845_i32);
(*_29).fld3 = !_50;
(*_40) = (*_29).fld3 as i128;
_64.1 = &mut _5;
match Field::<i32>(Variant(_41.0.fld0, 1), 2) {
0 => bb19,
1 => bb33,
2 => bb36,
3 => bb34,
4 => bb42,
5 => bb38,
340282366920938463463374607431632440611 => bb46,
_ => bb45
}
}
bb45 = {
(*_29).fld3 = (*_7) << (*_29).fld4;
(*_16) = &(*_7);
place!(Field::<u128>(Variant(_13, 3), 1)) = (*_29).fld3 as u128;
(*_29).fld1 = _26;
(*_29).fld2 = -_1;
(*_29).fld4 = Field::<Adt21>(Variant(_22, 0), 5).fld4 | Field::<Adt21>(Variant(_22, 0), 5).fld4;
(*_29).fld0 = !Field::<Adt21>(Variant(_22, 0), 5).fld0;
_6.fld2 = _34 as f32;
(*_29) = Field::<Adt21>(Variant(_22, 0), 5);
_6.fld1 = _20;
(*_16) = &(*_29).fld3;
_18 = (*_29).fld1;
RET = [Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3),Field::<usize>(Variant(_22, 0), 3)];
Goto(bb24)
}
bb46 = {
(*_45) = 189_u8 as f64;
(*_29).fld3 = _50 - _9;
_46 = &mut place!(Field::<bool>(Variant(_13, 3), 0));
_65 = _67.0.1 + _55;
_68 = (_30,);
_64.0 = RET;
(*_45) = (*_29).fld2 as f64;
_72 = 32_u8 ^ 53_u8;
place!(Field::<i64>(Variant(_41.0.fld0, 1), 0)) = 6937289580173080649_i64 * 1923144762363730669_i64;
(*_46) = _37 & _37;
(*_45) = _67.0.1;
_76 = &mut (*_16);
_87.2.fld1 = (*_29).fld1;
_46 = &mut _37;
(*_45) = _65 * _14;
(*_76) = &_9;
(*_29).fld1 = _87.2.fld1;
_86.2.fld3 = (*_29).fld3;
(*_29).fld1 = _87.2.fld1;
(*_29).fld2 = _2 - _59;
(*_45) = _55;
(*_29).fld3 = _50 - _86.2.fld3;
_74 = [_25,_25,_19,_25,_19,_25,_19,_19];
Call(_8.0 = core::intrinsics::fmaf64(_14, _67.0.1, _65), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
_51 = Field::<i32>(Variant(_41.0.fld0, 1), 2) as f32;
_63 = _31 + _31;
_86.0 = [(*_29).fld3,(*_29).fld3,(*_29).fld3];
(*_46) = (*_45) >= (*_45);
(*_29).fld3 = _12 as u32;
_85 = _49 + (*_29).fld2;
(*_29).fld2 = _59;
_86.2 = Adt21 { fld0: Field::<i64>(Variant(_41.0.fld0, 1), 0),fld1: (*_29).fld1,fld2: (*_29).fld2,fld3: (*_29).fld3,fld4: (*_40) };
(*_40) = _17 << _66;
_68 = (_74,);
(*_29).fld1 = _18;
Goto(bb48)
}
bb48 = {
_76 = Move(_16);
_65 = _8.0 - (*_45);
_53 = core::ptr::addr_of!((*_29).fld1);
(*_29).fld3 = _86.2.fld3 >> _50;
_87.2.fld1 = (*_53);
_86.0 = [(*_29).fld3,(*_29).fld3,_9];
(*_45) = -_14;
(*_40) = !_86.2.fld4;
_87.2.fld0 = !_86.2.fld0;
_54 = [_28,_28,_28,_28,_67.0.0,_67.0.0,_28,_67.0.0];
_49 = (*_29).fld2;
(*_29).fld3 = _12 as u32;
_40 = &mut _86.2.fld4;
(*_45) = Field::<i32>(Variant(_41.0.fld0, 1), 2) as f64;
_81 = _66 * _66;
Call(_84.0 = core::intrinsics::transmute(_31), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
(*_46) = _60 | _60;
_85 = _34 as f32;
(*_53) = _87.2.fld1;
(*_45) = _32 as f64;
(*_29).fld3 = !_50;
_87.2.fld4 = _12 as i128;
(*_29).fld3 = !_50;
_8.0 = _67.0.1 * _67.0.1;
(*_40) = _17 >> _34;
(*_29).fld3 = _50;
(*_29).fld3 = _28 as u32;
_8 = (_55,);
(*_29).fld3 = _50 * _9;
(*_29).fld2 = _85;
_64.1 = &mut _87.2.fld0;
(*_40) = _17 - _17;
Goto(bb50)
}
bb50 = {
Call(_100 = dump_var(Move(_19), Move(_72), Move(_74), Move(_63)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_100 = dump_var(Move(_20), Move(_31), Move(_17), Move(_3)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_100 = dump_var(Move(_28), Move(_37), Move(_60), Move(_25)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_100 = dump_var(Move(_52), Move(_30), Move(_11), Move(_5)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_100 = dump_var(Move(_10), _101, _101, _101), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: &'static u32) -> char {
mir! {
type RET = char;
let _2: i64;
let _3: char;
let _4: usize;
let _5: u32;
let _6: isize;
let _7: isize;
let _8: bool;
let _9: &'static mut i64;
let _10: bool;
let _11: &'static mut i64;
let _12: Adt18;
let _13: (f64,);
let _14: isize;
let _15: f64;
let _16: bool;
let _17: *const f32;
let _18: f32;
let _19: isize;
let _20: *mut &'static mut [i8; 1];
let _21: char;
let _22: &'static mut bool;
let _23: bool;
let _24: i64;
let _25: isize;
let _26: *const &'static (isize, u16, i32, u64);
let _27: u8;
let _28: char;
let _29: *mut &'static mut [i8; 1];
let _30: (&'static mut i128, bool);
let _31: isize;
let _32: (Adt72, [u128; 1]);
let _33: *mut &'static mut [i8; 1];
let _34: *mut &'static mut [i8; 1];
let _35: f32;
let _36: isize;
let _37: u64;
let _38: i128;
let _39: f64;
let _40: isize;
let _41: f64;
let _42: &'static mut bool;
let _43: i128;
let _44: bool;
let _45: *const f64;
let _46: (f64,);
let _47: i32;
let _48: isize;
let _49: *mut &'static mut [i8; 1];
let _50: i64;
let _51: f32;
let _52: isize;
let _53: char;
let _54: f64;
let _55: [isize; 2];
let _56: f64;
let _57: [i8; 7];
let _58: *mut Adt51;
let _59: Adt37;
let _60: *mut &'static mut [i8; 1];
let _61: char;
let _62: f32;
let _63: &'static mut bool;
let _64: u8;
let _65: &'static (isize, u16, i32, u64);
let _66: u64;
let _67: bool;
let _68: [bool; 5];
let _69: ([bool; 5],);
let _70: isize;
let _71: &'static mut bool;
let _72: i32;
let _73: *const [char; 3];
let _74: i8;
let _75: [u8; 3];
let _76: f32;
let _77: bool;
let _78: bool;
let _79: f64;
let _80: (Adt44, *const &'static (isize, u16, i32, u64));
let _81: *const Adt21;
let _82: *const Adt21;
let _83: isize;
let _84: usize;
let _85: (*const Adt21,);
let _86: &'static mut [char; 3];
let _87: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _88: (u16, Adt37, &'static mut i64);
let _89: (Adt44, *const &'static (isize, u16, i32, u64));
let _90: &'static ([i16; 8],);
let _91: u32;
let _92: isize;
let _93: bool;
let _94: [i16; 1];
let _95: (f64,);
let _96: Adt72;
let _97: bool;
let _98: isize;
let _99: ();
let _100: ();
{
RET = '\u{4d85b}';
RET = '\u{5b3bf}';
RET = '\u{c454e}';
RET = '\u{b692e}';
RET = '\u{b71d9}';
RET = '\u{21458}';
RET = '\u{7c64e}';
RET = '\u{9cb7d}';
RET = '\u{77cff}';
RET = '\u{9dc2f}';
RET = '\u{bf2d5}';
Goto(bb1)
}
bb1 = {
RET = '\u{65369}';
RET = '\u{7c1ee}';
RET = '\u{cd5cb}';
RET = '\u{fafaa}';
_2 = (-308477127691257307_i64) << 7_usize;
_2 = 4904633462805294500_i64 - (-2276252547352537125_i64);
_2 = 8825569044941540678_i64 + (-4743974749345817936_i64);
Goto(bb2)
}
bb2 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb3 = {
_5 = 2646002418_u32 * 3373102478_u32;
_3 = RET;
RET = _3;
_6 = 9223372036854775807_isize & (-9223372036854775808_isize);
_4 = 1_usize;
_7 = _5 as isize;
_6 = 82136488759639609058000240837349340458_i128 as isize;
RET = _3;
_8 = false | false;
match _4 {
0 => bb2,
2 => bb5,
1 => bb7,
_ => bb6
}
}
bb4 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb5 = {
RET = '\u{65369}';
RET = '\u{7c1ee}';
RET = '\u{cd5cb}';
RET = '\u{fafaa}';
_2 = (-308477127691257307_i64) << 7_usize;
_2 = 4904633462805294500_i64 - (-2276252547352537125_i64);
_2 = 8825569044941540678_i64 + (-4743974749345817936_i64);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_7 = !_6;
_8 = RET >= _3;
_8 = !true;
_3 = RET;
_5 = 10121213113553706230_u64 as u32;
_7 = _6 ^ _6;
_6 = -_7;
_3 = RET;
_9 = &mut _2;
(*_9) = (-5965205794703047173_i64) * 945361216275503396_i64;
_4 = 269468971133719667171526008530568428437_u128 as usize;
(*_9) = (-78285760288834461927930249367595575173_i128) as i64;
(*_9) = -4462633875858540020_i64;
(*_9) = (-2203109047535950468_i64) + (-8957262064253769463_i64);
(*_9) = 180580439614674580103691135567568944489_u128 as i64;
(*_9) = 7249314061493461545_i64;
_10 = !_8;
(*_9) = (-8861293065769180500_i64) >> _5;
_11 = &mut (*_9);
(*_11) = 8462457739972245608_i64 * 6029732638880456464_i64;
(*_11) = (-2646557630669570243_i64) * (-1005660085842288947_i64);
(*_11) = 7609298011848640081_i64 + (-4932833653552483778_i64);
(*_11) = _6 as i64;
(*_11) = -(-169215143683557508_i64);
(*_11) = 16845_i16 as i64;
(*_11) = (-3637569486777760953_i64) & 7870333549216804505_i64;
_11 = Move(_9);
Goto(bb8)
}
bb8 = {
_6 = _7;
RET = _3;
_8 = !_10;
_8 = !_10;
RET = _3;
_4 = 1326292619482941085_usize >> _7;
_14 = _6 & _7;
_13.0 = 332894633193213708_i64 as f64;
_13.0 = (-1890409157_i32) as f64;
_5 = 1222100901_u32;
Goto(bb9)
}
bb9 = {
RET = _3;
RET = _3;
_3 = RET;
_8 = !_10;
_18 = (-6063904765638066249_i64) as f32;
_16 = _8 | _8;
Goto(bb10)
}
bb10 = {
_17 = core::ptr::addr_of!(_18);
(*_17) = 39_u8 as f32;
_19 = _14;
(*_17) = 5816436051672052576_u64 as f32;
_3 = RET;
_13.0 = 11065_u16 as f64;
(*_17) = 42835850339128781417371883662251728939_u128 as f32;
_19 = _14 + _7;
(*_17) = (-100_i8) as f32;
(*_17) = (-4309_i16) as f32;
_22 = &mut _10;
(*_17) = _6 as f32;
(*_17) = 84761681595302303995583038529069564716_i128 as f32;
(*_22) = (*_17) <= (*_17);
_22 = &mut _16;
(*_17) = (-8027157060188214690465465130683474312_i128) as f32;
match _5 {
1222100901 => bb12,
_ => bb11
}
}
bb11 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb12 = {
(*_22) = _8;
(*_17) = 15242911458788394576_u64 as f32;
(*_17) = _13.0 as f32;
(*_22) = !_8;
_5 = !1974405787_u32;
(*_17) = 12644_i16 as f32;
(*_17) = 10142707900265148224_u64 as f32;
RET = _3;
(*_22) = _8 & _8;
_12 = Adt18::Variant1 { fld0: 4584751980188577020_i64,fld1: (*_17),fld2: 1086839925_i32,fld3: 59_i8 };
(*_22) = !_8;
_12 = Adt18::Variant1 { fld0: 4633403607799070482_i64,fld1: (*_17),fld2: 455770816_i32,fld3: (-53_i8) };
(*_22) = _8;
(*_22) = _8;
_24 = 7792707167182619964_i64 ^ 3782835649139966572_i64;
_25 = _7;
(*_17) = 55753_u16 as f32;
_21 = _3;
_15 = _13.0 - _13.0;
(*_17) = Field::<f32>(Variant(_12, 1), 1) + Field::<f32>(Variant(_12, 1), 1);
(*_22) = _8 | _8;
(*_17) = Field::<f32>(Variant(_12, 1), 1) + Field::<f32>(Variant(_12, 1), 1);
_13 = (_15,);
place!(Field::<i64>(Variant(_12, 1), 0)) = !_24;
_24 = 12_i8 as i64;
(*_22) = !_8;
(*_17) = 1180719199_i32 as f32;
Goto(bb13)
}
bb13 = {
_3 = RET;
_13 = (_15,);
(*_22) = _8;
(*_17) = Field::<f32>(Variant(_12, 1), 1) + Field::<f32>(Variant(_12, 1), 1);
_4 = 0_usize >> _19;
_5 = 3864755343_u32 - 1503938834_u32;
(*_22) = _8;
(*_17) = _4 as f32;
_13.0 = _15;
place!(Field::<f32>(Variant(_12, 1), 1)) = -(*_17);
(*_22) = !_8;
_23 = _8 ^ (*_22);
_25 = !_19;
(*_17) = Field::<f32>(Variant(_12, 1), 1) * Field::<f32>(Variant(_12, 1), 1);
place!(Field::<f32>(Variant(_12, 1), 1)) = _18 - (*_17);
_9 = &mut place!(Field::<i64>(Variant(_12, 1), 0));
_23 = !(*_22);
(*_17) = (*_9) as f32;
(*_9) = _24;
Goto(bb14)
}
bb14 = {
(*_9) = _24 & _24;
(*_22) = !_8;
(*_22) = _15 >= _15;
_30.1 = (*_22) >= (*_22);
(*_9) = _24 - _24;
(*_17) = 47209_u16 as f32;
(*_17) = _19 as f32;
(*_9) = 10605765474083720413_u64 as i64;
_19 = _25 - _6;
_6 = _19 | _19;
_14 = _25 + _6;
_13 = (_15,);
(*_9) = _24 + _24;
(*_9) = _24 * _24;
(*_17) = 39224_u16 as f32;
_6 = 114151218047003311373888292893702892300_i128 as isize;
_23 = (*_22) ^ (*_22);
_13 = (_15,);
(*_17) = 263491256742472275045399677980367023021_u128 as f32;
(*_22) = _14 == _25;
Goto(bb15)
}
bb15 = {
(*_17) = (*_9) as f32;
(*_9) = _24;
(*_22) = _14 <= _14;
(*_17) = 42933_u16 as f32;
(*_9) = _24 * _24;
(*_22) = !_30.1;
(*_9) = -_24;
(*_9) = 4420205951072390864_u64 as i64;
(*_22) = _30.1 >= _30.1;
_31 = _13.0 as isize;
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_17) = _5 as f32;
(*_22) = _30.1;
_35 = -(*_17);
(*_9) = _24 * _24;
Goto(bb16)
}
bb16 = {
(*_22) = _23;
(*_17) = _35;
(*_17) = _35 + _35;
RET = _21;
_28 = _3;
(*_22) = !_23;
(*_9) = _24;
(*_22) = _7 > _31;
Goto(bb17)
}
bb17 = {
(*_9) = _24 * _24;
_27 = 16487523826658846080879640130967584055_i128 as u8;
_32.0.fld7 = !7101272575944908888_u64;
_13 = (_15,);
_32.0.fld2 = core::ptr::addr_of_mut!(_32.0.fld3);
(*_17) = _35 * _35;
(*_17) = -_35;
(*_22) = (*_17) != (*_17);
(*_9) = _24 | _24;
_42 = &mut (*_22);
Goto(bb18)
}
bb18 = {
(*_17) = (*_9) as f32;
Goto(bb19)
}
bb19 = {
(*_42) = _30.1 ^ _30.1;
_11 = &mut (*_9);
_32.0.fld7 = 1533309772874448273_u64 & 3935337669045992806_u64;
_24 = (*_11) ^ (*_11);
(*_17) = _35 * _35;
(*_17) = _35 * _35;
_13 = (_15,);
(*_17) = _35 * _35;
(*_17) = 118491570008915819322197265872878145651_i128 as f32;
_32.0.fld6 = !215233704584871624873315024652774528469_u128;
(*_42) = _14 == _14;
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_11) = _24;
_32.1 = [_32.0.fld6];
(*_42) = !_23;
Goto(bb20)
}
bb20 = {
(*_42) = _30.1;
(*_17) = -_35;
(*_17) = (*_11) as f32;
_30.1 = (*_42) >= (*_42);
_31 = _14 - _25;
_23 = (*_42) >= (*_42);
_43 = 17355630724758914035781306716191341335_i128;
_30.1 = (*_42);
_47 = _5 as i32;
_50 = (*_11) * (*_11);
match _43 {
17355630724758914035781306716191341335 => bb21,
_ => bb9
}
}
bb21 = {
_48 = _31 - _31;
_44 = (*_42) ^ (*_42);
(*_42) = _31 >= _48;
Call(_51 = core::intrinsics::transmute(_3), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_41 = (-73_i8) as f64;
Call((*_42) = fn5(Move(_11)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
(*_42) = !_23;
_4 = 2986834143847270155_usize;
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_17) = -_35;
Goto(bb24)
}
bb24 = {
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_17) = _35 - _35;
_39 = -_15;
(*_17) = _35 - _35;
_4 = !10289056494934846948_usize;
_53 = _28;
(*_17) = -_35;
(*_17) = -_35;
(*_17) = _35;
(*_17) = _35;
_32.0.fld0 = [_32.0.fld6,_32.0.fld6,_32.0.fld6,_32.0.fld6,_32.0.fld6];
_39 = _13.0 * _13.0;
_37 = !_32.0.fld7;
_11 = &mut _24;
_36 = _31 & _48;
_28 = _21;
_8 = (*_42) & (*_42);
(*_42) = _8 > _44;
_40 = _36;
_32.0.fld7 = _37 >> _25;
Goto(bb25)
}
bb25 = {
(*_17) = _35;
_25 = _40 | _36;
(*_11) = _50 ^ _50;
_32.0.fld6 = 120578548537319605427681063435641256933_u128 >> (*_11);
RET = _28;
_32.0.fld2 = core::ptr::addr_of_mut!(_32.0.fld3);
_56 = (*_11) as f64;
_42 = &mut _44;
_14 = (-25314_i16) as isize;
_22 = &mut (*_42);
_46.0 = _37 as f64;
(*_17) = _35 * _35;
_4 = 4_usize - 2050072840031759528_usize;
_56 = _39 * _39;
_30.1 = (*_22) ^ (*_22);
(*_11) = _50;
_32.0.fld6 = _5 as u128;
(*_22) = !_30.1;
(*_17) = _51 * _35;
(*_11) = _50;
(*_11) = _50 >> _25;
(*_11) = -_50;
Goto(bb26)
}
bb26 = {
(*_11) = -_50;
(*_11) = _50 & _50;
_4 = 15647566623919943659_usize ^ 0_usize;
_47 = (-979280747_i32);
(*_22) = _36 > _36;
_52 = _36 - _36;
_19 = _25 & _40;
(*_17) = _35;
(*_22) = !_23;
(*_17) = -_35;
(*_22) = !_8;
_25 = -_52;
_52 = (*_22) as isize;
(*_22) = _23 & _8;
_31 = _36 << _25;
_37 = _32.0.fld7 >> _19;
_46 = _13;
(*_11) = !_50;
(*_11) = _50;
(*_17) = _32.0.fld6 as f32;
_52 = _25;
_11 = &mut _50;
(*_11) = 4581969332391588697_i64 - (-8082987665774466284_i64);
(*_17) = _35 - _35;
_57 = [(-27_i8),(-74_i8),(-69_i8),(-5_i8),(-8_i8),38_i8,(-101_i8)];
(*_17) = _35 - _35;
Goto(bb27)
}
bb27 = {
_18 = -_35;
_66 = !_37;
_58 = core::ptr::addr_of_mut!(_32.0.fld3);
_5 = 3867102737_u32 - 2403558871_u32;
_30.0 = &mut _43;
_62 = -_35;
_53 = RET;
(*_17) = _27 as f32;
(*_11) = (-6452512975837666547_i64) + (-3008326824965975117_i64);
(*_22) = !_30.1;
(*_17) = _35 - _51;
_3 = _53;
_62 = _4 as f32;
_27 = 216_u8 & 35_u8;
(*_17) = _35 * _35;
(*_22) = _30.1 ^ _30.1;
match _47 {
0 => bb5,
340282366920938463463374607430788930709 => bb29,
_ => bb28
}
}
bb28 = {
Return()
}
bb29 = {
_68 = [(*_22),(*_22),(*_22),(*_22),(*_22)];
(*_17) = _51 - _62;
match _47 {
0 => bb14,
340282366920938463463374607430788930709 => bb30,
_ => bb20
}
}
bb30 = {
(*_17) = _13.0 as f32;
_37 = _66 | _66;
(*_17) = _40 as f32;
(*_11) = (-1509820329779566429_i64);
(*_11) = 2764291457224966850_i64 + 1073466639405898357_i64;
_45 = core::ptr::addr_of!(_54);
(*_11) = 2642110095946497527_i64 >> _31;
_31 = _52;
(*_11) = 2298462591410593435_i64 >> _66;
_67 = (*_22);
_61 = _53;
(*_22) = !_67;
(*_45) = (*_17) as f64;
_11 = Move(_9);
(*_22) = (*_45) <= (*_45);
_32.0.fld4 = (_68,);
(*_17) = _35 * _51;
(*_45) = _15 - _56;
(*_45) = -_46.0;
_39 = (*_45);
_32.1 = [_32.0.fld6];
_74 = (-48_i8) - (-112_i8);
match _47 {
340282366920938463463374607430788930709 => bb32,
_ => bb31
}
}
bb31 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb32 = {
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_17) = _32.0.fld6 as f32;
(*_17) = _62 - _35;
_4 = 17576988357908553780_usize ^ 152752213353170999_usize;
(*_22) = _37 <= _66;
(*_17) = _62;
(*_22) = !_30.1;
(*_45) = 19816_u16 as f64;
Goto(bb33)
}
bb33 = {
_70 = !_19;
match _47 {
340282366920938463463374607430788930709 => bb35,
_ => bb34
}
}
bb34 = {
(*_11) = -_50;
(*_11) = _50 & _50;
_4 = 15647566623919943659_usize ^ 0_usize;
_47 = (-979280747_i32);
(*_22) = _36 > _36;
_52 = _36 - _36;
_19 = _25 & _40;
(*_17) = _35;
(*_22) = !_23;
(*_17) = -_35;
(*_22) = !_8;
_25 = -_52;
_52 = (*_22) as isize;
(*_22) = _23 & _8;
_31 = _36 << _25;
_37 = _32.0.fld7 >> _19;
_46 = _13;
(*_11) = !_50;
(*_11) = _50;
(*_17) = _32.0.fld6 as f32;
_52 = _25;
_11 = &mut _50;
(*_11) = 4581969332391588697_i64 - (-8082987665774466284_i64);
(*_17) = _35 - _35;
_57 = [(-27_i8),(-74_i8),(-69_i8),(-5_i8),(-8_i8),38_i8,(-101_i8)];
(*_17) = _35 - _35;
Goto(bb27)
}
bb35 = {
_4 = !1017847839794842863_usize;
(*_22) = _8;
(*_45) = _56 * _56;
_3 = _61;
_56 = (*_45) * (*_45);
(*_22) = !_23;
(*_45) = 40845_u16 as f64;
_78 = !(*_22);
(*_45) = -_13.0;
(*_17) = _51 * _35;
(*_17) = -_51;
_32.0.fld4 = (_68,);
_76 = _51 - _62;
(*_45) = _56 + _39;
(*_45) = _56;
_71 = &mut (*_22);
_21 = _3;
(*_17) = _4 as f32;
Goto(bb36)
}
bb36 = {
_68 = _32.0.fld4.0;
(*_45) = 1652_u16 as f64;
(*_45) = _4 as f64;
(*_71) = _67;
_67 = (*_71);
Goto(bb37)
}
bb37 = {
(*_45) = _39;
_41 = 5486191426976299491_i64 as f64;
_5 = 3428162439_u32 - 929255495_u32;
(*_71) = !_8;
_71 = &mut _8;
(*_71) = !_67;
_70 = _52 | _36;
_31 = _40 | _52;
(*_45) = _56 * _56;
(*_71) = _67 ^ _78;
(*_45) = _56 + _56;
(*_71) = _67 ^ _67;
_69.0 = [(*_71),(*_71),(*_71),(*_71),(*_71)];
_74 = !(-5_i8);
_68 = [(*_71),(*_71),(*_71),(*_71),(*_71)];
(*_45) = _56 * _56;
(*_71) = !_67;
match _47 {
0 => bb28,
1 => bb38,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
340282366920938463463374607430788930709 => bb44,
_ => bb43
}
}
bb38 = {
(*_9) = _24 * _24;
_27 = 16487523826658846080879640130967584055_i128 as u8;
_32.0.fld7 = !7101272575944908888_u64;
_13 = (_15,);
_32.0.fld2 = core::ptr::addr_of_mut!(_32.0.fld3);
(*_17) = _35 * _35;
(*_17) = -_35;
(*_22) = (*_17) != (*_17);
(*_9) = _24 | _24;
_42 = &mut (*_22);
Goto(bb18)
}
bb39 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb40 = {
Return()
}
bb41 = {
_2 = 8090571108057563267_i64 >> 814863608_u32;
_3 = RET;
_2 = (-8405762913386221359_i64);
_2 = 30467_i16 as i64;
_2 = (-7295844104181695695_i64);
RET = _3;
_2 = true as i64;
RET = _3;
_3 = RET;
_3 = RET;
RET = _3;
RET = _3;
RET = _3;
_2 = !2040238306614659928_i64;
_2 = 2432669529978406903_i64 | 5251748920343710697_i64;
_3 = RET;
_2 = 3668930468971861454_i64 + (-1309123964255550913_i64);
RET = _3;
_2 = 6790245323775249938_usize as i64;
RET = _3;
_4 = 0_usize + 4_usize;
_4 = 8124035571146951419_usize;
_3 = RET;
_3 = RET;
_5 = 3251533758_u32 >> _4;
_1 = &_5;
_4 = !3976366184577243724_usize;
_3 = RET;
Goto(bb3)
}
bb42 = {
_32.0.fld1 = core::ptr::addr_of!((*_17));
(*_17) = _32.0.fld6 as f32;
(*_17) = _62 - _35;
_4 = 17576988357908553780_usize ^ 152752213353170999_usize;
(*_22) = _37 <= _66;
(*_17) = _62;
(*_22) = !_30.1;
(*_45) = 19816_u16 as f64;
Goto(bb33)
}
bb43 = {
RET = '\u{65369}';
RET = '\u{7c1ee}';
RET = '\u{cd5cb}';
RET = '\u{fafaa}';
_2 = (-308477127691257307_i64) << 7_usize;
_2 = 4904633462805294500_i64 - (-2276252547352537125_i64);
_2 = 8825569044941540678_i64 + (-4743974749345817936_i64);
Goto(bb2)
}
bb44 = {
_76 = (*_17) * (*_17);
_35 = (*_17) - _18;
(*_17) = _62;
(*_71) = (*_45) != (*_45);
(*_71) = _31 <= _52;
_58 = core::ptr::addr_of_mut!(_32.0.fld3);
_32.0.fld6 = 246047979791436262752074905823710609658_u128;
(*_45) = _15 + _56;
(*_17) = _27 as f32;
_78 = _67 < (*_71);
_83 = _48 * _52;
_84 = _4;
(*_17) = _35;
_76 = _32.0.fld6 as f32;
(*_17) = _84 as f32;
(*_71) = _67 ^ _30.1;
(*_45) = _74 as f64;
(*_45) = _56;
(*_71) = !_78;
_71 = Move(_22);
_22 = &mut _78;
_40 = _14 >> _52;
Goto(bb45)
}
bb45 = {
(*_22) = !_30.1;
_61 = RET;
_32.0.fld1 = core::ptr::addr_of!((*_17));
_18 = _62 - _51;
_89.0.fld0 = Adt18::Variant1 { fld0: 523997740196359905_i64,fld1: (*_17),fld2: _47,fld3: _74 };
(*_17) = _51 * Field::<f32>(Variant(_89.0.fld0, 1), 1);
_61 = _21;
_68 = _69.0;
Goto(bb46)
}
bb46 = {
(*_22) = _19 == _70;
_52 = _31 ^ _25;
place!(Field::<i64>(Variant(_89.0.fld0, 1), 0)) = !(-5151611362919313491_i64);
_28 = _53;
(*_22) = _67;
(*_17) = _62;
(*_22) = (*_45) != (*_45);
_36 = -_40;
_23 = !(*_22);
_18 = _4 as f32;
_51 = _35 - Field::<f32>(Variant(_89.0.fld0, 1), 1);
Goto(bb47)
}
bb47 = {
_32.0.fld4.0 = _69.0;
(*_45) = _56;
(*_45) = -_56;
(*_17) = Field::<f32>(Variant(_89.0.fld0, 1), 1) * _35;
(*_22) = _67 & _30.1;
_61 = _3;
(*_17) = _51 + _51;
Goto(bb48)
}
bb48 = {
(*_22) = _25 != _70;
_15 = -(*_45);
(*_45) = _15;
(*_17) = _35 * _62;
_88.0 = 8459_u16 - 27667_u16;
_53 = _61;
(*_22) = !_23;
_79 = -(*_45);
_13.0 = (*_45) + (*_45);
_89.0.fld0 = Adt18::Variant0 { fld0: (*_17),fld1: (-19096_i16) };
(*_17) = _66 as f32;
(*_17) = Field::<f32>(Variant(_89.0.fld0, 0), 0) - _35;
_14 = _36 - _48;
(*_17) = -_51;
_18 = Field::<f32>(Variant(_89.0.fld0, 0), 0);
(*_17) = _88.0 as f32;
Goto(bb49)
}
bb49 = {
(*_17) = _5 as f32;
_13.0 = -(*_45);
(*_22) = _30.1;
(*_22) = _23;
(*_22) = (*_45) < (*_45);
_96.fld6 = _32.0.fld6 ^ _32.0.fld6;
_75 = [_27,_27,_27];
_93 = !(*_22);
_27 = 110122775210081180589978463339133853931_i128 as u8;
(*_45) = -_15;
_96.fld4 = (_32.0.fld4.0,);
_95.0 = -(*_45);
_55 = [_48,_14];
(*_17) = _51;
_32.1 = [_96.fld6];
(*_45) = _15;
(*_45) = _5 as f64;
Goto(bb50)
}
bb50 = {
Call(_99 = dump_var(Move(_5), Move(_75), Move(_14), Move(_74)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_99 = dump_var(Move(_31), Move(_3), Move(_40), Move(_78)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_99 = dump_var(Move(_47), Move(_52), Move(_27), Move(_53)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_99 = dump_var(Move(_37), Move(_48), Move(_23), Move(_68)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_99 = dump_var(Move(_84), Move(_66), Move(_57), Move(_24)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_99 = dump_var(Move(_83), _100, _100, _100), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: &'static mut i64) -> bool {
mir! {
type RET = bool;
let _2: &'static mut bool;
let _3: *const f64;
let _4: &'static mut &'static u32;
let _5: [isize; 2];
let _6: bool;
let _7: &'static u32;
let _8: bool;
let _9: *const f32;
let _10: usize;
let _11: char;
let _12: &'static [u8; 3];
let _13: [u64; 4];
let _14: &'static i64;
let _15: char;
let _16: bool;
let _17: char;
let _18: f64;
let _19: &'static &'static mut [char; 3];
let _20: u128;
let _21: *mut &'static mut [i8; 1];
let _22: bool;
let _23: char;
let _24: char;
let _25: *const Adt21;
let _26: u8;
let _27: bool;
let _28: [bool; 5];
let _29: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _30: f32;
let _31: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _32: bool;
let _33: &'static mut [i8; 1];
let _34: &'static u32;
let _35: i64;
let _36: [u8; 1];
let _37: &'static u32;
let _38: char;
let _39: [usize; 8];
let _40: isize;
let _41: bool;
let _42: [isize; 2];
let _43: isize;
let _44: i64;
let _45: [u128; 5];
let _46: i16;
let _47: Adt21;
let _48: bool;
let _49: i64;
let _50: u128;
let _51: &'static i64;
let _52: *mut usize;
let _53: char;
let _54: *const Adt21;
let _55: *const Adt21;
let _56: &'static f64;
let _57: ([u32; 3],);
let _58: Adt37;
let _59: [i16; 1];
let _60: &'static mut i64;
let _61: *const f32;
let _62: bool;
let _63: bool;
let _64: &'static f64;
let _65: i64;
let _66: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _67: isize;
let _68: f64;
let _69: [i8; 1];
let _70: u32;
let _71: Adt18;
let _72: u32;
let _73: [i8; 8];
let _74: i64;
let _75: Adt37;
let _76: isize;
let _77: &'static [u8; 3];
let _78: &'static (isize, u16, i32, u64);
let _79: (isize, u16, i32, u64);
let _80: ();
let _81: ();
{
RET = true | false;
RET = true <= false;
RET = 72986556321039694693990566665987183850_i128 >= 96354183700586982916830865904185121965_i128;
RET = 91_i8 <= (-17_i8);
RET = 3421719284_u32 >= 1226540731_u32;
RET = !true;
RET = true;
RET = 211_u8 < 79_u8;
RET = 55839_u16 > 36281_u16;
RET = 15_i8 >= 81_i8;
RET = true;
RET = !false;
Goto(bb1)
}
bb1 = {
RET = (-211711850_i32) > 1001195340_i32;
RET = false ^ true;
RET = !true;
RET = 4822832448689504087_i64 < 8662705396615473263_i64;
RET = 20_i8 != 123_i8;
RET = true;
RET = !false;
RET = !true;
RET = true;
RET = true;
RET = 4149723684329526610_usize >= 0_usize;
RET = false;
RET = true;
RET = true;
RET = '\u{4c55d}' >= '\u{b1b3f}';
_2 = &mut RET;
(*_2) = !true;
(*_2) = 97_i8 >= 78_i8;
(*_2) = !true;
(*_2) = true != true;
Goto(bb2)
}
bb2 = {
(*_2) = !true;
(*_2) = !false;
(*_2) = true;
(*_2) = false & true;
(*_2) = true;
(*_2) = true ^ true;
(*_2) = !true;
(*_2) = true;
(*_2) = false;
(*_2) = 6956700863847102354_u64 <= 14654735253457233363_u64;
(*_2) = true;
(*_2) = !false;
(*_2) = !true;
(*_2) = 39_isize == (-9223372036854775808_isize);
(*_2) = true | true;
(*_2) = true | true;
(*_2) = !false;
(*_2) = true >= true;
Goto(bb3)
}
bb3 = {
(*_2) = 2821425124739970341_usize == 1445090572072780796_usize;
Goto(bb4)
}
bb4 = {
(*_2) = true | false;
(*_2) = !false;
Goto(bb5)
}
bb5 = {
(*_2) = 25782_u16 >= 33099_u16;
(*_2) = '\u{2853f}' >= '\u{6723f}';
(*_2) = (-42_i8) != 86_i8;
(*_2) = !false;
(*_2) = true;
(*_2) = 7_usize == 7247981752237331174_usize;
(*_2) = true;
(*_2) = !true;
(*_2) = (-54959141302981295121200845496129984610_i128) == 117345806984591864535717730617451581101_i128;
(*_2) = (-9223372036854775808_isize) < 9223372036854775807_isize;
(*_2) = !false;
(*_2) = 222_u8 == 188_u8;
(*_2) = true;
(*_2) = 49_isize == 9223372036854775807_isize;
(*_2) = false;
_6 = (*_2) >= (*_2);
(*_2) = _6 & _6;
(*_2) = !_6;
_2 = &mut _6;
(*_2) = true;
_8 = (*_2) != (*_2);
Goto(bb6)
}
bb6 = {
(*_2) = _8;
(*_2) = _8 >= _8;
(*_2) = !_8;
(*_2) = _8;
(*_2) = _8 != _8;
Goto(bb7)
}
bb7 = {
(*_2) = _8 == _8;
(*_2) = !_8;
(*_2) = _8;
(*_2) = _8;
(*_2) = _8;
(*_2) = !_8;
_2 = &mut _8;
_5 = [9223372036854775807_isize,(-10_isize)];
(*_2) = false | false;
(*_2) = !false;
_10 = 9223372036854775807_isize as usize;
_11 = '\u{e9f4b}';
(*_2) = _10 > _10;
(*_2) = true;
(*_2) = !true;
_13 = [17490569054413124746_u64,2036804110262163027_u64,7284146204573921466_u64,12667517924576486628_u64];
(*_2) = true | true;
(*_2) = true;
(*_2) = _11 < _11;
(*_2) = !true;
_15 = _11;
_10 = !3_usize;
(*_2) = !false;
(*_2) = !false;
(*_2) = _11 == _11;
Goto(bb8)
}
bb8 = {
(*_2) = false;
(*_2) = false;
(*_2) = true;
Goto(bb9)
}
bb9 = {
(*_2) = !false;
(*_2) = _10 >= _10;
_15 = _11;
(*_2) = true;
(*_2) = !true;
_16 = (*_2) < (*_2);
(*_2) = _15 <= _15;
_2 = &mut _16;
(*_2) = false;
Call(_13 = fn6(_10, (*_2), Move(_2), (*_2), (*_2), (*_2), (*_2), (*_2), (*_2), (*_2), _10, (*_2)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_17 = _15;
_11 = _15;
_10 = 3_usize - 2757929240725982748_usize;
_15 = _11;
_15 = _17;
_18 = 123946895716305043237099349888931654108_u128 as f64;
_5 = [102_isize,(-28_isize)];
_11 = _17;
_10 = 2866962277857379560_usize;
_10 = 54210_u16 as usize;
_15 = _17;
Goto(bb11)
}
bb11 = {
_10 = 881383057759267697_usize | 387210822585750374_usize;
_15 = _17;
_5 = [9223372036854775807_isize,9223372036854775807_isize];
_11 = _15;
_20 = _10 as u128;
_3 = core::ptr::addr_of!(_18);
(*_3) = 234_u8 as f64;
(*_3) = _10 as f64;
(*_3) = (-36_i8) as f64;
(*_3) = 278841111629195365_i64 as f64;
(*_3) = 5714296976437407466_i64 as f64;
_11 = _15;
(*_3) = (-97_i8) as f64;
(*_3) = 73625146021743597875731030161777961245_i128 as f64;
_22 = (*_3) > (*_3);
(*_3) = (-4518438084087877763076949473161884132_i128) as f64;
(*_3) = 3271276429_u32 as f64;
(*_3) = 823359229308919183_u64 as f64;
_17 = _11;
(*_3) = 8716714305146260346_i64 as f64;
_20 = !200793054604901264584514950645288919551_u128;
_24 = _15;
(*_3) = (-18391_i16) as f64;
_5 = [(-9223372036854775808_isize),47_isize];
_3 = core::ptr::addr_of!((*_3));
(*_3) = (-126728695568052393080995073757282689284_i128) as f64;
(*_3) = (-44_i8) as f64;
Goto(bb12)
}
bb12 = {
(*_3) = 1771734317_i32 as f64;
_3 = core::ptr::addr_of!((*_3));
(*_3) = (-6708650424326383487_i64) as f64;
_5 = [86_isize,9223372036854775807_isize];
_27 = _20 == _20;
(*_3) = (-5432139766125780384867321918030566611_i128) as f64;
_2 = &mut _22;
(*_2) = _27 | _27;
(*_3) = 87_i8 as f64;
(*_3) = 161_u8 as f64;
Goto(bb13)
}
bb13 = {
_15 = _24;
(*_3) = 4668_u16 as f64;
_23 = _15;
(*_3) = 1820202360_i32 as f64;
(*_3) = 5006956946286088628_i64 as f64;
_11 = _24;
(*_3) = 6856370287258335772_u64 as f64;
_9 = core::ptr::addr_of!(_29.2.fld2);
(*_9) = 49295_u16 as f32;
_3 = core::ptr::addr_of!((*_3));
_29.2.fld4 = (-53050783231386868013339083693484341092_i128) + 150719621970025263370149057633013552809_i128;
_9 = core::ptr::addr_of!((*_9));
_28 = [(*_2),(*_2),(*_2),(*_2),_27];
(*_3) = 774266898843348635_u64 as f64;
_26 = !230_u8;
(*_3) = _10 as f64;
_13 = [13610560590827504265_u64,6578461907012418126_u64,2526443179554037451_u64,11850421075929545950_u64];
(*_9) = _20 as f32;
(*_2) = (*_3) == (*_3);
Goto(bb14)
}
bb14 = {
_15 = _11;
(*_9) = 4021335151_u32 as f32;
(*_9) = _29.2.fld4 as f32;
_9 = core::ptr::addr_of!((*_9));
(*_3) = 926181726_i32 as f64;
(*_9) = 4944600363499921084_i64 as f32;
_29.2.fld3 = _26 as u32;
_29.2.fld4 = (-11_isize) as i128;
(*_2) = _27;
(*_3) = 31570_i16 as f64;
(*_2) = _11 > _17;
_10 = 6_usize;
(*_9) = _20 as f32;
_29.0 = [_29.2.fld3,_29.2.fld3,_29.2.fld3];
(*_3) = _29.2.fld3 as f64;
(*_9) = _26 as f32;
(*_3) = (-27236_i16) as f64;
(*_9) = _20 as f32;
match _10 {
0 => bb15,
1 => bb16,
6 => bb18,
_ => bb17
}
}
bb15 = {
(*_2) = 25782_u16 >= 33099_u16;
(*_2) = '\u{2853f}' >= '\u{6723f}';
(*_2) = (-42_i8) != 86_i8;
(*_2) = !false;
(*_2) = true;
(*_2) = 7_usize == 7247981752237331174_usize;
(*_2) = true;
(*_2) = !true;
(*_2) = (-54959141302981295121200845496129984610_i128) == 117345806984591864535717730617451581101_i128;
(*_2) = (-9223372036854775808_isize) < 9223372036854775807_isize;
(*_2) = !false;
(*_2) = 222_u8 == 188_u8;
(*_2) = true;
(*_2) = 49_isize == 9223372036854775807_isize;
(*_2) = false;
_6 = (*_2) >= (*_2);
(*_2) = _6 & _6;
(*_2) = !_6;
_2 = &mut _6;
(*_2) = true;
_8 = (*_2) != (*_2);
Goto(bb6)
}
bb16 = {
(*_2) = false;
(*_2) = false;
(*_2) = true;
Goto(bb9)
}
bb17 = {
(*_2) = true | false;
(*_2) = !false;
Goto(bb5)
}
bb18 = {
_3 = core::ptr::addr_of!((*_3));
(*_2) = _24 > _17;
_15 = _17;
_7 = &_29.2.fld3;
_29.2.fld4 = !31708667128302957991753064835369537967_i128;
_29.2.fld1 = _23;
_4 = &mut _7;
_29.2.fld0 = 1471770758775237184_i64 + (-2719282200465136013_i64);
(*_2) = (*_9) < (*_9);
(*_2) = _27;
_14 = &_29.2.fld0;
(*_2) = _27;
(*_2) = _27 | _27;
_17 = _24;
(*_2) = _27;
_32 = !(*_2);
(*_9) = _29.2.fld3 as f32;
Goto(bb19)
}
bb19 = {
_9 = core::ptr::addr_of!((*_9));
_28 = [(*_2),_32,(*_2),(*_2),(*_2)];
Goto(bb20)
}
bb20 = {
_10 = 498559311474872903_usize << (*_14);
(*_9) = _29.2.fld4 as f32;
(*_9) = _29.2.fld4 as f32;
_25 = core::ptr::addr_of!(_29.2);
(*_2) = !_32;
(*_2) = _32;
(*_25).fld4 = (-159319212562770923241867496579747549147_i128) << _26;
(*_2) = _32;
(*_25).fld2 = 16112418201404229319_u64 as f32;
(*_25).fld2 = (-29343_i16) as f32;
(*_9) = _20 as f32;
(*_3) = (*_25).fld4 as f64;
Goto(bb21)
}
bb21 = {
_38 = _15;
(*_25).fld4 = (-140608940757662006247359037649615116215_i128) | 165897507011920356871922623943930461018_i128;
(*_9) = _20 as f32;
_39 = [_10,_10,_10,_10,_10,_10,_10,_10];
(*_25).fld1 = _24;
(*_2) = !_32;
(*_25).fld4 = 40010117227281308847630773896122868607_i128;
_34 = &(*_25).fld3;
(*_4) = Move(_34);
(*_25).fld4 = 79354427549633238738689975902678026538_i128;
(*_2) = !_27;
(*_25).fld4 = 127_i8 as i128;
_26 = !212_u8;
(*_3) = 4084871348446258073_u64 as f64;
(*_4) = &(*_25).fld3;
(*_25).fld1 = _17;
(*_2) = !_32;
_29.2.fld4 = !(-53350455361561647541584420453610431149_i128);
(*_25).fld4 = _26 as i128;
(*_25).fld4 = (*_25).fld3 as i128;
Goto(bb22)
}
bb22 = {
(*_9) = _26 as f32;
(*_3) = (-1165617449_i32) as f64;
_27 = !(*_2);
(*_3) = 958767739_i32 as f64;
Goto(bb23)
}
bb23 = {
_42 = _5;
_36 = [_26];
(*_9) = 17451_u16 as f32;
(*_3) = 15379365945292814775_u64 as f64;
(*_25).fld4 = 102501569610371123684210272336272836407_i128;
(*_25).fld1 = _15;
(*_3) = _10 as f64;
_43 = _24 as isize;
(*_25).fld1 = _11;
match (*_25).fld4 {
0 => bb24,
1 => bb25,
102501569610371123684210272336272836407 => bb27,
_ => bb26
}
}
bb24 = {
(*_2) = 25782_u16 >= 33099_u16;
(*_2) = '\u{2853f}' >= '\u{6723f}';
(*_2) = (-42_i8) != 86_i8;
(*_2) = !false;
(*_2) = true;
(*_2) = 7_usize == 7247981752237331174_usize;
(*_2) = true;
(*_2) = !true;
(*_2) = (-54959141302981295121200845496129984610_i128) == 117345806984591864535717730617451581101_i128;
(*_2) = (-9223372036854775808_isize) < 9223372036854775807_isize;
(*_2) = !false;
(*_2) = 222_u8 == 188_u8;
(*_2) = true;
(*_2) = 49_isize == 9223372036854775807_isize;
(*_2) = false;
_6 = (*_2) >= (*_2);
(*_2) = _6 & _6;
(*_2) = !_6;
_2 = &mut _6;
(*_2) = true;
_8 = (*_2) != (*_2);
Goto(bb6)
}
bb25 = {
_10 = 881383057759267697_usize | 387210822585750374_usize;
_15 = _17;
_5 = [9223372036854775807_isize,9223372036854775807_isize];
_11 = _15;
_20 = _10 as u128;
_3 = core::ptr::addr_of!(_18);
(*_3) = 234_u8 as f64;
(*_3) = _10 as f64;
(*_3) = (-36_i8) as f64;
(*_3) = 278841111629195365_i64 as f64;
(*_3) = 5714296976437407466_i64 as f64;
_11 = _15;
(*_3) = (-97_i8) as f64;
(*_3) = 73625146021743597875731030161777961245_i128 as f64;
_22 = (*_3) > (*_3);
(*_3) = (-4518438084087877763076949473161884132_i128) as f64;
(*_3) = 3271276429_u32 as f64;
(*_3) = 823359229308919183_u64 as f64;
_17 = _11;
(*_3) = 8716714305146260346_i64 as f64;
_20 = !200793054604901264584514950645288919551_u128;
_24 = _15;
(*_3) = (-18391_i16) as f64;
_5 = [(-9223372036854775808_isize),47_isize];
_3 = core::ptr::addr_of!((*_3));
(*_3) = (-126728695568052393080995073757282689284_i128) as f64;
(*_3) = (-44_i8) as f64;
Goto(bb12)
}
bb26 = {
(*_2) = _8 == _8;
(*_2) = !_8;
(*_2) = _8;
(*_2) = _8;
(*_2) = _8;
(*_2) = !_8;
_2 = &mut _8;
_5 = [9223372036854775807_isize,(-10_isize)];
(*_2) = false | false;
(*_2) = !false;
_10 = 9223372036854775807_isize as usize;
_11 = '\u{e9f4b}';
(*_2) = _10 > _10;
(*_2) = true;
(*_2) = !true;
_13 = [17490569054413124746_u64,2036804110262163027_u64,7284146204573921466_u64,12667517924576486628_u64];
(*_2) = true | true;
(*_2) = true;
(*_2) = _11 < _11;
(*_2) = !true;
_15 = _11;
_10 = !3_usize;
(*_2) = !false;
(*_2) = !false;
(*_2) = _11 == _11;
Goto(bb8)
}
bb27 = {
(*_9) = (*_3) as f32;
(*_25).fld1 = _38;
_1 = &mut (*_25).fld0;
(*_9) = _26 as f32;
(*_25).fld4 = (-112578315488290857192612324150471888290_i128);
_27 = !(*_2);
_18 = (*_9) as f64;
(*_25).fld1 = _11;
(*_25).fld1 = _24;
(*_3) = _26 as f64;
(*_9) = 54473_u16 as f32;
(*_3) = 9653_u16 as f64;
(*_2) = _32 ^ _27;
_47.fld3 = (*_25).fld3 * (*_25).fld3;
(*_25).fld1 = _11;
_11 = (*_25).fld1;
(*_9) = (*_3) as f32;
(*_2) = (*_9) >= (*_9);
Goto(bb28)
}
bb28 = {
(*_3) = (*_9) as f64;
(*_2) = _27 ^ _27;
_15 = (*_25).fld1;
(*_9) = (*_25).fld4 as f32;
(*_2) = _32;
_44 = 31057_i16 as i64;
_10 = 5_usize + 2_usize;
(*_9) = _43 as f32;
_46 = (-29537_i16) | (-15288_i16);
(*_4) = &_47.fld3;
(*_25).fld4 = (*_25).fld3 as i128;
(*_25).fld4 = _26 as i128;
_35 = 13311_u16 as i64;
(*_9) = (*_25).fld3 as f32;
(*_9) = (*_25).fld3 as f32;
(*_3) = 17999554302444385448_u64 as f64;
(*_4) = &(*_25).fld3;
_45 = [_20,_20,_20,_20,_20];
(*_3) = (*_1) as f64;
(*_25).fld1 = _23;
_47.fld1 = (*_25).fld1;
_47.fld2 = _43 as f32;
(*_25).fld4 = 16762586232667642789931432433708584646_i128 << (*_1);
_14 = &_44;
(*_2) = !_32;
Goto(bb29)
}
bb29 = {
(*_25).fld1 = _23;
(*_9) = (*_25).fld3 as f32;
(*_4) = &_47.fld3;
(*_2) = (*_25).fld4 != (*_25).fld4;
(*_25).fld4 = (*_9) as i128;
Goto(bb30)
}
bb30 = {
_43 = (-9223372036854775808_isize) & 9223372036854775807_isize;
(*_9) = _47.fld2 * _47.fld2;
(*_3) = _43 as f64;
_36 = [_26];
(*_9) = (-74_i8) as f32;
(*_9) = -_47.fld2;
(*_3) = _46 as f64;
(*_25).fld4 = -(-34644948438049300296239328963204000002_i128);
_53 = (*_25).fld1;
(*_2) = !_27;
Goto(bb31)
}
bb31 = {
_30 = (*_3) as f32;
_47.fld4 = (-446370454_i32) as i128;
(*_9) = _47.fld2 + _47.fld2;
_52 = core::ptr::addr_of_mut!(_10);
(*_52) = 7_usize & 0_usize;
(*_25).fld1 = _11;
_37 = Move((*_4));
_40 = _43;
(*_2) = _27;
_3 = core::ptr::addr_of!((*_3));
(*_3) = (*_52) as f64;
_48 = (*_2) < (*_2);
(*_2) = (*_52) < _10;
(*_3) = (*_25).fld3 as f64;
(*_3) = (*_1) as f64;
(*_2) = (*_52) == (*_52);
(*_25).fld1 = _53;
(*_25).fld4 = _47.fld4 << (*_1);
_7 = &(*_25).fld3;
(*_25).fld1 = _38;
(*_25).fld1 = _11;
(*_25).fld1 = _47.fld1;
Goto(bb32)
}
bb32 = {
_53 = (*_25).fld1;
_25 = core::ptr::addr_of!(_47);
_32 = !(*_2);
(*_9) = -(*_25).fld2;
_54 = core::ptr::addr_of!((*_25));
(*_52) = 7_usize | 5_usize;
_39 = [(*_52),(*_52),(*_52),(*_52),(*_52),(*_52),(*_52),(*_52)];
(*_9) = (*_25).fld2;
_36 = [_26];
(*_25).fld0 = _26 as i64;
_30 = -_47.fld2;
(*_54).fld1 = _15;
_28 = [(*_2),(*_2),(*_2),(*_2),(*_2)];
Goto(bb33)
}
bb33 = {
_54 = Move(_25);
(*_2) = (*_9) <= (*_9);
_35 = (*_14) << (*_1);
_1 = &mut _35;
_51 = Move(_14);
(*_1) = _47.fld0 ^ _44;
_47.fld3 = !(*_7);
(*_9) = -_47.fld2;
(*_1) = (*_7) as i64;
(*_3) = _47.fld4 as f64;
(*_52) = !1_usize;
(*_3) = 26_i8 as f64;
(*_3) = _20 as f64;
(*_1) = _47.fld0;
_47.fld4 = -(-6508162697080403621473517916605853561_i128);
_59 = [_46];
(*_9) = _30 * _47.fld2;
_44 = (*_1);
(*_2) = (*_3) != (*_3);
_11 = _47.fld1;
_47.fld3 = (*_7) << (*_7);
_47.fld1 = _38;
(*_3) = 1_i8 as f64;
(*_52) = 5_usize | 13506897841590017528_usize;
Goto(bb34)
}
bb34 = {
_30 = -(*_9);
(*_3) = _43 as f64;
Goto(bb35)
}
bb35 = {
(*_3) = 44093_u16 as f64;
(*_9) = _30 + _30;
_30 = (*_3) as f32;
(*_1) = (*_52) as i64;
(*_1) = _47.fld0 - _44;
_43 = _40 + _40;
(*_52) = 3_usize + 17488115841806733425_usize;
(*_9) = _30 * _47.fld2;
_47.fld4 = (*_7) as i128;
(*_52) = (*_7) as usize;
(*_1) = !_44;
(*_3) = (*_9) as f64;
(*_2) = _27;
Call((*_3) = core::intrinsics::transmute((*_52)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_41 = (*_2);
_63 = (*_7) >= (*_7);
_34 = &(*_7);
(*_1) = _44 | _47.fld0;
(*_9) = _30 - _30;
_49 = -(*_1);
(*_2) = (*_7) >= (*_34);
_50 = _20;
(*_52) = 5_usize;
(*_9) = _30 - _47.fld2;
_14 = &(*_1);
(*_9) = _30 + _47.fld2;
(*_1) = _49 ^ _44;
_63 = (*_3) >= (*_3);
_54 = core::ptr::addr_of!(_47);
_62 = (*_2) & (*_2);
(*_2) = !_32;
(*_54).fld2 = -(*_9);
(*_54).fld2 = (*_9);
(*_2) = (*_52) < (*_52);
(*_54).fld0 = (*_2) as i64;
(*_54).fld0 = (*_1) * (*_1);
(*_2) = !_63;
match (*_52) {
5 => bb38,
_ => bb37
}
}
bb37 = {
(*_3) = 1771734317_i32 as f64;
_3 = core::ptr::addr_of!((*_3));
(*_3) = (-6708650424326383487_i64) as f64;
_5 = [86_isize,9223372036854775807_isize];
_27 = _20 == _20;
(*_3) = (-5432139766125780384867321918030566611_i128) as f64;
_2 = &mut _22;
(*_2) = _27 | _27;
(*_3) = 87_i8 as f64;
(*_3) = 161_u8 as f64;
Goto(bb13)
}
bb38 = {
(*_2) = _48 ^ _62;
_66.0.1 = (*_3) + (*_3);
_25 = core::ptr::addr_of!((*_54));
(*_54).fld4 = (-155821250190967196361709000587435039585_i128) * (-43414062934050000770477723054266867975_i128);
(*_54).fld4 = 85791240127973141150839961300360577190_i128 ^ 113768613690937997313131839423327964069_i128;
(*_1) = (*_25).fld2 as i64;
Goto(bb39)
}
bb39 = {
(*_54).fld4 = (-62628738545564075474939241405229072685_i128) << (*_34);
(*_25).fld2 = -(*_9);
(*_52) = !_39[_10];
_30 = (*_9) - (*_54).fld2;
_64 = &(*_3);
(*_52) = 17948781627492442922_u64 as usize;
(*_25).fld2 = (*_9) * (*_9);
(*_54).fld2 = (*_9) * (*_9);
(*_54).fld2 = _30 * (*_9);
Call((*_54).fld4 = core::intrinsics::transmute(_42), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
_45 = [_50,_50,_20,_50,_50];
(*_2) = _43 == _43;
(*_25).fld1 = _23;
(*_54).fld0 = !(*_1);
(*_52) = _46 as usize;
Goto(bb41)
}
bb41 = {
(*_25).fld3 = (*_34) ^ (*_7);
_9 = core::ptr::addr_of!((*_9));
(*_1) = (*_54).fld0 << (*_34);
_66.0.0 = 10127734193642999461_u64 ^ 7067895083349312625_u64;
_47.fld0 = (*_1) ^ (*_1);
(*_52) = 2225982926825558831_usize + 5_usize;
(*_52) = !11934566600154995889_usize;
Goto(bb42)
}
bb42 = {
_67 = !_40;
Call((*_54).fld4 = core::intrinsics::bswap(7534418247465790887081592402458117756_i128), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
(*_9) = -(*_54).fld2;
(*_52) = (*_54).fld4 as usize;
(*_54).fld2 = (*_9) + (*_9);
(*_54).fld0 = (*_1) & (*_1);
(*_54) = Adt21 { fld0: (*_1),fld1: _15,fld2: (*_9),fld3: (*_7),fld4: (-8506105585401497184334942167960118183_i128) };
_47.fld2 = (*_9) * (*_9);
(*_9) = -(*_54).fld2;
Call((*_3) = core::intrinsics::transmute((*_52)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
_71 = Adt18::Variant1 { fld0: (*_54).fld0,fld1: _47.fld2,fld2: (-2129791818_i32),fld3: (-48_i8) };
_27 = (*_54).fld2 < (*_54).fld2;
Goto(bb45)
}
bb45 = {
(*_54).fld1 = _15;
(*_54).fld0 = Field::<i64>(Variant(_71, 1), 0) * (*_1);
(*_9) = (*_54).fld2 * (*_54).fld2;
(*_1) = _47.fld0;
_47.fld3 = _43 as u32;
(*_54) = Adt21 { fld0: (*_1),fld1: _24,fld2: (*_9),fld3: (*_34),fld4: 60816163328849298377267903430261299128_i128 };
_24 = (*_54).fld1;
_61 = core::ptr::addr_of!((*_54).fld2);
(*_9) = (*_61);
(*_9) = 60004_u16 as f32;
_73 = [(-119_i8),63_i8,75_i8,(-8_i8),104_i8,(-108_i8),(-97_i8),20_i8];
_66.0.1 = -(*_3);
_71 = Adt18::Variant1 { fld0: (*_1),fld1: (*_54).fld2,fld2: (-1760581854_i32),fld3: 52_i8 };
(*_54).fld3 = (*_7) & (*_34);
(*_54).fld1 = _53;
(*_9) = (*_61) - (*_61);
(*_52) = 6_usize - 12280459507058798584_usize;
(*_52) = (*_9) as usize;
(*_54).fld0 = (*_1) - (*_1);
(*_54).fld0 = (*_1);
(*_54).fld0 = _62 as i64;
(*_54).fld0 = Field::<i64>(Variant(_71, 1), 0) - (*_1);
_40 = _67;
(*_3) = -_66.0.1;
match (*_54).fld4 {
0 => bb39,
1 => bb27,
2 => bb6,
3 => bb4,
4 => bb46,
5 => bb47,
6 => bb48,
60816163328849298377267903430261299128 => bb50,
_ => bb49
}
}
bb46 = {
(*_2) = _8 == _8;
(*_2) = !_8;
(*_2) = _8;
(*_2) = _8;
(*_2) = _8;
(*_2) = !_8;
_2 = &mut _8;
_5 = [9223372036854775807_isize,(-10_isize)];
(*_2) = false | false;
(*_2) = !false;
_10 = 9223372036854775807_isize as usize;
_11 = '\u{e9f4b}';
(*_2) = _10 > _10;
(*_2) = true;
(*_2) = !true;
_13 = [17490569054413124746_u64,2036804110262163027_u64,7284146204573921466_u64,12667517924576486628_u64];
(*_2) = true | true;
(*_2) = true;
(*_2) = _11 < _11;
(*_2) = !true;
_15 = _11;
_10 = !3_usize;
(*_2) = !false;
(*_2) = !false;
(*_2) = _11 == _11;
Goto(bb8)
}
bb47 = {
(*_9) = -(*_54).fld2;
(*_52) = (*_54).fld4 as usize;
(*_54).fld2 = (*_9) + (*_9);
(*_54).fld0 = (*_1) & (*_1);
(*_54) = Adt21 { fld0: (*_1),fld1: _15,fld2: (*_9),fld3: (*_7),fld4: (-8506105585401497184334942167960118183_i128) };
_47.fld2 = (*_9) * (*_9);
(*_9) = -(*_54).fld2;
Call((*_3) = core::intrinsics::transmute((*_52)), ReturnTo(bb44), UnwindUnreachable())
}
bb48 = {
_15 = _11;
(*_9) = 4021335151_u32 as f32;
(*_9) = _29.2.fld4 as f32;
_9 = core::ptr::addr_of!((*_9));
(*_3) = 926181726_i32 as f64;
(*_9) = 4944600363499921084_i64 as f32;
_29.2.fld3 = _26 as u32;
_29.2.fld4 = (-11_isize) as i128;
(*_2) = _27;
(*_3) = 31570_i16 as f64;
(*_2) = _11 > _17;
_10 = 6_usize;
(*_9) = _20 as f32;
_29.0 = [_29.2.fld3,_29.2.fld3,_29.2.fld3];
(*_3) = _29.2.fld3 as f64;
(*_9) = _26 as f32;
(*_3) = (-27236_i16) as f64;
(*_9) = _20 as f32;
match _10 {
0 => bb15,
1 => bb16,
6 => bb18,
_ => bb17
}
}
bb49 = {
_9 = core::ptr::addr_of!((*_9));
_28 = [(*_2),_32,(*_2),(*_2),(*_2)];
Goto(bb20)
}
bb50 = {
(*_9) = (*_34) as f32;
_70 = !(*_7);
_52 = core::ptr::addr_of_mut!((*_52));
Goto(bb51)
}
bb51 = {
Call(_80 = dump_var(Move(_15), Move(_59), Move(_50), Move(_6)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_80 = dump_var(Move(_35), Move(_28), Move(_45), Move(_24)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_80 = dump_var(Move(_23), Move(_38), Move(_22), Move(_27)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_80 = dump_var(Move(_36), Move(_10), Move(_8), Move(_62)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_80 = dump_var(Move(_41), Move(_16), Move(_73), _81), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: usize,mut _2: bool,mut _3: &'static mut bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: usize,mut _12: bool) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _13: f32;
let _14: *mut &'static mut [i8; 1];
let _15: u8;
let _16: Adt21;
let _17: u64;
let _18: i16;
let _19: bool;
let _20: &'static [u8; 3];
let _21: isize;
let _22: i32;
let _23: [u8; 1];
let _24: u32;
let _25: &'static mut i128;
let _26: bool;
let _27: &'static mut i128;
let _28: *mut &'static mut [i8; 1];
let _29: &'static u32;
let _30: &'static mut &'static u32;
let _31: f64;
let _32: Adt37;
let _33: *const char;
let _34: char;
let _35: f64;
let _36: isize;
let _37: i32;
let _38: *const &'static (isize, u16, i32, u64);
let _39: char;
let _40: &'static f64;
let _41: (Adt44, *const &'static (isize, u16, i32, u64));
let _42: &'static mut i64;
let _43: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _44: *const Adt51;
let _45: [usize; 8];
let _46: isize;
let _47: (*const Adt21,);
let _48: *const char;
let _49: f64;
let _50: u128;
let _51: usize;
let _52: char;
let _53: [i8; 7];
let _54: [isize; 2];
let _55: isize;
let _56: f64;
let _57: isize;
let _58: u8;
let _59: &'static mut [i8; 1];
let _60: u8;
let _61: f64;
let _62: i128;
let _63: char;
let _64: (&'static mut i128, bool);
let _65: i16;
let _66: *mut Adt51;
let _67: [u128; 1];
let _68: f32;
let _69: [i8; 1];
let _70: i128;
let _71: *const i16;
let _72: bool;
let _73: u128;
let _74: Adt51;
let _75: f32;
let _76: [u64; 8];
let _77: (u16, *const char, *const i16, *const i16);
let _78: *const i16;
let _79: ([u32; 3],);
let _80: [i16; 8];
let _81: [char; 3];
let _82: *mut Adt51;
let _83: char;
let _84: i128;
let _85: (&'static mut i128, bool);
let _86: char;
let _87: bool;
let _88: &'static ([i16; 8],);
let _89: [u64; 8];
let _90: Adt18;
let _91: (isize, u16, i32, u64);
let _92: f32;
let _93: u64;
let _94: [i16; 1];
let _95: &'static mut i64;
let _96: *const Adt51;
let _97: bool;
let _98: *mut usize;
let _99: bool;
let _100: f32;
let _101: f32;
let _102: bool;
let _103: [bool; 5];
let _104: [usize; 8];
let _105: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _106: f64;
let _107: &'static mut bool;
let _108: [i8; 1];
let _109: *const Adt21;
let _110: *const [char; 3];
let _111: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _112: isize;
let _113: i64;
let _114: &'static [u8; 3];
let _115: f64;
let _116: (Adt56, [i8; 7], Adt22);
let _117: (u64, f64);
let _118: isize;
let _119: &'static f64;
let _120: isize;
let _121: f64;
let _122: bool;
let _123: Adt37;
let _124: bool;
let _125: *mut Adt51;
let _126: ();
let _127: ();
{
_11 = _1 >> _1;
_2 = !_5;
_3 = &mut _8;
(*_3) = _10;
(*_3) = _2 | _10;
_4 = !_7;
(*_3) = !_9;
_11 = _1;
(*_3) = _2 & _12;
(*_3) = _12;
_13 = 12279_u16 as f32;
(*_3) = _10;
(*_3) = !_2;
_9 = !(*_3);
(*_3) = _12;
(*_3) = !_7;
Call(_15 = fn7((*_3), _13, (*_3), Move(_3), _6, _6, (*_3), (*_3)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = _15 == _15;
_1 = !_11;
_11 = (-999016507_i32) as usize;
_6 = _9;
_7 = !_9;
_3 = &mut _10;
(*_3) = _7;
_4 = !_9;
(*_3) = _7 == _9;
(*_3) = _4;
_17 = '\u{b4c54}' as u64;
_16.fld2 = _13;
_15 = 191_u8 & 112_u8;
_17 = 17221641039956935179_u64;
Goto(bb2)
}
bb2 = {
_19 = (*_3) | _7;
(*_3) = _6;
(*_3) = _6 < _12;
(*_3) = !_7;
(*_3) = !_19;
(*_3) = _19;
_16.fld3 = 9223372036854775807_isize as u32;
_21 = (-117_isize) * 21_isize;
(*_3) = _6;
_16 = Adt21 { fld0: 5755572726290437478_i64,fld1: '\u{3310f}',fld2: _13,fld3: 39598120_u32,fld4: 57705996930178093373808675341989565006_i128 };
(*_3) = _19 != _7;
(*_3) = _4 < _9;
(*_3) = _7 > _7;
_13 = -_16.fld2;
_6 = !(*_3);
(*_3) = _6;
_4 = (*_3) <= (*_3);
_17 = 13836269903969216083_u64 ^ 15836875329103139986_u64;
RET = [_17,_17,_17,_17];
RET = [_17,_17,_17,_17];
(*_3) = !_7;
_4 = (*_3) | _7;
_4 = (*_3) & (*_3);
(*_3) = _9;
(*_3) = _6 ^ _19;
_4 = _9;
(*_3) = _7 & _19;
match _16.fld4 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
57705996930178093373808675341989565006 => bb10,
_ => bb9
}
}
bb3 = {
_9 = _15 == _15;
_1 = !_11;
_11 = (-999016507_i32) as usize;
_6 = _9;
_7 = !_9;
_3 = &mut _10;
(*_3) = _7;
_4 = !_9;
(*_3) = _7 == _9;
(*_3) = _4;
_17 = '\u{b4c54}' as u64;
_16.fld2 = _13;
_15 = 191_u8 & 112_u8;
_17 = 17221641039956935179_u64;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
(*_3) = !_19;
Goto(bb11)
}
bb11 = {
_11 = !_1;
_2 = (*_3) == (*_3);
_4 = (*_3);
_16.fld4 = 59277197949046797503798371244865033924_i128;
_24 = _21 as u32;
_9 = (*_3) > (*_3);
(*_3) = _7 | _7;
_23 = [_15];
RET = [_17,_17,_17,_17];
(*_3) = !_6;
_16.fld0 = 1399277935383981329_i64 * 6582160456484580871_i64;
_25 = &mut _16.fld4;
(*_3) = _6;
(*_3) = _19 | _4;
Goto(bb12)
}
bb12 = {
_13 = (*_25) as f32;
(*_3) = _6;
(*_3) = !_4;
(*_25) = (-105504356484225918171687026719700903322_i128);
_18 = 10362_u16 as i16;
_22 = (-1136727923_i32);
(*_3) = _6 <= _4;
(*_3) = _4 == _4;
(*_3) = !_5;
_4 = (*_3) >= _6;
(*_25) = (-103811259608704257526933692133984514305_i128) * (-110788091171660008401272502664402264345_i128);
_9 = _19 > _6;
(*_25) = 159412793333084497688475828616268152252_i128 ^ 52767621100780715044549460385395801372_i128;
(*_25) = !154339396723483248690535785461175420465_i128;
(*_25) = 140335634019118683277366514128802335213_i128;
(*_3) = _2 ^ _6;
match (*_25) {
0 => bb7,
1 => bb2,
2 => bb13,
3 => bb14,
140335634019118683277366514128802335213 => bb16,
_ => bb15
}
}
bb13 = {
Return()
}
bb14 = {
(*_3) = !_19;
Goto(bb11)
}
bb15 = {
_9 = _15 == _15;
_1 = !_11;
_11 = (-999016507_i32) as usize;
_6 = _9;
_7 = !_9;
_3 = &mut _10;
(*_3) = _7;
_4 = !_9;
(*_3) = _7 == _9;
(*_3) = _4;
_17 = '\u{b4c54}' as u64;
_16.fld2 = _13;
_15 = 191_u8 & 112_u8;
_17 = 17221641039956935179_u64;
Goto(bb2)
}
bb16 = {
(*_25) = -(-4601743998503060884010659706881996759_i128);
(*_25) = (-147361231412546806160020210507596363498_i128) ^ 12230727668844038023829138379399857612_i128;
(*_3) = _2 | _9;
_27 = &mut (*_25);
(*_3) = !_2;
(*_3) = _19 | _4;
(*_27) = 1514035741105482984_i64 as i128;
_5 = (*_3);
_19 = _6 ^ (*_3);
_26 = (*_3);
(*_3) = _9 >= _5;
_1 = _11 + _11;
(*_27) = -(-33232624787510297948672327216004231723_i128);
(*_3) = _26;
(*_27) = (-88191194020699576173612374159005142616_i128) ^ 165715770879724857053346569409403662926_i128;
_25 = Move(_27);
(*_3) = _6;
(*_3) = _5;
(*_3) = !_6;
(*_3) = _5 > _19;
_12 = (*_3);
Goto(bb17)
}
bb17 = {
(*_3) = _9;
(*_3) = _12;
_2 = (*_3);
_26 = (*_3) < (*_3);
_29 = &_24;
(*_3) = _9 < _7;
_24 = 3801848423_u32 & 92635561_u32;
_19 = (*_3) | (*_3);
_12 = (*_3);
_7 = (*_3);
_30 = &mut _29;
_5 = (*_3) > (*_3);
_6 = _5;
(*_3) = !_7;
(*_3) = _7 >= _2;
(*_3) = _7 & _5;
(*_3) = _12 < _7;
_23 = [_15];
_6 = _19 > _7;
_31 = _24 as f64;
(*_3) = _4 == _6;
_15 = 43280011447004893304570981341429072760_u128 as u8;
(*_3) = _12 | _9;
_33 = core::ptr::addr_of!(_34);
_4 = _7 != _26;
_1 = _13 as usize;
(*_33) = '\u{8efea}';
match _22 {
340282366920938463463374607430631483533 => bb18,
_ => bb3
}
}
bb18 = {
(*_3) = _2;
(*_33) = '\u{e9afb}';
_21 = 9223372036854775807_isize;
_35 = -_31;
(*_3) = !_26;
_2 = (*_3) < (*_3);
(*_33) = '\u{a467d}';
_35 = 27_i8 as f64;
(*_33) = '\u{2e78d}';
(*_3) = _9 > _6;
(*_3) = _4 >= _5;
(*_3) = _9 == _12;
_37 = _22 ^ _22;
(*_33) = '\u{72655}';
_39 = (*_33);
Goto(bb19)
}
bb19 = {
(*_33) = _39;
(*_3) = _7 ^ _19;
(*_3) = !_12;
_40 = &_35;
(*_33) = _39;
_22 = _37 ^ _37;
(*_33) = _39;
_40 = &_31;
(*_3) = _9 ^ _5;
_31 = _35;
(*_33) = _39;
_18 = _35 as i16;
_19 = (*_3) != (*_3);
(*_3) = (*_33) <= (*_33);
(*_33) = _39;
(*_33) = _39;
_6 = _4 < _5;
(*_33) = _39;
_22 = _37 & _37;
RET = [_17,_17,_17,_17];
(*_3) = _5;
(*_33) = _39;
(*_33) = _39;
(*_3) = _26 < _5;
(*_3) = _5;
(*_3) = _19;
(*_3) = !_5;
_36 = _21 & _21;
(*_3) = _7 & _6;
(*_3) = _5 >= _4;
Goto(bb20)
}
bb20 = {
(*_33) = _39;
(*_3) = _4 >= _6;
(*_33) = _39;
RET = [_17,_17,_17,_17];
_6 = !(*_3);
(*_3) = _5 < _2;
(*_3) = !_19;
_37 = _17 as i32;
(*_3) = !_4;
(*_33) = _39;
(*_33) = _39;
(*_33) = _39;
_19 = (*_3);
_26 = (*_3) != (*_3);
_4 = _9;
(*_3) = _4 < _2;
_43.0.1 = _35 - _35;
RET = [_17,_17,_17,_17];
(*_3) = _2 >= _7;
(*_3) = _2 >= _19;
_21 = (*_33) as isize;
(*_3) = _19;
Goto(bb21)
}
bb21 = {
RET = [_17,_17,_17,_17];
(*_3) = _7 == _2;
_3 = &mut _6;
_7 = (*_3);
(*_33) = _39;
Goto(bb22)
}
bb22 = {
(*_3) = _4 != _5;
_40 = &_43.0.1;
_15 = 89_u8 + 204_u8;
_43.0.0 = !_17;
(*_3) = _9 & _19;
_43.1 = (-108_i8) & (-51_i8);
(*_3) = !_5;
Goto(bb23)
}
bb23 = {
_43.0 = (_17, _31);
(*_3) = _2;
(*_3) = !_7;
(*_3) = !_9;
(*_33) = _39;
_17 = _43.1 as u64;
(*_3) = _5 ^ _7;
(*_3) = _15 != _15;
_11 = _36 as usize;
_32 = Adt37::Variant1 { fld0: 262441737026961253063896500337938680942_u128,fld1: _15,fld2: _36,fld3: _37 };
(*_3) = _12 > _7;
_32 = Adt37::Variant1 { fld0: 212872513788370488278489206627228072150_u128,fld1: _15,fld2: _21,fld3: _22 };
(*_33) = _39;
(*_33) = _39;
place!(Field::<isize>(Variant(_32, 1), 2)) = _36 | _36;
(*_33) = _39;
(*_3) = _9;
(*_33) = _39;
(*_3) = !_12;
_11 = _13 as usize;
_46 = _36 ^ _21;
(*_33) = _39;
RET = [_43.0.0,_17,_43.0.0,_17];
(*_33) = _39;
_43.0 = (_17, _35);
_49 = -_31;
(*_33) = _39;
_36 = (*_3) as isize;
Goto(bb24)
}
bb24 = {
(*_33) = _39;
_48 = core::ptr::addr_of!(_39);
(*_48) = (*_33);
_12 = (*_3) <= (*_3);
_48 = Move(_33);
_45 = [_1,_1,_11,_11,_1,_11,_1,_1];
_9 = (*_3) <= (*_3);
(*_3) = _26 & _4;
_34 = _39;
(*_3) = !_2;
_41.0.fld0 = Adt18::Variant0 { fld0: _13,fld1: _18 };
_50 = _39 as u128;
_45 = [_1,_11,_1,_11,_1,_11,_11,_1];
(*_3) = !_4;
(*_3) = _5;
(*_3) = _36 > _36;
_2 = _19 | (*_3);
_46 = _39 as isize;
_19 = !(*_3);
_9 = !(*_3);
_1 = _11;
_40 = &_31;
(*_3) = _5 != _2;
_22 = -Field::<i32>(Variant(_32, 1), 3);
_35 = -(*_40);
Call(place!(Field::<i16>(Variant(_41.0.fld0, 0), 1)) = core::intrinsics::bswap(_18), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_5 = _19;
_54 = [_36,_36];
_60 = Field::<u8>(Variant(_32, 1), 1) << _36;
_41.0.fld1 = [_1,_1,_1,_11,_11,_1,_1,_1];
_58 = _34 as u8;
_34 = _39;
_36 = (*_3) as isize;
(*_3) = !_12;
place!(Field::<u8>(Variant(_32, 1), 1)) = !_60;
place!(Field::<i32>(Variant(_32, 1), 3)) = !_22;
(*_3) = _7 != _12;
place!(Field::<u128>(Variant(_32, 1), 0)) = _50 - _50;
_12 = !(*_3);
place!(Field::<i32>(Variant(_32, 1), 3)) = _43.1 as i32;
(*_3) = _9;
Goto(bb26)
}
bb26 = {
_23 = [_60];
_62 = -(-67971738249034648119319173447713960567_i128);
_56 = -(*_40);
_15 = Field::<i16>(Variant(_41.0.fld0, 0), 1) as u8;
(*_3) = _26 < _2;
(*_3) = _19 < _4;
(*_3) = !_5;
Goto(bb27)
}
bb27 = {
_40 = &_49;
_53 = [_43.1,_43.1,_43.1,_43.1,_43.1,_43.1,_43.1];
_65 = !Field::<i16>(Variant(_41.0.fld0, 0), 1);
_67 = [Field::<u128>(Variant(_32, 1), 0)];
(*_3) = _7;
_54 = [_36,_36];
_25 = &mut _62;
place!(Field::<f32>(Variant(_41.0.fld0, 0), 0)) = -_13;
_63 = _39;
_64.0 = &mut (*_25);
_26 = (*_3) | (*_3);
_4 = !(*_3);
_54 = [_36,_36];
_26 = _2 != (*_3);
_13 = _1 as f32;
_54 = [_36,_36];
Goto(bb28)
}
bb28 = {
_32 = Adt37::Variant1 { fld0: _50,fld1: _60,fld2: _36,fld3: _22 };
_68 = Field::<f32>(Variant(_41.0.fld0, 0), 0) + Field::<f32>(Variant(_41.0.fld0, 0), 0);
Goto(bb29)
}
bb29 = {
(*_3) = _9 >= _7;
_34 = _39;
_54 = [_36,_36];
_33 = core::ptr::addr_of!(_52);
_55 = Field::<isize>(Variant(_32, 1), 2);
Call(_46 = core::intrinsics::transmute(_36), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
(*_3) = _19 | _26;
_4 = (*_40) <= (*_40);
(*_3) = !_19;
(*_3) = _9;
(*_33) = _39;
_48 = Move(_33);
_64 = (Move(_25), (*_3));
_33 = core::ptr::addr_of!(_63);
_69 = [_43.1];
RET = [_17,_43.0.0,_17,_43.0.0];
_51 = _43.1 as usize;
_44 = core::ptr::addr_of!(_74);
_11 = (*_40) as usize;
Goto(bb31)
}
bb31 = {
_11 = _51 ^ _1;
_17 = _43.0.0 & _43.0.0;
_57 = _46 | _55;
_67 = [Field::<u128>(Variant(_32, 1), 0)];
(*_3) = !_64.1;
(*_44) = Adt51::Variant3 { fld0: (*_3),fld1: _54,fld2: Field::<isize>(Variant(_32, 1), 2),fld3: 10121_u16,fld4: _23,fld5: _22 };
_33 = core::ptr::addr_of!((*_33));
_61 = (*_40) - (*_40);
Goto(bb32)
}
bb32 = {
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [Field::<u8>(Variant(_32, 1), 1)];
Goto(bb33)
}
bb33 = {
(*_44) = Adt51::Variant3 { fld0: (*_3),fld1: _54,fld2: _46,fld3: 43579_u16,fld4: _23,fld5: _37 };
_77.1 = core::ptr::addr_of!((*_33));
_48 = core::ptr::addr_of!((*_33));
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
_17 = _43.0.0;
(*_33) = _34;
place!(Field::<u128>(Variant(_32, 1), 0)) = _50 ^ _50;
(*_3) = !_5;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
(*_44) = Adt51::Variant3 { fld0: (*_3),fld1: _54,fld2: Field::<isize>(Variant(_32, 1), 2),fld3: 18829_u16,fld4: _23,fld5: _37 };
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
_2 = (*_3);
(*_3) = Field::<bool>(Variant((*_44), 3), 0);
_75 = _68 + Field::<f32>(Variant(_41.0.fld0, 0), 0);
place!(Field::<bool>(Variant((*_44), 3), 0)) = _22 < Field::<i32>(Variant((*_44), 3), 5);
_32 = Adt37::Variant1 { fld0: _50,fld1: _60,fld2: Field::<isize>(Variant((*_44), 3), 2),fld3: Field::<i32>(Variant((*_44), 3), 5) };
(*_44) = Adt51::Variant3 { fld0: (*_3),fld1: _54,fld2: _55,fld3: 48799_u16,fld4: _23,fld5: _22 };
place!(Field::<i32>(Variant((*_44), 3), 5)) = _22;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [_60];
(*_3) = _57 > Field::<isize>(Variant((*_44), 3), 2);
(*_33) = _52;
place!(Field::<u16>(Variant((*_44), 3), 3)) = !14168_u16;
Goto(bb34)
}
bb34 = {
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
Goto(bb35)
}
bb35 = {
place!(Field::<isize>(Variant((*_44), 3), 2)) = -Field::<isize>(Variant(_32, 1), 2);
(*_3) = _4 | Field::<bool>(Variant((*_44), 3), 0);
_85.1 = !Field::<bool>(Variant((*_44), 3), 0);
_26 = Field::<bool>(Variant((*_44), 3), 0) <= Field::<bool>(Variant((*_44), 3), 0);
_17 = _43.0.0 * _43.0.0;
place!(Field::<bool>(Variant((*_44), 3), 0)) = _5 ^ (*_3);
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
_36 = -_46;
place!(Field::<i32>(Variant((*_44), 3), 5)) = _26 as i32;
_41.0.fld0 = Adt18::Variant1 { fld0: (-9165784290364984619_i64),fld1: _75,fld2: Field::<i32>(Variant((*_44), 3), 5),fld3: _43.1 };
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [_46,Field::<isize>(Variant(_74, 3), 2)];
place!(Field::<i64>(Variant(_41.0.fld0, 1), 0)) = Field::<u8>(Variant(_32, 1), 1) as i64;
_42 = &mut place!(Field::<i64>(Variant(_41.0.fld0, 1), 0));
place!(Field::<bool>(Variant((*_44), 3), 0)) = (*_3) & (*_3);
place!(Field::<bool>(Variant((*_44), 3), 0)) = (*_42) <= (*_42);
_64.1 = (*_3) == _85.1;
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [_60];
(*_42) = (-584594661189665323_i64) + (-5595220088137610653_i64);
Goto(bb36)
}
bb36 = {
place!(Field::<isize>(Variant((*_44), 3), 2)) = !_57;
_81 = [(*_33),(*_33),_52];
place!(Field::<u128>(Variant(_32, 1), 0)) = _50 + _50;
place!(Field::<u128>(Variant(_32, 1), 0)) = _50;
(*_33) = _52;
_12 = Field::<bool>(Variant(_74, 3), 0) > Field::<bool>(Variant((*_44), 3), 0);
_59 = &mut _69;
place!(Field::<isize>(Variant((*_44), 3), 2)) = _46 * _36;
Goto(bb37)
}
bb37 = {
place!(Field::<u16>(Variant((*_44), 3), 3)) = !58182_u16;
(*_3) = Field::<bool>(Variant((*_44), 3), 0) <= Field::<bool>(Variant((*_44), 3), 0);
place!(Field::<bool>(Variant((*_44), 3), 0)) = !(*_3);
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [Field::<u8>(Variant(_32, 1), 1)];
_19 = !(*_3);
(*_44) = Adt51::Variant3 { fld0: (*_3),fld1: _54,fld2: Field::<isize>(Variant(_32, 1), 2),fld3: 52689_u16,fld4: _23,fld5: _37 };
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),_36];
_84 = (-104930378987766174868710307097094733225_i128) - (-128615061112437620549891704909964966191_i128);
place!(Field::<isize>(Variant((*_44), 3), 2)) = _55 * _46;
place!(Field::<i32>(Variant((*_44), 3), 5)) = -_22;
(*_44) = Adt51::Variant3 { fld0: _2,fld1: _54,fld2: _46,fld3: 4585_u16,fld4: _23,fld5: _22 };
(*_3) = !Field::<bool>(Variant((*_44), 3), 0);
Goto(bb38)
}
bb38 = {
_43.3 = [Field::<isize>(Variant(_74, 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
_18 = _65;
_43.0 = (_17, _56);
place!(Field::<u16>(Variant((*_44), 3), 3)) = !22262_u16;
_2 = _7 <= (*_3);
_93 = _43.0.0 >> Field::<isize>(Variant((*_44), 3), 2);
_72 = Field::<bool>(Variant((*_44), 3), 0);
_1 = !_11;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
(*_42) = _84 as i64;
_35 = (*_40) * (*_40);
Call(place!(Field::<i32>(Variant((*_44), 3), 5)) = core::intrinsics::bswap(_22), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
(*_33) = _39;
_48 = core::ptr::addr_of!((*_33));
(*_3) = !Field::<bool>(Variant((*_44), 3), 0);
place!(Field::<i32>(Variant((*_44), 3), 5)) = _22 | Field::<i32>(Variant(_32, 1), 3);
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
place!(Field::<i32>(Variant((*_44), 3), 5)) = -_22;
place!(Field::<u16>(Variant((*_44), 3), 3)) = 25114_u16;
(*_48) = _39;
place!(Field::<u16>(Variant((*_44), 3), 3)) = 62144_u16 | 6063_u16;
place!(Field::<u16>(Variant((*_44), 3), 3)) = 44714_u16;
place!(Field::<isize>(Variant(_32, 1), 2)) = !Field::<isize>(Variant((*_44), 3), 2);
place!(Field::<i32>(Variant((*_44), 3), 5)) = (*_42) as i32;
match Field::<u16>(Variant((*_44), 3), 3) {
0 => bb20,
1 => bb25,
2 => bb38,
3 => bb18,
4 => bb5,
5 => bb26,
6 => bb13,
44714 => bb40,
_ => bb19
}
}
bb40 = {
(*_48) = _39;
_87 = Field::<bool>(Variant(_74, 3), 0) & (*_3);
_80 = [_65,_18,_18,_18,_18,_65,_65,_65];
_3 = &mut _5;
(*_48) = _52;
place!(Field::<u16>(Variant((*_44), 3), 3)) = 61108_u16 << Field::<isize>(Variant((*_44), 3), 2);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [Field::<u8>(Variant(_32, 1), 1)];
(*_42) = (-3954609602697444019_i64) | 154134528227725134_i64;
place!(Field::<i32>(Variant((*_44), 3), 5)) = _22 * _22;
place!(Field::<i32>(Variant((*_44), 3), 5)) = -_37;
(*_59) = [_43.1];
(*_44) = Adt51::Variant3 { fld0: _64.1,fld1: _54,fld2: _57,fld3: 37521_u16,fld4: _23,fld5: _22 };
place!(Field::<u16>(Variant((*_44), 3), 3)) = !16246_u16;
_91.1 = Field::<u16>(Variant((*_44), 3), 3) << Field::<isize>(Variant((*_44), 3), 2);
Goto(bb41)
}
bb41 = {
place!(Field::<u16>(Variant((*_44), 3), 3)) = _91.1 >> Field::<isize>(Variant(_74, 3), 2);
(*_42) = -(-3088233115160015956_i64);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [Field::<u8>(Variant(_32, 1), 1)];
_27 = &mut _84;
(*_42) = 6891457000052487442_i64 * (-3473371188263597279_i64);
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _54;
(*_27) = (*_40) as i128;
_19 = Field::<isize>(Variant((*_44), 3), 2) <= Field::<isize>(Variant(_32, 1), 2);
place!(Field::<isize>(Variant((*_44), 3), 2)) = Field::<isize>(Variant(_32, 1), 2);
(*_3) = Field::<bool>(Variant((*_44), 3), 0) | Field::<bool>(Variant((*_44), 3), 0);
_77.0 = Field::<u16>(Variant((*_44), 3), 3) - Field::<u16>(Variant((*_44), 3), 3);
_26 = !_85.1;
_11 = _1 ^ _51;
place!(Field::<isize>(Variant(_32, 1), 2)) = Field::<u16>(Variant((*_44), 3), 3) as isize;
Goto(bb42)
}
bb42 = {
(*_48) = _39;
_102 = (*_3) != (*_3);
_99 = !Field::<bool>(Variant(_74, 3), 0);
place!(Field::<i32>(Variant((*_44), 3), 5)) = !_22;
_15 = !Field::<u8>(Variant(_32, 1), 1);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = _23;
_43.3 = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
place!(Field::<isize>(Variant((*_44), 3), 2)) = -Field::<isize>(Variant(_32, 1), 2);
(*_27) = !47710325566342873000084062460760385519_i128;
place!(Field::<i32>(Variant((*_44), 3), 5)) = Field::<i32>(Variant(_32, 1), 3);
_21 = Field::<isize>(Variant((*_44), 3), 2) >> _93;
(*_3) = Field::<bool>(Variant((*_44), 3), 0);
_43.0.1 = _35;
place!(Field::<u16>(Variant((*_44), 3), 3)) = _24 as u16;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [_46,Field::<isize>(Variant((*_44), 3), 2)];
(*_33) = _39;
(*_42) = -9100400854437393343_i64;
Goto(bb43)
}
bb43 = {
_14 = core::ptr::addr_of_mut!(_59);
Call(place!(Field::<i32>(Variant((*_44), 3), 5)) = core::intrinsics::bswap(Field::<i32>(Variant(_32, 1), 3)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _43.3;
_89 = [_93,_93,_93,_93,_93,_93,_93,_93];
(*_27) = (-166527923440564945351101129592258488716_i128);
_83 = (*_33);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [Field::<u8>(Variant(_32, 1), 1)];
_85 = (Move(_27), _102);
_4 = _87 | Field::<bool>(Variant((*_44), 3), 0);
_60 = _15;
place!(Field::<isize>(Variant((*_44), 3), 2)) = _24 as isize;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [_46,Field::<isize>(Variant((*_44), 3), 2)];
place!(Field::<u16>(Variant((*_44), 3), 3)) = !_91.1;
place!(Field::<bool>(Variant((*_44), 3), 0)) = (*_3) & (*_3);
(*_33) = _34;
place!(Field::<u16>(Variant((*_44), 3), 3)) = (*_42) as u16;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = _43.3;
place!(Field::<u16>(Variant((*_44), 3), 3)) = _77.0 - _91.1;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [_36,_55];
Goto(bb45)
}
bb45 = {
_95 = &mut (*_42);
place!(Field::<i32>(Variant((*_44), 3), 5)) = _22;
(*_3) = Field::<bool>(Variant((*_44), 3), 0) > _99;
(*_95) = -8647903064341761084_i64;
place!(Field::<u16>(Variant((*_44), 3), 3)) = _91.1;
_90 = Adt18::Variant1 { fld0: (*_95),fld1: _75,fld2: _22,fld3: _43.1 };
_71 = core::ptr::addr_of!(_65);
place!(Field::<isize>(Variant((*_44), 3), 2)) = !_21;
_43.3 = [Field::<isize>(Variant(_74, 3), 2),_57];
_108 = [_43.1];
_49 = _31;
_91.0 = Field::<isize>(Variant((*_44), 3), 2) << _60;
(*_95) = !Field::<i64>(Variant(_90, 1), 0);
place!(Field::<isize>(Variant((*_44), 3), 2)) = _46 & _57;
(*_95) = _68 as i64;
_103 = [Field::<bool>(Variant((*_44), 3), 0),Field::<bool>(Variant((*_44), 3), 0),(*_3),(*_3),Field::<bool>(Variant((*_44), 3), 0)];
(*_14) = &mut _108;
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = [_60];
_71 = core::ptr::addr_of!((*_71));
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [_21,Field::<isize>(Variant((*_44), 3), 2)];
_19 = _46 != Field::<isize>(Variant((*_44), 3), 2);
_68 = _35 as f32;
(*_3) = Field::<bool>(Variant((*_44), 3), 0) >= Field::<bool>(Variant((*_44), 3), 0);
_104 = _45;
(*_33) = _83;
(*_59) = [Field::<i8>(Variant(_90, 1), 3)];
place!(Field::<u128>(Variant(_32, 1), 0)) = _50 * _50;
_91.1 = (*_71) as u16;
(*_71) = _18 - _18;
Goto(bb46)
}
bb46 = {
_99 = (*_3) & _9;
_46 = -Field::<isize>(Variant((*_44), 3), 2);
(*_71) = Field::<bool>(Variant((*_44), 3), 0) as i16;
(*_95) = Field::<i32>(Variant((*_44), 3), 5) as i64;
(*_71) = !_18;
(*_95) = _61 as i64;
place!(Field::<i32>(Variant(_32, 1), 3)) = Field::<i32>(Variant((*_44), 3), 5);
(*_71) = _18 >> Field::<u16>(Variant((*_44), 3), 3);
_73 = _50 - Field::<u128>(Variant(_32, 1), 0);
_37 = Field::<i32>(Variant((*_44), 3), 5) | Field::<i32>(Variant((*_44), 3), 5);
place!(Field::<bool>(Variant((*_44), 3), 0)) = Field::<isize>(Variant((*_44), 3), 2) <= Field::<isize>(Variant((*_44), 3), 2);
(*_44) = Adt51::Variant3 { fld0: _12,fld1: _43.3,fld2: Field::<isize>(Variant(_32, 1), 2),fld3: _77.0,fld4: _23,fld5: _22 };
place!(Field::<u16>(Variant((*_44), 3), 3)) = _11 as u16;
(*_59) = [Field::<i8>(Variant(_90, 1), 3)];
(*_59) = [Field::<i8>(Variant(_90, 1), 3)];
_93 = _43.0.0 + _17;
_42 = Move(_95);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = _23;
place!(Field::<isize>(Variant((*_44), 3), 2)) = !Field::<isize>(Variant(_32, 1), 2);
(*_33) = _52;
place!(Field::<u16>(Variant((*_44), 3), 3)) = _77.0 + _77.0;
place!(Field::<isize>(Variant(_32, 1), 2)) = Field::<isize>(Variant((*_44), 3), 2) ^ Field::<isize>(Variant((*_44), 3), 2);
place!(Field::<i32>(Variant((*_44), 3), 5)) = Field::<u16>(Variant((*_44), 3), 3) as i32;
_32 = Adt37::Variant1 { fld0: _73,fld1: _15,fld2: Field::<isize>(Variant((*_44), 3), 2),fld3: Field::<i32>(Variant((*_44), 3), 5) };
_95 = &mut place!(Field::<i64>(Variant(_90, 1), 0));
Goto(bb47)
}
bb47 = {
(*_3) = _46 < Field::<isize>(Variant((*_44), 3), 2);
place!(Field::<u16>(Variant((*_44), 3), 3)) = _77.0 + _77.0;
place!(Field::<i32>(Variant((*_44), 3), 5)) = (*_95) as i32;
Goto(bb48)
}
bb48 = {
(*_71) = _18 - _18;
_91.2 = !Field::<i32>(Variant(_32, 1), 3);
_67 = [Field::<u128>(Variant(_32, 1), 0)];
(*_33) = _39;
place!(Field::<isize>(Variant((*_44), 3), 2)) = -_46;
place!(Field::<i32>(Variant((*_44), 3), 5)) = _91.2 ^ Field::<i32>(Variant(_32, 1), 3);
(*_71) = _18 - _18;
place!(Field::<bool>(Variant((*_44), 3), 0)) = !(*_3);
Call(_106 = core::intrinsics::transmute(Field::<isize>(Variant((*_44), 3), 2)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
(*_59) = [_43.1];
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
(*_3) = Field::<bool>(Variant((*_44), 3), 0);
place!(Field::<bool>(Variant((*_44), 3), 0)) = !(*_3);
place!(Field::<[u8; 1]>(Variant((*_44), 3), 4)) = _23;
(*_59) = [_43.1];
place!(Field::<isize>(Variant((*_44), 3), 2)) = Field::<u8>(Variant(_32, 1), 1) as isize;
(*_95) = 5235547336401831224_i64;
place!(Field::<[isize; 2]>(Variant((*_44), 3), 1)) = [Field::<isize>(Variant((*_44), 3), 2),Field::<isize>(Variant((*_44), 3), 2)];
_33 = Move(_48);
place!(Field::<isize>(Variant((*_44), 3), 2)) = _57;
_77.3 = Move(_71);
Goto(bb50)
}
bb50 = {
Call(_126 = dump_var(Move(_51), Move(_54), Move(_84), Move(_11)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_126 = dump_var(Move(_58), Move(_5), Move(_36), Move(_108)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_126 = dump_var(Move(_83), Move(_93), Move(_81), Move(_24)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_126 = dump_var(Move(_102), Move(_46), Move(_104), Move(_65)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_126 = dump_var(Move(_62), Move(_10), Move(_1), Move(_50)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_126 = dump_var(Move(_2), Move(_17), Move(_15), Move(_87)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_126 = dump_var(Move(_22), Move(_99), Move(_7), _127), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: bool,mut _2: f32,mut _3: bool,mut _4: &'static mut bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool) -> u8 {
mir! {
type RET = u8;
let _9: u128;
let _10: *const char;
let _11: u32;
let _12: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _13: &'static [u8; 3];
let _14: (f64,);
let _15: &'static i64;
let _16: &'static i64;
let _17: [char; 3];
let _18: [bool; 5];
let _19: u16;
let _20: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _21: u64;
let _22: *const Adt21;
let _23: &'static mut &'static u32;
let _24: [usize; 8];
let _25: f64;
let _26: bool;
let _27: u16;
let _28: &'static (isize, u16, i32, u64);
let _29: char;
let _30: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _31: isize;
let _32: u16;
let _33: &'static mut i128;
let _34: f64;
let _35: char;
let _36: f64;
let _37: [u32; 3];
let _38: &'static u32;
let _39: f32;
let _40: i128;
let _41: *const char;
let _42: (Adt72, [u128; 1]);
let _43: *const &'static (isize, u16, i32, u64);
let _44: bool;
let _45: f32;
let _46: i16;
let _47: f64;
let _48: Adt56;
let _49: bool;
let _50: [i8; 7];
let _51: *mut Adt51;
let _52: ([i16; 8],);
let _53: (isize, u16, i32, u64);
let _54: u16;
let _55: isize;
let _56: &'static mut i128;
let _57: Adt21;
let _58: *mut &'static mut [i8; 1];
let _59: isize;
let _60: isize;
let _61: f64;
let _62: (u16, Adt37, &'static mut i64);
let _63: &'static i64;
let _64: f32;
let _65: u128;
let _66: *const Adt51;
let _67: isize;
let _68: *mut Adt51;
let _69: bool;
let _70: &'static f64;
let _71: i32;
let _72: &'static i64;
let _73: i16;
let _74: *const &'static (isize, u16, i32, u64);
let _75: [i8; 8];
let _76: i64;
let _77: *const i16;
let _78: &'static (isize, u16, i32, u64);
let _79: &'static f64;
let _80: &'static &'static mut [char; 3];
let _81: [isize; 2];
let _82: *const Adt21;
let _83: char;
let _84: isize;
let _85: i64;
let _86: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _87: ();
let _88: ();
{
_1 = !_3;
RET = 89_u8 >> (-6483081519165861456_i64);
_5 = _3;
_5 = !_1;
_1 = _8 | _7;
_9 = !138933167780796492916943512990609095432_u128;
_7 = _6 ^ _5;
_1 = _8;
_5 = !_8;
_7 = _9 <= _9;
_3 = _1 | _5;
_3 = !_6;
_2 = (-20056_i16) as f32;
_9 = 3866_i16 as u128;
_11 = 2201951502_u32 & 1406826706_u32;
_4 = &mut _1;
(*_4) = _11 >= _11;
Call((*_4) = fn8(_6, _11, _11, _8, _11, _6, _6, _3, _5, _6, _2, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_4) = _11 < _11;
(*_4) = _11 < _11;
(*_4) = RET <= RET;
(*_4) = !_8;
_6 = !_5;
(*_4) = _3 <= _7;
(*_4) = _3 ^ _5;
(*_4) = _3 | _5;
(*_4) = _8 ^ _3;
(*_4) = _7;
RET = '\u{3df7d}' as u8;
(*_4) = _7;
_14.0 = _9 as f64;
Call(_6 = fn10(_9, Move(_4), (*_4), (*_4), _2, (*_4), _14.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = 130_u8;
_3 = _6 == _6;
_7 = !_3;
_2 = 6291_i16 as f32;
_6 = _3 > _7;
RET = 74_u8 | 65_u8;
_4 = &mut _3;
_5 = (*_4);
(*_4) = _6 >= _5;
Goto(bb3)
}
bb3 = {
(*_4) = !_7;
(*_4) = !_5;
_19 = 64593_u16 >> _11;
(*_4) = _5 >= _5;
(*_4) = !_6;
_6 = (*_4) == (*_4);
(*_4) = _6 >= _6;
(*_4) = _5 ^ _5;
(*_4) = _5 ^ _7;
_4 = &mut _7;
_14.0 = _19 as f64;
(*_4) = _14.0 >= _14.0;
(*_4) = _5 & _6;
(*_4) = _5 >= _5;
(*_4) = _6 & _6;
_6 = (*_4) | (*_4);
_5 = (*_4);
(*_4) = _6 >= _5;
(*_4) = !_6;
(*_4) = _5 >= _6;
(*_4) = _6 < _6;
_21 = !1731498321011285215_u64;
_18 = [(*_4),_6,(*_4),_5,_6];
RET = 25_u8 * 209_u8;
_8 = (*_4) >= (*_4);
(*_4) = _5 ^ _5;
_9 = 10197947626301027254106003894464782951_u128 ^ 162095351309513850433329009170261731605_u128;
Goto(bb4)
}
bb4 = {
(*_4) = _8;
(*_4) = _5 == _6;
(*_4) = !_5;
(*_4) = _6 | _6;
(*_4) = !_8;
(*_4) = !_6;
(*_4) = _5 <= _5;
Goto(bb5)
}
bb5 = {
_24 = [5_usize,1_usize,0_usize,5_usize,1_usize,2_usize,17836712859698697198_usize,5478017044062947946_usize];
(*_4) = _5 ^ _5;
(*_4) = _5;
_6 = (*_4) == (*_4);
(*_4) = _6 ^ _8;
(*_4) = _8;
_24 = [5_usize,6134966301344299177_usize,8048302186099732888_usize,6_usize,9194383730722038868_usize,15580782244703887415_usize,0_usize,0_usize];
_18 = [(*_4),(*_4),_8,(*_4),(*_4)];
(*_4) = _8 & _5;
(*_4) = _6 > _6;
_5 = (*_4);
_11 = (-6353_i16) as u32;
(*_4) = _6 == _8;
_21 = 10919658884057934558_u64 | 9916593175144577136_u64;
_2 = (-93_isize) as f32;
(*_4) = _8 | _5;
(*_4) = _8;
(*_4) = _8 & _5;
(*_4) = _6 & _5;
(*_4) = _8 & _6;
Call(_26 = fn12(Move(_4), _24), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_17 = ['\u{f81b1}','\u{f9881}','\u{aaf72}'];
RET = 135_u8 - 97_u8;
_29 = '\u{b3671}';
_21 = !8360341116946810447_u64;
_25 = _14.0 * _14.0;
_26 = !_5;
_27 = _19 ^ _19;
_25 = _14.0 * _14.0;
_21 = 9007634492956534683_u64 & 3775943836941225879_u64;
_8 = !_26;
_26 = _8 | _8;
Goto(bb7)
}
bb7 = {
_24 = [1565759990651043618_usize,10051059610287816546_usize,1_usize,9554536775947968185_usize,12359968386507443295_usize,6_usize,2221950119585863064_usize,16949311842188796641_usize];
_21 = 10211474526681086041_u64 + 10719726180220639447_u64;
_21 = 2698644266035417073_u64 << _11;
_4 = &mut _8;
(*_4) = _5 | _6;
(*_4) = _6 == _26;
(*_4) = _6 == _5;
_27 = !_19;
(*_4) = _6 < _5;
_6 = (*_4);
(*_4) = _26 >= _5;
_29 = '\u{c38b9}';
(*_4) = _6 == _5;
(*_4) = _14.0 >= _25;
_9 = !318568547612885882575757499269464834497_u128;
_6 = _5;
(*_4) = _5;
_29 = '\u{ecf52}';
_32 = _19 * _19;
Goto(bb8)
}
bb8 = {
(*_4) = _5;
_31 = 9223372036854775807_isize;
_24 = [4_usize,14016003387947301099_usize,3370933132104247833_usize,16547992659248996672_usize,10913794595993921351_usize,8239054125911324852_usize,4_usize,14898510519486397284_usize];
_11 = 2_usize as u32;
_29 = '\u{8e99c}';
(*_4) = _5;
(*_4) = _26 >= _26;
(*_4) = _6;
(*_4) = _26;
(*_4) = _6 ^ _5;
(*_4) = _26;
_5 = (*_4) != (*_4);
_29 = '\u{1a3e3}';
_9 = 115852897026616613209830667226652695660_u128 & 290288167798870244042328314345345925544_u128;
(*_4) = _6;
_21 = _27 as u64;
_18 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
_10 = core::ptr::addr_of!(_29);
Goto(bb9)
}
bb9 = {
(*_10) = '\u{13faa}';
(*_10) = '\u{3801b}';
_4 = &mut _6;
_29 = '\u{7e20a}';
_11 = 1865719063_u32 & 1611991487_u32;
_25 = _14.0;
(*_4) = !_5;
(*_4) = _26;
_42.0.fld2 = core::ptr::addr_of_mut!(_42.0.fld3);
_25 = -_14.0;
_27 = _32;
(*_10) = '\u{33710}';
(*_10) = '\u{17a7e}';
_14.0 = _31 as f64;
_42.0.fld4.0 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
(*_4) = !_26;
(*_4) = _26 <= _5;
_34 = _14.0 * _25;
(*_10) = '\u{56b72}';
(*_4) = _25 <= _14.0;
(*_4) = !_5;
(*_10) = '\u{e4f88}';
(*_4) = _5 <= _5;
(*_4) = !_5;
_14.0 = _34 + _25;
match _31 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb10 = {
(*_4) = _5;
_31 = 9223372036854775807_isize;
_24 = [4_usize,14016003387947301099_usize,3370933132104247833_usize,16547992659248996672_usize,10913794595993921351_usize,8239054125911324852_usize,4_usize,14898510519486397284_usize];
_11 = 2_usize as u32;
_29 = '\u{8e99c}';
(*_4) = _5;
(*_4) = _26 >= _26;
(*_4) = _6;
(*_4) = _26;
(*_4) = _6 ^ _5;
(*_4) = _26;
_5 = (*_4) != (*_4);
_29 = '\u{1a3e3}';
_9 = 115852897026616613209830667226652695660_u128 & 290288167798870244042328314345345925544_u128;
(*_4) = _6;
_21 = _27 as u64;
_18 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
_10 = core::ptr::addr_of!(_29);
Goto(bb9)
}
bb11 = {
(*_4) = !_7;
(*_4) = !_5;
_19 = 64593_u16 >> _11;
(*_4) = _5 >= _5;
(*_4) = !_6;
_6 = (*_4) == (*_4);
(*_4) = _6 >= _6;
(*_4) = _5 ^ _5;
(*_4) = _5 ^ _7;
_4 = &mut _7;
_14.0 = _19 as f64;
(*_4) = _14.0 >= _14.0;
(*_4) = _5 & _6;
(*_4) = _5 >= _5;
(*_4) = _6 & _6;
_6 = (*_4) | (*_4);
_5 = (*_4);
(*_4) = _6 >= _5;
(*_4) = !_6;
(*_4) = _5 >= _6;
(*_4) = _6 < _6;
_21 = !1731498321011285215_u64;
_18 = [(*_4),_6,(*_4),_5,_6];
RET = 25_u8 * 209_u8;
_8 = (*_4) >= (*_4);
(*_4) = _5 ^ _5;
_9 = 10197947626301027254106003894464782951_u128 ^ 162095351309513850433329009170261731605_u128;
Goto(bb4)
}
bb12 = {
RET = 130_u8;
_3 = _6 == _6;
_7 = !_3;
_2 = 6291_i16 as f32;
_6 = _3 > _7;
RET = 74_u8 | 65_u8;
_4 = &mut _3;
_5 = (*_4);
(*_4) = _6 >= _5;
Goto(bb3)
}
bb13 = {
(*_4) = _5 & _5;
Goto(bb14)
}
bb14 = {
(*_4) = _26;
(*_4) = _5 | _5;
_42.0.fld6 = _9;
Goto(bb15)
}
bb15 = {
_17 = [(*_10),(*_10),(*_10)];
match _31 {
0 => bb8,
1 => bb6,
2 => bb16,
3 => bb17,
9223372036854775807 => bb19,
_ => bb18
}
}
bb16 = {
(*_4) = _8;
(*_4) = _5 == _6;
(*_4) = !_5;
(*_4) = _6 | _6;
(*_4) = !_8;
(*_4) = !_6;
(*_4) = _5 <= _5;
Goto(bb5)
}
bb17 = {
(*_10) = '\u{13faa}';
(*_10) = '\u{3801b}';
_4 = &mut _6;
_29 = '\u{7e20a}';
_11 = 1865719063_u32 & 1611991487_u32;
_25 = _14.0;
(*_4) = !_5;
(*_4) = _26;
_42.0.fld2 = core::ptr::addr_of_mut!(_42.0.fld3);
_25 = -_14.0;
_27 = _32;
(*_10) = '\u{33710}';
(*_10) = '\u{17a7e}';
_14.0 = _31 as f64;
_42.0.fld4.0 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
(*_4) = !_26;
(*_4) = _26 <= _5;
_34 = _14.0 * _25;
(*_10) = '\u{56b72}';
(*_4) = _25 <= _14.0;
(*_4) = !_5;
(*_10) = '\u{e4f88}';
(*_4) = _5 <= _5;
(*_4) = !_5;
_14.0 = _34 + _25;
match _31 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb18 = {
RET = 130_u8;
_3 = _6 == _6;
_7 = !_3;
_2 = 6291_i16 as f32;
_6 = _3 > _7;
RET = 74_u8 | 65_u8;
_4 = &mut _3;
_5 = (*_4);
(*_4) = _6 >= _5;
Goto(bb3)
}
bb19 = {
(*_10) = '\u{f799a}';
_25 = _14.0 * _14.0;
_19 = !_27;
_14 = (_25,);
_42.0.fld1 = core::ptr::addr_of!(_2);
_49 = (*_4) ^ (*_4);
_26 = (*_4) != _5;
_42.0.fld2 = core::ptr::addr_of_mut!(_42.0.fld3);
_38 = &_11;
(*_4) = !_49;
(*_10) = '\u{a90d7}';
(*_4) = (*_38) <= (*_38);
_35 = (*_10);
(*_10) = _35;
(*_4) = _26;
(*_10) = _35;
_40 = -(-57627228584568402564826993214784666382_i128);
(*_4) = _49 != _26;
_25 = _14.0 - _34;
_24 = [151462671047663435_usize,5_usize,7388454473327111104_usize,0_usize,1637421946046271511_usize,7_usize,13329579020452507655_usize,6_usize];
_9 = _42.0.fld6 | _42.0.fld6;
_14.0 = _25 * _34;
RET = 97_u8 & 160_u8;
(*_4) = _5;
(*_4) = _26;
Goto(bb20)
}
bb20 = {
(*_4) = _26;
_17 = [(*_10),(*_10),(*_10)];
_42.0.fld4 = (_18,);
_42.1 = [_42.0.fld6];
_53 = (_31, _19, 43030828_i32, _21);
_2 = _53.1 as f32;
_42.0.fld7 = _21;
(*_10) = _35;
_42.0.fld7 = (*_38) as u64;
Goto(bb21)
}
bb21 = {
_25 = _14.0 * _34;
_42.0.fld4 = (_18,);
_42.0.fld0 = [_9,_9,_42.0.fld6,_9,_42.0.fld6];
(*_10) = _35;
_53.1 = _21 as u16;
(*_10) = _35;
_47 = _25 - _14.0;
_46 = (-19345_i16) >> _19;
_14.0 = _47;
(*_10) = _35;
Goto(bb22)
}
bb22 = {
_45 = -_2;
(*_10) = _35;
_37 = [(*_38),(*_38),(*_38)];
_55 = _53.0;
_2 = -_45;
_42.0.fld4 = (_18,);
_42.0.fld6 = _9;
(*_10) = _35;
_40 = (-124167597464379842151873083218822504675_i128) << _46;
RET = (*_38) as u8;
_19 = !_32;
_42.0.fld5 = core::ptr::addr_of!(_57);
_51 = core::ptr::addr_of_mut!(_42.0.fld3);
_31 = !_55;
(*_4) = _26;
_23 = &mut _38;
_49 = (*_4);
_22 = core::ptr::addr_of!(_57);
_10 = core::ptr::addr_of!((*_10));
(*_22).fld4 = !_40;
(*_22) = Adt21 { fld0: (-3867437604270884608_i64),fld1: (*_10),fld2: _2,fld3: _11,fld4: _40 };
(*_22).fld3 = _11 >> (*_22).fld0;
(*_22).fld2 = 4128857155154463433_usize as f32;
(*_22).fld4 = _47 as i128;
(*_22).fld4 = _40 << (*_22).fld0;
_49 = _5 & (*_4);
(*_22).fld2 = -_45;
Goto(bb23)
}
bb23 = {
_40 = -(*_22).fld4;
(*_23) = &(*_22).fld3;
(*_4) = _5;
(*_22).fld0 = 2534368016290110370_i64;
(*_22).fld4 = _40 << (*_22).fld3;
(*_22).fld1 = _35;
(*_22).fld0 = 2931167162453689470_i64 | (-4180043277028712532_i64);
(*_22).fld1 = (*_10);
_56 = &mut (*_22).fld4;
(*_4) = _40 >= (*_56);
(*_22).fld0 = -5505887575079382838_i64;
(*_22).fld2 = _53.0 as f32;
(*_56) = _53.3 as i128;
(*_4) = _26 & _5;
_61 = -_47;
(*_10) = (*_22).fld1;
(*_22).fld3 = _11 | _11;
_28 = &_53;
(*_23) = &_11;
(*_22).fld3 = _11;
(*_23) = &(*_22).fld3;
(*_4) = _49 != _26;
_35 = (*_22).fld1;
(*_4) = _5 < _49;
Goto(bb24)
}
bb24 = {
_15 = &(*_22).fld0;
Goto(bb25)
}
bb25 = {
_19 = !(*_28).1;
(*_22).fld2 = _2 + _45;
(*_22).fld1 = (*_10);
_51 = core::ptr::addr_of_mut!((*_51));
_11 = (*_4) as u32;
(*_22).fld0 = !(-59728868586140637_i64);
(*_22).fld2 = _2 - _45;
(*_4) = !_26;
(*_10) = (*_22).fld1;
(*_22).fld2 = _2;
(*_22).fld1 = (*_10);
_53.0 = _31 >> (*_22).fld3;
(*_22).fld1 = (*_10);
(*_22).fld0 = (*_10) as i64;
Call(_60 = core::intrinsics::bswap(_53.0), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
(*_4) = _5 != _26;
(*_22).fld0 = 5496877600120387656_i64;
(*_4) = _26;
(*_22).fld3 = _11;
(*_56) = _40 | _40;
(*_10) = _35;
(*_22).fld3 = _11;
(*_22).fld3 = _11 - _11;
_46 = (-3018_i16) - 3469_i16;
_55 = _53.0;
(*_22).fld1 = (*_10);
(*_22).fld3 = _11 ^ _11;
(*_23) = &_11;
(*_22).fld0 = (-2873153078272882646_i64) | 7292856665129299724_i64;
(*_22).fld2 = _45 - _2;
(*_22).fld0 = !4657621698945322554_i64;
(*_23) = &(*_22).fld3;
(*_22).fld3 = (*_22).fld1 as u32;
_64 = (*_28).3 as f32;
_21 = (*_28).3;
(*_23) = &_11;
(*_56) = !_40;
Goto(bb27)
}
bb27 = {
_51 = core::ptr::addr_of_mut!((*_51));
(*_56) = (*_28).3 as i128;
_65 = (*_56) as u128;
_43 = core::ptr::addr_of!(_28);
(*_23) = &(*_22).fld3;
(*_22).fld1 = (*_10);
(*_22).fld1 = _29;
match (*_28).2 {
0 => bb9,
1 => bb23,
2 => bb3,
43030828 => bb29,
_ => bb28
}
}
bb28 = {
(*_4) = _5;
_31 = 9223372036854775807_isize;
_24 = [4_usize,14016003387947301099_usize,3370933132104247833_usize,16547992659248996672_usize,10913794595993921351_usize,8239054125911324852_usize,4_usize,14898510519486397284_usize];
_11 = 2_usize as u32;
_29 = '\u{8e99c}';
(*_4) = _5;
(*_4) = _26 >= _26;
(*_4) = _6;
(*_4) = _26;
(*_4) = _6 ^ _5;
(*_4) = _26;
_5 = (*_4) != (*_4);
_29 = '\u{1a3e3}';
_9 = 115852897026616613209830667226652695660_u128 & 290288167798870244042328314345345925544_u128;
(*_4) = _6;
_21 = _27 as u64;
_18 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
_10 = core::ptr::addr_of!(_29);
Goto(bb9)
}
bb29 = {
_16 = Move(_15);
(*_22).fld0 = -6723290570845752547_i64;
(*_23) = &_11;
_66 = core::ptr::addr_of!((*_51));
(*_22).fld3 = _11 >> (*_28).3;
(*_22).fld3 = _11;
_42.0.fld6 = _65 - _65;
(*_10) = (*_22).fld1;
(*_10) = (*_22).fld1;
_62.0 = (*_28).1;
_42.0.fld4 = (_18,);
_41 = core::ptr::addr_of!((*_10));
(*_10) = (*_22).fld1;
(*_22).fld2 = _45 - _2;
(*_23) = &(*_22).fld3;
_68 = core::ptr::addr_of_mut!((*_51));
(*_22).fld0 = RET as i64;
_9 = (*_28).3 as u128;
Goto(bb30)
}
bb30 = {
_74 = core::ptr::addr_of!((*_43));
_50 = [(-84_i8),(-73_i8),(-36_i8),36_i8,120_i8,14_i8,117_i8];
(*_56) = _40 & _40;
_73 = _46 & _46;
(*_22).fld2 = _2 * _2;
(*_23) = &_11;
(*_22).fld0 = !(-7667680811501092908_i64);
_53.1 = _32;
(*_23) = &(*_22).fld3;
(*_4) = (*_22).fld3 >= (*_22).fld3;
(*_4) = (*_22).fld3 < (*_22).fld3;
(*_10) = (*_22).fld1;
(*_22).fld3 = _11 ^ _11;
Goto(bb31)
}
bb31 = {
_42.0.fld7 = _73 as u64;
(*_23) = &_11;
match (*_28).2 {
0 => bb32,
1 => bb33,
2 => bb34,
3 => bb35,
4 => bb36,
43030828 => bb38,
_ => bb37
}
}
bb32 = {
(*_4) = _26;
_17 = [(*_10),(*_10),(*_10)];
_42.0.fld4 = (_18,);
_42.1 = [_42.0.fld6];
_53 = (_31, _19, 43030828_i32, _21);
_2 = _53.1 as f32;
_42.0.fld7 = _21;
(*_10) = _35;
_42.0.fld7 = (*_38) as u64;
Goto(bb21)
}
bb33 = {
_16 = Move(_15);
(*_22).fld0 = -6723290570845752547_i64;
(*_23) = &_11;
_66 = core::ptr::addr_of!((*_51));
(*_22).fld3 = _11 >> (*_28).3;
(*_22).fld3 = _11;
_42.0.fld6 = _65 - _65;
(*_10) = (*_22).fld1;
(*_10) = (*_22).fld1;
_62.0 = (*_28).1;
_42.0.fld4 = (_18,);
_41 = core::ptr::addr_of!((*_10));
(*_10) = (*_22).fld1;
(*_22).fld2 = _45 - _2;
(*_23) = &(*_22).fld3;
_68 = core::ptr::addr_of_mut!((*_51));
(*_22).fld0 = RET as i64;
_9 = (*_28).3 as u128;
Goto(bb30)
}
bb34 = {
_24 = [1565759990651043618_usize,10051059610287816546_usize,1_usize,9554536775947968185_usize,12359968386507443295_usize,6_usize,2221950119585863064_usize,16949311842188796641_usize];
_21 = 10211474526681086041_u64 + 10719726180220639447_u64;
_21 = 2698644266035417073_u64 << _11;
_4 = &mut _8;
(*_4) = _5 | _6;
(*_4) = _6 == _26;
(*_4) = _6 == _5;
_27 = !_19;
(*_4) = _6 < _5;
_6 = (*_4);
(*_4) = _26 >= _5;
_29 = '\u{c38b9}';
(*_4) = _6 == _5;
(*_4) = _14.0 >= _25;
_9 = !318568547612885882575757499269464834497_u128;
_6 = _5;
(*_4) = _5;
_29 = '\u{ecf52}';
_32 = _19 * _19;
Goto(bb8)
}
bb35 = {
(*_10) = '\u{13faa}';
(*_10) = '\u{3801b}';
_4 = &mut _6;
_29 = '\u{7e20a}';
_11 = 1865719063_u32 & 1611991487_u32;
_25 = _14.0;
(*_4) = !_5;
(*_4) = _26;
_42.0.fld2 = core::ptr::addr_of_mut!(_42.0.fld3);
_25 = -_14.0;
_27 = _32;
(*_10) = '\u{33710}';
(*_10) = '\u{17a7e}';
_14.0 = _31 as f64;
_42.0.fld4.0 = [(*_4),(*_4),(*_4),(*_4),(*_4)];
(*_4) = !_26;
(*_4) = _26 <= _5;
_34 = _14.0 * _25;
(*_10) = '\u{56b72}';
(*_4) = _25 <= _14.0;
(*_4) = !_5;
(*_10) = '\u{e4f88}';
(*_4) = _5 <= _5;
(*_4) = !_5;
_14.0 = _34 + _25;
match _31 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb10,
4 => bb11,
9223372036854775807 => bb13,
_ => bb12
}
}
bb36 = {
_24 = [5_usize,1_usize,0_usize,5_usize,1_usize,2_usize,17836712859698697198_usize,5478017044062947946_usize];
(*_4) = _5 ^ _5;
(*_4) = _5;
_6 = (*_4) == (*_4);
(*_4) = _6 ^ _8;
(*_4) = _8;
_24 = [5_usize,6134966301344299177_usize,8048302186099732888_usize,6_usize,9194383730722038868_usize,15580782244703887415_usize,0_usize,0_usize];
_18 = [(*_4),(*_4),_8,(*_4),(*_4)];
(*_4) = _8 & _5;
(*_4) = _6 > _6;
_5 = (*_4);
_11 = (-6353_i16) as u32;
(*_4) = _6 == _8;
_21 = 10919658884057934558_u64 | 9916593175144577136_u64;
_2 = (-93_isize) as f32;
(*_4) = _8 | _5;
(*_4) = _8;
(*_4) = _8 & _5;
(*_4) = _6 & _5;
(*_4) = _8 & _6;
Call(_26 = fn12(Move(_4), _24), ReturnTo(bb6), UnwindUnreachable())
}
bb37 = {
(*_4) = _5 & _5;
Goto(bb14)
}
bb38 = {
(*_22).fld0 = 4889642888490606913_i64 & (-8093800276250266793_i64);
_73 = (*_28).2 as i16;
(*_56) = _40;
(*_23) = &(*_22).fld3;
_19 = _73 as u16;
_52.0 = [_73,_46,_73,_73,_73,_73,_73,_73];
(*_22).fld1 = (*_10);
(*_10) = (*_22).fld1;
_71 = (*_28).2;
(*_22).fld2 = _64;
(*_56) = _40 + _40;
_44 = (*_22).fld3 > (*_22).fld3;
(*_4) = _49;
_22 = Move(_42.0.fld5);
(*_23) = &_11;
(*_10) = _35;
(*_56) = !_40;
match (*_28).2 {
43030828 => bb40,
_ => bb39
}
}
bb39 = {
_74 = core::ptr::addr_of!((*_43));
_50 = [(-84_i8),(-73_i8),(-36_i8),36_i8,120_i8,14_i8,117_i8];
(*_56) = _40 & _40;
_73 = _46 & _46;
(*_22).fld2 = _2 * _2;
(*_23) = &_11;
(*_22).fld0 = !(-7667680811501092908_i64);
_53.1 = _32;
(*_23) = &(*_22).fld3;
(*_4) = (*_22).fld3 >= (*_22).fld3;
(*_4) = (*_22).fld3 < (*_22).fld3;
(*_10) = (*_22).fld1;
(*_22).fld3 = _11 ^ _11;
Goto(bb31)
}
bb40 = {
(*_10) = _35;
(*_56) = _40 * _40;
_62.0 = _19 << (*_56);
_61 = (*_28).3 as f64;
_29 = _35;
RET = 239_u8 << (*_56);
(*_56) = !_40;
_54 = 1_usize as u16;
(*_4) = (*_56) == (*_56);
_68 = core::ptr::addr_of_mut!((*_51));
_84 = !_31;
_78 = &_53;
Goto(bb41)
}
bb41 = {
Call(_87 = dump_var(Move(_1), Move(_3), Move(_6), Move(_17)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Call(_87 = dump_var(Move(_18), Move(_46), Move(_8), Move(_44)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Call(_87 = dump_var(Move(_35), Move(_54), Move(_21), Move(_84)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_87 = dump_var(Move(_50), Move(_55), Move(_29), Move(_26)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_87 = dump_var(Move(_65), _88, _88, _88), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: bool,mut _2: u32,mut _3: u32,mut _4: bool,mut _5: u32,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: f32,mut _12: bool) -> bool {
mir! {
type RET = bool;
let _13: bool;
let _14: i64;
let _15: isize;
let _16: u8;
let _17: *const Adt21;
let _18: *const char;
let _19: f32;
let _20: u8;
let _21: ();
let _22: ();
{
RET = _2 >= _2;
_13 = _9 > RET;
_3 = _5;
Goto(bb1)
}
bb1 = {
_10 = !RET;
_6 = RET < _9;
_7 = RET < _10;
_13 = _7 > _7;
_13 = _6 ^ _10;
_15 = 106_isize * (-3_isize);
_16 = 86_u8 >> _5;
_11 = 11708_u16 as f32;
Call(_8 = fn9(_12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = 7_usize as f32;
_10 = !_8;
_13 = _7;
_12 = _10;
_6 = _12 >= _12;
_3 = !_2;
_8 = !_6;
_4 = _8 >= RET;
_5 = _2 * _2;
_1 = _6;
Goto(bb3)
}
bb3 = {
_16 = !6_u8;
Goto(bb4)
}
bb4 = {
_8 = _1;
RET = _12 == _1;
_10 = _4;
_11 = _16 as f32;
_1 = !_12;
_11 = (-259317085912433654_i64) as f32;
_8 = _6 >= _4;
_4 = !_8;
_12 = _6;
_3 = !_5;
RET = _6 < _6;
_11 = _15 as f32;
Goto(bb5)
}
bb5 = {
Call(_21 = dump_var(Move(_6), Move(_3), Move(_15), Move(_12)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_21 = dump_var(Move(_5), Move(_4), Move(_7), _22), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool) -> bool {
mir! {
type RET = bool;
let _2: &'static mut [char; 3];
let _3: isize;
let _4: *const Adt51;
let _5: usize;
let _6: &'static mut [i8; 1];
let _7: isize;
let _8: u32;
let _9: ();
let _10: ();
{
_1 = true;
RET = _1 == _1;
RET = _1 ^ _1;
RET = _1 > _1;
_1 = RET != RET;
_3 = 42_isize >> (-4974262485994611776_i64);
_3 = -38_isize;
_1 = RET | RET;
_1 = !RET;
_3 = 9223372036854775807_isize - (-9223372036854775808_isize);
_3 = (-1137267687_i32) as isize;
RET = !_1;
RET = _1;
_1 = _3 > _3;
_3 = 9223372036854775807_isize;
RET = !_1;
RET = _1 & _1;
_1 = RET == RET;
match _3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
9223372036854775807 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_3 = 276381873277366429641888141144693739516_u128 as isize;
RET = !_1;
_3 = (-9223372036854775808_isize) << 15677229447893916939_usize;
RET = _1 | _1;
RET = _1 <= _1;
_1 = !RET;
RET = _1 ^ _1;
_3 = -(-57_isize);
_5 = !9037958216448683791_usize;
_1 = RET & RET;
_3 = 9223372036854775807_isize | 9223372036854775807_isize;
_5 = 176498215728799956472300354123878295722_u128 as usize;
RET = !_1;
_3 = (-9223372036854775808_isize);
_3 = (-2869516659850649632_i64) as isize;
_5 = (-8194336580268468556_i64) as usize;
_7 = _3 * _3;
RET = _1;
_7 = '\u{76fb1}' as isize;
Goto(bb7)
}
bb7 = {
Call(_9 = dump_var(Move(_7), Move(_5), _10, _10), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u128,mut _2: &'static mut bool,mut _3: bool,mut _4: bool,mut _5: f32,mut _6: bool,mut _7: f64) -> bool {
mir! {
type RET = bool;
let _8: *const &'static (isize, u16, i32, u64);
let _9: &'static i64;
let _10: char;
let _11: &'static i64;
let _12: isize;
let _13: i8;
let _14: f64;
let _15: usize;
let _16: f64;
let _17: u64;
let _18: ();
let _19: ();
{
_5 = 61_i8 as f32;
_3 = _4 & _4;
_3 = !_6;
RET = _1 != _1;
_3 = _1 <= _1;
RET = _4 >= _6;
_7 = (-20_isize) as f64;
RET = _4 & _3;
_3 = !RET;
_4 = !RET;
_2 = &mut _4;
_1 = 202070606617848817141539966022441707580_u128 | 270136773836394217218689313035764639849_u128;
_10 = '\u{b2980}';
(*_2) = RET ^ _6;
_7 = (-62514647579145653589205012815373589072_i128) as f64;
(*_2) = _10 < _10;
(*_2) = RET <= _3;
_3 = (*_2) < (*_2);
(*_2) = _3;
Call(RET = fn11(_6, (*_2), _1, Move(_2), (*_2), (*_2)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = !RET;
_2 = &mut RET;
(*_2) = _3 | _3;
_1 = 53663098677782009068689969114605737030_u128 | 225389224420767327666216977678309194114_u128;
(*_2) = !_3;
(*_2) = !_6;
(*_2) = _3 != _6;
(*_2) = _3;
_12 = 9223372036854775807_isize;
(*_2) = _3;
(*_2) = !_3;
_13 = 412051070230923667_i64 as i8;
(*_2) = _3;
_3 = !(*_2);
(*_2) = !_3;
(*_2) = _3 ^ _3;
_12 = (-73_isize);
(*_2) = _3;
(*_2) = _3;
_12 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
(*_2) = !_3;
(*_2) = !_3;
(*_2) = _3;
(*_2) = _6 == _3;
(*_2) = _3;
(*_2) = _3;
Goto(bb2)
}
bb2 = {
Call(_18 = dump_var(Move(_1), Move(_13), Move(_12), _19), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: bool,mut _2: bool,mut _3: u128,mut _4: &'static mut bool,mut _5: bool,mut _6: bool) -> bool {
mir! {
type RET = bool;
let _7: ();
let _8: ();
{
_6 = !_2;
RET = _2 <= _2;
_5 = RET == RET;
RET = _5;
Goto(bb1)
}
bb1 = {
Call(_7 = dump_var(Move(_1), Move(_5), _8, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: &'static mut bool,mut _2: [usize; 8]) -> bool {
mir! {
type RET = bool;
let _3: isize;
let _4: &'static mut [i8; 1];
let _5: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _6: u8;
let _7: [i8; 8];
let _8: *const Adt51;
let _9: isize;
let _10: f64;
let _11: &'static ([i16; 8],);
let _12: f32;
let _13: ([i16; 8],);
let _14: &'static ([i16; 8],);
let _15: char;
let _16: i64;
let _17: i32;
let _18: i128;
let _19: *const f64;
let _20: (f64,);
let _21: f32;
let _22: *const Adt21;
let _23: char;
let _24: *const char;
let _25: [u128; 1];
let _26: [u64; 4];
let _27: f64;
let _28: f64;
let _29: f64;
let _30: u32;
let _31: (u64, f64);
let _32: *mut Adt51;
let _33: &'static mut [char; 3];
let _34: Adt44;
let _35: *mut Adt51;
let _36: Adt18;
let _37: i128;
let _38: Adt51;
let _39: (Adt44, *const &'static (isize, u16, i32, u64));
let _40: [i8; 1];
let _41: (*const Adt21,);
let _42: bool;
let _43: bool;
let _44: *const Adt21;
let _45: usize;
let _46: u16;
let _47: isize;
let _48: u128;
let _49: i64;
let _50: f32;
let _51: f32;
let _52: ();
let _53: ();
{
RET = false | true;
_1 = &mut RET;
Goto(bb1)
}
bb1 = {
(*_1) = true | true;
(*_1) = false & false;
(*_1) = 1777712654_u32 >= 52315646_u32;
(*_1) = false ^ false;
(*_1) = false;
_3 = (-9223372036854775808_isize);
(*_1) = !false;
(*_1) = _3 > _3;
(*_1) = _3 <= _3;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463454151235394913435648 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
(*_1) = !true;
(*_1) = true & true;
(*_1) = false;
(*_1) = !true;
(*_1) = true ^ true;
_5.2.fld1 = '\u{b9f20}';
_5.2.fld3 = 1722515113_u32 - 3523721272_u32;
_6 = !176_u8;
_5.2.fld3 = 8199973500324166624_i64 as u32;
(*_1) = _5.2.fld3 < _5.2.fld3;
(*_1) = !true;
(*_1) = true;
(*_1) = true & false;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
(*_1) = !false;
(*_1) = !false;
(*_1) = !false;
(*_1) = false | true;
Goto(bb7)
}
bb7 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_5.2.fld1 = '\u{91560}';
_5.2.fld1 = '\u{82662}';
_5.2.fld2 = _9 as f32;
_6 = !246_u8;
_5.2.fld1 = '\u{62c69}';
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_5.2.fld4 = (-31427971663584957713431772062228791398_i128) - (-80172224650252786390436925046270199690_i128);
_12 = -_5.2.fld2;
_6 = 5521019725751457807_u64 as u8;
Goto(bb9)
}
bb9 = {
_13.0 = [27907_i16,30177_i16,29209_i16,(-24268_i16),(-1026_i16),8626_i16,16247_i16,14897_i16];
_5.2.fld0 = 4268976968760201846_i64 >> _3;
_9 = _3 & _3;
_5.2.fld0 = (-4980146484210025559_i64);
_5.2 = Adt21 { fld0: 6302733138831818531_i64,fld1: '\u{3d436}',fld2: _12,fld3: 878353464_u32,fld4: 118689690520838173813948723766078463890_i128 };
_5.2.fld3 = (-1709933942_i32) as u32;
_11 = &_13;
_12 = _5.2.fld2;
_3 = -_9;
_5.2.fld3 = 3573146541_u32;
_5.2.fld3 = 1071504805_u32;
_12 = _5.2.fld2;
_3 = !_9;
_6 = 193_u8 & 228_u8;
_15 = _5.2.fld1;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_5.2.fld0 = (-1588259819280251329_i64) & 8324367759290997268_i64;
_5.2 = Adt21 { fld0: 3859498277977897329_i64,fld1: _15,fld2: _12,fld3: 2436323007_u32,fld4: (-56738247284279051184350053812782198268_i128) };
match _5.2.fld0 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
3859498277977897329 => bb18,
_ => bb17
}
}
bb10 = {
_5.2.fld1 = '\u{91560}';
_5.2.fld1 = '\u{82662}';
_5.2.fld2 = _9 as f32;
_6 = !246_u8;
_5.2.fld1 = '\u{62c69}';
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_5.2.fld4 = (-31427971663584957713431772062228791398_i128) - (-80172224650252786390436925046270199690_i128);
_12 = -_5.2.fld2;
_6 = 5521019725751457807_u64 as u8;
Goto(bb9)
}
bb11 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb12 = {
(*_1) = !true;
(*_1) = true & true;
(*_1) = false;
(*_1) = !true;
(*_1) = true ^ true;
_5.2.fld1 = '\u{b9f20}';
_5.2.fld3 = 1722515113_u32 - 3523721272_u32;
_6 = !176_u8;
_5.2.fld3 = 8199973500324166624_i64 as u32;
(*_1) = _5.2.fld3 < _5.2.fld3;
(*_1) = !true;
(*_1) = true;
(*_1) = true & false;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
(*_1) = !false;
(*_1) = !false;
(*_1) = !false;
(*_1) = false | true;
Goto(bb7)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
(*_1) = true | true;
(*_1) = false & false;
(*_1) = 1777712654_u32 >= 52315646_u32;
(*_1) = false ^ false;
(*_1) = false;
_3 = (-9223372036854775808_isize);
(*_1) = !false;
(*_1) = _3 > _3;
(*_1) = _3 <= _3;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463454151235394913435648 => bb6,
_ => bb5
}
}
bb18 = {
_5.2.fld2 = _12 - _12;
_5.2.fld2 = _12 * _12;
_5.2.fld2 = _6 as f32;
_12 = _5.2.fld2 * _5.2.fld2;
_5.2 = Adt21 { fld0: 4871252858419179599_i64,fld1: _15,fld2: _12,fld3: 3235399460_u32,fld4: (-30885975310729797500261612875377334419_i128) };
_5.2 = Adt21 { fld0: (-704038623719753788_i64),fld1: _15,fld2: _12,fld3: 865216756_u32,fld4: (-32469208996937726258879588968772593325_i128) };
_6 = 251_u8;
_5.2.fld1 = _15;
Goto(bb19)
}
bb19 = {
_5.2.fld0 = (-6425301998550185599_i64) | (-8955293964420557333_i64);
_5.2.fld4 = !81805468929441268431809866973854267792_i128;
_5.2.fld1 = _15;
_9 = _3 + _3;
_6 = 198_u8 - 226_u8;
_12 = _5.2.fld2;
_5.2 = Adt21 { fld0: (-8492550369563530025_i64),fld1: _15,fld2: _12,fld3: 2988393241_u32,fld4: (-39794532583120197177149119457152184863_i128) };
_5.2.fld4 = (-21044909937517485424795633312567177637_i128) + (-65700181575906477224414708545364884302_i128);
_5.2 = Adt21 { fld0: (-4777783900703774153_i64),fld1: _15,fld2: _12,fld3: 2622077546_u32,fld4: 42817485245942170072729406256011491226_i128 };
_2 = [3_usize,5070683782878150084_usize,6_usize,0_usize,16479895762378400512_usize,8174017713862193632_usize,3224593325135567315_usize,11903511350898005719_usize];
_3 = _9 + _9;
_14 = Move(_11);
_16 = _5.2.fld0 << _5.2.fld4;
_5.2.fld1 = _15;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_13.0 = [(-2585_i16),26571_i16,19483_i16,(-26465_i16),1674_i16,20209_i16,30327_i16,(-12469_i16)];
_19 = core::ptr::addr_of!(_10);
(*_19) = _6 as f64;
(*_19) = _16 as f64;
(*_19) = (-18_i8) as f64;
Goto(bb20)
}
bb20 = {
_11 = &_13;
(*_19) = 14360_i16 as f64;
(*_19) = 18432103489053851612_u64 as f64;
_18 = 96_i8 as i128;
(*_19) = _12 as f64;
(*_19) = _5.2.fld3 as f64;
_7 = [52_i8,43_i8,(-78_i8),111_i8,126_i8,54_i8,(-100_i8),(-47_i8)];
_6 = 196_u8;
_12 = _5.2.fld2;
(*_19) = 20340_u16 as f64;
(*_19) = _16 as f64;
(*_19) = 11801696123804547422_usize as f64;
_16 = _5.2.fld0 + _5.2.fld0;
_9 = _3 & _3;
(*_19) = _5.2.fld3 as f64;
(*_19) = _6 as f64;
_5.2.fld4 = true as i128;
_12 = 31797_i16 as f32;
_14 = &(*_11);
match _5.2.fld0 {
0 => bb9,
1 => bb21,
340282366920938463458596823531064437303 => bb23,
_ => bb22
}
}
bb21 = {
_5.2.fld0 = (-6425301998550185599_i64) | (-8955293964420557333_i64);
_5.2.fld4 = !81805468929441268431809866973854267792_i128;
_5.2.fld1 = _15;
_9 = _3 + _3;
_6 = 198_u8 - 226_u8;
_12 = _5.2.fld2;
_5.2 = Adt21 { fld0: (-8492550369563530025_i64),fld1: _15,fld2: _12,fld3: 2988393241_u32,fld4: (-39794532583120197177149119457152184863_i128) };
_5.2.fld4 = (-21044909937517485424795633312567177637_i128) + (-65700181575906477224414708545364884302_i128);
_5.2 = Adt21 { fld0: (-4777783900703774153_i64),fld1: _15,fld2: _12,fld3: 2622077546_u32,fld4: 42817485245942170072729406256011491226_i128 };
_2 = [3_usize,5070683782878150084_usize,6_usize,0_usize,16479895762378400512_usize,8174017713862193632_usize,3224593325135567315_usize,11903511350898005719_usize];
_3 = _9 + _9;
_14 = Move(_11);
_16 = _5.2.fld0 << _5.2.fld4;
_5.2.fld1 = _15;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_13.0 = [(-2585_i16),26571_i16,19483_i16,(-26465_i16),1674_i16,20209_i16,30327_i16,(-12469_i16)];
_19 = core::ptr::addr_of!(_10);
(*_19) = _6 as f64;
(*_19) = _16 as f64;
(*_19) = (-18_i8) as f64;
Goto(bb20)
}
bb22 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb23 = {
_11 = Move(_14);
_12 = -_5.2.fld2;
_19 = core::ptr::addr_of!((*_19));
match _5.2.fld3 {
0 => bb19,
1 => bb15,
2 => bb21,
3 => bb4,
4 => bb14,
5 => bb6,
2622077546 => bb25,
_ => bb24
}
}
bb24 = {
(*_1) = !true;
(*_1) = true & true;
(*_1) = false;
(*_1) = !true;
(*_1) = true ^ true;
_5.2.fld1 = '\u{b9f20}';
_5.2.fld3 = 1722515113_u32 - 3523721272_u32;
_6 = !176_u8;
_5.2.fld3 = 8199973500324166624_i64 as u32;
(*_1) = _5.2.fld3 < _5.2.fld3;
(*_1) = !true;
(*_1) = true;
(*_1) = true & false;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
(*_1) = !false;
(*_1) = !false;
(*_1) = !false;
(*_1) = false | true;
Goto(bb7)
}
bb25 = {
_17 = 1736874561_i32 ^ 2053731581_i32;
(*_19) = _18 as f64;
_6 = 6_u8 << _5.2.fld3;
(*_19) = _18 as f64;
(*_19) = 56_i8 as f64;
_5.2.fld4 = _18 & _18;
_3 = !_9;
Goto(bb26)
}
bb26 = {
_19 = core::ptr::addr_of!((*_19));
(*_19) = 1892704008027691572_u64 as f64;
(*_19) = _6 as f64;
_21 = _5.2.fld2;
_20 = ((*_19),);
_24 = core::ptr::addr_of!(_23);
_12 = -_5.2.fld2;
(*_19) = 1_usize as f64;
(*_19) = _20.0 + _20.0;
(*_24) = _15;
_20 = ((*_19),);
match _5.2.fld3 {
0 => bb9,
1 => bb19,
2 => bb15,
3 => bb21,
4 => bb27,
5 => bb28,
6 => bb29,
2622077546 => bb31,
_ => bb30
}
}
bb27 = {
Return()
}
bb28 = {
_5.2.fld0 = (-6425301998550185599_i64) | (-8955293964420557333_i64);
_5.2.fld4 = !81805468929441268431809866973854267792_i128;
_5.2.fld1 = _15;
_9 = _3 + _3;
_6 = 198_u8 - 226_u8;
_12 = _5.2.fld2;
_5.2 = Adt21 { fld0: (-8492550369563530025_i64),fld1: _15,fld2: _12,fld3: 2988393241_u32,fld4: (-39794532583120197177149119457152184863_i128) };
_5.2.fld4 = (-21044909937517485424795633312567177637_i128) + (-65700181575906477224414708545364884302_i128);
_5.2 = Adt21 { fld0: (-4777783900703774153_i64),fld1: _15,fld2: _12,fld3: 2622077546_u32,fld4: 42817485245942170072729406256011491226_i128 };
_2 = [3_usize,5070683782878150084_usize,6_usize,0_usize,16479895762378400512_usize,8174017713862193632_usize,3224593325135567315_usize,11903511350898005719_usize];
_3 = _9 + _9;
_14 = Move(_11);
_16 = _5.2.fld0 << _5.2.fld4;
_5.2.fld1 = _15;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
_13.0 = [(-2585_i16),26571_i16,19483_i16,(-26465_i16),1674_i16,20209_i16,30327_i16,(-12469_i16)];
_19 = core::ptr::addr_of!(_10);
(*_19) = _6 as f64;
(*_19) = _16 as f64;
(*_19) = (-18_i8) as f64;
Goto(bb20)
}
bb29 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb30 = {
(*_1) = true | true;
(*_1) = false & false;
(*_1) = 1777712654_u32 >= 52315646_u32;
(*_1) = false ^ false;
(*_1) = false;
_3 = (-9223372036854775808_isize);
(*_1) = !false;
(*_1) = _3 > _3;
(*_1) = _3 <= _3;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463454151235394913435648 => bb6,
_ => bb5
}
}
bb31 = {
(*_24) = _5.2.fld1;
_28 = 1932884545848781045_u64 as f64;
_23 = _5.2.fld1;
(*_24) = _15;
_14 = &_13;
_19 = core::ptr::addr_of!((*_19));
(*_19) = -_20.0;
_26 = [16717736396626776485_u64,2154464807423043655_u64,4878337403058269055_u64,10528793612827839436_u64];
(*_19) = 22589_i16 as f64;
Goto(bb32)
}
bb32 = {
(*_19) = _28;
(*_24) = _15;
_30 = _5.2.fld3 << _5.2.fld3;
(*_24) = _15;
(*_19) = _20.0;
(*_24) = _15;
(*_19) = _5.2.fld0 as f64;
(*_24) = _15;
_27 = -(*_19);
(*_19) = -_20.0;
(*_24) = _15;
_12 = _21 + _5.2.fld2;
(*_24) = _5.2.fld1;
(*_24) = _15;
(*_24) = _15;
(*_24) = _15;
_18 = _5.2.fld4 >> _5.2.fld0;
(*_19) = _20.0 * _27;
_20.0 = (*_19) + (*_19);
(*_19) = _28;
(*_19) = _20.0 - _20.0;
_20 = ((*_19),);
_24 = core::ptr::addr_of!((*_24));
match _5.2.fld0 {
340282366920938463458596823531064437303 => bb33,
_ => bb2
}
}
bb33 = {
(*_19) = -_20.0;
(*_19) = _20.0 * _20.0;
_25 = [336983454181448753063813973470978411308_u128];
_27 = -(*_19);
(*_19) = 10209_u16 as f64;
_19 = core::ptr::addr_of!((*_19));
match _5.2.fld0 {
0 => bb16,
1 => bb32,
340282366920938463458596823531064437303 => bb34,
_ => bb7
}
}
bb34 = {
_5.2.fld1 = (*_24);
_20 = (_27,);
(*_19) = _20.0;
_31.0 = 9576671034434604136_u64;
(*_24) = _5.2.fld1;
(*_19) = -_20.0;
_20.0 = _12 as f64;
_7 = [86_i8,(-31_i8),(-83_i8),(-24_i8),107_i8,(-122_i8),63_i8,113_i8];
(*_19) = _27;
(*_19) = _27;
(*_19) = _27;
_27 = (*_19);
_31 = (15970555446882114906_u64, (*_19));
_30 = _5.2.fld3 & _5.2.fld3;
_26 = [_31.0,_31.0,_31.0,_31.0];
_8 = core::ptr::addr_of!(_38);
_37 = (-7_i8) as i128;
(*_24) = _15;
(*_24) = _5.2.fld1;
_36 = Adt18::Variant1 { fld0: _16,fld1: _5.2.fld2,fld2: _17,fld3: 111_i8 };
_5.2.fld0 = true as i64;
match _31.0 {
0 => bb30,
1 => bb23,
2 => bb35,
3 => bb36,
4 => bb37,
5 => bb38,
15970555446882114906 => bb40,
_ => bb39
}
}
bb35 = {
(*_1) = true | true;
(*_1) = false & false;
(*_1) = 1777712654_u32 >= 52315646_u32;
(*_1) = false ^ false;
(*_1) = false;
_3 = (-9223372036854775808_isize);
(*_1) = !false;
(*_1) = _3 > _3;
(*_1) = _3 <= _3;
match _3 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463454151235394913435648 => bb6,
_ => bb5
}
}
bb36 = {
Return()
}
bb37 = {
_19 = core::ptr::addr_of!((*_19));
(*_19) = 1892704008027691572_u64 as f64;
(*_19) = _6 as f64;
_21 = _5.2.fld2;
_20 = ((*_19),);
_24 = core::ptr::addr_of!(_23);
_12 = -_5.2.fld2;
(*_19) = 1_usize as f64;
(*_19) = _20.0 + _20.0;
(*_24) = _15;
_20 = ((*_19),);
match _5.2.fld3 {
0 => bb9,
1 => bb19,
2 => bb15,
3 => bb21,
4 => bb27,
5 => bb28,
6 => bb29,
2622077546 => bb31,
_ => bb30
}
}
bb38 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb39 = {
_17 = 1736874561_i32 ^ 2053731581_i32;
(*_19) = _18 as f64;
_6 = 6_u8 << _5.2.fld3;
(*_19) = _18 as f64;
(*_19) = 56_i8 as f64;
_5.2.fld4 = _18 & _18;
_3 = !_9;
Goto(bb26)
}
bb40 = {
place!(Field::<i64>(Variant(_36, 1), 0)) = _16 + _16;
_32 = core::ptr::addr_of_mut!((*_8));
(*_24) = _15;
(*_32) = Adt51::Variant1 { fld0: _20,fld1: (*_24),fld2: _31,fld3: 89_i8 };
place!(Field::<(f64,)>(Variant((*_32), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_8), 1), 2).1 * (*_19);
place!(Field::<(f64,)>(Variant((*_8), 1), 0)).0 = _21 as f64;
place!(Field::<(u64, f64)>(Variant((*_32), 1), 2)).0 = _31.0 * _31.0;
_25 = [53316934471111724438670473313787948926_u128];
Goto(bb41)
}
bb41 = {
place!(Field::<(u64, f64)>(Variant(_38, 1), 2)) = (_31.0, (*_19));
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).0 = !_31.0;
place!(Field::<i8>(Variant((*_32), 1), 3)) = 9_i8 << Field::<(u64, f64)>(Variant((*_8), 1), 2).0;
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).0 = _31.0 + _31.0;
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)) = (_31.0, Field::<(f64,)>(Variant((*_8), 1), 0).0);
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).0 = !_31.0;
place!(Field::<f32>(Variant(_36, 1), 1)) = _12;
place!(Field::<char>(Variant((*_32), 1), 1)) = (*_24);
place!(Field::<i8>(Variant(_38, 1), 3)) = 56_i8 * (-38_i8);
place!(Field::<char>(Variant((*_32), 1), 1)) = (*_24);
place!(Field::<i32>(Variant(_36, 1), 2)) = _17 - _17;
_26 = [Field::<(u64, f64)>(Variant((*_8), 1), 2).0,Field::<(u64, f64)>(Variant((*_8), 1), 2).0,Field::<(u64, f64)>(Variant((*_8), 1), 2).0,Field::<(u64, f64)>(Variant((*_8), 1), 2).0];
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).0 = _16 as u64;
(*_8) = Adt51::Variant1 { fld0: _20,fld1: (*_24),fld2: _31,fld3: (-122_i8) };
place!(Field::<(f64,)>(Variant((*_8), 1), 0)).0 = (*_19) + (*_19);
place!(Field::<char>(Variant((*_8), 1), 1)) = (*_24);
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)) = _31;
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).1 = (*_19);
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)) = (_31.0, (*_19));
Goto(bb42)
}
bb42 = {
(*_24) = Field::<char>(Variant(_38, 1), 1);
match Field::<(u64, f64)>(Variant((*_8), 1), 2).0 {
0 => bb16,
1 => bb43,
2 => bb44,
3 => bb45,
4 => bb46,
15970555446882114906 => bb48,
_ => bb47
}
}
bb43 = {
Return()
}
bb44 = {
(*_19) = -_20.0;
(*_19) = _20.0 * _20.0;
_25 = [336983454181448753063813973470978411308_u128];
_27 = -(*_19);
(*_19) = 10209_u16 as f64;
_19 = core::ptr::addr_of!((*_19));
match _5.2.fld0 {
0 => bb16,
1 => bb32,
340282366920938463458596823531064437303 => bb34,
_ => bb7
}
}
bb45 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb46 = {
(*_1) = !true;
(*_1) = _5.2.fld1 == _5.2.fld1;
(*_1) = _5.2.fld1 >= _5.2.fld1;
(*_1) = true;
_5.2.fld0 = (-98_i8) as i64;
(*_1) = _3 <= _3;
_7 = [61_i8,63_i8,71_i8,27_i8,108_i8,87_i8,(-10_i8),93_i8];
_5.2.fld1 = '\u{100a56}';
_9 = !_3;
(*_1) = false;
(*_1) = true;
(*_1) = true & true;
_3 = 8153711051017910244_u64 as isize;
(*_1) = !true;
_9 = -_3;
(*_1) = true;
(*_1) = !true;
Call(_10 = fn13(Move(_1), _2, _5.2.fld3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb47 = {
(*_1) = !true;
(*_1) = true & true;
(*_1) = false;
(*_1) = !true;
(*_1) = true ^ true;
_5.2.fld1 = '\u{b9f20}';
_5.2.fld3 = 1722515113_u32 - 3523721272_u32;
_6 = !176_u8;
_5.2.fld3 = 8199973500324166624_i64 as u32;
(*_1) = _5.2.fld3 < _5.2.fld3;
(*_1) = !true;
(*_1) = true;
(*_1) = true & false;
_5.0 = [_5.2.fld3,_5.2.fld3,_5.2.fld3];
(*_1) = !false;
(*_1) = !false;
(*_1) = !false;
(*_1) = false | true;
Goto(bb7)
}
bb48 = {
(*_19) = Field::<(u64, f64)>(Variant((*_8), 1), 2).1 + Field::<(u64, f64)>(Variant((*_8), 1), 2).1;
place!(Field::<char>(Variant((*_8), 1), 1)) = (*_24);
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)) = _31;
place!(Field::<char>(Variant((*_8), 1), 1)) = (*_24);
(*_19) = Field::<(f64,)>(Variant((*_8), 1), 0).0;
_28 = (-73_i8) as f64;
place!(Field::<i8>(Variant(_38, 1), 3)) = _12 as i8;
Goto(bb49)
}
bb49 = {
place!(Field::<i8>(Variant(_36, 1), 3)) = -Field::<i8>(Variant((*_8), 1), 3);
place!(Field::<i8>(Variant((*_8), 1), 3)) = Field::<i8>(Variant(_36, 1), 3) ^ Field::<i8>(Variant(_36, 1), 3);
place!(Field::<(u64, f64)>(Variant(_38, 1), 2)).0 = _31.0 & _31.0;
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).0 = _31.0;
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)) = _31;
(*_19) = -Field::<(f64,)>(Variant((*_8), 1), 0).0;
(*_24) = Field::<char>(Variant((*_8), 1), 1);
(*_19) = -_27;
place!(Field::<(f64,)>(Variant((*_8), 1), 0)) = ((*_19),);
(*_19) = Field::<(f64,)>(Variant((*_8), 1), 0).0;
(*_24) = Field::<char>(Variant((*_8), 1), 1);
place!(Field::<(f64,)>(Variant((*_8), 1), 0)).0 = -(*_19);
place!(Field::<(u64, f64)>(Variant((*_8), 1), 2)).1 = -(*_19);
_40 = [Field::<i8>(Variant((*_8), 1), 3)];
place!(Field::<(f64,)>(Variant((*_8), 1), 0)) = (Field::<(u64, f64)>(Variant(_38, 1), 2).1,);
_27 = _30 as f64;
place!(Field::<char>(Variant((*_8), 1), 1)) = (*_24);
Goto(bb50)
}
bb50 = {
Call(_52 = dump_var(Move(_23), Move(_40), Move(_6), Move(_30)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_52 = dump_var(Move(_16), Move(_15), Move(_26), Move(_9)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: &'static mut bool,mut _2: [usize; 8],mut _3: u32,mut _4: [i8; 8]) -> f64 {
mir! {
type RET = f64;
let _5: *const Adt51;
let _6: char;
let _7: Adt37;
let _8: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _9: isize;
let _10: (*const Adt21,);
let _11: char;
let _12: i8;
let _13: bool;
let _14: isize;
let _15: *const char;
let _16: char;
let _17: ([bool; 5],);
let _18: f32;
let _19: f64;
let _20: i8;
let _21: isize;
let _22: char;
let _23: u32;
let _24: *mut Adt51;
let _25: char;
let _26: char;
let _27: isize;
let _28: &'static ([i16; 8],);
let _29: *mut &'static mut [i8; 1];
let _30: u16;
let _31: i64;
let _32: &'static mut [char; 3];
let _33: isize;
let _34: *const i16;
let _35: u32;
let _36: char;
let _37: [i32; 7];
let _38: f64;
let _39: isize;
let _40: &'static [u8; 3];
let _41: Adt18;
let _42: [u8; 3];
let _43: f64;
let _44: isize;
let _45: &'static mut i64;
let _46: [u128; 5];
let _47: [i16; 8];
let _48: &'static mut i64;
let _49: u64;
let _50: char;
let _51: i64;
let _52: isize;
let _53: isize;
let _54: isize;
let _55: (Adt56, [i8; 7], Adt22);
let _56: (f64,);
let _57: Adt37;
let _58: [u64; 4];
let _59: *const i16;
let _60: ();
let _61: ();
{
RET = 1_usize as f64;
Goto(bb1)
}
bb1 = {
_3 = 1949486197_u32;
_4 = [101_i8,(-68_i8),(-2_i8),(-38_i8),(-5_i8),(-80_i8),107_i8,3_i8];
RET = 52585_u16 as f64;
_2 = [1_usize,0_usize,2776636054519302527_usize,18359237392927297751_usize,7_usize,7556519868897932568_usize,14739688976554143280_usize,5_usize];
_2 = [2_usize,5220350653370179706_usize,7_usize,0_usize,0_usize,802313726944523325_usize,14187981291209032134_usize,14351265044909411059_usize];
_2 = [5129330447489535071_usize,0_usize,13920587623924513571_usize,10127024182497353837_usize,5_usize,13335344189961582917_usize,7_usize,7_usize];
_2 = [10655232571342558348_usize,7095900706162416156_usize,1_usize,10548166795172550443_usize,3633903461276628802_usize,5_usize,5_usize,14361393434132821405_usize];
_4 = [124_i8,(-70_i8),(-43_i8),81_i8,81_i8,101_i8,90_i8,(-60_i8)];
_2 = [1_usize,5_usize,2408582938230177402_usize,0_usize,16312818666809945986_usize,2_usize,14743446489243812001_usize,2_usize];
_2 = [5_usize,5_usize,3141640464029697335_usize,17618025972095640483_usize,10254214702280890054_usize,3_usize,5658653977472000053_usize,2_usize];
RET = _3 as f64;
_6 = '\u{c0b14}';
_4 = [107_i8,77_i8,34_i8,(-59_i8),2_i8,77_i8,(-20_i8),(-64_i8)];
_3 = 3867034579_u32 - 2426503495_u32;
_4 = [101_i8,(-33_i8),(-74_i8),(-37_i8),(-69_i8),(-61_i8),(-9_i8),(-18_i8)];
_3 = 4247227389_u32 - 2457512149_u32;
_3 = !1022942224_u32;
_3 = 2079381338_u32;
_7 = Adt37::Variant1 { fld0: 181977965841869547106660829789361608173_u128,fld1: 184_u8,fld2: 9223372036854775807_isize,fld3: (-63300562_i32) };
Goto(bb2)
}
bb2 = {
_2 = [5_usize,6113235750501957807_usize,17931320465565536418_usize,3140370723968670811_usize,2_usize,15985991886423807089_usize,7_usize,2778562235981487663_usize];
_6 = '\u{59b86}';
_7 = Adt37::Variant1 { fld0: 147599311037021160262525863052726624649_u128,fld1: 226_u8,fld2: (-9223372036854775808_isize),fld3: (-974456265_i32) };
_9 = 3621951467281359812_usize as isize;
_4 = [69_i8,27_i8,(-120_i8),(-61_i8),80_i8,91_i8,(-51_i8),118_i8];
_4 = [9_i8,27_i8,21_i8,80_i8,101_i8,(-121_i8),98_i8,(-49_i8)];
Call(_7 = fn14(_6, RET, _3, _3, _4, _9, _2, _2, _9, _3, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_9 = -Field::<isize>(Variant(_7, 1), 2);
place!(Field::<u128>(Variant(_7, 1), 0)) = 337056196197209813459190300689373420703_u128;
_3 = 2675665862_u32 + 1748676459_u32;
place!(Field::<i32>(Variant(_7, 1), 3)) = (-1698072989_i32) >> Field::<u8>(Variant(_7, 1), 1);
place!(Field::<i32>(Variant(_7, 1), 3)) = -742197717_i32;
place!(Field::<i32>(Variant(_7, 1), 3)) = _3 as i32;
_3 = 1338838537_u32;
_7 = Adt37::Variant1 { fld0: 17961357746165245137780917560867230102_u128,fld1: 187_u8,fld2: _9,fld3: 348265869_i32 };
place!(Field::<u128>(Variant(_7, 1), 0)) = _6 as u128;
RET = Field::<u128>(Variant(_7, 1), 0) as f64;
place!(Field::<u128>(Variant(_7, 1), 0)) = (-109_i8) as u128;
place!(Field::<u8>(Variant(_7, 1), 1)) = !156_u8;
place!(Field::<isize>(Variant(_7, 1), 2)) = _9;
_9 = Field::<isize>(Variant(_7, 1), 2) - Field::<isize>(Variant(_7, 1), 2);
Goto(bb4)
}
bb4 = {
_2 = [16538889997745033448_usize,1_usize,1034469361008453754_usize,8528191599409423596_usize,4689896439244269149_usize,7_usize,8730492543429425846_usize,5_usize];
_6 = '\u{64462}';
place!(Field::<i32>(Variant(_7, 1), 3)) = false as i32;
RET = 7_usize as f64;
place!(Field::<i32>(Variant(_7, 1), 3)) = -(-2121209574_i32);
place!(Field::<isize>(Variant(_7, 1), 2)) = 61038_u16 as isize;
place!(Field::<u8>(Variant(_7, 1), 1)) = 32_u8 ^ 186_u8;
_6 = '\u{f5805}';
place!(Field::<u8>(Variant(_7, 1), 1)) = Field::<i32>(Variant(_7, 1), 3) as u8;
Goto(bb5)
}
bb5 = {
_3 = 949650261_u32 | 1900622088_u32;
place!(Field::<isize>(Variant(_7, 1), 2)) = !_9;
_9 = 2_usize as isize;
place!(Field::<i32>(Variant(_7, 1), 3)) = 213681481_i32;
_4 = [(-69_i8),19_i8,11_i8,98_i8,(-61_i8),115_i8,(-55_i8),4_i8];
RET = (-81606457232771437448150650975280231468_i128) as f64;
place!(Field::<i32>(Variant(_7, 1), 3)) = 632416177_i32;
place!(Field::<u128>(Variant(_7, 1), 0)) = !186401170798652045478345124454806658696_u128;
_6 = '\u{6d919}';
_11 = _6;
RET = 17709_i16 as f64;
_11 = _6;
Goto(bb6)
}
bb6 = {
_2 = [5_usize,15288414003638752955_usize,585018399400758830_usize,16219822667614634974_usize,5_usize,6_usize,6_usize,5179277065266971794_usize];
_11 = _6;
place!(Field::<i32>(Variant(_7, 1), 3)) = (-251053956300973309_i64) as i32;
RET = _9 as f64;
_2 = [6_usize,7_usize,1319754472251764415_usize,7_usize,7_usize,18226083783853287585_usize,8100553328363534314_usize,14962583807359119097_usize];
place!(Field::<u128>(Variant(_7, 1), 0)) = 318947046032916925768027724963647316136_u128;
_11 = _6;
RET = Field::<u8>(Variant(_7, 1), 1) as f64;
_11 = _6;
_11 = _6;
_6 = _11;
place!(Field::<u128>(Variant(_7, 1), 0)) = (-3573333545308678962_i64) as u128;
_14 = !Field::<isize>(Variant(_7, 1), 2);
RET = Field::<u8>(Variant(_7, 1), 1) as f64;
_13 = false;
_9 = Field::<isize>(Variant(_7, 1), 2);
Goto(bb7)
}
bb7 = {
_2 = [2_usize,4_usize,14810294003140037504_usize,4849229912208416_usize,4_usize,15066155141951167636_usize,5_usize,10243937433552349458_usize];
place!(Field::<i32>(Variant(_7, 1), 3)) = _6 as i32;
_9 = Field::<isize>(Variant(_7, 1), 2);
_1 = &mut _13;
Goto(bb8)
}
bb8 = {
place!(Field::<u128>(Variant(_7, 1), 0)) = !38184522092800646891591025480725923013_u128;
place!(Field::<u128>(Variant(_7, 1), 0)) = !65456007555645634696621608330928694530_u128;
_15 = core::ptr::addr_of!(_11);
(*_15) = _6;
Goto(bb9)
}
bb9 = {
(*_15) = _6;
(*_15) = _6;
(*_15) = _6;
(*_15) = _6;
_4 = [86_i8,(-57_i8),69_i8,53_i8,21_i8,(-89_i8),(-121_i8),(-120_i8)];
_3 = (-6480602162778145101_i64) as u32;
_16 = (*_15);
_14 = Field::<isize>(Variant(_7, 1), 2) >> _9;
(*_15) = _16;
_3 = !944164551_u32;
place!(Field::<u8>(Variant(_7, 1), 1)) = !170_u8;
(*_1) = !true;
_12 = 13220439101034061999_u64 as i8;
(*_15) = _16;
(*_1) = Field::<u128>(Variant(_7, 1), 0) >= Field::<u128>(Variant(_7, 1), 0);
(*_15) = _16;
_12 = 102_i8 & (-100_i8);
(*_15) = _6;
(*_15) = _6;
_2 = [5603462471563945646_usize,1_usize,6_usize,18021854035005082426_usize,1_usize,4_usize,6_usize,4_usize];
(*_15) = _6;
_11 = _16;
Goto(bb10)
}
bb10 = {
(*_1) = (*_15) > (*_15);
(*_1) = _12 < _12;
(*_1) = _14 < Field::<isize>(Variant(_7, 1), 2);
(*_15) = _6;
(*_15) = _16;
(*_15) = _16;
_20 = _12;
_3 = !3072050314_u32;
(*_1) = _20 == _20;
_11 = _6;
_15 = core::ptr::addr_of!((*_15));
(*_15) = _16;
(*_1) = true & false;
(*_1) = false;
(*_1) = !true;
(*_15) = _16;
_16 = (*_15);
RET = Field::<i32>(Variant(_7, 1), 3) as f64;
_25 = (*_15);
(*_15) = _16;
(*_15) = _25;
Call(_14 = core::intrinsics::transmute(Field::<isize>(Variant(_7, 1), 2)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_19 = RET + RET;
_23 = _3 & _3;
(*_15) = _25;
_22 = (*_15);
_9 = -_14;
(*_1) = !false;
(*_1) = true;
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
_18 = 14498_i16 as f32;
(*_15) = _6;
(*_15) = _6;
_27 = 5562103473855476833_i64 as isize;
place!(Field::<u8>(Variant(_7, 1), 1)) = !138_u8;
(*_1) = _9 > _14;
(*_1) = !false;
(*_15) = _22;
Goto(bb12)
}
bb12 = {
_21 = Field::<isize>(Variant(_7, 1), 2) - Field::<isize>(Variant(_7, 1), 2);
(*_1) = !false;
(*_15) = _6;
_21 = -_9;
_14 = _9;
_26 = _11;
(*_1) = false;
(*_15) = _25;
_18 = 64687_u16 as f32;
(*_1) = false;
(*_15) = _25;
_19 = RET * RET;
place!(Field::<u128>(Variant(_7, 1), 0)) = 136849244065976175006068929685296919823_u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = -_14;
(*_15) = _26;
_15 = core::ptr::addr_of!((*_15));
_26 = _25;
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
_30 = 45492_u16 & 63346_u16;
(*_1) = (*_15) == (*_15);
(*_1) = (*_15) != (*_15);
_16 = (*_15);
_16 = _22;
place!(Field::<u8>(Variant(_7, 1), 1)) = 9161411081657375786_i64 as u8;
(*_1) = false;
(*_15) = _25;
(*_15) = _16;
match Field::<u128>(Variant(_7, 1), 0) {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
6 => bb19,
136849244065976175006068929685296919823 => bb21,
_ => bb20
}
}
bb13 = {
_2 = [5_usize,6113235750501957807_usize,17931320465565536418_usize,3140370723968670811_usize,2_usize,15985991886423807089_usize,7_usize,2778562235981487663_usize];
_6 = '\u{59b86}';
_7 = Adt37::Variant1 { fld0: 147599311037021160262525863052726624649_u128,fld1: 226_u8,fld2: (-9223372036854775808_isize),fld3: (-974456265_i32) };
_9 = 3621951467281359812_usize as isize;
_4 = [69_i8,27_i8,(-120_i8),(-61_i8),80_i8,91_i8,(-51_i8),118_i8];
_4 = [9_i8,27_i8,21_i8,80_i8,101_i8,(-121_i8),98_i8,(-49_i8)];
Call(_7 = fn14(_6, RET, _3, _3, _4, _9, _2, _2, _9, _3, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
(*_1) = (*_15) > (*_15);
(*_1) = _12 < _12;
(*_1) = _14 < Field::<isize>(Variant(_7, 1), 2);
(*_15) = _6;
(*_15) = _16;
(*_15) = _16;
_20 = _12;
_3 = !3072050314_u32;
(*_1) = _20 == _20;
_11 = _6;
_15 = core::ptr::addr_of!((*_15));
(*_15) = _16;
(*_1) = true & false;
(*_1) = false;
(*_1) = !true;
(*_15) = _16;
_16 = (*_15);
RET = Field::<i32>(Variant(_7, 1), 3) as f64;
_25 = (*_15);
(*_15) = _16;
(*_15) = _25;
Call(_14 = core::intrinsics::transmute(Field::<isize>(Variant(_7, 1), 2)), ReturnTo(bb11), UnwindUnreachable())
}
bb15 = {
(*_15) = _6;
(*_15) = _6;
(*_15) = _6;
(*_15) = _6;
_4 = [86_i8,(-57_i8),69_i8,53_i8,21_i8,(-89_i8),(-121_i8),(-120_i8)];
_3 = (-6480602162778145101_i64) as u32;
_16 = (*_15);
_14 = Field::<isize>(Variant(_7, 1), 2) >> _9;
(*_15) = _16;
_3 = !944164551_u32;
place!(Field::<u8>(Variant(_7, 1), 1)) = !170_u8;
(*_1) = !true;
_12 = 13220439101034061999_u64 as i8;
(*_15) = _16;
(*_1) = Field::<u128>(Variant(_7, 1), 0) >= Field::<u128>(Variant(_7, 1), 0);
(*_15) = _16;
_12 = 102_i8 & (-100_i8);
(*_15) = _6;
(*_15) = _6;
_2 = [5603462471563945646_usize,1_usize,6_usize,18021854035005082426_usize,1_usize,4_usize,6_usize,4_usize];
(*_15) = _6;
_11 = _16;
Goto(bb10)
}
bb16 = {
_9 = -Field::<isize>(Variant(_7, 1), 2);
place!(Field::<u128>(Variant(_7, 1), 0)) = 337056196197209813459190300689373420703_u128;
_3 = 2675665862_u32 + 1748676459_u32;
place!(Field::<i32>(Variant(_7, 1), 3)) = (-1698072989_i32) >> Field::<u8>(Variant(_7, 1), 1);
place!(Field::<i32>(Variant(_7, 1), 3)) = -742197717_i32;
place!(Field::<i32>(Variant(_7, 1), 3)) = _3 as i32;
_3 = 1338838537_u32;
_7 = Adt37::Variant1 { fld0: 17961357746165245137780917560867230102_u128,fld1: 187_u8,fld2: _9,fld3: 348265869_i32 };
place!(Field::<u128>(Variant(_7, 1), 0)) = _6 as u128;
RET = Field::<u128>(Variant(_7, 1), 0) as f64;
place!(Field::<u128>(Variant(_7, 1), 0)) = (-109_i8) as u128;
place!(Field::<u8>(Variant(_7, 1), 1)) = !156_u8;
place!(Field::<isize>(Variant(_7, 1), 2)) = _9;
_9 = Field::<isize>(Variant(_7, 1), 2) - Field::<isize>(Variant(_7, 1), 2);
Goto(bb4)
}
bb17 = {
_2 = [2_usize,4_usize,14810294003140037504_usize,4849229912208416_usize,4_usize,15066155141951167636_usize,5_usize,10243937433552349458_usize];
place!(Field::<i32>(Variant(_7, 1), 3)) = _6 as i32;
_9 = Field::<isize>(Variant(_7, 1), 2);
_1 = &mut _13;
Goto(bb8)
}
bb18 = {
_2 = [5_usize,15288414003638752955_usize,585018399400758830_usize,16219822667614634974_usize,5_usize,6_usize,6_usize,5179277065266971794_usize];
_11 = _6;
place!(Field::<i32>(Variant(_7, 1), 3)) = (-251053956300973309_i64) as i32;
RET = _9 as f64;
_2 = [6_usize,7_usize,1319754472251764415_usize,7_usize,7_usize,18226083783853287585_usize,8100553328363534314_usize,14962583807359119097_usize];
place!(Field::<u128>(Variant(_7, 1), 0)) = 318947046032916925768027724963647316136_u128;
_11 = _6;
RET = Field::<u8>(Variant(_7, 1), 1) as f64;
_11 = _6;
_11 = _6;
_6 = _11;
place!(Field::<u128>(Variant(_7, 1), 0)) = (-3573333545308678962_i64) as u128;
_14 = !Field::<isize>(Variant(_7, 1), 2);
RET = Field::<u8>(Variant(_7, 1), 1) as f64;
_13 = false;
_9 = Field::<isize>(Variant(_7, 1), 2);
Goto(bb7)
}
bb19 = {
_3 = 949650261_u32 | 1900622088_u32;
place!(Field::<isize>(Variant(_7, 1), 2)) = !_9;
_9 = 2_usize as isize;
place!(Field::<i32>(Variant(_7, 1), 3)) = 213681481_i32;
_4 = [(-69_i8),19_i8,11_i8,98_i8,(-61_i8),115_i8,(-55_i8),4_i8];
RET = (-81606457232771437448150650975280231468_i128) as f64;
place!(Field::<i32>(Variant(_7, 1), 3)) = 632416177_i32;
place!(Field::<u128>(Variant(_7, 1), 0)) = !186401170798652045478345124454806658696_u128;
_6 = '\u{6d919}';
_11 = _6;
RET = 17709_i16 as f64;
_11 = _6;
Goto(bb6)
}
bb20 = {
_2 = [16538889997745033448_usize,1_usize,1034469361008453754_usize,8528191599409423596_usize,4689896439244269149_usize,7_usize,8730492543429425846_usize,5_usize];
_6 = '\u{64462}';
place!(Field::<i32>(Variant(_7, 1), 3)) = false as i32;
RET = 7_usize as f64;
place!(Field::<i32>(Variant(_7, 1), 3)) = -(-2121209574_i32);
place!(Field::<isize>(Variant(_7, 1), 2)) = 61038_u16 as isize;
place!(Field::<u8>(Variant(_7, 1), 1)) = 32_u8 ^ 186_u8;
_6 = '\u{f5805}';
place!(Field::<u8>(Variant(_7, 1), 1)) = Field::<i32>(Variant(_7, 1), 3) as u8;
Goto(bb5)
}
bb21 = {
(*_1) = !true;
(*_1) = false ^ false;
place!(Field::<u128>(Variant(_7, 1), 0)) = 95452659085060424567828893401228309038_u128 << _20;
_4 = [_20,_12,_12,_20,_20,_12,_12,_20];
(*_1) = false;
_7 = Adt37::Variant1 { fld0: 177199253702052252952472879456664005101_u128,fld1: 244_u8,fld2: _14,fld3: (-1006153536_i32) };
(*_15) = _16;
(*_15) = _6;
(*_1) = !true;
place!(Field::<i32>(Variant(_7, 1), 3)) = !1534336183_i32;
(*_15) = _22;
_27 = _21;
(*_15) = _22;
(*_1) = false;
(*_1) = _3 >= _23;
_9 = -_27;
(*_15) = _26;
place!(Field::<u8>(Variant(_7, 1), 1)) = 114_u8 | 176_u8;
_26 = (*_15);
_9 = (-1796552794887054557_i64) as isize;
(*_15) = _25;
_22 = (*_15);
(*_1) = true;
(*_1) = false | false;
(*_15) = _25;
Goto(bb22)
}
bb22 = {
_16 = (*_15);
_25 = (*_15);
(*_1) = true;
(*_1) = RET <= _19;
(*_1) = _23 <= _3;
_23 = !_3;
_20 = _12 - _12;
_25 = (*_15);
_33 = _9 & Field::<isize>(Variant(_7, 1), 2);
(*_1) = false ^ true;
_2 = [8323419406835605558_usize,17834084293800403926_usize,0_usize,4_usize,0_usize,15736050944569369841_usize,9310123057250606245_usize,14271257435639088018_usize];
_31 = (-1397345967436085624_i64) | 2866819046953450636_i64;
_23 = !_3;
(*_1) = !false;
(*_15) = _22;
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
place!(Field::<u8>(Variant(_7, 1), 1)) = 11496573997230766697_usize as u8;
(*_15) = _26;
place!(Field::<i32>(Variant(_7, 1), 3)) = (-1782942369_i32) << _33;
_23 = _3;
_20 = -_12;
(*_1) = true ^ false;
_36 = (*_15);
Call(_17.0 = fn15((*_1), (*_15), Move(_15), (*_15), (*_15), (*_15), _2, (*_1)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_22 = _26;
place!(Field::<u128>(Variant(_7, 1), 0)) = 248682617082982090413629034486741049889_u128;
_25 = _6;
(*_1) = false ^ false;
_27 = _33 + _33;
(*_1) = !true;
_9 = -_33;
(*_1) = _19 <= _19;
_35 = _3 >> _33;
_18 = _30 as f32;
(*_1) = !false;
_15 = core::ptr::addr_of!(_16);
_38 = RET + _19;
place!(Field::<u128>(Variant(_7, 1), 0)) = !49679408402767624365380365809584242681_u128;
_4 = [_20,_20,_20,_12,_20,_20,_20,_12];
Goto(bb24)
}
bb24 = {
_19 = _38 + _38;
(*_15) = _36;
(*_1) = false | false;
_36 = (*_15);
Goto(bb25)
}
bb25 = {
_20 = -_12;
_23 = _35;
(*_15) = _36;
(*_1) = !true;
(*_1) = true & false;
(*_1) = (*_15) < (*_15);
_23 = !_35;
_23 = _12 as u32;
_15 = core::ptr::addr_of!(_22);
_41 = Adt18::Variant1 { fld0: _31,fld1: _18,fld2: Field::<i32>(Variant(_7, 1), 3),fld3: _12 };
_26 = _6;
(*_15) = _26;
(*_15) = _6;
Call(_30 = core::intrinsics::bswap(43877_u16), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
(*_15) = _6;
_15 = core::ptr::addr_of!(_16);
_39 = !_27;
(*_15) = _6;
(*_15) = _22;
_30 = !13160_u16;
_12 = _20 * Field::<i8>(Variant(_41, 1), 3);
(*_1) = !false;
Call(_20 = core::intrinsics::transmute((*_1)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
RET = _38 - _19;
_26 = _25;
(*_15) = _6;
(*_15) = _26;
_36 = (*_15);
place!(Field::<i32>(Variant(_41, 1), 2)) = Field::<i32>(Variant(_7, 1), 3) * Field::<i32>(Variant(_7, 1), 3);
Goto(bb28)
}
bb28 = {
_17.0 = [(*_1),(*_1),(*_1),(*_1),(*_1)];
(*_15) = _22;
(*_15) = _25;
_35 = !_23;
_33 = _39 - _27;
(*_1) = !false;
(*_1) = true;
(*_15) = _36;
_38 = _19;
_26 = _6;
_9 = !_33;
_27 = _9 << _14;
(*_1) = (*_15) > (*_15);
(*_1) = !true;
(*_15) = _26;
Goto(bb29)
}
bb29 = {
(*_1) = false;
_47 = [(-27487_i16),(-12497_i16),27503_i16,(-29354_i16),(-21776_i16),(-28071_i16),(-12032_i16),31595_i16];
(*_15) = _36;
_20 = !_12;
_49 = Field::<i64>(Variant(_41, 1), 0) as u64;
(*_1) = Field::<i32>(Variant(_7, 1), 3) != Field::<i32>(Variant(_41, 1), 2);
_21 = !_9;
(*_15) = _25;
place!(Field::<f32>(Variant(_41, 1), 1)) = _18 + _18;
(*_1) = Field::<i32>(Variant(_41, 1), 2) == Field::<i32>(Variant(_41, 1), 2);
_50 = (*_15);
(*_1) = (*_15) == (*_15);
_37 = [Field::<i32>(Variant(_7, 1), 3),Field::<i32>(Variant(_41, 1), 2),Field::<i32>(Variant(_7, 1), 3),Field::<i32>(Variant(_41, 1), 2),Field::<i32>(Variant(_41, 1), 2),Field::<i32>(Variant(_41, 1), 2),Field::<i32>(Variant(_7, 1), 3)];
_43 = RET * _19;
(*_15) = _6;
(*_1) = _43 >= RET;
_18 = Field::<i32>(Variant(_41, 1), 2) as f32;
(*_15) = _36;
Goto(bb30)
}
bb30 = {
(*_15) = _26;
(*_1) = !false;
(*_15) = _6;
place!(Field::<f32>(Variant(_41, 1), 1)) = -_18;
_45 = &mut place!(Field::<i64>(Variant(_41, 1), 0));
Goto(bb31)
}
bb31 = {
_48 = Move(_45);
Goto(bb32)
}
bb32 = {
_46 = [Field::<u128>(Variant(_7, 1), 0),Field::<u128>(Variant(_7, 1), 0),Field::<u128>(Variant(_7, 1), 0),Field::<u128>(Variant(_7, 1), 0),Field::<u128>(Variant(_7, 1), 0)];
(*_1) = (*_15) <= (*_15);
_49 = 17278275222224268468_u64 - 15569308235170114562_u64;
RET = _19 + _43;
(*_15) = _25;
(*_15) = _22;
_54 = _27 & _27;
_42 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
_54 = _21 - _21;
_42 = [Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1),Field::<u8>(Variant(_7, 1), 1)];
_39 = -_27;
_44 = -_27;
(*_15) = _11;
(*_1) = _19 >= _43;
_53 = -_21;
_16 = _26;
_18 = Field::<i32>(Variant(_7, 1), 3) as f32;
_57 = Move(_7);
(*_15) = _50;
_56 = (_43,);
(*_1) = _49 == _49;
Goto(bb33)
}
bb33 = {
Call(_60 = dump_var(Move(_35), Move(_49), Move(_2), Move(_4)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_60 = dump_var(Move(_26), Move(_22), Move(_46), Move(_13)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_60 = dump_var(Move(_3), Move(_27), Move(_50), Move(_42)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_60 = dump_var(Move(_53), Move(_23), Move(_44), Move(_6)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: char,mut _2: f64,mut _3: u32,mut _4: u32,mut _5: [i8; 8],mut _6: isize,mut _7: [usize; 8],mut _8: [usize; 8],mut _9: isize,mut _10: u32,mut _11: char) -> Adt37 {
mir! {
type RET = Adt37;
let _12: u128;
let _13: i16;
let _14: Adt51;
let _15: isize;
let _16: [isize; 2];
let _17: f32;
let _18: (Adt56, [i8; 7], Adt22);
let _19: Adt18;
let _20: [i16; 8];
let _21: [i16; 8];
let _22: *const Adt51;
let _23: [i8; 8];
let _24: i16;
let _25: char;
let _26: *const f64;
let _27: u8;
let _28: char;
let _29: bool;
let _30: ();
let _31: ();
{
_4 = !_3;
_9 = _6 ^ _6;
_5 = [54_i8,(-123_i8),(-102_i8),86_i8,113_i8,(-98_i8),15_i8,(-74_i8)];
_11 = _1;
_9 = !_6;
_5 = [(-5_i8),36_i8,47_i8,(-44_i8),(-19_i8),92_i8,114_i8,(-31_i8)];
_1 = _11;
RET = Adt37::Variant1 { fld0: 156060483727872852133716930594679520403_u128,fld1: 44_u8,fld2: _6,fld3: 783578776_i32 };
_3 = !_4;
Call(_4 = core::intrinsics::bswap(_10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = Adt37::Variant1 { fld0: 104163874548028815284507684629901712366_u128,fld1: 159_u8,fld2: _9,fld3: (-445312332_i32) };
_10 = _4 + _4;
_2 = 12872077750722266824_u64 as f64;
_3 = _4 - _10;
_4 = _10 * _10;
_12 = 161822545419807350166341906486977816645_u128 << _3;
_8 = [4726611132158710791_usize,1_usize,14465060462015778607_usize,6340920403511638857_usize,12562889887108160742_usize,2499878166962990655_usize,0_usize,4_usize];
place!(Field::<u8>(Variant(RET, 1), 1)) = !164_u8;
_2 = Field::<u8>(Variant(RET, 1), 1) as f64;
_6 = Field::<isize>(Variant(RET, 1), 2) ^ _9;
_11 = _1;
Goto(bb2)
}
bb2 = {
place!(Field::<u128>(Variant(RET, 1), 0)) = Field::<u8>(Variant(RET, 1), 1) as u128;
_8 = [524876341852460145_usize,1688127309960202570_usize,1_usize,6055523432844665669_usize,15920833180786643738_usize,7_usize,18189947380088480584_usize,1_usize];
_13 = _12 as i16;
_5 = [(-13_i8),19_i8,(-46_i8),35_i8,46_i8,42_i8,6_i8,89_i8];
_3 = _4 << _4;
_4 = !_3;
_5 = [(-45_i8),104_i8,(-23_i8),46_i8,30_i8,57_i8,(-120_i8),(-88_i8)];
Goto(bb3)
}
bb3 = {
RET = Adt37::Variant1 { fld0: _12,fld1: 69_u8,fld2: _9,fld3: 1907833796_i32 };
_4 = 63_i8 as u32;
_4 = _6 as u32;
_3 = _6 as u32;
_5 = [92_i8,89_i8,(-95_i8),121_i8,(-96_i8),59_i8,101_i8,81_i8];
_6 = (-9199798478958282872_i64) as isize;
RET = Adt37::Variant1 { fld0: _12,fld1: 134_u8,fld2: _6,fld3: (-1904490651_i32) };
_5 = [50_i8,3_i8,37_i8,9_i8,(-83_i8),(-102_i8),66_i8,(-103_i8)];
_1 = _11;
_16 = [_9,_6];
_1 = _11;
_10 = !_4;
_9 = -Field::<isize>(Variant(RET, 1), 2);
place!(Field::<u8>(Variant(RET, 1), 1)) = 202_u8 << _6;
_2 = Field::<isize>(Variant(RET, 1), 2) as f64;
_5 = [(-16_i8),(-110_i8),12_i8,(-37_i8),(-30_i8),(-112_i8),105_i8,46_i8];
_7 = [10859772051450528040_usize,6_usize,7_usize,15189474746597077957_usize,1_usize,3_usize,17244258936437006172_usize,4_usize];
place!(Field::<i32>(Variant(RET, 1), 3)) = -(-1686520658_i32);
_10 = _4;
_3 = _4 | _10;
_6 = Field::<isize>(Variant(RET, 1), 2);
Goto(bb4)
}
bb4 = {
_1 = _11;
_18.2 = Adt22::Variant3 { fld0: Field::<u8>(Variant(RET, 1), 1),fld1: _1,fld2: 39346_u16 };
place!(Field::<u8>(Variant(RET, 1), 1)) = Field::<u8>(Variant(_18.2, 3), 0);
place!(Field::<u8>(Variant(_18.2, 3), 0)) = Field::<u8>(Variant(RET, 1), 1) << _12;
_13 = 834_i16 - 2480_i16;
_3 = _10 ^ _10;
place!(Field::<i32>(Variant(RET, 1), 3)) = !2144206054_i32;
place!(Field::<u8>(Variant(_18.2, 3), 0)) = Field::<u8>(Variant(RET, 1), 1) >> _3;
_15 = _9;
_7 = _8;
place!(Field::<u128>(Variant(RET, 1), 0)) = 12790408977659681431_u64 as u128;
_7 = _8;
place!(Field::<u16>(Variant(_18.2, 3), 2)) = 19230_u16 + 20035_u16;
_5 = [(-46_i8),5_i8,(-26_i8),(-109_i8),76_i8,55_i8,0_i8,39_i8];
_4 = !_3;
_15 = Field::<u8>(Variant(_18.2, 3), 0) as isize;
_11 = _1;
_17 = _2 as f32;
_2 = _15 as f64;
_21 = [_13,_13,_13,_13,_13,_13,_13,_13];
_1 = _11;
_7 = [0_usize,4099481410020113177_usize,5961168790221398698_usize,16060502658893084330_usize,11957673057275444590_usize,9988532671422386063_usize,5_usize,10216037148274283876_usize];
_7 = [1286314130573640630_usize,9855217841718280701_usize,15930176757378498831_usize,10590092688054642146_usize,13460818565648791024_usize,7_usize,6_usize,10300966378473140599_usize];
Call(place!(Field::<i32>(Variant(RET, 1), 3)) = core::intrinsics::bswap(2101860815_i32), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_22 = core::ptr::addr_of!(_14);
_15 = _9 - _9;
place!(Field::<char>(Variant(_18.2, 3), 1)) = _1;
_19 = Adt18::Variant1 { fld0: (-6554830597855899690_i64),fld1: _17,fld2: Field::<i32>(Variant(RET, 1), 3),fld3: 4_i8 };
_15 = Field::<isize>(Variant(RET, 1), 2) + Field::<isize>(Variant(RET, 1), 2);
_10 = _4;
_23 = [50_i8,87_i8,67_i8,75_i8,(-86_i8),57_i8,(-120_i8),9_i8];
place!(Field::<u8>(Variant(_18.2, 3), 0)) = !Field::<u8>(Variant(RET, 1), 1);
place!(Field::<char>(Variant(_18.2, 3), 1)) = _11;
_5 = _23;
place!(Field::<u8>(Variant(_18.2, 3), 0)) = Field::<u8>(Variant(RET, 1), 1) | Field::<u8>(Variant(RET, 1), 1);
_22 = core::ptr::addr_of!((*_22));
_22 = core::ptr::addr_of!((*_22));
_3 = !_10;
_17 = Field::<f32>(Variant(_19, 1), 1) * Field::<f32>(Variant(_19, 1), 1);
_12 = _2 as u128;
_10 = _3 >> Field::<u16>(Variant(_18.2, 3), 2);
place!(Field::<char>(Variant(_18.2, 3), 1)) = _1;
place!(Field::<i32>(Variant(_19, 1), 2)) = Field::<i32>(Variant(RET, 1), 3) - Field::<i32>(Variant(RET, 1), 3);
_20 = _21;
place!(Field::<i32>(Variant(RET, 1), 3)) = (-2031437550757069728_i64) as i32;
_23 = [(-84_i8),(-112_i8),72_i8,43_i8,74_i8,(-45_i8),34_i8,78_i8];
place!(Field::<u8>(Variant(RET, 1), 1)) = Field::<u8>(Variant(_18.2, 3), 0) >> _12;
_18.0 = Adt56::Variant3 { fld0: false,fld1: _12 };
Goto(bb6)
}
bb6 = {
_22 = core::ptr::addr_of!((*_22));
place!(Field::<bool>(Variant(_18.0, 3), 0)) = false | true;
place!(Field::<char>(Variant(_18.2, 3), 1)) = _1;
_13 = (-26453_i16) << Field::<i32>(Variant(_19, 1), 2);
place!(Field::<u128>(Variant(_18.0, 3), 1)) = _12 - _12;
_5 = [(-58_i8),99_i8,(-80_i8),52_i8,(-95_i8),(-75_i8),(-97_i8),(-110_i8)];
place!(Field::<i32>(Variant(_19, 1), 2)) = Field::<i32>(Variant(RET, 1), 3) ^ Field::<i32>(Variant(RET, 1), 3);
place!(Field::<bool>(Variant(_18.0, 3), 0)) = false;
_20 = _21;
_26 = core::ptr::addr_of!(_2);
_3 = _4 + _10;
_25 = _1;
(*_26) = 4_usize as f64;
_25 = _11;
_6 = _9;
_11 = _1;
(*_26) = _6 as f64;
_27 = Field::<u8>(Variant(_18.2, 3), 0);
place!(Field::<f32>(Variant(_19, 1), 1)) = _17 + _17;
_13 = -27886_i16;
place!(Field::<u128>(Variant(RET, 1), 0)) = Field::<u128>(Variant(_18.0, 3), 1);
place!(Field::<char>(Variant(_18.2, 3), 1)) = _1;
place!(Field::<i64>(Variant(_19, 1), 0)) = 1878186734921941500_i64 - (-8339836502034253436_i64);
_7 = [3850008461604508688_usize,6491257350276651007_usize,5_usize,5_usize,7_usize,4_usize,1267760044297322486_usize,6_usize];
(*_26) = 42382749093016197643042288250296352666_i128 as f64;
_20 = [_13,_13,_13,_13,_13,_13,_13,_13];
_7 = _8;
place!(Field::<i8>(Variant(_19, 1), 3)) = _12 as i8;
Goto(bb7)
}
bb7 = {
Call(_30 = dump_var(Move(_10), Move(_16), Move(_27), Move(_12)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_30 = dump_var(Move(_23), Move(_11), Move(_21), Move(_3)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_30 = dump_var(Move(_20), _31, _31, _31), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: bool,mut _2: char,mut _3: *const char,mut _4: char,mut _5: char,mut _6: char,mut _7: [usize; 8],mut _8: bool) -> [bool; 5] {
mir! {
type RET = [bool; 5];
let _9: i64;
let _10: &'static &'static mut [char; 3];
let _11: *mut Adt51;
let _12: u16;
let _13: &'static mut [i8; 1];
let _14: &'static mut &'static u32;
let _15: i16;
let _16: i128;
let _17: ([bool; 5],);
let _18: u64;
let _19: (*const Adt21,);
let _20: ([bool; 5],);
let _21: (u64, f64);
let _22: &'static ([i16; 8],);
let _23: bool;
let _24: *const [char; 3];
let _25: u32;
let _26: isize;
let _27: f32;
let _28: ([u32; 3],);
let _29: (Adt56, [i8; 7], Adt22);
let _30: (u64, f64);
let _31: [u128; 1];
let _32: char;
let _33: f32;
let _34: isize;
let _35: bool;
let _36: *const i16;
let _37: f32;
let _38: isize;
let _39: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _40: &'static mut bool;
let _41: f32;
let _42: isize;
let _43: usize;
let _44: &'static i64;
let _45: *const &'static (isize, u16, i32, u64);
let _46: &'static mut &'static u32;
let _47: f32;
let _48: Adt56;
let _49: &'static mut [i8; 1];
let _50: *mut Adt51;
let _51: &'static mut [char; 3];
let _52: Adt18;
let _53: &'static (isize, u16, i32, u64);
let _54: char;
let _55: u8;
let _56: bool;
let _57: *const f32;
let _58: ();
let _59: ();
{
_9 = (-3914019196682462171_i64);
_6 = _4;
_8 = _2 <= _6;
_8 = !_1;
RET = [_1,_1,_1,_1,_8];
_5 = _6;
_6 = _4;
_2 = _6;
_7 = [0_usize,1_usize,12882557402320590375_usize,4_usize,8538058052387384161_usize,13953731956791550459_usize,4465440823641710662_usize,3_usize];
RET = [_8,_8,_1,_8,_8];
_4 = _5;
_12 = 53480_u16;
_1 = !_8;
_7 = [0_usize,3_usize,9875098109739915584_usize,11331860845072896232_usize,1910361829747820137_usize,15691982908466675926_usize,1132459535012356442_usize,2313559893339960951_usize];
_5 = _4;
_6 = _5;
_1 = _8;
_12 = 62823_u16;
_6 = _5;
Goto(bb1)
}
bb1 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = core::ptr::addr_of!(_2);
_8 = _5 > (*_3);
(*_3) = _4;
_12 = 43393_u16 - 27104_u16;
_17 = (RET,);
_8 = _1;
(*_3) = _5;
(*_3) = _5;
_1 = !_8;
(*_3) = _4;
(*_3) = _5;
_3 = core::ptr::addr_of!((*_3));
Goto(bb3)
}
bb3 = {
_16 = 83708301000543803868054942814703020944_i128;
(*_3) = _4;
(*_3) = _6;
(*_3) = _6;
_20 = (RET,);
_21.0 = _18;
(*_3) = _5;
_20 = (RET,);
(*_3) = _4;
(*_3) = _4;
(*_3) = _4;
_9 = !(-2920414413687803634_i64);
_21.1 = (-112_isize) as f64;
(*_3) = _6;
(*_3) = _4;
(*_3) = _6;
match _16 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
83708301000543803868054942814703020944 => bb8,
_ => bb7
}
}
bb4 = {
_3 = core::ptr::addr_of!(_2);
_8 = _5 > (*_3);
(*_3) = _4;
_12 = 43393_u16 - 27104_u16;
_17 = (RET,);
_8 = _1;
(*_3) = _5;
(*_3) = _5;
_1 = !_8;
(*_3) = _4;
(*_3) = _5;
_3 = core::ptr::addr_of!((*_3));
Goto(bb3)
}
bb5 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_1 = _21.0 == _18;
_26 = (-57_isize) * (-9223372036854775808_isize);
match _16 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
83708301000543803868054942814703020944 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_9 = 6001041845203126981_i64 - (-3101976656798586483_i64);
(*_3) = _4;
(*_3) = _4;
_17 = (_20.0,);
RET = _20.0;
_23 = _16 > _16;
(*_3) = _6;
(*_3) = _6;
_9 = (-1125485586142773254_i64) | (-5424256202310953798_i64);
_25 = 18007691083903902556_usize as u32;
(*_3) = _6;
(*_3) = _6;
_16 = 223093146425355106989408176190199828856_u128 as i128;
(*_3) = _6;
_28.0 = [_25,_25,_25];
Goto(bb12)
}
bb12 = {
_5 = (*_3);
(*_3) = _4;
(*_3) = _4;
_1 = _8 > _8;
(*_3) = _4;
_17 = (_20.0,);
_27 = _26 as f32;
_4 = (*_3);
(*_3) = _4;
Goto(bb13)
}
bb13 = {
_25 = 219470603_u32;
(*_3) = _5;
(*_3) = _4;
_7 = [6_usize,1_usize,779718843783614762_usize,3_usize,4_usize,5_usize,14545412191973797887_usize,6_usize];
_16 = _18 as i128;
_27 = _18 as f32;
_4 = (*_3);
_4 = (*_3);
(*_3) = _4;
(*_3) = _5;
_20 = _17;
_30.0 = _18 | _18;
_15 = 24399_i16 * 3691_i16;
(*_3) = _5;
_7 = [13477244175005740235_usize,17049736280628101268_usize,4_usize,3_usize,9013111298390143614_usize,6_usize,17655241032531663872_usize,5_usize];
_2 = _5;
Goto(bb14)
}
bb14 = {
(*_3) = _5;
_29.0 = Adt56::Variant3 { fld0: _1,fld1: 303188905036375766999380764402810243642_u128 };
_9 = (-1153986225861328009_i64);
_33 = _27 * _27;
_30.1 = -_21.1;
_32 = (*_3);
(*_3) = _4;
place!(Field::<u128>(Variant(_29.0, 3), 1)) = 306933170689251144415282113589646320955_u128;
_5 = (*_3);
_4 = (*_3);
match _25 {
0 => bb15,
1 => bb16,
2 => bb17,
3 => bb18,
219470603 => bb20,
_ => bb19
}
}
bb15 = {
_1 = _21.0 == _18;
_26 = (-57_isize) * (-9223372036854775808_isize);
match _16 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
83708301000543803868054942814703020944 => bb11,
_ => bb10
}
}
bb16 = {
Return()
}
bb17 = {
_3 = core::ptr::addr_of!(_2);
_8 = _5 > (*_3);
(*_3) = _4;
_12 = 43393_u16 - 27104_u16;
_17 = (RET,);
_8 = _1;
(*_3) = _5;
(*_3) = _5;
_1 = !_8;
(*_3) = _4;
(*_3) = _5;
_3 = core::ptr::addr_of!((*_3));
Goto(bb3)
}
bb18 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb19 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb20 = {
_23 = _1 != Field::<bool>(Variant(_29.0, 3), 0);
(*_3) = _4;
_3 = core::ptr::addr_of!((*_3));
_30.0 = _18 + _18;
_1 = (*_3) > (*_3);
place!(Field::<u128>(Variant(_29.0, 3), 1)) = !219934568570645084644157612403503591056_u128;
_25 = 1564525361_u32;
_31 = [Field::<u128>(Variant(_29.0, 3), 1)];
_3 = core::ptr::addr_of!((*_3));
_20.0 = _17.0;
_12 = _15 as u16;
(*_3) = _5;
_16 = (-20891227484998326641417698680194493342_i128) | 87922459936876581729142370337578513168_i128;
_30.0 = _21.0 + _21.0;
match _9 {
0 => bb13,
1 => bb16,
2 => bb18,
3 => bb21,
4 => bb22,
340282366920938463462220621205906883447 => bb24,
_ => bb23
}
}
bb21 = {
_9 = 6001041845203126981_i64 - (-3101976656798586483_i64);
(*_3) = _4;
(*_3) = _4;
_17 = (_20.0,);
RET = _20.0;
_23 = _16 > _16;
(*_3) = _6;
(*_3) = _6;
_9 = (-1125485586142773254_i64) | (-5424256202310953798_i64);
_25 = 18007691083903902556_usize as u32;
(*_3) = _6;
(*_3) = _6;
_16 = 223093146425355106989408176190199828856_u128 as i128;
(*_3) = _6;
_28.0 = [_25,_25,_25];
Goto(bb12)
}
bb22 = {
Return()
}
bb23 = {
_1 = _21.0 == _18;
_26 = (-57_isize) * (-9223372036854775808_isize);
match _16 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
83708301000543803868054942814703020944 => bb11,
_ => bb10
}
}
bb24 = {
_21 = (_30.0, _30.1);
(*_3) = _5;
_40 = &mut place!(Field::<bool>(Variant(_29.0, 3), 0));
(*_40) = _2 >= (*_3);
_26 = !(-9223372036854775808_isize);
_41 = _30.0 as f32;
_34 = _26 >> _15;
_1 = !(*_40);
_1 = _21.1 >= _21.1;
_32 = (*_3);
(*_40) = _1;
match _25 {
0 => bb25,
1 => bb26,
1564525361 => bb28,
_ => bb27
}
}
bb25 = {
_6 = _4;
_15 = !11127_i16;
_15 = -(-25756_i16);
_4 = _6;
_16 = (-15304055050611008610954164834911554522_i128);
_12 = 22905_u16 >> _9;
_1 = _8 | _8;
_17 = (RET,);
_7 = [5_usize,1274329091966632603_usize,7002329180567262811_usize,1_usize,12692821180498186712_usize,12312846344790737947_usize,7_usize,3302620594618196655_usize];
_6 = _4;
_6 = _2;
_9 = 37_u8 as i64;
_16 = !(-56752666822997633187692407569432289239_i128);
_1 = _8;
Call(_18 = fn16(_6, _2, _5, _7, Move(_3), _1), ReturnTo(bb2), UnwindUnreachable())
}
bb26 = {
Return()
}
bb27 = {
_16 = 83708301000543803868054942814703020944_i128;
(*_3) = _4;
(*_3) = _6;
(*_3) = _6;
_20 = (RET,);
_21.0 = _18;
(*_3) = _5;
_20 = (RET,);
(*_3) = _4;
(*_3) = _4;
(*_3) = _4;
_9 = !(-2920414413687803634_i64);
_21.1 = (-112_isize) as f64;
(*_3) = _6;
(*_3) = _4;
(*_3) = _6;
match _16 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
83708301000543803868054942814703020944 => bb8,
_ => bb7
}
}
bb28 = {
_20 = _17;
_26 = _34 ^ _34;
(*_3) = _4;
_2 = _32;
_3 = core::ptr::addr_of!(_6);
_21.1 = _30.1 * _30.1;
(*_40) = _23;
_44 = &_9;
_17.0 = _20.0;
(*_40) = _9 == (*_44);
match (*_44) {
340282366920938463462220621205906883447 => bb29,
_ => bb13
}
}
bb29 = {
_47 = _33 * _41;
Goto(bb30)
}
bb30 = {
(*_3) = _2;
_25 = 1791347711_u32;
_32 = (*_3);
(*_3) = _32;
_25 = 1018419993_u32;
_40 = &mut _23;
(*_3) = _4;
_42 = _26;
_34 = _42 * _42;
_21 = _30;
(*_40) = _8 & _8;
(*_40) = _2 == (*_3);
(*_40) = !_1;
(*_3) = _4;
(*_40) = _1;
(*_3) = _32;
(*_40) = _32 < (*_3);
_37 = _16 as f32;
match (*_44) {
0 => bb21,
1 => bb2,
2 => bb23,
3 => bb4,
4 => bb5,
5 => bb27,
6 => bb8,
340282366920938463462220621205906883447 => bb32,
_ => bb31
}
}
bb31 = {
Return()
}
bb32 = {
(*_40) = (*_3) > (*_3);
(*_3) = _5;
(*_3) = _4;
_35 = (*_40) == (*_40);
(*_40) = _1;
(*_40) = _42 == _26;
_47 = _33;
_3 = core::ptr::addr_of!((*_3));
RET = [(*_40),(*_40),(*_40),(*_40),(*_40)];
_37 = _27;
(*_3) = _2;
(*_40) = _1;
(*_40) = (*_44) != (*_44);
(*_40) = !_35;
(*_3) = _4;
_20.0 = RET;
(*_40) = _26 == _34;
_33 = _47;
(*_40) = _35;
(*_3) = _2;
_54 = (*_3);
(*_40) = !_35;
_55 = 255_u8 & 194_u8;
(*_3) = _4;
(*_40) = _35;
Goto(bb33)
}
bb33 = {
Call(_58 = dump_var(Move(_12), Move(_17), Move(_55), Move(_34)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_58 = dump_var(Move(_7), Move(_5), Move(_1), Move(_9)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_58 = dump_var(Move(_2), Move(_20), Move(_54), Move(_31)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: char,mut _2: char,mut _3: char,mut _4: [usize; 8],mut _5: *const char,mut _6: bool) -> u64 {
mir! {
type RET = u64;
let _7: *mut usize;
let _8: i128;
let _9: *mut usize;
let _10: u8;
let _11: *mut &'static mut [i8; 1];
let _12: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _13: bool;
let _14: char;
let _15: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _16: i16;
let _17: *mut &'static mut [i8; 1];
let _18: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _19: isize;
let _20: i128;
let _21: char;
let _22: [i8; 8];
let _23: *const i16;
let _24: f32;
let _25: u8;
let _26: usize;
let _27: &'static i64;
let _28: isize;
let _29: u8;
let _30: u16;
let _31: ([bool; 5],);
let _32: f32;
let _33: ([usize; 8], &'static mut i64);
let _34: f32;
let _35: u64;
let _36: char;
let _37: f64;
let _38: &'static mut &'static u32;
let _39: u32;
let _40: &'static mut bool;
let _41: i8;
let _42: (Adt56, [i8; 7], Adt22);
let _43: &'static &'static mut [char; 3];
let _44: [i8; 7];
let _45: u128;
let _46: isize;
let _47: *const f64;
let _48: isize;
let _49: (Adt56, [i8; 7], Adt22);
let _50: usize;
let _51: Adt72;
let _52: isize;
let _53: *const f32;
let _54: [i32; 7];
let _55: Adt22;
let _56: [bool; 5];
let _57: *const [char; 3];
let _58: i16;
let _59: &'static mut i64;
let _60: isize;
let _61: *mut usize;
let _62: f32;
let _63: [bool; 5];
let _64: isize;
let _65: i8;
let _66: (u16, *const char, *const i16, *const i16);
let _67: f64;
let _68: isize;
let _69: [u128; 5];
let _70: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _71: [i8; 7];
let _72: (u16, *const char, *const i16, *const i16);
let _73: Adt18;
let _74: [i32; 7];
let _75: (u16, Adt37, &'static mut i64);
let _76: ();
let _77: ();
{
_3 = _2;
_6 = _3 >= _3;
_5 = core::ptr::addr_of!(_1);
(*_5) = _3;
(*_5) = _3;
RET = 1_usize as u64;
(*_5) = _2;
(*_5) = _2;
RET = 12641519152082817649_u64 >> (-7658165003540590929_i64);
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
(*_5) = _2;
_2 = (*_5);
RET = 17735886480197728674_u64;
_2 = (*_5);
(*_5) = _2;
(*_5) = _3;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
17735886480197728674 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_5) = _3;
(*_5) = _2;
Call((*_5) = fn17(Move(_5)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_3 = _2;
Goto(bb9)
}
bb9 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
(*_5) = _3;
(*_5) = _2;
Call((*_5) = fn17(Move(_5)), ReturnTo(bb8), UnwindUnreachable())
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
(*_5) = _3;
_12.0.1 = (-7059_i16) as f64;
(*_5) = _2;
_13 = _6 ^ _6;
_12.3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _3;
_14 = (*_5);
(*_5) = _14;
(*_5) = _2;
(*_5) = _3;
Goto(bb15)
}
bb15 = {
(*_5) = _3;
(*_5) = _14;
_2 = (*_5);
_1 = _2;
_2 = (*_5);
(*_5) = _3;
_15.0.0 = 221491945778130902122194937432661232889_u128 as u64;
_15.1 = _12.1 + _12.1;
(*_5) = _3;
_15.0 = (_12.0.0, _12.0.1);
Goto(bb16)
}
bb16 = {
(*_5) = _2;
_15.0.1 = _12.0.1 - _12.0.1;
_12.0 = (_15.0.0, _15.0.1);
_8 = (-19035996353254725679951299610891794650_i128) + 16127485558780327648118858468340378051_i128;
_15.3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
_18.0 = (_15.0.0, _12.0.1);
_12.0.0 = _18.0.0 << _12.1;
(*_5) = _2;
(*_5) = _3;
_13 = (*_5) != (*_5);
(*_5) = _2;
match RET {
0 => bb17,
17735886480197728674 => bb19,
_ => bb18
}
}
bb17 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb18 = {
Return()
}
bb19 = {
(*_5) = _2;
(*_5) = _14;
_4 = [9622207384977753751_usize,7645030288465338092_usize,6_usize,4257411978602853318_usize,4_usize,9729103894871528431_usize,2_usize,8352967347088510031_usize];
(*_5) = _2;
_12.0.0 = RET;
(*_5) = _14;
_18.3 = _15.3;
(*_5) = _2;
_18.1 = _12.1;
_2 = (*_5);
(*_5) = _14;
_12.0.0 = !_15.0.0;
_4 = [864525936329207509_usize,7_usize,14415038746232317062_usize,7_usize,2_usize,4_usize,1601889910646605422_usize,7897449135446843212_usize];
(*_5) = _14;
(*_5) = _2;
_24 = (-6167713427292125926_i64) as f32;
_18.0.0 = RET - RET;
_10 = !41_u8;
match RET {
0 => bb14,
1 => bb2,
2 => bb17,
3 => bb9,
4 => bb12,
5 => bb20,
6 => bb21,
17735886480197728674 => bb23,
_ => bb22
}
}
bb20 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb21 = {
Return()
}
bb22 = {
_3 = _2;
Goto(bb9)
}
bb23 = {
(*_5) = _2;
_14 = (*_5);
_19 = 44578_u16 as isize;
(*_5) = _3;
_16 = -(-13046_i16);
_18.0 = (_12.0.0, _12.0.1);
_1 = _3;
(*_5) = _14;
_10 = 200_u8;
(*_5) = _3;
(*_5) = _3;
_24 = 327001485_i32 as f32;
(*_5) = _2;
_8 = !166256316961676315894677123396572517230_i128;
_4 = [10265717684101455416_usize,6_usize,12148870453753472904_usize,6883541295061322486_usize,2_usize,6_usize,5_usize,7_usize];
_25 = _10;
(*_5) = _2;
_12.0.1 = _18.0.1 * _15.0.1;
_5 = core::ptr::addr_of!((*_5));
_5 = core::ptr::addr_of!((*_5));
_14 = (*_5);
(*_5) = _2;
Goto(bb24)
}
bb24 = {
_28 = _8 as isize;
_2 = (*_5);
(*_5) = _14;
Goto(bb25)
}
bb25 = {
(*_5) = _2;
_13 = _1 < (*_5);
(*_5) = _2;
_16 = (-21523_i16) + (-12241_i16);
_29 = _12.0.1 as u8;
_13 = _6 ^ _6;
_12.0.0 = _18.0.0 | _18.0.0;
_21 = (*_5);
_4 = [4285334672052464957_usize,2_usize,18334299322717449804_usize,6_usize,1483017788151443252_usize,10022408334809704680_usize,4_usize,10307292954287795352_usize];
_15.0 = _12.0;
_30 = 23502_u16 + 61571_u16;
(*_5) = _14;
_18.3 = [_28,_19];
(*_5) = _21;
(*_5) = _2;
_15.0.1 = _18.0.1 + _12.0.1;
_12.0 = _15.0;
_23 = core::ptr::addr_of!(_16);
_34 = (-7810416277076687957_i64) as f32;
_1 = _21;
(*_5) = _14;
(*_23) = 24500_i16 << _29;
_25 = _29;
_35 = _12.0.0 ^ _15.0.0;
match _10 {
0 => bb21,
1 => bb22,
2 => bb26,
200 => bb28,
_ => bb27
}
}
bb26 = {
Return()
}
bb27 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb28 = {
_8 = (-35869719084986972426406731042267745606_i128);
(*_5) = _14;
(*_23) = _19 as i16;
(*_23) = (-4690_i16) | (-27484_i16);
_5 = core::ptr::addr_of!((*_5));
_7 = core::ptr::addr_of_mut!(_26);
_15.0.0 = (-898475537_i32) as u64;
match _10 {
0 => bb29,
200 => bb31,
_ => bb30
}
}
bb29 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb30 = {
(*_5) = _3;
_12.0.1 = (-7059_i16) as f64;
(*_5) = _2;
_13 = _6 ^ _6;
_12.3 = [9223372036854775807_isize,(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _3;
_14 = (*_5);
(*_5) = _14;
(*_5) = _2;
(*_5) = _3;
Goto(bb15)
}
bb31 = {
(*_5) = _21;
_5 = core::ptr::addr_of!((*_5));
_15.1 = _12.1 & _18.1;
(*_23) = _6 as i16;
(*_23) = (-24879_i16) + 14727_i16;
(*_7) = _35 as usize;
(*_23) = 24781_i16 & 30352_i16;
(*_23) = _29 as i16;
_12.0.1 = _15.0.1;
_20 = _8 - _8;
_4 = [(*_7),(*_7),(*_7),(*_7),(*_7),(*_7),(*_7),(*_7)];
_12.0.0 = _30 as u64;
_32 = _34 + _24;
_22 = [_15.1,_12.1,_15.1,_12.1,_12.1,_15.1,_18.1,_15.1];
_29 = _10 + _25;
(*_23) = !(-28865_i16);
(*_7) = 2_usize | 2510646937704779163_usize;
_41 = _15.1 - _15.1;
_14 = (*_5);
_15.0.0 = _12.0.0 << (*_7);
(*_5) = _14;
Goto(bb32)
}
bb32 = {
(*_7) = !6_usize;
_42.2 = Adt22::Variant3 { fld0: _29,fld1: _1,fld2: _30 };
(*_23) = 32342_i16;
(*_23) = (-20557_i16) * 19332_i16;
(*_5) = _2;
(*_5) = Field::<char>(Variant(_42.2, 3), 1);
(*_23) = (-1057_i16) >> (*_7);
Goto(bb33)
}
bb33 = {
_12.0.1 = _18.0.1 - _15.0.1;
_13 = (*_7) != (*_7);
(*_23) = _15.0.1 as i16;
_12.0.0 = !_15.0.0;
_24 = 209252310133935550231669233193332635046_u128 as f32;
_18.0.1 = _12.0.1 + _12.0.1;
(*_7) = !7_usize;
_15.3 = [_28,_19];
(*_23) = 22028_i16 * 22083_i16;
_12.3 = [_19,_19];
(*_23) = _6 as i16;
(*_23) = 3529193499331078748_i64 as i16;
place!(Field::<u16>(Variant(_42.2, 3), 2)) = _30;
Goto(bb34)
}
bb34 = {
_24 = -_32;
_18.0.0 = _12.0.0;
match RET {
0 => bb35,
1 => bb36,
2 => bb37,
3 => bb38,
17735886480197728674 => bb40,
_ => bb39
}
}
bb35 = {
Return()
}
bb36 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb37 = {
_8 = (-35869719084986972426406731042267745606_i128);
(*_5) = _14;
(*_23) = _19 as i16;
(*_23) = (-4690_i16) | (-27484_i16);
_5 = core::ptr::addr_of!((*_5));
_7 = core::ptr::addr_of_mut!(_26);
_15.0.0 = (-898475537_i32) as u64;
match _10 {
0 => bb29,
200 => bb31,
_ => bb30
}
}
bb38 = {
Return()
}
bb39 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb40 = {
_45 = (*_5) as u128;
_40 = &mut _13;
_42.1 = [_15.1,_41,_41,_41,_41,_15.1,_41];
_15.3 = [_28,_28];
(*_40) = _41 == _41;
RET = _19 as u64;
match _8 {
0 => bb34,
1 => bb30,
304412647835951491036967876389500465850 => bb41,
_ => bb20
}
}
bb41 = {
(*_7) = 1393452075374036734_usize | 465513589429364135_usize;
_28 = _19 | _19;
(*_7) = (*_23) as usize;
_33.0 = [(*_7),(*_7),(*_7),(*_7),(*_7),_26,(*_7),(*_7)];
_12.0 = (_15.0.0, _18.0.1);
(*_7) = 10056724256600673945_usize ^ 15709589064297453328_usize;
_36 = (*_5);
_32 = _12.0.0 as f32;
_39 = (*_5) as u32;
_44 = _42.1;
_20 = _8;
(*_40) = _6;
_29 = !_10;
match _20 {
0 => bb25,
304412647835951491036967876389500465850 => bb42,
_ => bb27
}
}
bb42 = {
_18.3 = [_19,_28];
Goto(bb43)
}
bb43 = {
(*_7) = !1911104402441001643_usize;
_3 = (*_5);
(*_5) = _21;
_51.fld2 = core::ptr::addr_of_mut!(_51.fld3);
(*_7) = 5_usize | 0_usize;
(*_7) = 6_usize & 10977848639635625208_usize;
(*_5) = _2;
(*_7) = !6_usize;
(*_5) = _3;
(*_5) = _36;
Goto(bb44)
}
bb44 = {
place!(Field::<u16>(Variant(_42.2, 3), 2)) = _30 ^ _30;
(*_7) = _29 as usize;
_35 = _12.0.0;
Goto(bb45)
}
bb45 = {
_50 = (*_7) * (*_7);
_49.2 = Move(_42.2);
_44 = [_41,_12.1,_18.1,_41,_41,_15.1,_15.1];
(*_5) = _14;
(*_5) = Field::<char>(Variant(_49.2, 3), 1);
_53 = core::ptr::addr_of!(_32);
_22 = [_41,_41,_41,_15.1,_12.1,_18.1,_41,_18.1];
(*_7) = _50 >> _45;
(*_7) = _50;
(*_53) = _25 as f32;
_56 = [(*_40),(*_40),(*_40),(*_40),(*_40)];
(*_7) = !_50;
_51.fld0 = [_45,_45,_45,_45,_45];
(*_40) = (*_23) == (*_23);
_23 = core::ptr::addr_of!((*_23));
(*_7) = _50;
_60 = _19 + _28;
_5 = core::ptr::addr_of!(_2);
(*_53) = _24;
(*_53) = _24;
_55 = Move(_49.2);
match _20 {
0 => bb31,
1 => bb42,
304412647835951491036967876389500465850 => bb47,
_ => bb46
}
}
bb46 = {
Return()
}
bb47 = {
_56 = [(*_40),_6,(*_40),(*_40),(*_40)];
_51.fld0 = [_45,_45,_45,_45,_45];
_52 = _19 - _60;
_33.0 = [(*_7),(*_7),(*_7),(*_7),(*_7),(*_7),(*_7),(*_7)];
(*_5) = _36;
(*_53) = Field::<u16>(Variant(_55, 3), 2) as f32;
_49.2 = Move(_55);
_15.1 = _18.1 - _12.1;
_31 = (_56,);
(*_40) = _12.0.0 != _18.0.0;
_45 = !1064993018742738939620452918075059064_u128;
(*_53) = _24 - _24;
_66.3 = core::ptr::addr_of!((*_23));
(*_23) = -21383_i16;
_24 = (*_53) + (*_53);
(*_23) = -(-2576_i16);
_15.0.0 = _12.0.0;
(*_40) = _6 & _6;
_7 = core::ptr::addr_of_mut!((*_7));
_9 = core::ptr::addr_of_mut!((*_7));
_25 = Field::<u8>(Variant(_49.2, 3), 0) * Field::<u8>(Variant(_49.2, 3), 0);
(*_23) = (-32608_i16) | 11239_i16;
_66 = (_30, Move(_5), Move(_23), Move(_23));
Goto(bb48)
}
bb48 = {
_46 = -_52;
_47 = core::ptr::addr_of!(_37);
_61 = core::ptr::addr_of_mut!((*_7));
(*_53) = _24 * _24;
_53 = core::ptr::addr_of!(_24);
(*_7) = !_50;
(*_47) = _18.0.1 * _15.0.1;
(*_53) = -_34;
(*_53) = _32;
_22 = [_15.1,_41,_15.1,_12.1,_41,_41,_15.1,_15.1];
_23 = core::ptr::addr_of!(_16);
_9 = core::ptr::addr_of_mut!((*_7));
_10 = _25 - _29;
_51.fld2 = core::ptr::addr_of_mut!(_51.fld3);
(*_7) = _50 * _50;
_18.3 = [_52,_52];
(*_47) = _12.0.1;
match _20 {
0 => bb20,
1 => bb26,
2 => bb49,
3 => bb50,
4 => bb51,
5 => bb52,
6 => bb53,
304412647835951491036967876389500465850 => bb55,
_ => bb54
}
}
bb49 = {
Return()
}
bb50 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb51 = {
(*_5) = _2;
_13 = _1 < (*_5);
(*_5) = _2;
_16 = (-21523_i16) + (-12241_i16);
_29 = _12.0.1 as u8;
_13 = _6 ^ _6;
_12.0.0 = _18.0.0 | _18.0.0;
_21 = (*_5);
_4 = [4285334672052464957_usize,2_usize,18334299322717449804_usize,6_usize,1483017788151443252_usize,10022408334809704680_usize,4_usize,10307292954287795352_usize];
_15.0 = _12.0;
_30 = 23502_u16 + 61571_u16;
(*_5) = _14;
_18.3 = [_28,_19];
(*_5) = _21;
(*_5) = _2;
_15.0.1 = _18.0.1 + _12.0.1;
_12.0 = _15.0;
_23 = core::ptr::addr_of!(_16);
_34 = (-7810416277076687957_i64) as f32;
_1 = _21;
(*_5) = _14;
(*_23) = 24500_i16 << _29;
_25 = _29;
_35 = _12.0.0 ^ _15.0.0;
match _10 {
0 => bb21,
1 => bb22,
2 => bb26,
200 => bb28,
_ => bb27
}
}
bb52 = {
place!(Field::<u16>(Variant(_42.2, 3), 2)) = _30 ^ _30;
(*_7) = _29 as usize;
_35 = _12.0.0;
Goto(bb45)
}
bb53 = {
_4 = [16004323495389955796_usize,7_usize,3_usize,12568160809674935366_usize,1_usize,7_usize,1_usize,5155225445526989979_usize];
_6 = true ^ true;
_12.0.0 = 1570474561_u32 as u64;
_12.1 = 44_i8 + 71_i8;
_5 = core::ptr::addr_of!(_1);
(*_5) = _2;
(*_5) = _3;
_6 = false ^ false;
_12.0.1 = (-1713812116_i32) as f64;
(*_5) = _2;
(*_5) = _3;
(*_5) = _3;
(*_5) = _2;
(*_5) = _3;
(*_5) = _2;
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _2;
(*_5) = _2;
_12.3 = [102_isize,45_isize];
_12.3 = [(-18_isize),(-9223372036854775808_isize)];
(*_5) = _2;
(*_5) = _2;
_8 = 100843534267736781561376190892924277879_i128;
match RET {
0 => bb6,
1 => bb10,
2 => bb11,
3 => bb12,
17735886480197728674 => bb14,
_ => bb13
}
}
bb54 = {
_3 = _2;
Goto(bb9)
}
bb55 = {
_31 = (_56,);
(*_7) = _50;
_66.3 = core::ptr::addr_of!((*_23));
(*_23) = (-1385_i16);
(*_53) = _32;
(*_47) = Field::<u16>(Variant(_49.2, 3), 2) as f64;
_69 = [_45,_45,_45,_45,_45];
_51.fld6 = _52 as u128;
(*_53) = _32 * _32;
_36 = _14;
_28 = _46 | _19;
(*_7) = (*_47) as usize;
(*_40) = !_6;
(*_47) = (-2682155474899927610_i64) as f64;
_72.2 = core::ptr::addr_of!((*_23));
_68 = _51.fld6 as isize;
_72.3 = core::ptr::addr_of!((*_23));
_42.2 = Move(_49.2);
(*_7) = _50 - _50;
(*_40) = (*_53) <= (*_53);
_51.fld0 = [_51.fld6,_51.fld6,_51.fld6,_51.fld6,_51.fld6];
_1 = _14;
(*_23) = _12.0.0 as i16;
(*_40) = (*_47) != _18.0.1;
_56 = [(*_40),(*_40),(*_40),(*_40),(*_40)];
(*_53) = _15.1 as f32;
Goto(bb56)
}
bb56 = {
Call(_76 = dump_var(Move(_45), Move(_14), Move(_31), Move(_41)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_76 = dump_var(Move(_1), Move(_8), Move(_13), Move(_39)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_76 = dump_var(Move(_16), Move(_30), Move(_25), Move(_28)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_76 = dump_var(Move(_44), Move(_50), Move(_20), Move(_4)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: *const char) -> char {
mir! {
type RET = char;
let _2: Adt22;
let _3: f64;
let _4: u16;
let _5: (f64,);
let _6: *const i16;
let _7: &'static i64;
let _8: Adt21;
let _9: &'static &'static mut [char; 3];
let _10: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _11: isize;
let _12: f64;
let _13: &'static u32;
let _14: ([usize; 8], &'static mut i64);
let _15: isize;
let _16: [bool; 5];
let _17: [i16; 8];
let _18: &'static mut bool;
let _19: i8;
let _20: i32;
let _21: isize;
let _22: *mut Adt51;
let _23: isize;
let _24: (*const Adt21,);
let _25: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _26: Adt51;
let _27: f64;
let _28: isize;
let _29: (Adt72, [u128; 1]);
let _30: u128;
let _31: isize;
let _32: bool;
let _33: f64;
let _34: f32;
let _35: bool;
let _36: i32;
let _37: *const char;
let _38: u32;
let _39: &'static &'static mut [char; 3];
let _40: f32;
let _41: &'static mut [i8; 1];
let _42: Adt56;
let _43: &'static mut bool;
let _44: char;
let _45: bool;
let _46: isize;
let _47: &'static mut bool;
let _48: u16;
let _49: (u64, f64);
let _50: *mut Adt51;
let _51: f32;
let _52: &'static mut &'static u32;
let _53: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _54: isize;
let _55: bool;
let _56: &'static mut [i8; 1];
let _57: [u32; 3];
let _58: i128;
let _59: &'static &'static mut [char; 3];
let _60: Adt21;
let _61: isize;
let _62: [i8; 8];
let _63: *const Adt51;
let _64: ([i16; 8],);
let _65: char;
let _66: isize;
let _67: f64;
let _68: bool;
let _69: *mut usize;
let _70: Adt22;
let _71: *const char;
let _72: isize;
let _73: f64;
let _74: u128;
let _75: [i32; 5];
let _76: (isize, u16, i32, u64);
let _77: u128;
let _78: *const f32;
let _79: char;
let _80: isize;
let _81: *const f64;
let _82: isize;
let _83: u16;
let _84: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _85: f64;
let _86: [i8; 8];
let _87: u32;
let _88: *const &'static (isize, u16, i32, u64);
let _89: u8;
let _90: f32;
let _91: u64;
let _92: &'static mut &'static u32;
let _93: [i32; 7];
let _94: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _95: ();
let _96: ();
{
_1 = core::ptr::addr_of!(RET);
_1 = core::ptr::addr_of!((*_1));
RET = '\u{5a3d6}';
(*_1) = '\u{9b1e0}';
(*_1) = '\u{89157}';
(*_1) = '\u{fecfd}';
(*_1) = '\u{73193}';
(*_1) = '\u{fdf5d}';
(*_1) = '\u{855a9}';
Call(_3 = fn18((*_1), Move(_1), (*_1)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = core::ptr::addr_of!(RET);
(*_1) = '\u{255ed}';
(*_1) = '\u{c2204}';
Goto(bb2)
}
bb2 = {
(*_1) = '\u{f44c9}';
(*_1) = '\u{f99db}';
_5.0 = 1105481546054828164_usize as f64;
(*_1) = '\u{6650}';
RET = '\u{25aec}';
(*_1) = '\u{86030}';
(*_1) = '\u{ef195}';
(*_1) = '\u{72f2a}';
(*_1) = '\u{a20e3}';
(*_1) = '\u{cd2a1}';
Goto(bb3)
}
bb3 = {
(*_1) = '\u{f39a7}';
(*_1) = '\u{d9fa8}';
(*_1) = '\u{c8a7b}';
_8.fld4 = 129233041085201911187706125487216229240_i128;
_8.fld1 = RET;
(*_1) = _8.fld1;
_8.fld2 = 12490108034733136253_u64 as f32;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld1 = (*_1);
(*_1) = _8.fld1;
_8.fld3 = 3696197318_u32 - 965805944_u32;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld4 = (-72113254244790788788022179785169297923_i128) | 25801782121421800391039820699901486832_i128;
(*_1) = _8.fld1;
RET = _8.fld1;
(*_1) = _8.fld1;
Goto(bb4)
}
bb4 = {
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_3 = _8.fld2 as f64;
(*_1) = _8.fld1;
_8.fld4 = (-100206528137581964910412356839499078899_i128) | 8251313053784389600556892145800686868_i128;
_5.0 = (-28693_i16) as f64;
_8.fld0 = 5400043636043061606_i64 >> _8.fld3;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_11 = 27082_u16 as isize;
_5 = (_3,);
(*_1) = _8.fld1;
_12 = _5.0;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_13 = &_8.fld3;
RET = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_14.0 = [6_usize,2_usize,16121417218456544765_usize,1_usize,7_usize,15566542896313550811_usize,1287711320864410580_usize,3970049902829210669_usize];
(*_1) = _8.fld1;
_8.fld1 = (*_1);
_7 = &_8.fld0;
Goto(bb5)
}
bb5 = {
_4 = 51803_u16 ^ 54091_u16;
(*_1) = _8.fld1;
Goto(bb6)
}
bb6 = {
_14.0 = [7_usize,1_usize,1_usize,15165573082323910772_usize,6038688325126990234_usize,1_usize,5151216165917794312_usize,4501816516374058832_usize];
(*_1) = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_15 = _11;
(*_1) = _8.fld1;
_2 = Adt22::Variant0 { fld0: false,fld1: 155214806084438029381181172722508852804_u128,fld2: _15,fld3: 6_usize,fld4: 6511574502439667632_u64,fld5: _8,fld6: 120_u8,fld7: _4 };
_8.fld3 = Field::<Adt21>(Variant(_2, 0), 5).fld3 + Field::<Adt21>(Variant(_2, 0), 5).fld3;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld4 = _8.fld4 + _8.fld4;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld0 = (*_7) + (*_7);
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld0 = (*_1) as i64;
_3 = _12 - _5.0;
_15 = _11;
_5.0 = 133727649_i32 as f64;
(*_1) = _8.fld1;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld1 = (*_1);
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld2 = _8.fld2 - _8.fld2;
place!(Field::<bool>(Variant(_2, 0), 0)) = (*_7) < (*_7);
(*_1) = _8.fld1;
_2 = Adt22::Variant3 { fld0: 51_u8,fld1: (*_1),fld2: _4 };
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = -_5.0;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = _8.fld1;
_4 = Field::<u16>(Variant(_2, 3), 2);
_14.1 = &mut (*_7);
Goto(bb7)
}
bb7 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
RET = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u16>(Variant(_2, 3), 2)) = _4;
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u16>(Variant(_2, 3), 2)) = _4 + _4;
_14.0 = [9184610094961619334_usize,6157425060896416674_usize,7_usize,1_usize,7_usize,13421868498294696701_usize,8700597704692755367_usize,5_usize];
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u16>(Variant(_2, 3), 2)) = _4;
_12 = _3 + _3;
_11 = _15 >> _4;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb8)
}
bb8 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u8>(Variant(_2, 3), 0)) = 95_u8 + 61_u8;
Goto(bb9)
}
bb9 = {
_5 = (_3,);
_19 = 27_i8 | 69_i8;
_11 = _15;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_20 = 1574524697_i32 - 509085947_i32;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_15 = _12 as isize;
_3 = _12 + _5.0;
_3 = _12 * _5.0;
RET = Field::<char>(Variant(_2, 3), 1);
_23 = _15;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb10)
}
bb10 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u16>(Variant(_2, 3), 2)) = 9166073131899114341_u64 as u16;
_17 = [15294_i16,(-31504_i16),(-3069_i16),30302_i16,(-16910_i16),26400_i16,28030_i16,(-28528_i16)];
_25.2.fld3 = 255328159_u32 + 2250917500_u32;
_11 = _15 ^ _15;
_5.0 = -_12;
_24.0 = core::ptr::addr_of!(_25.2);
_12 = _5.0 + _3;
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb11)
}
bb11 = {
_25.2.fld0 = 4085513908867644898_i64 * (-5691651412909771682_i64);
_11 = _15 - _15;
_23 = _15 - _11;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_20 = _25.2.fld0 as i32;
_15 = _23 + _23;
place!(Field::<u8>(Variant(_2, 3), 0)) = 111_u8;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_3 = 1_usize as f64;
_29.0.fld5 = core::ptr::addr_of!(_25.2);
_17 = [7860_i16,9254_i16,(-30878_i16),26551_i16,(-13637_i16),(-19900_i16),(-5140_i16),(-30655_i16)];
_29.0.fld1 = core::ptr::addr_of!(_25.2.fld2);
_14.1 = &mut _25.2.fld0;
RET = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_29.0.fld5 = Move(_24.0);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
match Field::<u8>(Variant(_2, 3), 0) {
0 => bb12,
111 => bb14,
_ => bb13
}
}
bb12 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u8>(Variant(_2, 3), 0)) = 95_u8 + 61_u8;
Goto(bb9)
}
bb13 = {
_4 = 51803_u16 ^ 54091_u16;
(*_1) = _8.fld1;
Goto(bb6)
}
bb14 = {
_5 = (_12,);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_30 = !217312279237198098072757684628604956901_u128;
match Field::<u8>(Variant(_2, 3), 0) {
0 => bb6,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
111 => bb21,
_ => bb20
}
}
bb15 = {
_4 = 51803_u16 ^ 54091_u16;
(*_1) = _8.fld1;
Goto(bb6)
}
bb16 = {
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_3 = _8.fld2 as f64;
(*_1) = _8.fld1;
_8.fld4 = (-100206528137581964910412356839499078899_i128) | 8251313053784389600556892145800686868_i128;
_5.0 = (-28693_i16) as f64;
_8.fld0 = 5400043636043061606_i64 >> _8.fld3;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_11 = 27082_u16 as isize;
_5 = (_3,);
(*_1) = _8.fld1;
_12 = _5.0;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_13 = &_8.fld3;
RET = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_14.0 = [6_usize,2_usize,16121417218456544765_usize,1_usize,7_usize,15566542896313550811_usize,1287711320864410580_usize,3970049902829210669_usize];
(*_1) = _8.fld1;
_8.fld1 = (*_1);
_7 = &_8.fld0;
Goto(bb5)
}
bb17 = {
_25.2.fld0 = 4085513908867644898_i64 * (-5691651412909771682_i64);
_11 = _15 - _15;
_23 = _15 - _11;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_20 = _25.2.fld0 as i32;
_15 = _23 + _23;
place!(Field::<u8>(Variant(_2, 3), 0)) = 111_u8;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_3 = 1_usize as f64;
_29.0.fld5 = core::ptr::addr_of!(_25.2);
_17 = [7860_i16,9254_i16,(-30878_i16),26551_i16,(-13637_i16),(-19900_i16),(-5140_i16),(-30655_i16)];
_29.0.fld1 = core::ptr::addr_of!(_25.2.fld2);
_14.1 = &mut _25.2.fld0;
RET = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_29.0.fld5 = Move(_24.0);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
match Field::<u8>(Variant(_2, 3), 0) {
0 => bb12,
111 => bb14,
_ => bb13
}
}
bb18 = {
(*_1) = '\u{f44c9}';
(*_1) = '\u{f99db}';
_5.0 = 1105481546054828164_usize as f64;
(*_1) = '\u{6650}';
RET = '\u{25aec}';
(*_1) = '\u{86030}';
(*_1) = '\u{ef195}';
(*_1) = '\u{72f2a}';
(*_1) = '\u{a20e3}';
(*_1) = '\u{cd2a1}';
Goto(bb3)
}
bb19 = {
(*_1) = '\u{f39a7}';
(*_1) = '\u{d9fa8}';
(*_1) = '\u{c8a7b}';
_8.fld4 = 129233041085201911187706125487216229240_i128;
_8.fld1 = RET;
(*_1) = _8.fld1;
_8.fld2 = 12490108034733136253_u64 as f32;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld1 = (*_1);
(*_1) = _8.fld1;
_8.fld3 = 3696197318_u32 - 965805944_u32;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld4 = (-72113254244790788788022179785169297923_i128) | 25801782121421800391039820699901486832_i128;
(*_1) = _8.fld1;
RET = _8.fld1;
(*_1) = _8.fld1;
Goto(bb4)
}
bb20 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<u8>(Variant(_2, 3), 0)) = 95_u8 + 61_u8;
Goto(bb9)
}
bb21 = {
_29.0.fld7 = 6163906564453433133_u64 | 3038008485312842483_u64;
_12 = _5.0;
_1 = core::ptr::addr_of!((*_1));
_31 = (-114534785548214738641235330412841182134_i128) as isize;
_16 = [false,false,false,true,false];
(*_1) = Field::<char>(Variant(_2, 3), 1);
_31 = _23 * _11;
_29.0.fld4.0 = [false,false,true,false,true];
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<char>(Variant(_2, 3), 1)) = (*_1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_23 = _31 ^ _31;
_27 = _12 - _5.0;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_22 = core::ptr::addr_of_mut!(_26);
RET = Field::<char>(Variant(_2, 3), 1);
_29.1 = [_30];
place!(Field::<u8>(Variant(_2, 3), 0)) = 27_u8 + 75_u8;
_4 = !Field::<u16>(Variant(_2, 3), 2);
_4 = !Field::<u16>(Variant(_2, 3), 2);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = -_27;
_30 = 194166651584693159931647798612870150322_u128;
_29.0.fld4 = (_16,);
Goto(bb22)
}
bb22 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = _4 as f64;
_19 = (-48_i8) | (-85_i8);
_34 = 21987_i16 as f32;
Goto(bb23)
}
bb23 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb24)
}
bb24 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_29.0.fld2 = core::ptr::addr_of_mut!(_26);
_38 = _29.0.fld7 as u32;
_30 = !18487389083720936302209575295736788847_u128;
Goto(bb25)
}
bb25 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
_24.0 = Move(_29.0.fld5);
Goto(bb26)
}
bb26 = {
_29.0.fld1 = core::ptr::addr_of!(_34);
_19 = (-33_i8) >> _23;
_11 = _34 as isize;
_27 = Field::<u16>(Variant(_2, 3), 2) as f64;
_29.0.fld1 = core::ptr::addr_of!(_34);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_31 = !_15;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_32 = _23 <= _23;
_29.0.fld7 = 12155308114862035549_u64 * 6589257223255803796_u64;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = _19 as f64;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_29.1 = [_30];
_12 = -_5.0;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb27)
}
bb27 = {
_45 = _32 ^ _32;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_18 = &mut _45;
_3 = _5.0;
_34 = _29.0.fld7 as f32;
(*_18) = _38 > _38;
_22 = core::ptr::addr_of_mut!(_26);
(*_18) = _23 >= _23;
(*_18) = !_32;
_29.0.fld0 = [_30,_30,_30,_30,_30];
_22 = core::ptr::addr_of_mut!((*_22));
(*_1) = Field::<char>(Variant(_2, 3), 1);
_28 = 16328_i16 as isize;
_28 = _23 | _31;
(*_18) = _32 == _32;
_20 = -1953579309_i32;
_23 = !_31;
_29.0.fld0 = [_30,_30,_30,_30,_30];
_49.1 = -_12;
Goto(bb28)
}
bb28 = {
_29.0.fld4 = (_16,);
_4 = !Field::<u16>(Variant(_2, 3), 2);
_29.0.fld2 = core::ptr::addr_of_mut!((*_22));
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_36 = _20 >> _19;
_50 = core::ptr::addr_of_mut!((*_22));
(*_1) = Field::<char>(Variant(_2, 3), 1);
_51 = _34 + _34;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_46 = -_23;
_14.0 = [1267951060039761319_usize,2752208966136843457_usize,1_usize,4_usize,16346532009669022267_usize,3_usize,17417728432506880241_usize,4778307531342944952_usize];
_44 = Field::<char>(Variant(_2, 3), 1);
_48 = _4 << _15;
_3 = -_12;
_28 = _23;
(*_18) = _32 & _32;
place!(Field::<char>(Variant(_2, 3), 1)) = (*_1);
Goto(bb29)
}
bb29 = {
_12 = _5.0 * _5.0;
_29.0.fld7 = !11155303955484734139_u64;
_5 = (_12,);
_30 = !130443215132950225106050658858632931825_u128;
_14.0 = [1_usize,0_usize,6879042704160244008_usize,5_usize,6565450630685401751_usize,6976635881191370514_usize,1_usize,5_usize];
_54 = _15 - _28;
place!(Field::<char>(Variant(_2, 3), 1)) = (*_1);
_37 = Move(_1);
_38 = 4039329238_u32 << _28;
_31 = _54;
_29.0.fld4 = (_16,);
(*_18) = _32;
_50 = core::ptr::addr_of_mut!((*_22));
_1 = Move(_37);
_43 = Move(_18);
_43 = &mut _32;
_49.0 = _29.0.fld7 & _29.0.fld7;
(*_22) = Adt51::Variant1 { fld0: _5,fld1: Field::<char>(Variant(_2, 3), 1),fld2: _49,fld3: _19 };
_50 = core::ptr::addr_of_mut!((*_22));
place!(Field::<(u64, f64)>(Variant((*_50), 1), 2)).1 = -Field::<(f64,)>(Variant((*_22), 1), 0).0;
place!(Field::<(f64,)>(Variant((*_50), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 - Field::<(u64, f64)>(Variant((*_50), 1), 2).1;
_29.0.fld2 = core::ptr::addr_of_mut!((*_50));
Call(place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = core::intrinsics::transmute(_23), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = _30 as f64;
place!(Field::<char>(Variant((*_50), 1), 1)) = RET;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = !_49.0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (_12,);
place!(Field::<char>(Variant((*_22), 1), 1)) = _44;
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
_50 = core::ptr::addr_of_mut!(_26);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = _12;
place!(Field::<(u64, f64)>(Variant((*_50), 1), 2)).1 = _30 as f64;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
Goto(bb31)
}
bb31 = {
_60.fld1 = Field::<char>(Variant((*_22), 1), 1);
(*_43) = Field::<i8>(Variant((*_22), 1), 3) <= Field::<i8>(Variant((*_50), 1), 3);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = 154154360776533365887954190544331859945_i128 as f64;
place!(Field::<char>(Variant((*_50), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
_34 = -_51;
place!(Field::<char>(Variant((*_50), 1), 1)) = RET;
_60.fld0 = _38 as i64;
(*_43) = true;
(*_22) = Adt51::Variant1 { fld0: _5,fld1: _60.fld1,fld2: _49,fld3: _19 };
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_29.0.fld7, _5.0);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = Field::<(f64,)>(Variant((*_22), 1), 0).0;
_31 = _54 ^ _23;
_29.0.fld4.0 = [(*_43),(*_43),(*_43),(*_43),(*_43)];
place!(Field::<char>(Variant((*_22), 1), 1)) = _44;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _19;
_60.fld4 = 71658955346711618660752639439447924679_i128;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = _49.0 + _49.0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_29.0.fld7, Field::<(f64,)>(Variant((*_22), 1), 0).0);
match _60.fld4 {
0 => bb16,
1 => bb2,
2 => bb19,
3 => bb25,
4 => bb14,
71658955346711618660752639439447924679 => bb33,
_ => bb32
}
}
bb32 = {
(*_1) = '\u{f39a7}';
(*_1) = '\u{d9fa8}';
(*_1) = '\u{c8a7b}';
_8.fld4 = 129233041085201911187706125487216229240_i128;
_8.fld1 = RET;
(*_1) = _8.fld1;
_8.fld2 = 12490108034733136253_u64 as f32;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld1 = (*_1);
(*_1) = _8.fld1;
_8.fld3 = 3696197318_u32 - 965805944_u32;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_8.fld4 = (-72113254244790788788022179785169297923_i128) | 25801782121421800391039820699901486832_i128;
(*_1) = _8.fld1;
RET = _8.fld1;
(*_1) = _8.fld1;
Goto(bb4)
}
bb33 = {
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_49.0, Field::<(f64,)>(Variant((*_22), 1), 0).0);
_64.0 = [(-4158_i16),10583_i16,12431_i16,(-5305_i16),(-8478_i16),(-24765_i16),8600_i16,(-21134_i16)];
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
_46 = Field::<i8>(Variant((*_22), 1), 3) as isize;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _46 as i8;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
_61 = _48 as isize;
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
_57 = [_38,_38,_38];
_28 = _61 << Field::<i8>(Variant((*_22), 1), 3);
match _60.fld4 {
0 => bb6,
1 => bb18,
71658955346711618660752639439447924679 => bb34,
_ => bb5
}
}
bb34 = {
_62 = [Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant((*_22), 1), 3),Field::<i8>(Variant(_26, 1), 3)];
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 - Field::<(u64, f64)>(Variant((*_22), 1), 2).1;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = _29.0.fld7 * _49.0;
match _60.fld4 {
0 => bb28,
71658955346711618660752639439447924679 => bb35,
_ => bb9
}
}
bb35 = {
_35 = (*_43) | (*_43);
(*_43) = Field::<i8>(Variant((*_22), 1), 3) > _19;
_34 = _51 - _51;
_28 = _31 & _31;
RET = _44;
(*_43) = _35 | _35;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
_60 = Adt21 { fld0: (-3890131725568291525_i64),fld1: Field::<char>(Variant((*_22), 1), 1),fld2: _34,fld3: _38,fld4: (-10364763072619606424129769865442369750_i128) };
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
_29.0.fld5 = Move(_24.0);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = Field::<(f64,)>(Variant((*_22), 1), 0).0 + Field::<(f64,)>(Variant((*_22), 1), 0).0;
_24 = (Move(_29.0.fld5),);
_52 = &mut _13;
_70 = Adt22::Variant0 { fld0: (*_43),fld1: _30,fld2: _54,fld3: 6146710401753312193_usize,fld4: Field::<(u64, f64)>(Variant((*_22), 1), 2).0,fld5: _60,fld6: Field::<u8>(Variant(_2, 3), 0),fld7: _48 };
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = Field::<u8>(Variant(_70, 0), 6) as u64;
place!(Field::<char>(Variant((*_22), 1), 1)) = _44;
(*_43) = Field::<(u64, f64)>(Variant((*_22), 1), 2).0 <= Field::<(u64, f64)>(Variant((*_22), 1), 2).0;
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<Adt21>(Variant(_70, 0), 5).fld1;
place!(Field::<char>(Variant((*_22), 1), 1)) = _60.fld1;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_49.0, Field::<(f64,)>(Variant((*_22), 1), 0).0);
match Field::<Adt21>(Variant(_70, 0), 5).fld4 {
0 => bb10,
1 => bb36,
329917603848318857039244837566325841706 => bb38,
_ => bb37
}
}
bb36 = {
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_3 = _8.fld2 as f64;
(*_1) = _8.fld1;
_8.fld4 = (-100206528137581964910412356839499078899_i128) | 8251313053784389600556892145800686868_i128;
_5.0 = (-28693_i16) as f64;
_8.fld0 = 5400043636043061606_i64 >> _8.fld3;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_11 = 27082_u16 as isize;
_5 = (_3,);
(*_1) = _8.fld1;
_12 = _5.0;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_13 = &_8.fld3;
RET = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_14.0 = [6_usize,2_usize,16121417218456544765_usize,1_usize,7_usize,15566542896313550811_usize,1287711320864410580_usize,3970049902829210669_usize];
(*_1) = _8.fld1;
_8.fld1 = (*_1);
_7 = &_8.fld0;
Goto(bb5)
}
bb37 = {
_25.2.fld0 = 4085513908867644898_i64 * (-5691651412909771682_i64);
_11 = _15 - _15;
_23 = _15 - _11;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_20 = _25.2.fld0 as i32;
_15 = _23 + _23;
place!(Field::<u8>(Variant(_2, 3), 0)) = 111_u8;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_3 = 1_usize as f64;
_29.0.fld5 = core::ptr::addr_of!(_25.2);
_17 = [7860_i16,9254_i16,(-30878_i16),26551_i16,(-13637_i16),(-19900_i16),(-5140_i16),(-30655_i16)];
_29.0.fld1 = core::ptr::addr_of!(_25.2.fld2);
_14.1 = &mut _25.2.fld0;
RET = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_29.0.fld5 = Move(_24.0);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
match Field::<u8>(Variant(_2, 3), 0) {
0 => bb12,
111 => bb14,
_ => bb13
}
}
bb38 = {
_12 = -Field::<(f64,)>(Variant((*_22), 1), 0).0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
_29.0.fld5 = core::ptr::addr_of!(place!(Field::<Adt21>(Variant(_70, 0), 5)));
(*_52) = &_38;
_36 = Field::<char>(Variant(_2, 3), 1) as i32;
place!(Field::<char>(Variant((*_22), 1), 1)) = _44;
_57 = [_38,_60.fld3,_38];
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 - Field::<(u64, f64)>(Variant((*_22), 1), 2).1;
_65 = Field::<char>(Variant((*_22), 1), 1);
_12 = Field::<(f64,)>(Variant((*_22), 1), 0).0 - Field::<(f64,)>(Variant((*_22), 1), 0).0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
place!(Field::<i8>(Variant((*_22), 1), 3)) = _30 as i8;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _19;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _19 + _19;
(*_52) = &_60.fld3;
_47 = &mut (*_43);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = Field::<(f64,)>(Variant((*_22), 1), 0).0 - Field::<(f64,)>(Variant((*_22), 1), 0).0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
(*_52) = &_38;
_30 = Field::<u128>(Variant(_70, 0), 1);
_5.0 = Field::<(f64,)>(Variant((*_22), 1), 0).0 - Field::<(u64, f64)>(Variant((*_22), 1), 2).1;
_60.fld1 = Field::<char>(Variant((*_22), 1), 1);
(*_47) = _35;
(*_47) = Field::<bool>(Variant(_70, 0), 0);
_68 = (*_47) & (*_47);
match _60.fld0 {
0 => bb12,
1 => bb33,
2 => bb17,
3 => bb39,
340282366920938463459484475706199919931 => bb41,
_ => bb40
}
}
bb39 = {
_60.fld1 = Field::<char>(Variant((*_22), 1), 1);
(*_43) = Field::<i8>(Variant((*_22), 1), 3) <= Field::<i8>(Variant((*_50), 1), 3);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = 154154360776533365887954190544331859945_i128 as f64;
place!(Field::<char>(Variant((*_50), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
_34 = -_51;
place!(Field::<char>(Variant((*_50), 1), 1)) = RET;
_60.fld0 = _38 as i64;
(*_43) = true;
(*_22) = Adt51::Variant1 { fld0: _5,fld1: _60.fld1,fld2: _49,fld3: _19 };
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_29.0.fld7, _5.0);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = Field::<(f64,)>(Variant((*_22), 1), 0).0;
_31 = _54 ^ _23;
_29.0.fld4.0 = [(*_43),(*_43),(*_43),(*_43),(*_43)];
place!(Field::<char>(Variant((*_22), 1), 1)) = _44;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _19;
_60.fld4 = 71658955346711618660752639439447924679_i128;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = _49.0 + _49.0;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_29.0.fld7, Field::<(f64,)>(Variant((*_22), 1), 0).0);
match _60.fld4 {
0 => bb16,
1 => bb2,
2 => bb19,
3 => bb25,
4 => bb14,
71658955346711618660752639439447924679 => bb33,
_ => bb32
}
}
bb40 = {
(*_1) = Field::<char>(Variant(_2, 3), 1);
Goto(bb24)
}
bb41 = {
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
_29.0.fld0 = [Field::<u128>(Variant(_70, 0), 1),Field::<u128>(Variant(_70, 0), 1),Field::<u128>(Variant(_70, 0), 1),Field::<u128>(Variant(_70, 0), 1),Field::<u128>(Variant(_70, 0), 1)];
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = _5.0 - _12;
_30 = Field::<u128>(Variant(_70, 0), 1) | Field::<u128>(Variant(_70, 0), 1);
_77 = _30 ^ _30;
(*_47) = Field::<i8>(Variant((*_22), 1), 3) < Field::<i8>(Variant((*_22), 1), 3);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (_5.0,);
(*_47) = Field::<i8>(Variant((*_22), 1), 3) >= Field::<i8>(Variant((*_22), 1), 3);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (Field::<(u64, f64)>(Variant((*_22), 1), 2).1,);
_63 = core::ptr::addr_of!((*_22));
place!(Field::<(u64, f64)>(Variant((*_63), 1), 2)) = (_29.0.fld7, Field::<(f64,)>(Variant((*_63), 1), 0).0);
_50 = core::ptr::addr_of_mut!((*_63));
place!(Field::<(f64,)>(Variant((*_63), 1), 0)) = (Field::<(u64, f64)>(Variant((*_50), 1), 2).1,);
place!(Field::<char>(Variant((*_22), 1), 1)) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<i8>(Variant((*_50), 1), 3)) = _19;
_71 = core::ptr::addr_of!(place!(Field::<char>(Variant((*_22), 1), 1)));
_74 = _30 * _30;
_17 = [5986_i16,12111_i16,20568_i16,(-26811_i16),10613_i16,(-9997_i16),19585_i16,26834_i16];
place!(Field::<(f64,)>(Variant((*_63), 1), 0)).0 = Field::<Adt21>(Variant(_70, 0), 5).fld2 as f64;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 - _5.0;
_78 = core::ptr::addr_of!(place!(Field::<Adt21>(Variant(_70, 0), 5)).fld2);
place!(Field::<i8>(Variant((*_50), 1), 3)) = _19 - _19;
Call(place!(Field::<(u64, f64)>(Variant((*_63), 1), 2)).0 = core::intrinsics::bswap(_49.0), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
place!(Field::<i8>(Variant((*_50), 1), 3)) = 10784_i16 as i8;
place!(Field::<Adt21>(Variant(_70, 0), 5)).fld1 = (*_71);
(*_71) = _65;
_76.3 = _49.0 >> _46;
_33 = _28 as f64;
_12 = Field::<(u64, f64)>(Variant((*_63), 1), 2).1 + _5.0;
(*_78) = _60.fld2 + _51;
_29.0.fld4.0 = [(*_47),(*_47),(*_47),(*_47),(*_47)];
place!(Field::<i8>(Variant((*_63), 1), 3)) = _19;
(*_78) = _60.fld2 * _60.fld2;
place!(Field::<(u64, f64)>(Variant((*_63), 1), 2)).1 = Field::<(f64,)>(Variant((*_22), 1), 0).0 * _33;
place!(Field::<(u64, f64)>(Variant((*_63), 1), 2)).0 = !_76.3;
(*_78) = _60.fld2 - _34;
_29.0.fld6 = !Field::<u128>(Variant(_70, 0), 1);
_36 = _20 | _20;
(*_22) = Adt51::Variant1 { fld0: _5,fld1: _65,fld2: _49,fld3: _19 };
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).1 = -Field::<(f64,)>(Variant((*_22), 1), 0).0;
_61 = _28;
(*_52) = &place!(Field::<Adt21>(Variant(_70, 0), 5)).fld3;
place!(Field::<Adt21>(Variant(_70, 0), 5)).fld0 = _74 as i64;
place!(Field::<u8>(Variant(_2, 3), 0)) = Field::<u8>(Variant(_70, 0), 6) >> Field::<(u64, f64)>(Variant((*_22), 1), 2).0;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = _5;
(*_78) = _34;
_67 = _60.fld4 as f64;
Goto(bb43)
}
bb43 = {
place!(Field::<char>(Variant(_2, 3), 1)) = _44;
_66 = !_28;
(*_78) = _60.fld2 * _51;
place!(Field::<Adt21>(Variant(_70, 0), 5)).fld4 = !_60.fld4;
(*_47) = Field::<bool>(Variant(_70, 0), 0) ^ _68;
_58 = _54 as i128;
place!(Field::<(f64,)>(Variant((*_22), 1), 0)) = (_33,);
_70 = Move(_2);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = _76.3;
(*_52) = &_60.fld3;
_23 = Field::<(f64,)>(Variant((*_22), 1), 0).0 as isize;
_15 = _28;
_82 = _61 >> _77;
place!(Field::<u16>(Variant(_70, 3), 2)) = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 as u16;
Goto(bb44)
}
bb44 = {
_33 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1 + Field::<(u64, f64)>(Variant((*_22), 1), 2).1;
_74 = !_77;
_29.0.fld4 = (_16,);
Goto(bb45)
}
bb45 = {
(*_22) = Adt51::Variant1 { fld0: _5,fld1: _60.fld1,fld2: _49,fld3: _19 };
place!(Field::<i8>(Variant((*_22), 1), 3)) = _74 as i8;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
match _60.fld0 {
0 => bb43,
1 => bb34,
2 => bb32,
3 => bb46,
340282366920938463459484475706199919931 => bb48,
_ => bb47
}
}
bb46 = {
_14.0 = [7_usize,1_usize,1_usize,15165573082323910772_usize,6038688325126990234_usize,1_usize,5151216165917794312_usize,4501816516374058832_usize];
(*_1) = _8.fld1;
(*_1) = _8.fld1;
(*_1) = _8.fld1;
_15 = _11;
(*_1) = _8.fld1;
_2 = Adt22::Variant0 { fld0: false,fld1: 155214806084438029381181172722508852804_u128,fld2: _15,fld3: 6_usize,fld4: 6511574502439667632_u64,fld5: _8,fld6: 120_u8,fld7: _4 };
_8.fld3 = Field::<Adt21>(Variant(_2, 0), 5).fld3 + Field::<Adt21>(Variant(_2, 0), 5).fld3;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld4 = _8.fld4 + _8.fld4;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld0 = (*_7) + (*_7);
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld0 = (*_1) as i64;
_3 = _12 - _5.0;
_15 = _11;
_5.0 = 133727649_i32 as f64;
(*_1) = _8.fld1;
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld1 = (*_1);
place!(Field::<Adt21>(Variant(_2, 0), 5)).fld2 = _8.fld2 - _8.fld2;
place!(Field::<bool>(Variant(_2, 0), 0)) = (*_7) < (*_7);
(*_1) = _8.fld1;
_2 = Adt22::Variant3 { fld0: 51_u8,fld1: (*_1),fld2: _4 };
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = -_5.0;
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = _8.fld1;
_4 = Field::<u16>(Variant(_2, 3), 2);
_14.1 = &mut (*_7);
Goto(bb7)
}
bb47 = {
(*_1) = '\u{f44c9}';
(*_1) = '\u{f99db}';
_5.0 = 1105481546054828164_usize as f64;
(*_1) = '\u{6650}';
RET = '\u{25aec}';
(*_1) = '\u{86030}';
(*_1) = '\u{ef195}';
(*_1) = '\u{72f2a}';
(*_1) = '\u{a20e3}';
(*_1) = '\u{cd2a1}';
Goto(bb3)
}
bb48 = {
place!(Field::<(f64,)>(Variant((*_22), 1), 0)).0 = Field::<(u64, f64)>(Variant((*_22), 1), 2).1;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
place!(Field::<i8>(Variant((*_22), 1), 3)) = Field::<(u64, f64)>(Variant((*_22), 1), 2).0 as i8;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)).0 = _76.3;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = _49;
_54 = _66 + _28;
_55 = (*_47);
place!(Field::<char>(Variant((*_22), 1), 1)) = _60.fld1;
place!(Field::<i8>(Variant((*_22), 1), 3)) = _19 << _23;
match _60.fld4 {
0 => bb37,
1 => bb2,
2 => bb49,
3 => bb50,
4 => bb51,
329917603848318857039244837566325841706 => bb53,
_ => bb52
}
}
bb49 = {
_1 = core::ptr::addr_of!(RET);
(*_1) = '\u{255ed}';
(*_1) = '\u{c2204}';
Goto(bb2)
}
bb50 = {
_4 = 51803_u16 ^ 54091_u16;
(*_1) = _8.fld1;
Goto(bb6)
}
bb51 = {
(*_22) = Adt51::Variant1 { fld0: _5,fld1: _60.fld1,fld2: _49,fld3: _19 };
place!(Field::<i8>(Variant((*_22), 1), 3)) = _74 as i8;
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
match _60.fld0 {
0 => bb43,
1 => bb34,
2 => bb32,
3 => bb46,
340282366920938463459484475706199919931 => bb48,
_ => bb47
}
}
bb52 = {
_29.0.fld7 = 6163906564453433133_u64 | 3038008485312842483_u64;
_12 = _5.0;
_1 = core::ptr::addr_of!((*_1));
_31 = (-114534785548214738641235330412841182134_i128) as isize;
_16 = [false,false,false,true,false];
(*_1) = Field::<char>(Variant(_2, 3), 1);
_31 = _23 * _11;
_29.0.fld4.0 = [false,false,true,false,true];
(*_1) = Field::<char>(Variant(_2, 3), 1);
place!(Field::<char>(Variant(_2, 3), 1)) = (*_1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_23 = _31 ^ _31;
_27 = _12 - _5.0;
(*_1) = Field::<char>(Variant(_2, 3), 1);
_22 = core::ptr::addr_of_mut!(_26);
RET = Field::<char>(Variant(_2, 3), 1);
_29.1 = [_30];
place!(Field::<u8>(Variant(_2, 3), 0)) = 27_u8 + 75_u8;
_4 = !Field::<u16>(Variant(_2, 3), 2);
_4 = !Field::<u16>(Variant(_2, 3), 2);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
(*_1) = Field::<char>(Variant(_2, 3), 1);
_12 = -_27;
_30 = 194166651584693159931647798612870150322_u128;
_29.0.fld4 = (_16,);
Goto(bb22)
}
bb53 = {
place!(Field::<(u64, f64)>(Variant((*_22), 1), 2)) = (_76.3, Field::<(f64,)>(Variant((*_22), 1), 0).0);
(*_47) = !_55;
_29.0.fld5 = Move(_24.0);
Goto(bb54)
}
bb54 = {
Call(_95 = dump_var(Move(_32), Move(_46), Move(_54), Move(_77)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_95 = dump_var(Move(_15), Move(_16), Move(_28), Move(_20)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_95 = dump_var(Move(_57), Move(_65), Move(_48), Move(_61)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_95 = dump_var(Move(_68), Move(_66), Move(_55), Move(_38)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: char,mut _2: *const char,mut _3: char) -> f64 {
mir! {
type RET = f64;
let _4: f32;
let _5: u16;
let _6: *const &'static (isize, u16, i32, u64);
let _7: isize;
let _8: u16;
let _9: [i8; 1];
let _10: f32;
let _11: bool;
let _12: isize;
let _13: ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _14: isize;
let _15: isize;
let _16: &'static mut &'static u32;
let _17: Adt56;
let _18: [i16; 8];
let _19: *mut Adt51;
let _20: *const f64;
let _21: f32;
let _22: Adt37;
let _23: (u16, *const char, *const i16, *const i16);
let _24: &'static mut &'static u32;
let _25: u64;
let _26: Adt44;
let _27: &'static (isize, u16, i32, u64);
let _28: u8;
let _29: f64;
let _30: f32;
let _31: &'static f64;
let _32: *mut Adt51;
let _33: [u64; 8];
let _34: (u16, Adt37, &'static mut i64);
let _35: f64;
let _36: *mut Adt51;
let _37: &'static mut bool;
let _38: isize;
let _39: char;
let _40: ([usize; 8], &'static mut i64);
let _41: *const f64;
let _42: i64;
let _43: *const f32;
let _44: u8;
let _45: i64;
let _46: &'static i64;
let _47: ();
let _48: ();
{
_2 = core::ptr::addr_of!(_3);
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_2 = core::ptr::addr_of!((*_2));
Goto(bb1)
}
bb1 = {
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
RET = 42146_u16 as f64;
(*_2) = _1;
_5 = 5448_u16 - 25466_u16;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = _5 as f32;
_1 = (*_2);
Goto(bb2)
}
bb2 = {
(*_2) = _1;
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-127358786569144831681125962933584749364_i128) as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-23255_i16) as f32;
_7 = !(-9223372036854775808_isize);
_3 = _1;
(*_2) = _1;
(*_2) = _1;
_9 = [(-17_i8)];
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_7 = -(-9223372036854775808_isize);
(*_2) = _1;
Goto(bb3)
}
bb3 = {
(*_2) = _1;
_12 = _5 as isize;
(*_2) = _1;
_11 = _4 > _4;
(*_2) = _1;
_11 = false | true;
_10 = 2041061062_u32 as f32;
Goto(bb4)
}
bb4 = {
_3 = _1;
Goto(bb5)
}
bb5 = {
_10 = _4 + _4;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = 130956793958446168064096250894285217365_i128 as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_13.2.fld2 = (-4764035390906239021_i64) as f32;
_3 = _1;
(*_2) = _1;
RET = 240237783002981596521465263396495683033_u128 as f64;
_3 = _1;
(*_2) = _1;
_10 = 6_usize as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
Call((*_2) = fn19(Move(_2), _11, _13.2.fld2, _1, _12), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_13.2.fld3 = 1980575054_u32 + 2172382272_u32;
_13.2.fld4 = (-127300409350621227621151535987196847708_i128) | (-46923727707101588284251868893153524783_i128);
_13.2 = Adt21 { fld0: 8214178784516391819_i64,fld1: _3,fld2: _4,fld3: 2062005583_u32,fld4: 20403877861464247396417800941555245208_i128 };
_10 = _13.2.fld2;
_13.2.fld3 = 1278745112_u32;
_4 = -_13.2.fld2;
_13.0 = [_13.2.fld3,_13.2.fld3,_13.2.fld3];
_7 = _12 | _12;
_15 = _7 << _13.2.fld4;
_13.2.fld2 = -_4;
_7 = -_15;
Goto(bb7)
}
bb7 = {
_8 = _5;
_12 = -_7;
_15 = _12 >> _13.2.fld0;
_15 = _10 as isize;
_10 = _4 - _4;
_13.2 = Adt21 { fld0: (-5036447910815133445_i64),fld1: _3,fld2: _10,fld3: 146710525_u32,fld4: 43212643208091328082059269013747071929_i128 };
_2 = core::ptr::addr_of!(_1);
(*_2) = _13.2.fld1;
_13.2 = Adt21 { fld0: 2087164742969978832_i64,fld1: (*_2),fld2: _10,fld3: 398335428_u32,fld4: (-65198937084592490119256485420725533497_i128) };
(*_2) = _13.2.fld1;
(*_2) = _3;
RET = _7 as f64;
_14 = _11 as isize;
(*_2) = _3;
match _13.2.fld4 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb8,
5 => bb9,
6 => bb10,
275083429836345973344118122011042677959 => bb12,
_ => bb11
}
}
bb8 = {
_13.2.fld3 = 1980575054_u32 + 2172382272_u32;
_13.2.fld4 = (-127300409350621227621151535987196847708_i128) | (-46923727707101588284251868893153524783_i128);
_13.2 = Adt21 { fld0: 8214178784516391819_i64,fld1: _3,fld2: _4,fld3: 2062005583_u32,fld4: 20403877861464247396417800941555245208_i128 };
_10 = _13.2.fld2;
_13.2.fld3 = 1278745112_u32;
_4 = -_13.2.fld2;
_13.0 = [_13.2.fld3,_13.2.fld3,_13.2.fld3];
_7 = _12 | _12;
_15 = _7 << _13.2.fld4;
_13.2.fld2 = -_4;
_7 = -_15;
Goto(bb7)
}
bb9 = {
(*_2) = _1;
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-127358786569144831681125962933584749364_i128) as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-23255_i16) as f32;
_7 = !(-9223372036854775808_isize);
_3 = _1;
(*_2) = _1;
(*_2) = _1;
_9 = [(-17_i8)];
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_7 = -(-9223372036854775808_isize);
(*_2) = _1;
Goto(bb3)
}
bb10 = {
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
RET = 42146_u16 as f64;
(*_2) = _1;
_5 = 5448_u16 - 25466_u16;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = _5 as f32;
_1 = (*_2);
Goto(bb2)
}
bb11 = {
(*_2) = _1;
_12 = _5 as isize;
(*_2) = _1;
_11 = _4 > _4;
(*_2) = _1;
_11 = false | true;
_10 = 2041061062_u32 as f32;
Goto(bb4)
}
bb12 = {
_9 = [84_i8];
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
_18 = [19941_i16,10399_i16,3630_i16,(-30499_i16),25576_i16,31150_i16,(-21728_i16),(-14848_i16)];
RET = _14 as f64;
(*_2) = _3;
_13.2 = Adt21 { fld0: (-8298499515866780539_i64),fld1: _3,fld2: _4,fld3: 3193779959_u32,fld4: (-92228391226568960859285881947601286493_i128) };
(*_2) = _13.2.fld1;
_7 = _12 | _12;
(*_2) = _3;
(*_2) = _3;
(*_2) = _13.2.fld1;
match _13.2.fld4 {
0 => bb10,
1 => bb3,
2 => bb13,
3 => bb14,
248053975694369502604088725484166924963 => bb16,
_ => bb15
}
}
bb13 = {
_8 = _5;
_12 = -_7;
_15 = _12 >> _13.2.fld0;
_15 = _10 as isize;
_10 = _4 - _4;
_13.2 = Adt21 { fld0: (-5036447910815133445_i64),fld1: _3,fld2: _10,fld3: 146710525_u32,fld4: 43212643208091328082059269013747071929_i128 };
_2 = core::ptr::addr_of!(_1);
(*_2) = _13.2.fld1;
_13.2 = Adt21 { fld0: 2087164742969978832_i64,fld1: (*_2),fld2: _10,fld3: 398335428_u32,fld4: (-65198937084592490119256485420725533497_i128) };
(*_2) = _13.2.fld1;
(*_2) = _3;
RET = _7 as f64;
_14 = _11 as isize;
(*_2) = _3;
match _13.2.fld4 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb8,
5 => bb9,
6 => bb10,
275083429836345973344118122011042677959 => bb12,
_ => bb11
}
}
bb14 = {
_3 = _1;
Goto(bb5)
}
bb15 = {
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
RET = 42146_u16 as f64;
(*_2) = _1;
_5 = 5448_u16 - 25466_u16;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = _5 as f32;
_1 = (*_2);
Goto(bb2)
}
bb16 = {
_11 = !true;
_15 = _13.2.fld4 as isize;
(*_2) = _3;
(*_2) = _13.2.fld1;
(*_2) = _3;
(*_2) = _3;
_3 = (*_2);
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
(*_2) = _3;
_4 = _10 + _10;
(*_2) = _3;
(*_2) = _13.2.fld1;
_7 = _12 | _12;
RET = _13.2.fld0 as f64;
(*_2) = _13.2.fld1;
_15 = 116_i8 as isize;
_22 = Adt37::Variant1 { fld0: 206261698110740116069688194314186714766_u128,fld1: 200_u8,fld2: _7,fld3: 1043275759_i32 };
_3 = (*_2);
place!(Field::<isize>(Variant(_22, 1), 2)) = _7;
_13.2.fld3 = 3132690351_u32 & 2722306623_u32;
_23.0 = _8 << Field::<isize>(Variant(_22, 1), 2);
match _13.2.fld4 {
0 => bb1,
1 => bb5,
2 => bb12,
3 => bb8,
248053975694369502604088725484166924963 => bb18,
_ => bb17
}
}
bb17 = {
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
RET = 42146_u16 as f64;
(*_2) = _1;
_5 = 5448_u16 - 25466_u16;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = _5 as f32;
_1 = (*_2);
Goto(bb2)
}
bb18 = {
_18 = [23800_i16,12119_i16,(-18058_i16),(-24557_i16),26435_i16,(-15049_i16),(-24724_i16),(-30418_i16)];
RET = (-78_i8) as f64;
Goto(bb19)
}
bb19 = {
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
_1 = _13.2.fld1;
match _13.2.fld0 {
340282366920938463455076107915901430917 => bb20,
_ => bb15
}
}
bb20 = {
_13.2 = Adt21 { fld0: 4101133684241651361_i64,fld1: _1,fld2: _10,fld3: 2957980170_u32,fld4: (-105875125977507877825244978233876591950_i128) };
_2 = core::ptr::addr_of!((*_2));
_13.2 = Adt21 { fld0: 8798668283780900758_i64,fld1: (*_2),fld2: _4,fld3: 475683884_u32,fld4: (-68846179174258419693181668336644728702_i128) };
(*_2) = _3;
_25 = 15623037096622582792_u64 >> _13.2.fld0;
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
_26.fld1 = [4_usize,14969102153656374226_usize,8137162991363267345_usize,17906998572677006675_usize,18077803911149314282_usize,0_usize,2_usize,3_usize];
_13.2.fld4 = (-19769759214349115394530248638335281120_i128);
_25 = 4809417379771626238_u64 | 9147875808586991329_u64;
RET = 40_u8 as f64;
_20 = core::ptr::addr_of!(RET);
(*_20) = _13.2.fld4 as f64;
(*_2) = _3;
(*_2) = _13.2.fld1;
_7 = Field::<isize>(Variant(_22, 1), 2) ^ _12;
_2 = core::ptr::addr_of!((*_2));
_28 = 15_u8 ^ 253_u8;
place!(Field::<i32>(Variant(_22, 1), 3)) = (*_20) as i32;
(*_20) = Field::<i32>(Variant(_22, 1), 3) as f64;
_23.1 = core::ptr::addr_of!((*_2));
(*_2) = _3;
(*_2) = _3;
_30 = _4;
match _13.2.fld3 {
0 => bb6,
1 => bb21,
475683884 => bb23,
_ => bb22
}
}
bb21 = {
_10 = _4 + _4;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = 130956793958446168064096250894285217365_i128 as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_13.2.fld2 = (-4764035390906239021_i64) as f32;
_3 = _1;
(*_2) = _1;
RET = 240237783002981596521465263396495683033_u128 as f64;
_3 = _1;
(*_2) = _1;
_10 = 6_usize as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
Call((*_2) = fn19(Move(_2), _11, _13.2.fld2, _1, _12), ReturnTo(bb6), UnwindUnreachable())
}
bb22 = {
(*_2) = _1;
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-127358786569144831681125962933584749364_i128) as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-23255_i16) as f32;
_7 = !(-9223372036854775808_isize);
_3 = _1;
(*_2) = _1;
(*_2) = _1;
_9 = [(-17_i8)];
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_7 = -(-9223372036854775808_isize);
(*_2) = _1;
Goto(bb3)
}
bb23 = {
_17 = Adt56::Variant3 { fld0: _11,fld1: 221074060877279918469727935583275823487_u128 };
place!(Field::<u128>(Variant(_17, 3), 1)) = 9521509521235031009686521485640034450_u128;
_13.2.fld2 = _4 * _30;
_21 = (*_20) as f32;
_13.2.fld4 = -105625546147239315710389563026024548536_i128;
(*_20) = Field::<u128>(Variant(_17, 3), 1) as f64;
place!(Field::<bool>(Variant(_17, 3), 0)) = _11 & _11;
(*_2) = _3;
_5 = _23.0 & _23.0;
_18 = [4137_i16,6993_i16,30147_i16,23236_i16,(-2142_i16),27300_i16,(-28821_i16),(-23319_i16)];
_5 = _23.0 * _23.0;
(*_2) = _3;
(*_2) = _13.2.fld1;
(*_20) = _13.2.fld2 as f64;
_7 = Field::<isize>(Variant(_22, 1), 2) & _12;
RET = _8 as f64;
_26.fld1 = [13036033460681476690_usize,12160542317371060092_usize,15584578855257379553_usize,16569461284179628991_usize,11357967845302525037_usize,11382498344794888262_usize,491330623147871516_usize,3_usize];
place!(Field::<u128>(Variant(_22, 1), 0)) = (*_20) as u128;
(*_2) = _3;
match Field::<u128>(Variant(_17, 3), 1) {
0 => bb11,
1 => bb24,
2 => bb25,
3 => bb26,
4 => bb27,
5 => bb28,
6 => bb29,
9521509521235031009686521485640034450 => bb31,
_ => bb30
}
}
bb24 = {
_3 = _1;
Goto(bb5)
}
bb25 = {
_10 = _4 + _4;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = 130956793958446168064096250894285217365_i128 as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_13.2.fld2 = (-4764035390906239021_i64) as f32;
_3 = _1;
(*_2) = _1;
RET = 240237783002981596521465263396495683033_u128 as f64;
_3 = _1;
(*_2) = _1;
_10 = 6_usize as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
Call((*_2) = fn19(Move(_2), _11, _13.2.fld2, _1, _12), ReturnTo(bb6), UnwindUnreachable())
}
bb26 = {
_13.2 = Adt21 { fld0: 4101133684241651361_i64,fld1: _1,fld2: _10,fld3: 2957980170_u32,fld4: (-105875125977507877825244978233876591950_i128) };
_2 = core::ptr::addr_of!((*_2));
_13.2 = Adt21 { fld0: 8798668283780900758_i64,fld1: (*_2),fld2: _4,fld3: 475683884_u32,fld4: (-68846179174258419693181668336644728702_i128) };
(*_2) = _3;
_25 = 15623037096622582792_u64 >> _13.2.fld0;
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
_26.fld1 = [4_usize,14969102153656374226_usize,8137162991363267345_usize,17906998572677006675_usize,18077803911149314282_usize,0_usize,2_usize,3_usize];
_13.2.fld4 = (-19769759214349115394530248638335281120_i128);
_25 = 4809417379771626238_u64 | 9147875808586991329_u64;
RET = 40_u8 as f64;
_20 = core::ptr::addr_of!(RET);
(*_20) = _13.2.fld4 as f64;
(*_2) = _3;
(*_2) = _13.2.fld1;
_7 = Field::<isize>(Variant(_22, 1), 2) ^ _12;
_2 = core::ptr::addr_of!((*_2));
_28 = 15_u8 ^ 253_u8;
place!(Field::<i32>(Variant(_22, 1), 3)) = (*_20) as i32;
(*_20) = Field::<i32>(Variant(_22, 1), 3) as f64;
_23.1 = core::ptr::addr_of!((*_2));
(*_2) = _3;
(*_2) = _3;
_30 = _4;
match _13.2.fld3 {
0 => bb6,
1 => bb21,
475683884 => bb23,
_ => bb22
}
}
bb27 = {
(*_2) = _1;
_12 = _5 as isize;
(*_2) = _1;
_11 = _4 > _4;
(*_2) = _1;
_11 = false | true;
_10 = 2041061062_u32 as f32;
Goto(bb4)
}
bb28 = {
_18 = [23800_i16,12119_i16,(-18058_i16),(-24557_i16),26435_i16,(-15049_i16),(-24724_i16),(-30418_i16)];
RET = (-78_i8) as f64;
Goto(bb19)
}
bb29 = {
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
RET = 42146_u16 as f64;
(*_2) = _1;
_5 = 5448_u16 - 25466_u16;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = _5 as f32;
_1 = (*_2);
Goto(bb2)
}
bb30 = {
(*_2) = _1;
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-127358786569144831681125962933584749364_i128) as f32;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_4 = (-23255_i16) as f32;
_7 = !(-9223372036854775808_isize);
_3 = _1;
(*_2) = _1;
(*_2) = _1;
_9 = [(-17_i8)];
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
(*_2) = _1;
_7 = -(-9223372036854775808_isize);
(*_2) = _1;
Goto(bb3)
}
bb31 = {
_23.0 = _30 as u16;
(*_2) = _13.2.fld1;
_12 = _7 << _5;
_23.0 = !_5;
_13.2.fld2 = _25 as f32;
(*_20) = 13549614939242772533_usize as f64;
_13.2.fld4 = (-156064760956145001868784228833323791207_i128);
_34.0 = !_23.0;
(*_2) = _13.2.fld1;
(*_2) = _13.2.fld1;
(*_20) = 30555_i16 as f64;
_40.0 = [1646318015199194815_usize,2_usize,7_usize,3_usize,11544376019066230583_usize,5_usize,16760702026295240627_usize,9660861773375202261_usize];
(*_20) = 0_usize as f64;
_13.2.fld3 = 1027579297_u32;
_33 = [_25,_25,_25,_25,_25,_25,_25,_25];
Goto(bb32)
}
bb32 = {
place!(Field::<isize>(Variant(_22, 1), 2)) = _7 & _7;
_22 = Adt37::Variant1 { fld0: Field::<u128>(Variant(_17, 3), 1),fld1: _28,fld2: _12,fld3: 743948584_i32 };
_28 = Field::<u8>(Variant(_22, 1), 1) | Field::<u8>(Variant(_22, 1), 1);
_35 = (*_20) + (*_20);
(*_2) = _3;
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u128>(Variant(_22, 1), 0) / Field::<u128>(Variant(_22, 1), 0);
place!(Field::<i32>(Variant(_22, 1), 3)) = (-905822474_i32);
match Field::<u128>(Variant(_22, 1), 0) {
0 => bb6,
1 => bb11,
2 => bb25,
3 => bb4,
4 => bb15,
5 => bb33,
9521509521235031009686521485640034450 => bb35,
_ => bb34
}
}
bb33 = {
_3 = _1;
Goto(bb5)
}
bb34 = {
(*_2) = _1;
_12 = _5 as isize;
(*_2) = _1;
_11 = _4 > _4;
(*_2) = _1;
_11 = false | true;
_10 = 2041061062_u32 as f32;
Goto(bb4)
}
bb35 = {
(*_20) = _35;
(*_2) = _13.2.fld1;
(*_20) = _35;
_13.2.fld3 = Field::<u128>(Variant(_22, 1), 0) as u32;
_26.fld0 = Adt18::Variant1 { fld0: _13.2.fld0,fld1: _4,fld2: Field::<i32>(Variant(_22, 1), 3),fld3: (-111_i8) };
(*_2) = _13.2.fld1;
_37 = &mut _11;
(*_37) = !Field::<bool>(Variant(_17, 3), 0);
(*_20) = _35 * _35;
_29 = (*_20) * (*_20);
_40.0 = _26.fld1;
_39 = (*_2);
match Field::<i64>(Variant(_26.fld0, 1), 0) {
0 => bb19,
1 => bb2,
2 => bb27,
8798668283780900758 => bb36,
_ => bb31
}
}
bb36 = {
(*_37) = (*_20) == _35;
(*_20) = _29;
(*_20) = _29 * _29;
_41 = core::ptr::addr_of!((*_20));
(*_37) = Field::<bool>(Variant(_17, 3), 0);
(*_41) = _35;
(*_37) = Field::<bool>(Variant(_17, 3), 0);
(*_2) = _39;
(*_20) = _29;
match _13.2.fld0 {
0 => bb14,
1 => bb2,
2 => bb11,
8798668283780900758 => bb37,
_ => bb22
}
}
bb37 = {
_13.2.fld3 = 1748540718_u32;
_7 = _12;
_34.2 = &mut _13.2.fld0;
(*_20) = _29 * _29;
(*_2) = _39;
_44 = _28 >> _12;
(*_2) = _3;
_40.0 = _26.fld1;
_43 = core::ptr::addr_of!(_21);
(*_43) = _30 * Field::<f32>(Variant(_26.fld0, 1), 1);
(*_2) = _39;
(*_43) = _4 * _4;
_29 = -(*_20);
_7 = (*_2) as isize;
_42 = (-43131835143616444077320228327901265688_i128) as i64;
Goto(bb38)
}
bb38 = {
Call(_47 = dump_var(Move(_18), Move(_15), Move(_7), Move(_3)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_47 = dump_var(Move(_1), Move(_33), Move(_25), Move(_9)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: *const char,mut _2: bool,mut _3: f32,mut _4: char,mut _5: isize) -> char {
mir! {
type RET = char;
let _6: u32;
let _7: bool;
let _8: &'static mut &'static u32;
let _9: isize;
let _10: isize;
let _11: [i32; 7];
let _12: bool;
let _13: u16;
let _14: *const i16;
let _15: (Adt44, *const &'static (isize, u16, i32, u64));
let _16: &'static mut &'static u32;
let _17: u16;
let _18: (u64, f64);
let _19: (u16, *const char, *const i16, *const i16);
let _20: [u128; 1];
let _21: *const [char; 3];
let _22: &'static mut [char; 3];
let _23: &'static [u8; 3];
let _24: *const Adt21;
let _25: [char; 3];
let _26: (&'static mut i128, bool);
let _27: &'static f64;
let _28: [u32; 3];
let _29: u32;
let _30: *const char;
let _31: ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _32: f32;
let _33: *const ((u64, f64), i8, &'static [u8; 3], [isize; 2]);
let _34: *const i16;
let _35: f64;
let _36: [i8; 1];
let _37: [isize; 2];
let _38: i64;
let _39: Adt18;
let _40: bool;
let _41: isize;
let _42: isize;
let _43: f32;
let _44: bool;
let _45: (u16, *const char, *const i16, *const i16);
let _46: isize;
let _47: &'static mut [i8; 1];
let _48: f32;
let _49: &'static mut bool;
let _50: &'static mut i64;
let _51: u128;
let _52: *const &'static (isize, u16, i32, u64);
let _53: Adt21;
let _54: *mut &'static mut [i8; 1];
let _55: Adt21;
let _56: &'static [u8; 3];
let _57: &'static (isize, u16, i32, u64);
let _58: bool;
let _59: i16;
let _60: [char; 3];
let _61: f32;
let _62: *const [char; 3];
let _63: *const f64;
let _64: &'static &'static mut [char; 3];
let _65: f32;
let _66: u32;
let _67: &'static mut [i8; 1];
let _68: char;
let _69: u16;
let _70: [u128; 5];
let _71: &'static mut [char; 3];
let _72: [i8; 1];
let _73: [usize; 8];
let _74: (Adt72, [u128; 1]);
let _75: *const [char; 3];
let _76: *const ([u32; 3], &'static (isize, u16, i32, u64), Adt21);
let _77: Adt22;
let _78: char;
let _79: [u64; 8];
let _80: Adt18;
let _81: i32;
let _82: (u16, Adt37, &'static mut i64);
let _83: char;
let _84: u64;
let _85: isize;
let _86: [i16; 1];
let _87: [u128; 1];
let _88: (Adt72, [u128; 1]);
let _89: ();
let _90: ();
{
_3 = 186_u8 as f32;
RET = _4;
_6 = 2422432273_u32;
_4 = RET;
_1 = core::ptr::addr_of!(RET);
(*_1) = _4;
_7 = (*_1) == (*_1);
(*_1) = _4;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_7 = (*_1) > (*_1);
(*_1) = _4;
(*_1) = _4;
_1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
2422432273 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_2 = _7;
_2 = _7 ^ _7;
_7 = _2;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_2 = _7;
_5 = !(-44_isize);
(*_1) = _4;
_2 = !_7;
(*_1) = _4;
(*_1) = _4;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
2422432273 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_9 = _5 >> _5;
_7 = !_2;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_12 = _2;
(*_1) = _4;
(*_1) = _4;
_2 = (*_1) <= (*_1);
(*_1) = _4;
Goto(bb10)
}
bb10 = {
_15.0.fld0 = Adt18::Variant0 { fld0: _3,fld1: 25479_i16 };
(*_1) = _4;
(*_1) = _4;
_4 = (*_1);
match _6 {
0 => bb3,
1 => bb11,
2422432273 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
(*_1) = _4;
_6 = 477300004_u32 >> _5;
_9 = _5 ^ _5;
_2 = !_7;
_12 = _9 > _5;
_4 = (*_1);
_15.0.fld0 = Adt18::Variant1 { fld0: 1677369702256602199_i64,fld1: _3,fld2: (-474546992_i32),fld3: (-27_i8) };
(*_1) = _4;
place!(Field::<f32>(Variant(_15.0.fld0, 1), 1)) = (-84864233935121709551899602276573791422_i128) as f32;
place!(Field::<i32>(Variant(_15.0.fld0, 1), 2)) = (-239635171_i32) & (-722069979_i32);
_19.0 = 182_u16;
_18.0 = 181169394658093128_u64 << _9;
_20 = [232385390066972303171960276926906903825_u128];
_15.0.fld1 = [7506482598240964586_usize,4_usize,5_usize,4_usize,3_usize,1_usize,5_usize,2_usize];
Goto(bb14)
}
bb14 = {
_10 = _9 * _9;
_4 = (*_1);
_3 = Field::<f32>(Variant(_15.0.fld0, 1), 1) - Field::<f32>(Variant(_15.0.fld0, 1), 1);
_15.0.fld1 = [14621624007525936444_usize,13643544631240225930_usize,14860561667792691762_usize,0_usize,0_usize,1_usize,15421104989207206023_usize,6_usize];
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_15.0.fld0 = Adt18::Variant1 { fld0: (-4201462702966221612_i64),fld1: _3,fld2: (-1349274952_i32),fld3: 17_i8 };
RET = _4;
(*_1) = _4;
_2 = _4 <= (*_1);
_15.0.fld1 = [3_usize,1398633580249860512_usize,2_usize,4_usize,1_usize,5981299146452479825_usize,712913184700624484_usize,6_usize];
_1 = core::ptr::addr_of!((*_1));
RET = _4;
_20 = [227123723321310198380581681989039728931_u128];
(*_1) = _4;
match _19.0 {
0 => bb15,
1 => bb16,
2 => bb17,
3 => bb18,
182 => bb20,
_ => bb19
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_15.0.fld0 = Adt18::Variant0 { fld0: _3,fld1: 25479_i16 };
(*_1) = _4;
(*_1) = _4;
_4 = (*_1);
match _6 {
0 => bb3,
1 => bb11,
2422432273 => bb13,
_ => bb12
}
}
bb19 = {
Return()
}
bb20 = {
(*_1) = _4;
_6 = 1847202029_u32 & 1084254239_u32;
(*_1) = _4;
_21 = core::ptr::addr_of!(_25);
(*_1) = _4;
(*_21) = [RET,(*_1),(*_1)];
_28 = [_6,_6,_6];
_13 = _19.0 << _18.0;
(*_21) = [(*_1),(*_1),(*_1)];
_19.1 = core::ptr::addr_of!((*_1));
(*_21) = [(*_1),(*_1),(*_1)];
(*_1) = _4;
_15.0.fld0 = Adt18::Variant1 { fld0: 1110487217451698659_i64,fld1: _3,fld2: (-2057732011_i32),fld3: 57_i8 };
place!(Field::<i64>(Variant(_15.0.fld0, 1), 0)) = (-3739677752857518101_i64) | (-4547946006317033945_i64);
(*_21) = [(*_1),(*_1),(*_1)];
(*_1) = _4;
_31.0.0 = _18.0 >> _10;
(*_21) = [(*_1),(*_1),_4];
(*_1) = _4;
(*_1) = _4;
match _19.0 {
0 => bb19,
1 => bb9,
2 => bb21,
182 => bb23,
_ => bb22
}
}
bb21 = {
Return()
}
bb22 = {
Return()
}
bb23 = {
_31.0.1 = 1983128171_i32 as f64;
(*_21) = [(*_1),(*_1),RET];
_35 = _31.0.1 - _31.0.1;
_32 = 2860262358600869955582718463047354259_i128 as f32;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [(-1183128576_i32),1126477453_i32,(-1698947610_i32),317621874_i32,182484809_i32,(-1235004029_i32),1845189308_i32];
match _19.0 {
0 => bb1,
1 => bb16,
2 => bb20,
3 => bb4,
4 => bb14,
5 => bb17,
182 => bb24,
_ => bb19
}
}
bb24 = {
_12 = _2 != _7;
_18.0 = _31.0.0 ^ _31.0.0;
_20 = [49442694524329342930432033758708136719_u128];
_41 = _9 >> _13;
(*_21) = [(*_1),(*_1),(*_1)];
_35 = -_31.0.1;
_26.1 = !_12;
_17 = _19.0 / _19.0;
(*_21) = [(*_1),(*_1),RET];
(*_21) = [(*_1),(*_1),(*_1)];
_31.0.1 = -_35;
_19.1 = core::ptr::addr_of!((*_1));
_39 = Adt18::Variant1 { fld0: Field::<i64>(Variant(_15.0.fld0, 1), 0),fld1: Field::<f32>(Variant(_15.0.fld0, 1), 1),fld2: 580876787_i32,fld3: (-48_i8) };
_30 = core::ptr::addr_of!((*_1));
place!(Field::<i8>(Variant(_15.0.fld0, 1), 3)) = !105_i8;
_42 = _26.1 as isize;
(*_30) = _4;
_36 = [Field::<i8>(Variant(_15.0.fld0, 1), 3)];
(*_1) = _4;
place!(Field::<i8>(Variant(_39, 1), 3)) = Field::<i8>(Variant(_15.0.fld0, 1), 3) * Field::<i8>(Variant(_15.0.fld0, 1), 3);
place!(Field::<i32>(Variant(_15.0.fld0, 1), 2)) = (-2021530296_i32) + 932737102_i32;
_44 = _31.0.0 == _18.0;
match _19.0 {
182 => bb26,
_ => bb25
}
}
bb25 = {
Return()
}
bb26 = {
(*_21) = [(*_1),(*_1),(*_1)];
_5 = -_9;
_18.1 = _31.0.1 + _35;
_46 = _5 * _41;
_31.0.1 = -_18.1;
_19.1 = core::ptr::addr_of!((*_1));
(*_1) = _4;
(*_21) = [(*_1),(*_1),RET];
place!(Field::<f32>(Variant(_39, 1), 1)) = Field::<f32>(Variant(_15.0.fld0, 1), 1) + _3;
_20 = [136236316220810621735536645658725008847_u128];
_10 = -_41;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2),Field::<i32>(Variant(_15.0.fld0, 1), 2)];
_31.3 = [_10,_5];
_12 = _44 ^ _2;
_9 = _46 * _42;
(*_21) = [(*_1),(*_1),RET];
place!(Field::<i32>(Variant(_39, 1), 2)) = !Field::<i32>(Variant(_15.0.fld0, 1), 2);
place!(Field::<i32>(Variant(_15.0.fld0, 1), 2)) = Field::<i32>(Variant(_39, 1), 2) * Field::<i32>(Variant(_39, 1), 2);
(*_21) = [(*_1),RET,(*_1)];
_47 = &mut _36;
_22 = &mut (*_21);
_32 = Field::<f32>(Variant(_15.0.fld0, 1), 1) - _3;
_51 = 167341113890630231952733527666471436217_u128 >> Field::<i64>(Variant(_39, 1), 0);
place!(Field::<i32>(Variant(_15.0.fld0, 1), 2)) = Field::<i32>(Variant(_39, 1), 2) - Field::<i32>(Variant(_39, 1), 2);
match _19.0 {
182 => bb28,
_ => bb27
}
}
bb27 = {
_31.0.1 = 1983128171_i32 as f64;
(*_21) = [(*_1),(*_1),RET];
_35 = _31.0.1 - _31.0.1;
_32 = 2860262358600869955582718463047354259_i128 as f32;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [(-1183128576_i32),1126477453_i32,(-1698947610_i32),317621874_i32,182484809_i32,(-1235004029_i32),1845189308_i32];
match _19.0 {
0 => bb1,
1 => bb16,
2 => bb20,
3 => bb4,
4 => bb14,
5 => bb17,
182 => bb24,
_ => bb19
}
}
bb28 = {
_6 = _13 as u32;
_44 = _9 == _5;
_49 = &mut _12;
_20 = [_51];
(*_1) = _4;
(*_1) = _4;
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
_44 = (*_49) < (*_49);
_13 = _17 << _46;
(*_1) = _4;
(*_22) = [(*_1),(*_1),(*_1)];
place!(Field::<f32>(Variant(_39, 1), 1)) = Field::<f32>(Variant(_15.0.fld0, 1), 1) - _32;
(*_1) = _4;
(*_22) = [RET,(*_1),(*_1)];
_53.fld1 = (*_1);
_30 = core::ptr::addr_of!(_55.fld1);
match _19.0 {
0 => bb9,
1 => bb5,
2 => bb3,
3 => bb19,
4 => bb29,
182 => bb31,
_ => bb30
}
}
bb29 = {
_15.0.fld0 = Adt18::Variant0 { fld0: _3,fld1: 25479_i16 };
(*_1) = _4;
(*_1) = _4;
_4 = (*_1);
match _6 {
0 => bb3,
1 => bb11,
2422432273 => bb13,
_ => bb12
}
}
bb30 = {
Return()
}
bb31 = {
(*_30) = (*_1);
(*_30) = (*_1);
(*_1) = (*_30);
_35 = _18.1;
_44 = !(*_49);
(*_1) = _4;
_38 = Field::<i64>(Variant(_39, 1), 0) & Field::<i64>(Variant(_39, 1), 0);
_55.fld0 = !Field::<i64>(Variant(_39, 1), 0);
_28 = [_6,_6,_6];
_32 = Field::<f32>(Variant(_39, 1), 1);
_7 = (*_49) == (*_49);
_19.1 = core::ptr::addr_of!((*_1));
(*_49) = !_44;
(*_1) = (*_30);
(*_49) = _5 == _42;
_4 = (*_1);
(*_22) = [(*_30),_53.fld1,(*_30)];
(*_1) = (*_30);
_34 = core::ptr::addr_of!(_59);
place!(Field::<i64>(Variant(_15.0.fld0, 1), 0)) = _38 << _18.0;
_35 = _31.0.1 * _18.1;
(*_34) = (-79943863423650313042075897838898052695_i128) as i16;
Goto(bb32)
}
bb32 = {
_27 = &_18.1;
_53.fld3 = _6 ^ _6;
_15.0.fld1 = [12051806479312196932_usize,6609024899035685107_usize,2347187255932136221_usize,6_usize,6_usize,4_usize,3_usize,15144683824416066381_usize];
_45.1 = core::ptr::addr_of!((*_30));
_45 = (_19.0, Move(_1), Move(_34), Move(_34));
place!(Field::<i32>(Variant(_15.0.fld0, 1), 2)) = _44 as i32;
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
place!(Field::<i8>(Variant(_15.0.fld0, 1), 3)) = _18.0 as i8;
match _19.0 {
0 => bb6,
1 => bb13,
2 => bb17,
3 => bb28,
4 => bb8,
5 => bb33,
182 => bb35,
_ => bb34
}
}
bb33 = {
Return()
}
bb34 = {
Return()
}
bb35 = {
_55.fld2 = Field::<f32>(Variant(_15.0.fld0, 1), 1) * Field::<f32>(Variant(_39, 1), 1);
RET = (*_30);
place!(Field::<f32>(Variant(_39, 1), 1)) = _53.fld3 as f32;
_64 = &_22;
Goto(bb36)
}
bb36 = {
(*_30) = _4;
_54 = core::ptr::addr_of_mut!(_47);
_15.0.fld1 = [16526029110044885879_usize,4_usize,16349482107778776727_usize,240705567362756825_usize,4_usize,4_usize,5234353296268779532_usize,4_usize];
(*_22) = [_53.fld1,(*_30),(*_30)];
_19.2 = core::ptr::addr_of!(_59);
match _45.0 {
0 => bb26,
1 => bb33,
2 => bb16,
3 => bb4,
4 => bb35,
5 => bb22,
6 => bb10,
182 => bb38,
_ => bb37
}
}
bb37 = {
_10 = _9 * _9;
_4 = (*_1);
_3 = Field::<f32>(Variant(_15.0.fld0, 1), 1) - Field::<f32>(Variant(_15.0.fld0, 1), 1);
_15.0.fld1 = [14621624007525936444_usize,13643544631240225930_usize,14860561667792691762_usize,0_usize,0_usize,1_usize,15421104989207206023_usize,6_usize];
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
(*_1) = _4;
_15.0.fld0 = Adt18::Variant1 { fld0: (-4201462702966221612_i64),fld1: _3,fld2: (-1349274952_i32),fld3: 17_i8 };
RET = _4;
(*_1) = _4;
_2 = _4 <= (*_1);
_15.0.fld1 = [3_usize,1398633580249860512_usize,2_usize,4_usize,1_usize,5981299146452479825_usize,712913184700624484_usize,6_usize];
_1 = core::ptr::addr_of!((*_1));
RET = _4;
_20 = [227123723321310198380581681989039728931_u128];
(*_1) = _4;
match _19.0 {
0 => bb15,
1 => bb16,
2 => bb17,
3 => bb18,
182 => bb20,
_ => bb19
}
}
bb38 = {
_15.0.fld0 = _39;
_54 = core::ptr::addr_of_mut!((*_54));
_60 = [(*_30),(*_30),(*_30)];
_43 = _32;
_53.fld4 = 166619338397355494700238767751443744821_i128;
(*_47) = [Field::<i8>(Variant(_15.0.fld0, 1), 3)];
(*_49) = _44 ^ _7;
_19.2 = core::ptr::addr_of!(_59);
(*_22) = [(*_30),(*_30),(*_30)];
_55 = Adt21 { fld0: Field::<i64>(Variant(_15.0.fld0, 1), 0),fld1: RET,fld2: Field::<f32>(Variant(_39, 1), 1),fld3: _53.fld3,fld4: _53.fld4 };
_38 = Field::<i64>(Variant(_15.0.fld0, 1), 0) * Field::<i64>(Variant(_39, 1), 0);
(*_49) = _9 == _46;
(*_47) = [Field::<i8>(Variant(_15.0.fld0, 1), 3)];
(*_47) = [Field::<i8>(Variant(_15.0.fld0, 1), 3)];
(*_47) = [Field::<i8>(Variant(_15.0.fld0, 1), 3)];
(*_49) = _7 > _7;
(*_49) = _26.1 | _7;
(*_22) = [(*_30),_53.fld1,(*_30)];
_59 = (-18154_i16);
_62 = core::ptr::addr_of!((*_22));
_45.2 = core::ptr::addr_of!(_59);
match _55.fld4 {
0 => bb22,
1 => bb25,
2 => bb12,
3 => bb11,
4 => bb39,
5 => bb40,
166619338397355494700238767751443744821 => bb42,
_ => bb41
}
}
bb39 = {
Return()
}
bb40 = {
(*_30) = _4;
_54 = core::ptr::addr_of_mut!(_47);
_15.0.fld1 = [16526029110044885879_usize,4_usize,16349482107778776727_usize,240705567362756825_usize,4_usize,4_usize,5234353296268779532_usize,4_usize];
(*_22) = [_53.fld1,(*_30),(*_30)];
_19.2 = core::ptr::addr_of!(_59);
match _45.0 {
0 => bb26,
1 => bb33,
2 => bb16,
3 => bb4,
4 => bb35,
5 => bb22,
6 => bb10,
182 => bb38,
_ => bb37
}
}
bb41 = {
_31.0.1 = 1983128171_i32 as f64;
(*_21) = [(*_1),(*_1),RET];
_35 = _31.0.1 - _31.0.1;
_32 = 2860262358600869955582718463047354259_i128 as f32;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [(-1183128576_i32),1126477453_i32,(-1698947610_i32),317621874_i32,182484809_i32,(-1235004029_i32),1845189308_i32];
match _19.0 {
0 => bb1,
1 => bb16,
2 => bb20,
3 => bb4,
4 => bb14,
5 => bb17,
182 => bb24,
_ => bb19
}
}
bb42 = {
(*_30) = _53.fld1;
_18.0 = _31.0.0 >> _55.fld0;
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
(*_22) = [RET,(*_30),(*_30)];
_19.3 = core::ptr::addr_of!(_59);
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
_13 = _45.0;
_27 = &_35;
_55.fld2 = -Field::<f32>(Variant(_15.0.fld0, 1), 1);
place!(Field::<i64>(Variant(_39, 1), 0)) = _38 - _38;
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
_50 = &mut place!(Field::<i64>(Variant(_15.0.fld0, 1), 0));
_55.fld1 = _4;
_55.fld3 = _53.fld3 - _53.fld3;
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
_35 = -_18.1;
_46 = _10 & _5;
_53.fld1 = (*_30);
_49 = &mut _26.1;
(*_49) = _7 >= _7;
(*_22) = _60;
_29 = _53.fld4 as u32;
_54 = core::ptr::addr_of_mut!(_47);
_40 = (*_49) != (*_49);
Goto(bb43)
}
bb43 = {
_74.0.fld1 = core::ptr::addr_of!(place!(Field::<f32>(Variant(_39, 1), 1)));
_14 = core::ptr::addr_of!(_59);
_74.0.fld6 = !_51;
(*_14) = _3 as i16;
_68 = _55.fld1;
_55.fld3 = _10 as u32;
_19.1 = core::ptr::addr_of!((*_30));
Goto(bb44)
}
bb44 = {
(*_47) = [Field::<i8>(Variant(_39, 1), 3)];
(*_49) = !_40;
_6 = _53.fld3;
_66 = _29 - _55.fld3;
(*_50) = Field::<i64>(Variant(_39, 1), 0) - _55.fld0;
_73 = [15339436188851101075_usize,3_usize,13149066404724839260_usize,0_usize,18032102021510917989_usize,0_usize,616334367683192495_usize,6_usize];
(*_30) = _53.fld1;
(*_49) = _7;
_63 = core::ptr::addr_of!(_18.1);
_45.1 = core::ptr::addr_of!((*_30));
(*_30) = RET;
match _55.fld4 {
0 => bb22,
1 => bb21,
166619338397355494700238767751443744821 => bb46,
_ => bb45
}
}
bb45 = {
_31.0.1 = 1983128171_i32 as f64;
(*_21) = [(*_1),(*_1),RET];
_35 = _31.0.1 - _31.0.1;
_32 = 2860262358600869955582718463047354259_i128 as f32;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [(-1183128576_i32),1126477453_i32,(-1698947610_i32),317621874_i32,182484809_i32,(-1235004029_i32),1845189308_i32];
match _19.0 {
0 => bb1,
1 => bb16,
2 => bb20,
3 => bb4,
4 => bb14,
5 => bb17,
182 => bb24,
_ => bb19
}
}
bb46 = {
_38 = (*_50);
_19 = (_45.0, Move(_45.1), Move(_45.2), Move(_14));
(*_50) = Field::<i64>(Variant(_39, 1), 0);
_53.fld0 = Field::<i64>(Variant(_39, 1), 0) | (*_50);
_18.1 = _31.0.1;
(*_49) = _40;
Goto(bb47)
}
bb47 = {
_2 = (*_49);
(*_50) = Field::<i64>(Variant(_39, 1), 0);
(*_22) = [(*_30),(*_30),(*_30)];
_74.1 = [_74.0.fld6];
Goto(bb48)
}
bb48 = {
_18.1 = _6 as f64;
(*_22) = [(*_30),(*_30),(*_30)];
_39 = Adt18::Variant0 { fld0: _55.fld2,fld1: _59 };
_74.0.fld5 = core::ptr::addr_of!(_53);
(*_50) = _38 - _53.fld0;
_72 = (*_47);
(*_47) = [(-74_i8)];
_53.fld4 = _55.fld4 * _55.fld4;
_2 = (*_49);
(*_54) = &mut _72;
_43 = 169_u8 as f32;
(*_50) = _53.fld0 - _38;
(*_30) = _4;
(*_49) = _9 <= _10;
_19.3 = core::ptr::addr_of!(_59);
(*_30) = RET;
(*_22) = [(*_30),(*_30),(*_30)];
match _19.0 {
0 => bb21,
1 => bb49,
182 => bb51,
_ => bb50
}
}
bb49 = {
_31.0.1 = 1983128171_i32 as f64;
(*_21) = [(*_1),(*_1),RET];
_35 = _31.0.1 - _31.0.1;
_32 = 2860262358600869955582718463047354259_i128 as f32;
(*_21) = [(*_1),(*_1),(*_1)];
_11 = [(-1183128576_i32),1126477453_i32,(-1698947610_i32),317621874_i32,182484809_i32,(-1235004029_i32),1845189308_i32];
match _19.0 {
0 => bb1,
1 => bb16,
2 => bb20,
3 => bb4,
4 => bb14,
5 => bb17,
182 => bb24,
_ => bb19
}
}
bb50 = {
Return()
}
bb51 = {
(*_47) = [118_i8];
_78 = _53.fld1;
(*_49) = _40 ^ _7;
_31.3 = [_10,_9];
(*_50) = -_53.fld0;
_28 = [_6,_55.fld3,_6];
_20 = [_74.0.fld6];
_21 = core::ptr::addr_of!((*_22));
(*_50) = _53.fld4 as i64;
_62 = core::ptr::addr_of!((*_22));
_35 = _18.1 + _18.1;
_55.fld2 = -Field::<f32>(Variant(_39, 0), 0);
(*_30) = _53.fld1;
_80 = Adt18::Variant1 { fld0: _38,fld1: Field::<f32>(Variant(_39, 0), 0),fld2: 566575822_i32,fld3: 125_i8 };
_67 = Move((*_54));
(*_62) = [_68,(*_30),(*_30)];
(*_21) = [_53.fld1,(*_30),(*_30)];
_1 = core::ptr::addr_of!((*_30));
_84 = _18.0 >> _53.fld0;
(*_50) = _38 >> _53.fld3;
(*_21) = _60;
Goto(bb52)
}
bb52 = {
Call(_89 = dump_var(Move(_51), Move(_12), Move(_46), Move(_41)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_89 = dump_var(Move(_38), Move(_25), Move(_11), Move(_10)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_89 = dump_var(Move(_40), Move(_13), Move(_36), Move(_84)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_89 = dump_var(Move(_17), Move(_73), Move(_20), _90), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(true), std::hint::black_box('\u{bf940}'), std::hint::black_box(2566840495_u32), std::hint::black_box(281059823485401745224195510932690728834_u128), std::hint::black_box(8299986992358603165_u64), std::hint::black_box((-625740510_i32)));
                
                unsafe {
                    println!("hash: {}", H.finish());
                }
            
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt18 {
Variant0{
fld0: f32,
fld1: i16,

},
Variant1{
fld0: i64,
fld1: f32,
fld2: i32,
fld3: i8,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt21 {
fld0: i64,
fld1: char,
fld2: f32,
fld3: u32,
fld4: i128,
}
#[derive(Debug)]
pub enum Adt22 {
Variant0{
fld0: bool,
fld1: u128,
fld2: isize,
fld3: usize,
fld4: u64,
fld5: Adt21,
fld6: u8,
fld7: u16,

},
Variant1{
fld0: Adt18,

},
Variant2{
fld0: usize,
fld1: u32,
fld2: u8,
fld3: i8,
fld4: i16,
fld5: (isize, u16, i32, u64),

},
Variant3{
fld0: u8,
fld1: char,
fld2: u16,

}}
#[derive(Debug)]
pub enum Adt37 {
Variant0{
fld0: *const f64,
fld1: (u64, f64),

},
Variant1{
fld0: u128,
fld1: u8,
fld2: isize,
fld3: i32,

},
Variant2{
fld0: (isize, u16, i32, u64),
fld1: [char; 3],

}}
#[derive(Debug)]
pub struct Adt44 {
fld0: Adt18,
fld1: [usize; 8],
}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [bool; 5],
fld1: Adt21,
fld2: [isize; 2],
fld3: i8,

},
Variant1{
fld0: (f64,),
fld1: char,
fld2: (u64, f64),
fld3: i8,

},
Variant2{
fld0: ([u32; 3],),
fld1: [bool; 5],
fld2: f64,
fld3: Adt37,
fld4: [i32; 5],
fld5: usize,
fld6: [u8; 1],
fld7: Adt18,

},
Variant3{
fld0: bool,
fld1: [isize; 2],
fld2: isize,
fld3: u16,
fld4: [u8; 1],
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: Adt51,
fld1: *const f64,
fld2: ([u32; 3],),
fld3: [usize; 8],

},
Variant1{
fld0: usize,
fld1: Adt51,
fld2: u128,

},
Variant2{
fld0: [u8; 1],
fld1: usize,
fld2: [i32; 5],
fld3: i32,

},
Variant3{
fld0: bool,
fld1: u128,

}}
#[derive(Debug)]
pub struct Adt72 {
fld0: [u128; 5],
fld1: *const f32,
fld2: *mut Adt51,
fld3: Adt51,
fld4: ([bool; 5],),
fld5: *const Adt21,
fld6: u128,
fld7: u64,
}

