#![feature(custom_mir, core_intrinsics)]
#![recursion_limit = "1024"]
extern crate core;
use core::intrinsics::mir::*;
use std::fmt::Debug;
fn dump_var(
    f: usize,
    var0: usize,
    val0: impl Debug,
    var1: usize,
    val1: impl Debug,
    var2: usize,
    val2: impl Debug,
    var3: usize,
    val3: impl Debug,
) {
    println!("fn:_ = \n_ = \n_ = \n_ = {val3:?}")
}
#[custom_mir(dialect = "runtime")]
fn fn0(_1: bool, _2: char, _3: u32, _4: u128, _5: u64, _6: i32) -> u8 {
    mir! {        let _8: ([bool;
    5],);
        let _9;
        let _10;
        let _11;
        let _12: [u32;
    3];
        let _13: [u64;
    4];
        let _14;
        {        RET = 41;
        _8.0 = [true,false,true,true,false];
        _10 = 8647f32;
        _9 = _10 as u64;
        Call(_3 = core::intrinsics::bswap(520828181), ReturnTo(     bb3), UnwindUnreachable())        }     bb3 = {        _12 = [_3,_3,_3];
        _11 = 61777f64;
        _14 = _9;
        _13 = [_14,_14,_9,_14];
        Call(_10 = fn1(_12, _8, _6, _3, _13, _3, _13, _11), ReturnTo(     bb5), UnwindUnreachable())        }     bb5 = {        Return()        }        }
}
#[custom_mir(dialect = "runtime")]
fn fn1(
    _1: [u32; 3],
    _2: ([bool; 5],),
    _3: i32,
    _4: u32,
    _5: [u64; 4],
    _6: u32,
    _7: [u64; 4],
    _8: f64,
) -> f32 {
    mir! {        let _10;
        let _11;
        let _12: &'static mut &'static u32;
        let _13;
        let _14: (Adt44, &'static ());
        let _15: usize;
        let _16: i128;
        let _18: isize;
        let _19: f64;
        let _20: i128;
        let _22: &'static mut i128;
        let _23;
        let _24;
        let _25;
        let _26: ((u64, f64), i8, &'static [u8;
        3], [isize;
        2]);
        let _27: [char;
        3];
        let _28: Adt21;
        let _29: f32;
        let _30: char;
        let _31: *const Adt51;
        let _32: [u64;
        4];
        let _33: (u64, f64);
        let _34: i16;
        let _35: &'static mut [char;
       3];
        let _36: *const f64;
        let _37;
        let _38: &'static u32;
        let _39: *const [char;
        3];
        let _40: i128;
        let _41: &'static f64;
        let _43: [u64;
      8];
        let _47;
        let _50: (Adt72, [u128;
       1]);
        let _51;
        let _53: (u64, f64);
        let _54: ([usize;
       8], &'static mut i64);
        let _55: u8;
        let _56: isize;
        let _58: ([u32;
        3], &'static ());
        let _59: (Adt72, );
        let _61: [char;
       3];
        {
         _5 = [8305937873316271193,8863860462597846026,8801985703276070835,1424769017024859186];
        _5 = _7;
        _5 = _7;
        _1 = [_4,_6,_6];
        _3 = 2120733956;
        _2.0 = [true,false,false,false,false];
        _2.0 = [true,false,false,false,true];
        RET = 29238f32;
        _4 = _6;
        _5 = [1576541280100533068,3856670566434579238,15309996307344151803,16977727241181944100];
        _8 = 7088589937777754496f64;
        _5 = _7;
        _4 = _6;
        _3 = 0_5_6;
          _4 = _6;
        _3 = 680392086;
        _8 = 0 as f64;
        _6 = _4;
        _7 = _5;
        _3 = 1076812354;
        _3 = 860938768;
        _4 = 9223372036854775807_isize as u32;
        _1 = [_4,_6,_6];
        _10 = RET;
        _3 = 1559617363;
        _8 = 6911f64;
        _2.0 = [false,false,false,true,true];
        _4 = _6;
        RET = _10;
        _6 = _4;
        _8 = 4f64;
        _7 = [17548160344437701952,11426372026585009533,13614066643805271032,8497132777331570984];
        _11 = _8;
        _5 = [9964122630217960380,10081884420072563423,13861358195665678339,13804578857821861311];
        _11 = _4 as f64;
        _11 = _8;
        Call(_8 = fn2(_6, _2.0), ReturnTo(     bb4), UnwindUnreachable())     }     bb4 = {     _11 = _8;
        _11 = _8;
        _14.0.fld1 = [6643332354416339234,12211267406605650735,15353173610285470959,4471963336217506585,6831576323635598947,13637462638082523629,0,1];
        _7 = _5;
        _10 = RET;
        _6 = _4;
        _4 = _6;
        RET = 23f32;
        _14.0.fld0 = Adt18::Variant0 { fld0: _10,fld1: 0 };
        place!(Field::<>(Variant(_14.0.fld0, 0), 0)) = _10;
        _18 = 0 ;
       place!(Field::<>(Variant(_14.0.fld0, 0), 1)) = 12594_i16;
        _6 = _4 ;
        _19 = _8;
        _1 = [_4,_6,_6];
        _6 = _4;
        _15 = 2;
        _14.0.fld0 = Adt18::Variant1 { fld0: 2762510926840636328,fld1: _10,fld2: _3,fld3: 9};
        _14.0.fld0 = Adt18::Variant0 { fld0: _10,fld1: 13768};
        _3 = 0;
        _14.0.fld1 = [_15,_15,_15,_15,_15,_15,_15,_15];
        _14.0.fld1 = [_15,_15,_15,_15,_15,_15,_15,_15];
        _6 = _1[_15];
        _7[_15] = 64194u64;
        _7 = [_5[_15],_5[_15],_5[_15],_5[_15]];
        _11 = _19;
        _16 = 132364386885114667718125060855864194044;
        _10 = Field::<f32>(Variant(_14.0.fld0, 0), 0) - Field::<f32>(Variant(_14.0.fld0, 0), 0);
        _8 = _11;
        _3 = 0;
        _22 = &mut _16;
        (*_22) = 0;
        (*_22) = _8 as i128;
        (*_22) = 136361428947526952698619310571673664024;
        (*_22) = 2497306469674279163988507146084000036;
        (*_22) = 57963190990438077329970270992980527276;
        (*_22) = 169522802956510408727018682759168490134;
        (*_22) = 108782889868736264721341504057826725681;
        RET = Field::<f32>(Variant(_14.0.fld0, 0), 0) * Field::<f32>(Variant(_14.0.fld0, 0), 0);
        (*_22) = 0;
        (*_22) = 108348936017304358909803799768081222874;
        (*_22) = 79553943305927289646668458397294610986;
        _24 = _18 as i32;
        _27 = ['\u{5d5ef}','\u{2501a}','\u{93bc9}'];
        _26.0 = (_5[_15], _8);
        _30 = _27[_15];
        _34 = 0;
    (*_22) = 152603438582260413424769581120148428584;
        _35 = &mut _27;
        _7[_15] = _5[_15] << _1[_15];
        _1 = [_4,_6,_4];
        (*_22) = 0;
        (*_35) = [_30,_30,_30];
        _8 = _26.0.1;
        _26.3 = [_18,_18];
        (*_35) = [_30,_30,_30];
        (*_35) = [_30,_30,_30];
        _28.fld4 = 0;
        (*_22) = _34 as i128;
        (*_35) = [_30,_30,_30];
        (*_35) = [_30,_30,_30];
        _3 = _24 >> _26.0.0;
        RET = 197532069156267596524394072440978604044f32;
        (*_35) = [_30,_30,_30];
        _18 = _15 as isize;
        (*_35)[_15] = _30;
        (*_35)[_15] = _30;
        _33.1 = _19;
        _28.fld2 = _18 as f32;
        _33.0 = _7[_15] ^ _7[_15];
        _19 = 225721312414523623240539577295427787606f64;
        _5 = _7;
        _34 = 31708;
        _28.fld3 = (*_35)[_15] as u32;
        _37 = _33.0 != _5[_15];
        (*_22) = _28.fld4 | _28.fld4;
        (*_22) = _28.fld4 ;
        (*_22) = _24 as i128;
        _34 = 31977;
        (*_22) = _28.fld4;
        (*_35)[_15] = _30;
        _4 = _1[_15];
        (*_35) = [_30,_30,_30];
        (*_22) = _28.fld4 * _28.fld4;
        _29 = _4 as f32;
        (*_22) = _28.fld4 & _28.fld4;
        (*_22) = _28.fld4;
        (*_35) = [_30,_30,_30];
        _28.fld1 = (*_35)[_15];
        _14.0.fld1[_15] = _15;
        (*_22) = _28.fld4 ;
        (*_35)[_15] = _30;
        (*_35) = [_28.fld1,_28.fld1,_28.fld1];
        (*_35) = [_28.fld1,_30,_28.fld1];
        _26.1 = 5;
        place!(Field::<>(Variant(_14.0.fld0, 0), 0)) = _10;
        _2.0[_15] = _37;
        (*_35) = [_28.fld1,_28.fld1,_30];
        (*_35)[_15] = _30;
        _43 = [_5[_15],_5[_15],_7[_15],_5[_15],_7[_15],_5[_15],_7[_15],_5[_15]];
        (*_35)[_15] = _28.fld1;
        _20 = 0;
        (*_35)[_15] = _28.fld1;
        _40 = (*_35)[_15] as i128;
        _47 = (*_35)[_15];
        (*_22) = _29 as i128;
        _18 = 9223372036854775807;
        _22 = &mut _28.fld4;
        _30 = (*_35)[_15];
        (*_35) = [_47,_30,_30];
        _11 = _33.1;
       _26.0.1 = _8;
        _39 = core::ptr::addr_of!((*_35));
        (*_35)[_15] = _47;
        (*_22) = 1101420078956474316i128;
        (*_22) = _20;
        _50.0.fld0 = [339700880320522507872557775944508263682,256136540091144313582748437083666733273,144820488576628944602270207071163271101,274823839660665287431275952999120203429,183863762262416141080209239670834545668];
        place!(Field::<>(Variant(_14.0.fld0, 0), 1)) = _26.1 as i16;
        (*_22) = _20;
        _25 = _18;
        _26.0 = (_43[_15], _11);
        _13 = Adt37::Variant1 { fld0: _50.0.fld0[_15],fld1: 182,fld2: _18,fld3: _24 };
        (*_22) = _20;
        _50.0.fld4.0[_15] = _2.0[_15];
        _36 = core::ptr::addr_of!(_11);
        (*_22) = _20;
        _38 = &_6;
        _23 = 0;
        _54.0[_15] = 40275usize;
        _32 = _7;
        (*_35) = [_30,_47,_47];
        place!(Field::<>(Variant(_13, 1), 2)) = _18 ;
       (*_22) = 0;
        (*_36) = _8;
        _55 = _29 as u8;
        (*_35) = [_30,_30,_47];
        (*_36) = _26.0.1;
        _50.0.fld4 = (_2);
        (*_35)[_15] = _47;
        _19 = (*_36);
        (*_35)[_15] = _30;
        _41 = &(*_36);
        (*_35) = [_47,_30,_30];
        _1 = [_6,0,0];
        (*_36) = _8;
        (*_36) = _19;
        _24 = Field::<i32>(Variant(_13, 1), 3) & Field::<i32>(Variant(_13, 1), 3);
        _54.0 = [_14.0.fld1[_15],_15,_14.0.fld1[_15],_15,_15,_15,_14.0.fld1[_15],_14.0.fld1[_15]];
        _50.0.fld2 = core::ptr::addr_of_mut!(_50.0.fld3);
        (*_36) = _15 as f64;
        (*_35) = [_30,_47,_47];
        (*_35)[_15] = _47;
        _26.0.0 = _33.0;
        _50.1 = [_50.0.fld0[_15]];
        _56 = _29 as isize;
        _12 = &mut _38;
        _50.0.fld6 = _50.0.fld0[_15] / Field::<u128>(Variant(_13, 1), 0);
        (*_35)[_15] = _47;
        _31 = core::ptr::addr_of!(_59.0.fld3);
        _51 = _55;
        _11 = _8;
        (*_22) = _20 ;
        _2 = (_50.0.fld4);
        _59.0.fld7 = _43[_15];
        (*_35)[_15] = _47;
        (*_22) = _20;
        (*_22) = _20 ;
        (*_36) = _8;
        _51 = _55;
        (*_36) = _34 as f64;
        (*_35) = [_47,_47,_47];
        (*_12) = &_4;
        _26.0 = _33;
        (*_12) = &_23;
        (*_36) = _26.0.1 ;
        place!(Field::<>(Variant(_13, 1), 1)) = _51;
        _36 = core::ptr::addr_of!((*_36));
        Call(_33.1 = core::intrinsics::transmute(_14.0.fld1[_15]), ReturnTo(     bb49), UnwindUnreachable())     }     bb49 = {     _43[_15] = 2890u64;
        (*_12) = &_4;
        _58.0[_15] = _23;
        (*_22) = _20;
        _53.1 =  (*_36);
        _5 = _7;
        _11 = _23 as f64;
        Return()     }      }
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(_1: u32, _2: [bool; 5]) -> f64 {
    mir! {        let _3;
        let _4;
        let _5: [usize;
      8];
        let _6: Adt44;
        let _9;
        let _10;
        let _12: [u64;
     8];
        let _13;
        let _14;
        let _15;
        let _16;
        let _17;
        let _18: &'static f64;
        let _20: *const f32;
        let _21: *mut &'static [i8];
        let _28;
        let _30;
        let _31;
        let _32;
        let _39;
        let _41: *const f32;
        let _42;
        let _44: &'static i64;
        let _45: Adt37;
        let _50: *const f32;
        let _51: isize;
        let _54: Adt21;
        let _57: f32;
        let _61: isize;
        let _65: &'static f64;
        let _66: i8;
        let _67: [u64;
     4];
        let _68: u128;
        let _69: isize;
        let _70: bool;
        let _71: [u64;
     4];
        let _72: isize;
        let _73: (Adt44, &'static ());
        let _78: u128;
        let _116: ();
        {        _3 = 51216_u16 as f32;
        _4 = _3 * _3;
        _6.fld0 = Adt18::Variant1 { fld0: 0,fld1: _3,fld2: 864352322_i32,fld3: 13_i8 };
        _9 = 67205584267216584985837157384340408849_i128 as isize;
        _13 = -Field::<i64>(Variant(_6.fld0, 1), 0);
        _14 = Adt21 { fld0: _13,fld1: '\u{e5d1a}',fld2: _4,fld3: _1,fld4: 0 };
        _16 = _9 >> Field::<i64>(Variant(_6.fld0, 1), 0);
        _20 = core::ptr::addr_of!(_14.fld2);
        _4 = (*_20) * (*_20);
        _15 = (*_20);
        _32 = false & true;
        _17 = 8817944960011098338924768454726591569_u128 & 181232501662465375047225408508003787797_u128;
        (*_20) = _15 + _4;
        place!(Field::<>(Variant(_6.fld0, 1), 1)) = (*_20) + (*_20);
        _10 = _17 as f64;
        _18 = &_10;
        (*_20) = _4 + Field::<f32>(Variant(_6.fld0, 1), 1);
        _41 = core::ptr::addr_of!(_28);
        (*_41) = (*_20);
        _39 = _3 >= (*_41);
        _30 = Adt56::Variant3 { fld0: _39,fld1: _17 };
        _31 = Field::<u128>(Variant(_30, 3), 1) ^ Field::<u128>(Variant(_30, 3), 1);
        (*_20) = (*_41) * (*_41);
        _28 = (*_20);
        _6.fld0 = Adt18::Variant1 { fld0: _13,fld1: (*_41),fld2: 225176536_i32,fld3: 0 };
        _42 = 12463003682564774421_u64 & 12550969787638796815_u64;
        _12 = [_42,_42,_42,_42,_42,_42,_42,_42];
        (*_41) = -(*_20);
        _50 = core::ptr::addr_of!((*_41));
        _3 = (*_41);
        _54 = Adt21 { fld0: _13,fld1: '\u{ece}',fld2: Field::<>(Variant(_6.fld0, 1), 1),fld3: _1,fld4: 0 };
        RET = (*_18);
        _51 = _16;
        _61 = _16 & _51;
        _6.fld0 = Adt18::Variant1 { fld0: _54.fld0,fld1: _3,fld2: 1953623625_i32,fld3: 78_i8 };
        (*_41) = _54.fld2 * _3;
        (*_41) = _54.fld2 - Field::<f32>(Variant(_6.fld0, 1), 1);
        _57 = (*_41);
        _44 = &_13;
        _45 = Adt37::Variant1 { fld0: _31,fld1: 66_u8,fld2: _61,fld3: 0 };
        _5 = [63466287488979769_usize,6_usize,12421725996639637240_usize,5_usize,1_usize,5_usize,11475153421294552185_usize,7_usize];
        (*_41) = _3 * Field::<f32>(Variant(_6.fld0, 1), 1);
        _6.fld0 = Adt18::Variant1 { fld0: 0,fld1: (*_41),fld2: Field::<>(Variant(_45, 1), 3),fld3: 9_i8 };
        _41 = core::ptr::addr_of!((*_41));
        (*_41) = -Field::<f32>(Variant(_6.fld0, 1), 1);
        _73.0.fld0 = Adt18::Variant1 { fld0: 0,fld1: (*_41),fld2: Field::<>(Variant(_45, 1), 3),fld3: 0 };
        (*_41) = Field::<f32>(Variant(_73.0.fld0, 1), 1) * _57;
        place!(Field::<>(Variant(_73.0.fld0, 1), 1)) = _28 * (*_50);
        _78 = Field::<f32>(Variant(_73.0.fld0, 1), 1) as u128;
        Call(_116 = dump_var(2_usize, 12_usize, Move(_12), 5_usize, Move(_5), 39_usize, Move(_39), 78_usize, Move(_78)), ReturnTo(
    bb54), UnwindUnreachable())        }
    bb54 = {        Return()        }
        }
}
pub fn main() {
    fn0(
        std::hint::black_box(true),
        std::hint::black_box('\u{bf940}'),
        std::hint::black_box(2566840495),
        std::hint::black_box(281059823485401745224195510932690728834),
        std::hint::black_box(8299986992358603165),
        std::hint::black_box(0),
    );
}
enum Adt18 {
    Variant0 { fld0: f32, fld1: i16 },
    Variant1 { fld0: i64, fld1: f32, fld2: i32, fld3: i8 },
}
struct Adt21 {
    fld0: i64,
    fld1: char,
    fld2: f32,
    fld3: u32,
    fld4: i128,
}
enum Adt37 {
    Variant0,
    Variant1 { fld0: u128, fld1: u8, fld2: isize, fld3: i32 },
}
struct Adt44 {
    fld0: Adt18,
    fld1: [usize; 8],
}
enum Adt51 {}
enum Adt56 {
    Variant0,
    Variant1,
    Variant2,
    Variant3 { fld0: bool, fld1: u128 },
}
struct Adt72 {
    fld0: [u128; 5],
    fld2: *mut Adt51,
    fld3: Adt51,
    fld4: ([bool; 5],),
    fld6: u128,
    fld7: u64,
}
